cset: moving following pidspec: 12889
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.415474378 seconds)
loading group "string"... done (took 0.618229839 seconds)
loading group "linalg"... done (took 7.925922981 seconds)
loading group "parallel"... done (took 0.168795511 seconds)
loading group "find"... done (took 1.290812133 seconds)
loading group "tuple"... done (took 1.91858373 seconds)
loading group "dates"... done (took 1.34377972 seconds)
loading group "micro"... done (took 0.236766885 seconds)
loading group "io"... done (took 0.991693593 seconds)
loading group "scalar"... done (took 40.369417024 seconds)
loading group "sparse"... done (took 12.55174395 seconds)
loading group "broadcast"... done (took 1.016806534 seconds)
loading group "union"... done (took 13.51686447 seconds)
loading group "simd"... done (took 5.013494327 seconds)
loading group "random"... done (took 9.620777055 seconds)
loading group "problem"... done (took 1.862192659 seconds)
loading group "array"... done (took 21.85760588 seconds)
loading group "misc"... done (took 1.754727166 seconds)
loading group "sort"... done (took 3.511560756 seconds)
loading group "collection"... done (took 18.41767766 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.526331267 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129971542 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132517976 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124899915 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.154366708 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119444744 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.130972641 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090052951 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.839089291 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.154377569 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.122417954 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.440828171 seconds)
done (took 5.281830586 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177775849 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08650404 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087327611 seconds)
  done (took 1.306899305 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069381475 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128905664 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070521189 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070972262 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.07179277 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.071892157 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.071820639 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.071624254 seconds)
  done (took 1.692022447 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077248582 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073139188 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071702671 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.074320241 seconds)
  done (took 1.428304563 seconds)
done (took 5.816641705 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.809892772 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.22090156 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192493556 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.419042208 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.135591428 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.168007265 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.646039202 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.327360718 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193390748 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079862825 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113315016 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.35024306 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113548921 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.634016202 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078745056 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094747827 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142689326 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.438882343 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071362035 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085800188 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092232066 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132299311 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089682371 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077577808 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150237381 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.073306982 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143666013 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087339688 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.07024671 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.22969196 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.178060357 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.669153514 seconds)
  done (took 10.481730583 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104668047 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.10543799 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07254836 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.129669073 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104372907 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073492803 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07842982 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.072186468 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094904874 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.135755341 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096165271 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107622493 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06941983 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072933263 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.089317909 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.209776948 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084475343 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085262958 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074696885 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081671106 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112671267 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081406513 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084405256 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084383498 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132944574 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.186150787 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100025619 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100847411 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069880366 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086829978 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117959673 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131797011 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069359687 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06998589 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.131343055 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097754331 seconds)
  done (took 4.76957911 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.047144069 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.124172658 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.149449963 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093416665 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140767017 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06890814 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.116600905 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.07104785 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087960383 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.223327854 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.332913293 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.645621914 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118575731 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110470714 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071142842 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071880782 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070947013 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.579497071 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102476732 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.11229668 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086921596 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075474559 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072902401 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.089563766 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.0721754 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06810144 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074893929 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.118289376 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.305029467 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.135157006 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07313924 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.065722278 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.072812528 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.164933416 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069832842 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.234224126 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095206927 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.148755595 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072950569 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069858446 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161807007 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07348311 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070867861 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089135753 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107559303 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121368003 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069636261 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071594441 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.173164359 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068059352 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084849254 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.121577429 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.157220833 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081300125 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071024565 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.269778487 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.096325263 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075878773 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.071026164 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.202104071 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13094344 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.074351646 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072436086 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074585837 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.075567777 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.32721211 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069432484 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.917457901 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.074291302 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081336486 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073630426 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073341183 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076999735 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078721675 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091655459 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07051666 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07875526 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069417777 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.070467604 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070655676 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086443321 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.405033633 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070788526 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071992549 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068564699 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093363569 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099543086 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070249501 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.17215039 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103040641 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07220084 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070228424 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.112399614 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070472939 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.098205611 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.090088682 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073718171 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116792488 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069819284 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.105303889 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067900066 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068670443 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100705388 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074275218 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102991558 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083290464 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072094695 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.447644351 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06977742 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.069530678 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073340191 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.070301266 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071662872 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070091724 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.068279448 seconds)
  done (took 22.293278097 seconds)
done (took 39.723284866 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.268219945 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078940661 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078958937 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077302238 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076933811 seconds)
  done (took 1.813283884 seconds)
done (took 3.025132396 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.127647709 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104938121 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06868732 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101871171 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068162722 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106054738 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106043023 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081362825 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106084973 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06984368 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105186291 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.069829224 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070391957 seconds)
  done (took 2.419909204 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088406611 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088588087 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074326306 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087851818 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069050586 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088712984 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08830027 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096718746 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088330305 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07883187 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069456222 seconds)
  done (took 2.125859742 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087072705 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.091581715 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078591064 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090090532 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069054604 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088717406 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.088307594 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093527425 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089242011 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080038035 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069592167 seconds)
  done (took 2.125326062 seconds)
done (took 7.871278878 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.083244093 seconds)
  done (took 1.275104756 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.605360461 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.107870968 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.086120372 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.115312663 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.19978545 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.12514561 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276901442 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.094258175 seconds)
  done (took 8.989436164 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.109290107 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.075043649 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.075006166 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.076708807 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.078294583 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.075380027 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.077931929 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.075374165 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.074322294 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.077417353 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.076750938 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.077206716 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.075848551 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.074818755 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.078007639 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07662653 seconds)
  done (took 2.522788459 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095742583 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095216148 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076861143 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078489772 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075280274 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075323242 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077592363 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076771375 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074027881 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.077929751 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.080547008 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.079198459 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.077007365 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06921439 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.079212169 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.081046113 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.076139109 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077921957 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.079316765 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.080820179 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079942034 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068471239 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07581599 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.079626871 seconds)
  done (took 3.193714387 seconds)
done (took 17.181234373 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110474098 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073801263 seconds)
  done (took 1.386528125 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.0856727 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.089335917 seconds)
  done (took 1.38357452 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085705874 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.07025806 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093114027 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081147991 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.071340428 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.071418406 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.093458286 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.071756581 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.071094697 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.0719378 seconds)
  done (took 1.989241525 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072629295 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081361434 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072253291 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.085027342 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.079121703 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.069766023 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.077703929 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.073512828 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083580822 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.068070644 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.076615936 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.088685609 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.076924959 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.090793133 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.078479129 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.073461358 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.075230874 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070647988 seconds)
  done (took 2.606602485 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069328361 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069617999 seconds)
  done (took 1.354457782 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.071383036 seconds)
    (2/7) benchmarking "second"...
    done (took 0.068544164 seconds)
    (3/7) benchmarking "month"...
    done (took 0.072530175 seconds)
    (4/7) benchmarking "year"...
    done (took 0.071315336 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.068305497 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.067662016 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.068671828 seconds)
  done (took 1.700218983 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.39323518 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119597135 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.332788404 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.076815885 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.087650157 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.275807369 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.071038482 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076703075 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.076776876 seconds)
  done (took 2.772054163 seconds)
done (took 14.409054217 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08418586 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091639867 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.101730722 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.392497381 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095220984 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070231488 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.116923236 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.191393681 seconds)
done (took 2.368670276 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.218960687 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.721469339 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.455793032 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.218633025 seconds)
  done (took 2.610884752 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.357692467 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092806162 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06466634 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.074126275 seconds)
  done (took 1.816383258 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069935122 seconds)
    (2/2) benchmarking "read"...
    done (took 0.075554383 seconds)
  done (took 1.36829878 seconds)
done (took 7.237252125 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070941423 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.09044436 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.071211361 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.069304147 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071961137 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.069024266 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.069243644 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.069110269 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.072142878 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.071588605 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.072173994 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.07164493 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.071331818 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071921413 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069195946 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069171152 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072242289 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.068845834 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069534853 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.07144807 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069104627 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071764829 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.068936172 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.069486993 seconds)
  done (took 2.969402396 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088732625 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.070383653 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.076083232 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075464426 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072940316 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.076586971 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.076713852 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.072041486 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.077346228 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.073567369 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074805971 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.075230729 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.073779942 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.075269524 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073489627 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.074805637 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.076941105 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071766173 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073406852 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07480507 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.191596115 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071297541 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.075001474 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076379999 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.074942942 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074701958 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.074495089 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.07133741 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076602985 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.074770828 seconds)
  done (took 3.596713294 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073970289 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.068370208 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.069548478 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.077499109 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.069260823 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.069237975 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.068826958 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.069273158 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06963623 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.068779182 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.07015965 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.068489714 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.068961874 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.070010602 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06984178 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.074758615 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.085398025 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.069239988 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.069190827 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.069907536 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.073066946 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068497098 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068808281 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.068481936 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.068458494 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.068309294 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.069384837 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.068999782 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.069324188 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.069058555 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.072482132 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.072528106 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.068485836 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.076454199 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.072853251 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.068901758 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.073474235 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.068532536 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.069475252 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06872014 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.068497586 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.068577707 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.069239205 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.076982807 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.069141157 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.070918135 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.070254755 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.070624185 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.070042279 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.071442487 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.068618754 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.068953302 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.071007335 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.070674693 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.072912675 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06828305 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.069738699 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.068408328 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.069667905 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068791166 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.069128286 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.068677587 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.07145533 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.069644118 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.085438909 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.077022432 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.069812936 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.070934938 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.070678023 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.072372725 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.071380982 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.084342748 seconds)
  done (took 6.34129011 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093857211 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09112588 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068592195 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068452622 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065116126 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067205719 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073604645 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069779245 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071444147 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087843288 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069661281 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070656703 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071480436 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072981383 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070139615 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07110391 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077899267 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067354156 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.069652873 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073484897 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069454122 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075218289 seconds)
  done (took 2.859378037 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.160657018 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075871113 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.113043027 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081463724 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075863271 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080694513 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076283241 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075397336 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075395822 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072879608 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072837388 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075287129 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075583934 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073069375 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073069482 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073223249 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075260966 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073199354 seconds)
  done (took 2.718224115 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.08067411 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069886614 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.091183557 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068771788 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068980436 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072681768 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07589209 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079636403 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.073962012 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.07162645 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.079922542 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074309437 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.073884026 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071443758 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074027106 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072079984 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.073786698 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071623309 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08051925 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075962594 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075885032 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079685592 seconds)
  done (took 2.896888995 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084480436 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073519012 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.087762448 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073662512 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.067101367 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069623644 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.076272574 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.071830372 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.076100376 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.073755036 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071266908 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06996825 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07457119 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071070565 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074340878 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071069979 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073165226 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071246831 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07441232 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066947222 seconds)
  done (took 2.715749979 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092570551 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073900687 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073691549 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081335255 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073650688 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073385276 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080346691 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073883146 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07365998 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.094030505 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073734686 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073708007 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080590348 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078366917 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07343002 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081128421 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080638475 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081035797 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073125631 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073312663 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.094544048 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0732876 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081482761 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073946569 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073127249 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073483573 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074122975 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078141754 seconds)
  done (took 3.424883261 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069933902 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069935785 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067300626 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066856077 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067294121 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067472476 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066819819 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06730917 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069274516 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066986206 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069509862 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069705218 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071606992 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.071328833 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072414367 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.071217925 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071544544 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.069120629 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0686473 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069273749 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.071513546 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072146734 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.071182999 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068854154 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068894816 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.071106013 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068713357 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068655505 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071070742 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068659981 seconds)
  done (took 3.331840334 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080532426 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07868012 seconds)
  done (took 1.407060481 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066513253 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085592817 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.066316226 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.075962775 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073720768 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072079175 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079212843 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075126588 seconds)
  done (took 1.838649849 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.0877175 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.083237489 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.073160451 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.085448324 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.083309988 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.089542608 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.144372924 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.072885367 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.078961597 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.069955554 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08893895 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070849002 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.078576233 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072791983 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.078352084 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078861124 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068302314 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075140418 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071542202 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06794412 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07060408 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078967061 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073393439 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.067103402 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.073219999 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096032684 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.084241296 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.071425952 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07537661 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.079818657 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.078774099 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.065822864 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.072269438 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.072559168 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.070312621 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.082706941 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088159531 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075458526 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.08148654 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072906953 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082281636 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.069634785 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.076624267 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.079195924 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084156155 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.07265433 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.073272061 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.067098872 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.070074675 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.074419588 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.067028464 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072990636 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.066749876 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079566164 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.075923081 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.083750634 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.071849226 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.074471703 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.075336175 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.076091479 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.079473567 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.074578477 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075110128 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.072238162 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082640105 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.077250663 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081416677 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.066861675 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065982592 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.070143767 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.082082886 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093715989 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07859858 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.072866845 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073028969 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.069832262 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076062584 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073301057 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077562723 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.079185013 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.072280218 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.078686153 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07993085 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072607326 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07594308 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.080220599 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.070826308 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.07476779 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.070313677 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089466509 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.071236332 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.069880265 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.069968167 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.082610011 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.075159044 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.071478114 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.069630319 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078993231 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.065269716 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.071312407 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072503797 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072087847 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.081577376 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07569291 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075909091 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.080329223 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07881001 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071583188 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.074400837 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.067825028 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071785174 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.070482561 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.078580791 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.064588059 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074935023 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.19617474 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.070714818 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080500843 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069438265 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070578701 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078985752 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076013818 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.071260358 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06897785 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07502156 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.073638876 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075705519 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.08045268 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.070566391 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.067068382 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.066316628 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.077037564 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.071410999 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.076798468 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.077888626 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076144537 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06657383 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.070531404 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.077332951 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.081702594 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.073865509 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.073602691 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07968598 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.073822124 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.072548077 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.079148359 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.074408926 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.071435724 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.079084511 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.073490574 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.067195766 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075543992 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.075006876 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.070943072 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.076228621 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075776922 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.07485864 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.073649477 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070802393 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.078818866 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072753955 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.071616938 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072795806 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.071673542 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.084290922 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.074971248 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066792151 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.069136659 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.080846931 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.070844748 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.071939536 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.071903961 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.074883174 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.072730181 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.069440281 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.072338971 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.074703974 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082569708 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.075662847 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072313505 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.077891362 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.085077742 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.071878912 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.074780445 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.071564123 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0725361 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.072139786 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.081157389 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.078522846 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075129515 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073799212 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.069054865 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07757155 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080213668 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.07154265 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.070292324 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.071772834 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.076309089 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077960741 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.076717433 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.072707214 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070467964 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073488892 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075589184 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.074804685 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.071806153 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.071794847 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.078556072 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.069935084 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.079041663 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072557196 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.083331477 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075747852 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.066897044 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075034363 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069894749 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.078237186 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.066518796 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.069956634 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.071015791 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.072589482 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.07029668 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.073586122 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06484291 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07845956 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078696209 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.071972033 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.070701878 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.070413191 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078245496 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.072541077 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074766554 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07540775 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.205067488 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082235755 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071525299 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.076156804 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.082416643 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070591971 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.066396441 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.078415177 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.07039993 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.070149438 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.071436971 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.071409024 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076460203 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081652965 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.079851687 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.0672315 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.077017828 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.070618481 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.071357647 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.069177433 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.077374612 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074164775 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.0723517 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080169415 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073459122 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.072901592 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077431648 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.072352784 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.073705541 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.073465732 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075700383 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.073698039 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.075525723 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.071201138 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.076506112 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.071190888 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.070205669 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.074197615 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.072496387 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.073447518 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078478986 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.071723912 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072498958 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.075246179 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.07351717 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07277127 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.072918799 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.071895108 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075667078 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07370917 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072592094 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074876536 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.067059632 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080724994 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.071506222 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079678807 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.073103668 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.069047223 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.079443484 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.074376718 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.078399054 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.073177013 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.073031068 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.073415442 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.071674527 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.074373969 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079621615 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.070712397 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.083971459 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081213318 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073051524 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.075509173 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.072211211 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072615065 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.071082792 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072387065 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070847699 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070565025 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070238017 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075487825 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072787919 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070530683 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072144812 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.072192936 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071736806 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.073226705 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065989973 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069777137 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069531989 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.07251285 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080235441 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070579801 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.072244152 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.071586839 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073281639 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.072326372 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.068817935 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.080036727 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.081628923 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.07284656 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079497112 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069379538 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072989985 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082119013 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063927909 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067884663 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.068292235 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.069130567 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079876902 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.07159167 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.081311926 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071512098 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.070739422 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06860076 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.07156712 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069599727 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.065207871 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.068389875 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074397511 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.070059583 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070280202 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.071275156 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.205076762 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071919455 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079753762 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070650723 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.071553262 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070950537 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068377135 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069661665 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070223166 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.074123109 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071226406 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.07000379 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.069481443 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.071222788 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072509681 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.074825 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.072126153 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.074671969 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079135594 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072665586 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073785233 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073135124 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064672006 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074174019 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.071099933 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069787135 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069028882 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07468256 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073085229 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070367501 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080205646 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070278266 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070532568 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071091454 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.070017649 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.072134449 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.071767448 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.071770284 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070941557 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.073970722 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080711813 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.070634421 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.07632685 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073002395 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.073134913 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.079627714 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.072960296 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07527784 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.079572893 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.072433599 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.074613826 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.082010614 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.076495864 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075787041 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073403149 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.074759805 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078434493 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.071333981 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.079588876 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.072678743 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.072958547 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073878287 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.071002391 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07222454 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.072007466 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072011486 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.079168108 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.073133376 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.071833431 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.071745931 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.069955794 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.073862248 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074570371 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080283557 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.075019304 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075128245 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.067304971 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068709604 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072891575 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.070258286 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.074474567 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07507029 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078085692 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.075399529 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.07261613 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.071402981 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.081987501 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078532802 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.076557786 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.070451086 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.076466428 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.073150472 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.074659412 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.073658137 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.07329647 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07359957 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.077012552 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074029138 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.071791046 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079641629 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.075679668 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07298388 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.073734353 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071661395 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071541249 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.066252066 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.07184588 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074228614 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077008823 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.073971857 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071989242 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083068542 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.069623416 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071681555 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074129121 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069834962 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.075664621 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066144898 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.073375286 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072190353 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072026429 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065886789 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.201334182 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.071232772 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.076662571 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.072342363 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.067360464 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085528196 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.082870672 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.075914176 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072141451 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071533406 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.068252504 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.067526046 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.071253173 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073188443 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.074940133 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.08351408 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.07230718 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.072262012 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.067738338 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07229827 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075373198 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.077248656 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.069601609 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.067139077 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.071362337 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.076872362 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077915201 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069929399 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070235904 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074312217 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072658767 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068768002 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074951454 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066372032 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074231306 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082926106 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071289275 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071648441 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07614366 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078482552 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069762787 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06446715 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070320412 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073387519 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070507223 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071536972 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071807073 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08558489 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072968779 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069728942 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068581657 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072668116 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069891133 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079051767 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070635376 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070479959 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074818853 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.074656456 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.080425322 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075228299 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080678932 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.075604661 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.076243693 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.070997969 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071190199 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.070174376 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.071876341 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.073324188 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.072803941 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.076598205 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.080858721 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070956789 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082838473 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079691188 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071961158 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06660029 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069452291 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069322751 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065540072 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070650272 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068539621 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.069124883 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068776803 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.070176172 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.073274777 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077943978 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.073580135 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.073474011 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.071380557 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.066451267 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075738302 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.075390112 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074457899 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.069835956 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.072414641 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.073050337 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.076752142 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075602733 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.069902173 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073977313 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.074564156 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073222654 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066296963 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077338041 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068686563 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071612605 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070488387 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071355878 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.07210278 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075181674 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075021041 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070989143 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071906172 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074380006 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072651004 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068270464 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068321506 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07703965 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.0687094 seconds)
  done (took 45.874946451 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110600553 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070131878 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069217416 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068958272 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079473113 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069480329 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068505468 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069091047 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06926588 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071050937 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067988229 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067845872 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075978439 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083099586 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079591556 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072739722 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068212306 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068847151 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06783659 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068563849 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074278287 seconds)
  done (took 2.905019805 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.079841926 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.082729493 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079473689 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085775739 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074837843 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073774935 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078937055 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074515259 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082479647 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076078449 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082211485 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074061403 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076242908 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075664844 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076429341 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074113667 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084541638 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074462829 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073995791 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078598366 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074253008 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079049778 seconds)
  done (took 3.03379174 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.073604207 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070344278 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.07330909 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065455139 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069715285 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065249353 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073462724 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067363876 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072524999 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069481996 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06947023 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069786127 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07244907 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064998932 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.070604498 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068055468 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111305076 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073766331 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070126412 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071390317 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065372509 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.07181133 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065287377 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065481916 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06913488 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073188378 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070449786 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068070364 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.07031641 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.071320544 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.07250486 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.070219937 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.07442902 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.073177927 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.071491826 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.071574017 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.072497743 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.072331479 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06730886 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.070625618 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072821043 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.0678964 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.073186326 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.073414021 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.070123334 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.070175284 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.074956879 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.073363104 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.066837551 seconds)
  done (took 4.815340493 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082376479 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.114125145 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.071378516 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09355664 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.085121789 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.077056366 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073879675 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094805276 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06678315 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067539198 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085676345 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08275676 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06913476 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073991617 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074045691 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070974817 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.072721986 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069019221 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.074206964 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071297364 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.075425857 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.078963534 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.085977433 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08420188 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075749703 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.070382482 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.07083994 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.076166681 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.083598582 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.075711953 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.076047853 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.076856209 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.086326478 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072978122 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070412807 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.073669925 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.087224956 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.071648478 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.074044831 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.069133668 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.07346388 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.075750626 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.078741113 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.087606958 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071414906 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.076766277 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.071101937 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.068892604 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.084048667 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.074070941 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07897643 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.085862015 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.075137466 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.071276034 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.075815727 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08647912 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.071219913 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.070507921 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.074489091 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.083243703 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.068927647 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075330989 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.084809315 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.073625116 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07848786 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.085423303 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.076768392 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075712806 seconds)
  done (took 6.7310635 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080652632 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101329421 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087403373 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086367528 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079807608 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079658471 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079686691 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.080016535 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078846676 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0836709 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079302769 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.123317315 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07750152 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.084104855 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082538185 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081624323 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.082014111 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080405385 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07922168 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081815588 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.081702166 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08888311 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081498069 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089581532 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.095244589 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.077494111 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.0812219 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081593975 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088732057 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081787993 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085623133 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.081876457 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082176441 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.089008404 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.08425892 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.078702968 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070119977 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080248714 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.081135952 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.081653191 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.077312206 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088711155 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079368738 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07456403 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0791059 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080756986 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.088688782 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085024109 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.083766823 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086089873 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.081745405 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089130385 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081025649 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081948294 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.088716721 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.091254118 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088489706 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088608535 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082407326 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088804451 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089809878 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.09178836 seconds)
  done (took 6.568169915 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089031004 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080151486 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.088029949 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.067645941 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070542698 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077957896 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070181446 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.070463008 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080781606 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.080244329 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082813663 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077521522 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080369386 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08240187 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077595678 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08038683 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0778625 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077755289 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07971613 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0784106 seconds)
  done (took 2.919259061 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.081459145 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089127478 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.072575777 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.077275193 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.075602959 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07745603 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.075724626 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075522264 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072820139 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075709407 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082683653 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.081907798 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073401458 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.077222224 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.081835065 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.077618556 seconds)
  done (took 2.58941035 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.089638421 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.079022305 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08672405 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.073074743 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.073449312 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.068176229 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.071489221 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.067401472 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.068013391 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084397611 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.071339404 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.083860847 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.071321673 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.071428408 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.068390943 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.076780129 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.067971495 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.068560924 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.071704191 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.084388825 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076306807 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.070054419 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.075298067 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.071738834 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.07433647 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.076102587 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.07091108 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.071814844 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.068931029 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.072765246 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.075100398 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074999812 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.068546752 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.069416198 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.071553838 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.068990186 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.072016784 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.072646518 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.077552631 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.071448628 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.070525887 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.07475546 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.071487621 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.072995181 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.068328185 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.072420245 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.068350931 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.074115295 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.069141155 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.074734633 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.071792384 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.074588347 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.073006094 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.078566339 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.074493592 seconds)
  done (took 5.37946511 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08368409 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073425787 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066380489 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069122504 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.075485457 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.0734651 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076021672 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073400229 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073096005 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070130759 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0732769 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075136829 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073875165 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075813418 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073220615 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075776984 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.067809689 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073189447 seconds)
  done (took 2.673822305 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075114548 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071386309 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.079341992 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071530458 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.071984973 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074913879 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068005013 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.070553365 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070776557 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072221661 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071955109 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.074714327 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074025581 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.07440252 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071918098 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071556334 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.074882875 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071012487 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071866802 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068109979 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074204086 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070472428 seconds)
  done (took 2.942555898 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.100098471 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.090601332 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.149575959 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.085856118 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.092622806 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07845643 seconds)
  done (took 1.945141252 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097521022 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107540709 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073252433 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075385378 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082453779 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076131814 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076046276 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076625341 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084236983 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082283577 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07648239 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084675686 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084468046 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084127419 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08198364 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082170045 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076224785 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076239642 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072260496 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089540306 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076024476 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083918402 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076247127 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07604755 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076239174 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083188054 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084516948 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081288183 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07572136 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084381739 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081683417 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075584012 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084781439 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081505699 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076239879 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084293502 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076022607 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089640267 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082530975 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083723347 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.076175576 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082146228 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084688704 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080652259 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08440361 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076362836 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080084695 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076782835 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07629859 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091566804 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081986258 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083355197 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082130462 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084377296 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084659656 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09167683 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081858443 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08365958 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08164495 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081906483 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083972456 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081901593 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083420969 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081678324 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082234472 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083462297 seconds)
  done (took 6.748642102 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11066222 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072552757 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07715573 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082221531 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083565101 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076724597 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076763966 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07619327 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076107981 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070598258 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113105597 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075439327 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083126322 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083392099 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076718063 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077042935 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075816239 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083421722 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07304723 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091524317 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076578126 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083418773 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083784799 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083308862 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081707432 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082368823 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076063392 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0763312 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076399905 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076323867 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080872593 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076313768 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083386513 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073468827 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083115795 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07585103 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075452118 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079828123 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075177233 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079351852 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08183424 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08731457 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073373204 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07362395 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079009511 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073310314 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073360366 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070835014 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073901935 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0724893 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079684672 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081636966 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081188118 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082563891 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076503849 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076112231 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076332853 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075829198 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075981131 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081316849 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083081982 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074682312 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089548479 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073715773 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073934661 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080825268 seconds)
  done (took 6.603852193 seconds)
done (took 137.050298897 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.193223056 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.17233761 seconds)
  done (took 1.709984559 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072827117 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104563569 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.084288278 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136173131 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070617103 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104009915 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102967015 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081601922 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070173936 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070019587 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069859806 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072753001 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13499441 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070393796 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069565656 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072642152 seconds)
  done (took 2.744518215 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104453339 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.173435413 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109027259 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069120988 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104862063 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079501002 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.070886849 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081250673 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076295645 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070175176 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078545348 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07690112 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070994801 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.076951868 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.077073904 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07948565 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071131762 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.078776597 seconds)
  done (took 2.908585173 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103841148 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.096398358 seconds)
  done (took 1.561888159 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.16333603 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.139186406 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.209994615 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.357018784 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.163739056 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.15309818 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.149039725 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.14877523 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.127403588 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.142513707 seconds)
  done (took 3.110126025 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104792954 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.160285762 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.279419174 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.12342256 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076800131 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097016365 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.124306097 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082398982 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084325401 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083652328 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083285195 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080868917 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.104499719 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077935669 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078202771 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080577079 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.109337173 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077233397 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079130433 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.08094118 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.108737677 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069650524 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077532621 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077012352 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080774654 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080736 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069186431 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069236466 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079595619 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078343837 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081321419 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096389527 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080556911 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110017178 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075513653 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110727164 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080895995 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07734199 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.080946339 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.079821829 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.085262079 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.085503781 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080258261 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.083182369 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.075204804 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.084081671 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072160476 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.072274182 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.084366291 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.073444751 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.084425193 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.083171499 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.114176099 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.07374148 seconds)
  done (took 6.26759104 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110704008 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112279906 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076014378 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.118621745 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109400025 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076122666 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108865954 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102821146 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.109953894 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074779099 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072480322 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075108121 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087188901 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086334033 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.121737083 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.112868147 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077970296 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07493843 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112024724 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110842465 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072556294 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103737176 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099396743 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.114110636 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.073869202 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.076736439 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.074850214 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07633354 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.083480179 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084665217 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074633802 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.086845412 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.092318273 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081170273 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071127029 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07141342 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072124112 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082865659 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083017496 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082568373 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.080724134 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072322272 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07264557 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.0732985 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073715106 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072044811 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082305389 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.083858875 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.082224864 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073627365 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074297744 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.0748105 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073390303 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084095511 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081634209 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.084914573 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083467637 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072689958 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072446784 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07606428 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084482138 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08355069 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083625453 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073537252 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083080516 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072670349 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083693076 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087911386 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07303764 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.0745489 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072623945 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073634335 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073365637 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081445379 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081465942 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073932028 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073924284 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072328304 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083185862 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082193619 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072718447 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080712347 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071612829 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072047771 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07346535 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073567813 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080250223 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082479616 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073219216 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071777917 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072804719 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072891135 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.072751374 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.080691823 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083190048 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.082448161 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.081384799 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07246625 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.081279316 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080246217 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072601237 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081162618 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070860722 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.2036441 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074443997 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083025993 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.081878835 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082992409 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074604565 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073595036 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081683241 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085674017 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072737534 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.082416925 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085343213 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08357371 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072253194 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084615122 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072864143 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083106855 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07399976 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084324087 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073724021 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082952647 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07258379 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072221682 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073160638 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.083744493 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074054214 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072963788 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07409821 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073637568 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.0834089 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.086527147 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073856818 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083148286 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.082204708 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074130677 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081937092 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073125507 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083774362 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072955108 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073611043 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070986412 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086053791 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072570445 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071704408 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073549319 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083795365 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07294017 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083438847 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082877516 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07364132 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084387145 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084489725 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080784282 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083952244 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075069548 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073237817 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071979938 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073055317 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.08134559 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083968516 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07410947 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07360992 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.082586733 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083746401 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071402079 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081022489 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081266508 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082285972 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071975001 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073664747 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083887404 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.084089233 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081379956 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081991513 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082015755 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072938536 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.0815768 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082143037 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072018847 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087801008 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07234168 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.086527409 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.083260606 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080510403 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084803398 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.084566601 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.083653795 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.083405564 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.086150949 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072062318 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071979697 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.082514413 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071555268 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072452479 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.080135663 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073082568 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071981398 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08733059 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071510381 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.081635171 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070319383 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080387553 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070169478 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072229052 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.216837146 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073016458 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074053323 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083311566 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074708699 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.081819907 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08532678 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.082757973 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072879334 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073886391 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08385321 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082060327 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073174436 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073753015 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0739532 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081800849 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.08194514 seconds)
  done (took 19.595677482 seconds)
done (took 39.265691336 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.216345096 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.158033007 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.176868888 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.12345219 seconds)
  done (took 2.139910563 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121787035 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104916094 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096073353 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068892354 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102283846 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069329149 seconds)
  done (took 1.962452223 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315870116 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215026857 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.192683649 seconds)
  done (took 2.12165071 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.215974411 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.204833732 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.461107022 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.280150098 seconds)
  done (took 2.67179218 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.150484306 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.095346884 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.072524071 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.090900646 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.141200962 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.167814397 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.10414432 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.129053539 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.08358748 seconds)
  done (took 2.484787084 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.152189258 seconds)
done (took 12.930663884 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.098673595 seconds)
    (2/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.193530831 seconds)
    (3/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.240686103 seconds)
    (4/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.261327054 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.156606232 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.119677017 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.086720544 seconds)
    (8/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.187908718 seconds)
    (9/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.209301809 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.111597461 seconds)
    (11/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.203215236 seconds)
    (12/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.186491364 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.083035567 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.154983846 seconds)
    (15/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080136247 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078106677 seconds)
    (17/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.109301874 seconds)
    (18/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078021243 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069285169 seconds)
    (20/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.082370748 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.145106821 seconds)
    (22/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.08093185 seconds)
    (23/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.191583793 seconds)
    (24/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.069182096 seconds)
    (25/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.234193133 seconds)
    (26/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.093146034 seconds)
    (27/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.198912238 seconds)
    (28/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.078053485 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.14170231 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.121892149 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075626908 seconds)
    (32/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.193278566 seconds)
    (33/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.083229164 seconds)
    (34/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.226553698 seconds)
    (35/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.071477736 seconds)
    (36/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.218078521 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.159862828 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.099467991 seconds)
    (39/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.218016429 seconds)
    (40/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.085857891 seconds)
    (41/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.169408337 seconds)
    (42/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.181916462 seconds)
    (43/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.106046075 seconds)
    (44/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.191636243 seconds)
    (45/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073169479 seconds)
    (46/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080394705 seconds)
    (47/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.188768639 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077417051 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090077876 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.080960873 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.103966905 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.096582174 seconds)
    (53/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.104788193 seconds)
    (54/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.079248502 seconds)
    (55/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.09699546 seconds)
    (56/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.227331561 seconds)
    (57/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.096046343 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.296246639 seconds)
    (59/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.076586103 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119883581 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.093496868 seconds)
    (62/309) benchmarking ("sort", Int8, false)...
    done (took 0.14896423 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.121350195 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.108124741 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068342075 seconds)
    (66/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.184368136 seconds)
    (67/309) benchmarking ("sort", BigInt, false)...
    done (took 0.199923354 seconds)
    (68/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.21988294 seconds)
    (69/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053720097 seconds)
    (70/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.210588395 seconds)
    (71/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.055179291 seconds)
    (72/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.183206365 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099482755 seconds)
    (74/309) benchmarking ("sort", Int64, false)...
    done (took 0.069324325 seconds)
    (75/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073276123 seconds)
    (76/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.210239187 seconds)
    (77/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.08483112 seconds)
    (78/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.224881435 seconds)
    (79/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.169639807 seconds)
    (80/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.076861529 seconds)
    (81/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.166036091 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095409503 seconds)
    (83/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.148278691 seconds)
    (84/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.125842806 seconds)
    (85/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095735997 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092773947 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094258286 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.154184011 seconds)
    (89/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.086009669 seconds)
    (90/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.073886719 seconds)
    (91/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.107124982 seconds)
    (92/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.112970007 seconds)
    (93/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.173837622 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096336421 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.099907921 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.11634594 seconds)
    (97/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.075603611 seconds)
    (98/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.055695086 seconds)
    (99/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080756215 seconds)
    (100/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07865872 seconds)
    (101/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.065957942 seconds)
    (102/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.0771381 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.144874008 seconds)
    (104/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055582807 seconds)
    (105/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05472457 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.071472552 seconds)
    (107/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076824269 seconds)
    (108/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077235173 seconds)
    (109/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.072342448 seconds)
    (110/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.081024989 seconds)
    (111/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056808396 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07728111 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06998117 seconds)
    (114/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.087153959 seconds)
    (115/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.187388661 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.163887973 seconds)
    (117/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.075573519 seconds)
    (118/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055511804 seconds)
    (119/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.066773097 seconds)
    (120/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.068078648 seconds)
    (121/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.108742072 seconds)
    (122/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.106713682 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.092768069 seconds)
    (124/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.120008766 seconds)
    (125/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.161550339 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091517354 seconds)
    (127/309) benchmarking ("sort", Float32, false)...
    done (took 0.13730982 seconds)
    (128/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071690648 seconds)
    (129/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073779099 seconds)
    (130/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072953399 seconds)
    (131/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077232125 seconds)
    (132/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.080014755 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 0.143754175 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077974927 seconds)
    (135/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.066824876 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077158635 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098952603 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.075138429 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.19512045 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.089376626 seconds)
    (141/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056629033 seconds)
    (142/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054522563 seconds)
    (143/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.157192918 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068683133 seconds)
    (145/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.05413929 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076079768 seconds)
    (147/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.118817936 seconds)
    (148/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053877146 seconds)
    (149/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.085344533 seconds)
    (150/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.070159323 seconds)
    (151/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.079249998 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068922324 seconds)
    (153/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.201666179 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077039428 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09536069 seconds)
    (156/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.160796698 seconds)
    (157/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076245201 seconds)
    (158/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090938557 seconds)
    (159/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.085392736 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.094233174 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.092445513 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078366168 seconds)
    (163/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.107230175 seconds)
    (164/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083050546 seconds)
    (165/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077638961 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.076163324 seconds)
    (167/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078671356 seconds)
    (168/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.077372524 seconds)
    (169/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.119206835 seconds)
    (170/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.160112047 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.069137794 seconds)
    (172/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075981695 seconds)
    (173/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068891444 seconds)
    (174/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055381833 seconds)
    (175/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054916259 seconds)
    (176/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068403053 seconds)
    (177/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053739556 seconds)
    (178/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.054547171 seconds)
    (179/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.053666089 seconds)
    (180/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053396382 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.19181816 seconds)
    (182/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056144331 seconds)
    (183/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053962584 seconds)
    (184/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068629317 seconds)
    (185/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085300295 seconds)
    (186/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076332933 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068509751 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.135784848 seconds)
    (189/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069677989 seconds)
    (190/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069522971 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.229435487 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.078927113 seconds)
    (193/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.055461603 seconds)
    (194/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.05532872 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.080305349 seconds)
    (196/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.082413365 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.096009376 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.094051019 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.098163003 seconds)
    (200/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.109131144 seconds)
    (201/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.054787076 seconds)
    (202/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076316359 seconds)
    (203/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.055008448 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.082865184 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069237773 seconds)
    (206/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078670623 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.071463709 seconds)
    (208/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.111137911 seconds)
    (209/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095163694 seconds)
    (210/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054827268 seconds)
    (211/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.21307736 seconds)
    (212/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.05558258 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.093464076 seconds)
    (214/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.163106046 seconds)
    (215/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.184947085 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.069185594 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079811683 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078109412 seconds)
    (219/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.055478756 seconds)
    (220/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070110807 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069616491 seconds)
    (222/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055364142 seconds)
    (223/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.075450688 seconds)
    (224/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.067074317 seconds)
    (225/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.162162547 seconds)
    (226/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.093142558 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075135069 seconds)
    (228/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.070175499 seconds)
    (229/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.162245681 seconds)
    (230/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054185194 seconds)
    (231/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054524443 seconds)
    (232/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.05543938 seconds)
    (233/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.105905575 seconds)
    (234/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.054351907 seconds)
    (235/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072091891 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068807204 seconds)
    (237/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076830781 seconds)
    (238/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055485269 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.147704939 seconds)
    (240/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073066146 seconds)
    (241/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.053636252 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069694073 seconds)
    (243/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.190744944 seconds)
    (244/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.068431739 seconds)
    (245/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.072131658 seconds)
    (246/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.068191251 seconds)
    (247/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080872093 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054310608 seconds)
    (249/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.066711758 seconds)
    (250/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073002336 seconds)
    (251/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.079905014 seconds)
    (252/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.065128887 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.117502472 seconds)
    (254/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076668885 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068718207 seconds)
    (256/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069339729 seconds)
    (257/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.070694575 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.11626618 seconds)
    (259/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.066276376 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068699515 seconds)
    (261/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054036228 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075908377 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068853817 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068818496 seconds)
    (265/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075870664 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078143922 seconds)
    (267/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055286141 seconds)
    (268/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070678454 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091783706 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070296121 seconds)
    (271/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054080728 seconds)
    (272/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.069804529 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054179035 seconds)
    (274/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077880776 seconds)
    (275/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.066736101 seconds)
    (276/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067728158 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.133067195 seconds)
    (278/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.054872882 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055761764 seconds)
    (280/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.055546358 seconds)
    (281/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.054340996 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077124015 seconds)
    (283/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.078357068 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067556993 seconds)
    (285/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06750816 seconds)
    (286/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081795228 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068045718 seconds)
    (288/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054272153 seconds)
    (289/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093598509 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07682036 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091395249 seconds)
    (292/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075928371 seconds)
    (293/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056705689 seconds)
    (294/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054257617 seconds)
    (295/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082828513 seconds)
    (296/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.067706766 seconds)
    (297/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054911923 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075826525 seconds)
    (299/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069509217 seconds)
    (300/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064726415 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.100958686 seconds)
    (302/309) benchmarking ("sort", Float64, false)...
    done (took 0.135099011 seconds)
    (303/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068669916 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074693787 seconds)
    (305/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.054940865 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.143330235 seconds)
    (307/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.069825241 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.151854997 seconds)
    (309/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053522567 seconds)
  done (took 32.469634774 seconds)
done (took 33.879376961 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08784926 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096378532 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079708755 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097104413 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083743176 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079464813 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076488948 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081929098 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083682917 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085333756 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081302395 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057586938 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077718631 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077939947 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079209724 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095539392 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082789858 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077308028 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07712901 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068004608 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076875283 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069212258 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070563639 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057561236 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.082803401 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075171346 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075715633 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077457313 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069679997 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069543852 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07260771 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07799827 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068439958 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081712776 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075850863 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076758366 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078801302 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080576452 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071308674 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069433918 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07798493 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068963983 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076456979 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077479332 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075892257 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074754561 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076648991 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080669923 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094121882 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070920471 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078160839 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07990214 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078730819 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076783402 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07389196 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076811145 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074543501 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094632248 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077128174 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071677297 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07775319 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07772495 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075323218 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07656122 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076922078 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07898671 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079655308 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074870744 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07901141 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075651468 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069364059 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07699448 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072902007 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069505313 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.081317257 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081215561 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067962011 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075349417 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076512734 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075229369 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068025389 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071357922 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072830678 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075581293 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071042069 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057377425 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073244992 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076261979 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068648656 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077600394 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075736572 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076938206 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070826369 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079886522 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068027218 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07464984 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069002872 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068992375 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070858107 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073348188 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068671965 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071588732 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078207326 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070143513 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07553126 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082320268 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068572927 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075381606 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067492843 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067778425 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083103136 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078077669 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068724438 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070571061 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067674794 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075589476 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067925962 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068410834 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068235872 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068713707 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07415313 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067810846 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069559603 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075089599 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080929225 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067171149 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071666539 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069931721 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068024958 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073765958 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.203427139 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069748149 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071914018 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066465926 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071754732 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070070518 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07693442 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07117026 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076888013 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070406887 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077007357 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.074783754 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075526049 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07506362 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068118055 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062893835 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071606101 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071945332 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070685184 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069657892 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070641776 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069679065 seconds)
done (took 13.014897954 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070549742 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144501488 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100249126 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098973459 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.088947808 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070331243 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079419863 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103238302 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071443023 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104727939 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092436154 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.089479678 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.117932228 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068442568 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069287875 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073758077 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07062188 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084947422 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.102901918 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090441597 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.118412201 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068406181 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096658021 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092731747 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091956459 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106343158 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070931992 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073188531 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072952255 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.096730934 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093057164 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073836629 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070448534 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101374171 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.097634657 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087247102 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069827642 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086620002 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070095074 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068815795 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071294156 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.102706672 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.083421492 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083824645 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073565642 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.080454656 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071166244 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087141296 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093698346 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082078768 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.089307122 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.104320868 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071853612 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.087443601 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068455127 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.09023946 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080643577 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072323323 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070002984 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.077570772 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069534004 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073326773 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084713041 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083710209 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073600236 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.088655056 seconds)
  done (took 7.084006257 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088037321 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096388916 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087920059 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088970657 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069611646 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069549492 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.070003998 seconds)
  done (took 2.070759465 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071012137 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09180669 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093989661 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094304292 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084737251 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092197625 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07988567 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070522514 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092048223 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070750434 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.09118843 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.104549624 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073400467 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077684658 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095046928 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069751963 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09433107 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069839359 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073052409 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094848717 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07248871 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100104548 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073713293 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070470123 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084286942 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070555058 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118881447 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074454158 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072512867 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073421058 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0680392 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.111502816 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084215608 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078074602 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070128134 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08494539 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085348059 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068725173 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087001979 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07917905 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08481354 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070392059 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071238989 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067973399 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074587053 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080903343 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072041597 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070987087 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072440109 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090329756 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071392483 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084047617 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073267569 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07565069 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07205883 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076793436 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08082421 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070881369 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090428569 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071784645 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087157253 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086481055 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08433044 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086733331 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072546413 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084095101 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084311374 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072910248 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072399707 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074353602 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086672539 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068469716 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071689198 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081065635 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071996023 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093898605 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093971277 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071647606 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083707468 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.07116781 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070820601 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070028275 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094178036 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07530715 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070287368 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074550482 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074098825 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068847771 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069277003 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074437753 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068260103 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071603378 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073206422 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073517992 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073321604 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087483569 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.07267461 seconds)
  done (took 9.187309277 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071929787 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070992905 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072751447 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071053272 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.07076756 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071324966 seconds)
  done (took 1.952507724 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096047389 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.071966783 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083539004 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075874294 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10935542 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.09026442 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.09106781 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082158479 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087064495 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082171434 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090732698 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.091269949 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09663816 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07557241 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.090423453 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.074592782 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091872805 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077885663 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081749554 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075497486 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089098369 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.075803963 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076210871 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085051127 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.078856689 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074812614 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081620952 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081981409 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081451666 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081439584 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.075351511 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07932408 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.0742442 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081046677 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.09120447 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07454827 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075124072 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.080776584 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075185472 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080036757 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.09122009 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076250019 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077093116 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.080670639 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081035949 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073571704 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.080289179 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083205607 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090769355 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.080441077 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.080703015 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074650943 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079286663 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.080665399 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.0744187 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081211948 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.080719167 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091065075 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07501036 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074307436 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071890488 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.079547504 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080612327 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.079403336 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.083631699 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.08042329 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074022482 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075633167 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076140868 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074642548 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.080291346 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072490967 seconds)
  done (took 7.346252983 seconds)
done (took 29.130256534 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541419176 seconds)
  done (took 2.027518198 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.631915768 seconds)
  done (took 2.141390752 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.508869306 seconds)
  done (took 8.01474153 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.400253739 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.50880975 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.749141136 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.137419221 seconds)
  done (took 3.337889932 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.724402232 seconds)
  done (took 2.24002223 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233655985 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220611755 seconds)
  done (took 1.978923744 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.385116501 seconds)
  done (took 1.891218118 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.14730351 seconds)
  done (took 2.655832109 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.264332841 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183833606 seconds)
  done (took 1.962009119 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.488908998 seconds)
  done (took 2.00258307 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.906532071 seconds)
  done (took 6.420116573 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.221239598 seconds)
  done (took 1.777150431 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244796526 seconds)
  done (took 1.758641601 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.80236435 seconds)
  done (took 3.315214238 seconds)
done (took 43.037535343 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.087449498 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.088519553 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08861486 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.085486875 seconds)
  done (took 1.850897721 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079721063 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077073444 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.079839326 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076068424 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.079879309 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076024662 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.077400281 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078758664 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.076039874 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07621429 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076380411 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076850526 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078357496 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.078341885 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074887632 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078470523 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.079103254 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075924482 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.078677845 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076210128 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073529233 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078498441 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078317305 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.075318362 seconds)
  done (took 3.372009586 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082058278 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076621565 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.078386036 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075540083 seconds)
  done (took 1.834112203 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081717742 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096207023 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093334468 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.081383743 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.095757291 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.089960503 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072616222 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072103624 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073666515 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080698072 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070902363 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099580558 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092204638 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.081239557 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082999873 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069481821 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071407159 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091479106 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.082345138 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082268848 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074279173 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.08144977 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071809884 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092726165 seconds)
  done (took 3.499961778 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.090445273 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.110058247 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084947997 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092745221 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095450041 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069271736 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.091398943 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094339004 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.130778677 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068814813 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074041243 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069394289 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.077302934 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068598674 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.084661263 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.111468411 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116578674 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072348961 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101167351 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068853197 seconds)
  done (took 3.298707 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075733556 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073165935 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071307411 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069844729 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081137945 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076517764 seconds)
  done (took 1.975322014 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07240613 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070688674 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070703783 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069665262 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074838077 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071487751 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069790582 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.07137519 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.071526158 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070782919 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070831082 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06948858 seconds)
  done (took 2.376503632 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.201929214 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07185362 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.072576601 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069017999 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074129306 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069669055 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085143547 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071470518 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.095765493 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070316566 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070546633 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071842189 seconds)
  done (took 2.548850034 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211230346 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07990185 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242275086 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155452049 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11456324 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119219381 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116813356 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118033421 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.145890293 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10405676 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170503249 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170646245 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111168788 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140681423 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092370403 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.102460655 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157926721 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166887272 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110085105 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168335404 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153202375 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12977399 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150863193 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106098213 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108922443 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125450386 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075302616 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084241655 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173959251 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13733448 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147507426 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115165453 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09510787 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180459824 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176069087 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143779476 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150756488 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088558776 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.106227014 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.136774074 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201600813 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092372593 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164010865 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251025723 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085163842 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138747473 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122651485 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.123703473 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108319417 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093976098 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150840695 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188578945 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.14093818 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090917585 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128037693 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118299073 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117226679 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117340258 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18522794 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165123286 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132022061 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.074809115 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111670843 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154498659 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136124438 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.112543174 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.12782647 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095245719 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138443856 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157632799 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126443525 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147416447 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.121024201 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092350221 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121735345 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144695896 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130623481 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163067791 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12719689 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076343076 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126723564 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104917076 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083700055 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.152680425 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078851519 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176959182 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102129911 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109001379 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129100411 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112166683 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111701493 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160969689 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144697236 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.246702134 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.069914898 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109673508 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.124812678 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148826219 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090140676 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111774182 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119626651 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080897824 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140156278 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078817893 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126871063 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078683045 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127285647 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131087854 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082161088 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125533777 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107886228 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.103043706 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134854502 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163179073 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091869424 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086144627 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171387158 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124858355 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106650902 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146856968 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159754064 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102088194 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104468236 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153734415 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181628926 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092831855 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164340099 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109389976 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087270745 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091271052 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125343577 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115437379 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.127176614 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085346526 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120327819 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170637391 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078241071 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098726297 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136511832 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081357259 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083165291 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108014675 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107705534 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098950527 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.103042816 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104982555 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139084745 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125095145 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107346368 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124435801 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245889317 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17528487 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091975132 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.105090976 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107538547 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.073612722 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138658499 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159725893 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082747131 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166447218 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.126331422 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119737416 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120942127 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087101482 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144462103 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083103472 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073606265 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14940781 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11284118 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113669534 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.154521652 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120155564 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128424228 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.124242054 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135525463 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134307723 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.132993929 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109272418 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091427052 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11430115 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130616212 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076278578 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093569655 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083432144 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107676932 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099140704 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08694455 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144839206 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126831908 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113363982 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11435651 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100053586 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149972032 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079480077 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132152941 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.121301274 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098740485 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153688404 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153836454 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134517594 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101565635 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139127619 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073390548 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076715701 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090376608 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.267444351 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086606512 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086698416 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119245353 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150743518 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132310374 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140017277 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127247431 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123913084 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15756069 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074103526 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.124168829 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148963259 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124750322 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10842921 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094168816 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102841921 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144872713 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110933564 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185466663 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115510064 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125871117 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155139308 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.104350864 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082729547 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105680473 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137454972 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107178823 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14543922 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102462095 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09151459 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111680076 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078110702 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101719419 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129669043 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121568992 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136895767 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.118342735 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13554231 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080884476 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118308171 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124581862 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12432503 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067517852 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121998296 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162265508 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099452028 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120385767 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155463133 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082217605 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.138540044 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175148823 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.292040988 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089177336 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111829173 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122734595 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130777896 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12298173 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144557848 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111032517 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140872907 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112412049 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089135436 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09092958 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101245677 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108337 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.098407259 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109415495 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.117332034 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099337668 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136129303 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106267432 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114738399 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119814985 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.103164854 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.094377957 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099981632 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180333813 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121293212 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174493273 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102270436 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146249439 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166073174 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078160165 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081896479 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081341858 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14288839 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087537089 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132497285 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.111801717 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121199831 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126067243 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1451842 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098875738 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071887339 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114071804 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136661985 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128699125 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101636253 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106198655 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164622003 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102574532 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082514086 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116127429 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119565219 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106377688 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171634081 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064237594 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106733585 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22327122 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085460369 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132612717 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156202277 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082794277 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.107249253 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122055432 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116680022 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131151645 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103693454 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112786148 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130350779 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155104159 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13180734 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093268236 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115471432 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130298781 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159247763 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108567791 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100834793 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177232506 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154278604 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162240575 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090958045 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116617629 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11525252 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110933548 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139611673 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086461479 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164762498 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085479356 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139387846 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106633775 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091382001 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132316727 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.112112603 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091720236 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150051399 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120216706 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085870897 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080755928 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121029653 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121639117 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108915322 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079049971 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14149241 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076712883 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133697022 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161684819 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084273315 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107311899 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098634681 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082342006 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25565994 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106282808 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090815044 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.101856796 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175161492 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091028841 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152542372 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137201075 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115924588 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138297232 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105425794 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643350802 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081370827 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154247928 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120088919 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17586279 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103969497 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119927747 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111462338 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126138026 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148672873 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106286224 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.189614252 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136573394 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.118013593 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082708291 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105468933 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10610993 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090569914 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110444159 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115077559 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1176457 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095602344 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.118752211 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126088426 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.085605104 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099035093 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158323713 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121244158 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146983351 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144124248 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088990323 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119985962 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139620018 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082913913 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122853965 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15797275 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108514148 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103528127 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083915534 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102638348 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.305457029 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078349852 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162944278 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123440412 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113235977 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115532267 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116168816 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133149319 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108894565 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125957508 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096381395 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.11184135 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116953201 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085371581 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081908844 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109897393 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11492561 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100407669 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099950671 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.101481424 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153191143 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07480172 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102620139 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118597434 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146657655 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176749786 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.091326185 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086041047 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121385551 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117406102 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.115973914 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123338265 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081850621 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085111205 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08297798 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.081224531 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111959278 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115786044 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118523448 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113257289 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165987333 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087322858 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.238872771 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098862406 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107425814 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073874686 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.08160996 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099494386 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101800255 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110835958 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113630924 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161614616 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.097769021 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091807369 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092995414 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076682446 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085866567 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129958441 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110821044 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26729946 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106094768 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066291444 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111833892 seconds)
  done (took 60.544260275 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111331164 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.085253291 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100282142 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.146837171 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.127009538 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204567003 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154345101 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192415364 seconds)
  done (took 2.754359557 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072237974 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099458251 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107413474 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087909333 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.070968604 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071592228 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.23384554 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084874841 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070012099 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099812829 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081278294 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071990522 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.439510875 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.07148685 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.073514651 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.068214229 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070630376 seconds)
  done (took 3.500261923 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.411656045 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.621504312 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.362081323 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.080074458 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.981715921 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092604786 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.19323229 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136607438 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081258306 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539927397 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.415280695 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.139125244 seconds)
  done (took 18.691940278 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.08987249 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.083022341 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.098058563 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.097965368 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.085190305 seconds)
  done (took 2.160963058 seconds)
done (took 109.955701558 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.089291952 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.622705703 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057425523 seconds)
  done (took 2.351028102 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08794602 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.092564065 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089507398 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.089185257 seconds)
  done (took 2.004770434 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.078553017 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.080258676 seconds)
  done (took 1.797843615 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.242158183 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.173049142 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.101762536 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087554512 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08421649 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084419536 seconds)
  done (took 1.898887845 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076977405 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079218674 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076463985 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080602171 seconds)
  done (took 1.951535297 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080944391 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.057347435 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059103759 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.061368436 seconds)
  done (took 1.897783583 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094413 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084319512 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084013559 seconds)
  done (took 1.899813154 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107722044 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090753961 seconds)
  done (took 1.835071678 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085910216 seconds)
  done (took 1.724171024 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101272005 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.105404523 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.137254789 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115274062 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.144074023 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.114277769 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088799477 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089564986 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.08052152 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090231082 seconds)
  done (took 2.703713042 seconds)
done (took 22.312198707 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084845048 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.380855303 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364911115 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095370434 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674525404 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360502061 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.989620771 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097573728 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121038029 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07167771 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089497101 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.65308335 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.980185704 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.333493028 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.971152047 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.332549314 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653822138 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072271345 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07187666 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071706197 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.975205661 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071493346 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071447625 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072466499 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652924594 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.376933733 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072332478 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.333079294 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071785395 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074202872 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360211709 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072776233 seconds)
  done (took 16.301881339 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07789021 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128325177 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077102845 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089036519 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074775894 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072912125 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075169806 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089700636 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126356673 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07171668 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089384141 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071741301 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075848537 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072013942 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092634772 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071939037 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07298678 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072931375 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072344457 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072932156 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091770245 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072583276 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072272162 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072664774 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072507684 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085420604 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072659718 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073256513 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073072306 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074457579 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075910721 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073500014 seconds)
  done (took 4.20570643 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.124634909 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.132169277 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079714245 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.1092012 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116544129 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073870662 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149073608 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098073331 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.134164526 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072530612 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089403161 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072439341 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107672907 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073412564 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092805741 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073181491 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073092562 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073034217 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072036767 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072830562 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092499866 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072978859 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072720173 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073399015 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072516932 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086693811 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073374648 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073300634 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072748731 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074415699 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076023901 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073258077 seconds)
  done (took 4.456456529 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07996952 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.083243387 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.089475645 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.090836404 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.075412319 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07782118 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077249423 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.073731735 seconds)
  done (took 2.298324077 seconds)
done (took 28.905339109 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08713286 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.075709609 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.079591294 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088446337 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.079939867 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082843533 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.07073227 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.081042947 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077014126 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077388953 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079708802 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071261268 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.075676189 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070661572 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.078133827 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.072663162 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083588859 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076577206 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083366198 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083796879 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074306445 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077923248 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.079741895 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083510194 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084151348 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083858915 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081790024 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077396219 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072760218 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075055824 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082256751 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088704304 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072710549 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083762325 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071947622 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071599923 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.076560815 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071716458 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083957473 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081382335 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073904854 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.08050773 seconds)
  done (took 4.930893625 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.095386297 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097692047 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089427499 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06552115 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.07043055 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.069236875 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.093948326 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064231309 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063744576 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092904028 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059544569 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063430241 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.067370335 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057299155 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.064459377 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060547792 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.066033096 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.060038916 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.064487436 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063795097 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094205189 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057388558 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082897392 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.067371291 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.060030288 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06576893 seconds)
  done (took 3.511604494 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.082560878 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.092026414 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095985776 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135813516 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10990789 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083483676 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084151558 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.100515365 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.094200204 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071076555 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075628462 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.097909734 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.0948362 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078305975 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071878185 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.091122447 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.089301656 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073159582 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077259963 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099394704 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091649313 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.093650154 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.103467645 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.091859191 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070961612 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074291104 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075437237 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085802624 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074470145 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081341106 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074799852 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075397133 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.073813653 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.086062681 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.077709505 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.07629927 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.103428926 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08566933 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.086121032 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.075473392 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.083830517 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.076258504 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.100753564 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.136687543 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.074305828 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.081897017 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.079297972 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.085013388 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.073582685 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095955547 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.087345677 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.074104722 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.078559023 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.073734177 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.074084765 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078381163 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.075627503 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074269117 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080966248 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078557067 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.097430612 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076773937 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088335258 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071418835 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080215165 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070871636 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072730822 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070646513 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.10106599 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073700503 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116968878 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072554203 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072750245 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081216575 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079980002 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.078272163 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071600033 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088104534 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082671083 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.077464269 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080539378 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075382181 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075305039 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.096020923 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074685874 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073473039 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.073128988 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07812646 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07459902 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072964696 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085352813 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.07112133 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07458073 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089121549 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071470311 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073024496 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077531335 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076273635 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.071296819 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083255855 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075809762 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073072017 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082016685 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072238847 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074804971 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084824671 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078255114 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.07052559 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075958163 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07722394 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072364749 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073200113 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074512153 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073619287 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.08084714 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078997164 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076092531 seconds)
  done (took 11.24540924 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.174253994 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.163917466 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075055903 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.154858213 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081948799 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083773842 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.157834478 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099993943 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.072481801 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072701139 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073068733 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115404858 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.111106422 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121328053 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083063522 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071828498 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.089041985 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.120757153 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.159040213 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.165499365 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.089342724 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081540847 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074857427 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073052695 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074709999 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083539414 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090294387 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.083081478 seconds)
  done (took 4.588094202 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087964894 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.11183788 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079952406 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.096129074 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095754569 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072563553 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07480686 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073628741 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086074877 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082312175 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.07211373 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077600343 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079041769 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075248824 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07281213 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079163612 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079014333 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.073613911 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075296988 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07773663 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082903677 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097628152 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076568582 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071123783 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076399168 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071803283 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066942314 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088418999 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073000437 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.100595612 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069703331 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077896234 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087695811 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073823961 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072484115 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072933286 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072102659 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072548041 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073920261 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.07105845 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070700468 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061574762 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.071170517 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.0829939 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.079395347 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060221057 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076713074 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.077573794 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.077917691 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069227962 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074773762 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074779393 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075313747 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079793454 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076323812 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.077318603 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073013776 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.078222444 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081577756 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072166324 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069906374 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070779477 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076881155 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068884607 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081251405 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.077181194 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070353526 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072051792 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074195452 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.079762322 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071938721 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076777512 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069642819 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.074160573 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077113507 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074335813 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073370375 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070584579 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071927265 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.07271099 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059006493 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.073614635 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057100724 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075587722 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070105521 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070722511 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071772319 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076713594 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083740778 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.073229258 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078061924 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.07308084 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070981143 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07499526 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064204528 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074776607 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083443531 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086599232 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071772061 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069528319 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085561085 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.077219073 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.07099885 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059731473 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076259221 seconds)
  done (took 9.646374151 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.100792679 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074491818 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089282266 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095345377 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092521252 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079868713 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082092853 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073515284 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089025757 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.078704352 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.081617134 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.072209081 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083523354 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082392801 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.074752359 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082820561 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076599161 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08931678 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087555567 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.07269195 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.081587387 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085416412 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.09552853 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086762582 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085396594 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087401303 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.096086891 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.083131623 seconds)
  done (took 4.052454101 seconds)
done (took 39.621277845 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.748893221 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.908493589 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.730766682 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.073721475 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.814619129 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.876812556 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.815173593 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.728852478 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.957114268 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.762970657 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.061802029 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.962221928 seconds)
done (took 65.103365021 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.772693563 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.869535313 seconds)
    (2/2) benchmarking "String"...
    done (took 1.970687266 seconds)
  done (took 5.494693061 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.938800665 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.298574394 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.970421957 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.722540463 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.725770481 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.036862807 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.53512293 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.235580155 seconds)
  done (took 30.184742138 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.887630582 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.950756214 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.422158194 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.47161331 seconds)
  done (took 15.446016189 seconds)
done (took 62.582758839 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.719756044 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.762734327 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.760409764 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.703693208 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.780036409 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.728752585 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.187847451 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.736447648 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.720544351 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.706972351 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.71894411 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.189495341 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.729122939 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.147002196 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.719870697 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.721991549 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.748734339 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.202619498 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.874259422 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.733836086 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.731836946 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.875318876 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.720296091 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.732049742 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.729430852 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.719076129 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.133424995 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.724236127 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.331747666 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.722482984 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.756918991 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.225789784 seconds)
  done (took 202.648755847 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.71806235 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.504621271 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.63556103 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.738799178 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.035253014 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.927936826 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.83253089 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.202322519 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.716062735 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.740737609 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.924820699 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.712628124 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.961655701 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.664373967 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.745111454 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.800277852 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.886588348 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.941405536 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.751198941 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.86847933 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.722050741 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.691618076 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.643513227 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.928642618 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.738866631 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.8109658 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.721286364 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.726341305 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.909197759 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.865348279 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.720221327 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.755529085 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.914010217 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.58421751 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.728654642 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.729629705 seconds)
  done (took 167.152204814 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.883830952 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.089979663 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.714027158 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.71509603 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.716568411 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.722667426 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.718779854 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.837696056 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.839051508 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.327782515 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.159960657 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.769240731 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.514819486 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.713302497 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.783635827 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.728140148 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.715031753 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.732458211 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.745309107 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.713629211 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.716290046 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.843234185 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.727690267 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.716625286 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.722539519 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.717630492 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.722803638 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.09103784 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.719859645 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.717638289 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.724487658 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.815876035 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.954598666 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.714432564 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.717824928 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.550221451 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.79544794 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.717987126 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.722743633 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.716143255 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.936878543 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.715022922 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.719025691 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.720032261 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.841166664 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.714169034 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.841479703 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.717484431 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.195030639 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.714656242 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.721505375 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.4876021 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.287844236 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.713076067 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.719969521 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.721194838 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.717298728 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.716606287 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.725403987 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.620562829 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.787255889 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.722147132 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.723113022 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.721955612 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.717098256 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.867697219 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.720996223 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.222988255 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.77895705 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.840361067 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.838802127 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.718029332 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.7852946 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.807482695 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.713965169 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.718124877 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.719675346 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.717678703 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.800276318 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.713340847 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.843634097 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.722878669 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.723024732 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.765352072 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.788649758 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.713492672 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.557662633 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.71781946 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.717984282 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.987441793 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.780483934 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.717424277 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.715686286 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.717413623 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.719208621 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.848499119 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.837509734 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.441578152 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.718322446 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.71901321 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.914914831 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.725100592 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.921166146 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.726381647 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.940558697 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.721609745 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.818249396 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.726377294 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.724526434 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.723830975 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.757598742 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.722552779 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.780957402 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.722142556 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.725136918 seconds)
  done (took 395.63489626 seconds)
done (took 769.032959239 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.377732975 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.349449199 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.445737713 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.371007424 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.345254201 seconds)
  done (took 13.543745252 seconds)
done (took 15.195171467 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.818089964 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.821716143 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.752090282 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.817215223 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.750968928 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.817922929 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.802324433 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.753294827 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.785939166 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.751076579 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.789774025 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.751470135 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.738364577 seconds)
  done (took 24.804845904 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.977583536 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.967865783 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.793627838 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.979949229 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.772477231 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.961552236 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.892872768 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.880696198 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.880962481 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.744155207 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.736666461 seconds)
  done (took 22.248463116 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.96446238 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.9860768 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.803110599 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.963358693 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.774407845 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.973879022 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.894967767 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.884574818 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.882025309 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.746241597 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.74009672 seconds)
  done (took 22.271457664 seconds)
done (took 70.983501465 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.737989046 seconds)
  done (took 3.395621576 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.763744679 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.933305404 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.747698927 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.739693078 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.736751974 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.736615066 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.739138525 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.738033403 seconds)
  done (took 15.797347841 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.735409423 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.730271337 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.733944507 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.731492552 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.734540694 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.730587783 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.735358366 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.734537035 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.731412983 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.732785728 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.732816959 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.736600224 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.73349688 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.735999347 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.735458369 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.736949643 seconds)
  done (took 29.403316118 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.734219249 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.734201068 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.732585692 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.735044543 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.735365544 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.733802753 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.737731655 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.734124789 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.734824761 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.735865553 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.731979736 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.736188036 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.732042238 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.733757071 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.734519843 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.733233393 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.7327893 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.735049664 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.740877121 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.734897964 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.735631324 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.73598778 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.735481092 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.73529184 seconds)
  done (took 43.299810953 seconds)
done (took 93.555571724 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.494672596 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.38548861 seconds)
  done (took 9.541635604 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.738076072 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.737537479 seconds)
  done (took 5.198882044 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.73754952 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.738284661 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.736736744 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.733550552 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.737877427 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.738505097 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.736043985 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.733744417 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.736782466 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.736465538 seconds)
  done (took 19.02666161 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.739372957 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.737636964 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.732260037 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.736689463 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.737495816 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.73455179 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.736933447 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.740205527 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.738042 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.734632787 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.737325458 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.734579351 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.739018154 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.735209781 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.741217183 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.736262068 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.738453909 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.737489069 seconds)
  done (took 32.934466116 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.740311234 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.739022011 seconds)
  done (took 5.142338788 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.739046281 seconds)
    (2/7) benchmarking "second"...
    done (took 1.738628742 seconds)
    (3/7) benchmarking "month"...
    done (took 1.736786361 seconds)
    (4/7) benchmarking "year"...
    done (took 1.736061486 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.737831772 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.736300399 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.73716584 seconds)
  done (took 13.825380543 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.739419989 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.899966249 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.966598261 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.404802734 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.737987273 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.744705396 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.711352528 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.744332829 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.74612368 seconds)
  done (took 19.358433622 seconds)
done (took 106.688587562 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.567117709 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.736664189 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.962996999 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.785329571 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.787112085 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.079349494 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.754950353 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.04757619 seconds)
done (took 42.387269282 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.753022356 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.019759672 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.0280847 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.760980797 seconds)
  done (took 16.476586624 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.723076316 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.260801327 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.775991628 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.326628698 seconds)
  done (took 19.789260362 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.107634996 seconds)
    (2/2) benchmarking "read"...
    done (took 2.091194666 seconds)
  done (took 5.871033226 seconds)
done (took 50.557178759 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.74095066 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.737457425 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.74024953 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.738947278 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.740215331 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.74095242 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.737571838 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.738244456 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.741483393 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.742576373 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.744558543 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.7404742 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.741476625 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.743296645 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.737594941 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739001877 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743327761 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.738316118 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74151895 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.744623602 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.740164787 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.739880967 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.73822192 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.742420053 seconds)
  done (took 43.439403259 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.744877448 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.743782787 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.744140433 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.742429454 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.741374612 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.747377381 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.742499316 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.739478942 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.743645333 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.741394029 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.743309777 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.745577356 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.742825414 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.740358445 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.745603184 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.74122827 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.745988988 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746088608 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.745803924 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.742302347 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.745092492 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740633338 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.740532 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.743679861 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.740213864 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.743547542 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.74579368 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.740439097 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.744328522 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.744373562 seconds)
  done (took 53.968637042 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.750214677 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.750371396 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.746251735 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.745325418 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.746081631 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.743908015 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.741775417 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.744863895 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.746095644 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.745982064 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.745449702 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.743554812 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.744539178 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.745189556 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.747700004 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.746476502 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.744612932 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.745050468 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.745703919 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.744308704 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.745891422 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.743752631 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.746880726 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.744666035 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.745124883 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.744679791 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.745885092 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.746114624 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.744266634 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.744181386 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.744638769 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.748072755 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.744709968 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.745524199 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.746119737 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.748165514 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.748259651 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.755247113 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.743256081 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.746337313 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.744890744 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.746015909 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.747333469 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.747729585 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.746846383 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.745580995 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.747989043 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.745504485 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.74826599 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.751179086 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.746503381 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.745925652 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.745981212 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.747688635 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.747530496 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.74672582 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.750288392 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.746759388 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.746886301 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.747448324 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.747174732 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.746804492 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.745790088 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.747044067 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.746093456 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.747951985 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.74970758 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.748620707 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.744756401 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.747112129 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.748659501 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.747787173 seconds)
  done (took 127.420142602 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.749277012 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.743482801 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.746116612 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.745845557 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.744416085 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.749549302 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.745222953 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.748637605 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.745049289 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.747217383 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.748756524 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.746886127 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.746199254 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.750440685 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.749933346 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.745536676 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.748291841 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.744017532 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.749141484 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.750402065 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.748323993 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.748519712 seconds)
  done (took 40.119042746 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.751332237 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.748704427 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.747402289 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.749316713 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.748826106 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.747703007 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.74722825 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.749264888 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74910264 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.747389884 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.747120417 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.749414887 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.744719287 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.745709653 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.745606533 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.744815023 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.750358001 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.7458729 seconds)
  done (took 33.137512856 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.745274754 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.746338808 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.748365587 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.744927803 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.746382976 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.747449255 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.745974999 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.748190167 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.749661823 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.745810532 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.749538476 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.749621941 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.753143584 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746021749 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.749090281 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.747518587 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.74870614 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74575331 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.748417354 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.745286139 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.748738233 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.752592266 seconds)
  done (took 40.130667683 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.751682202 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.7496968 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.744847474 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.749604009 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.747033536 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.750951875 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.749680279 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.748408448 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.750935186 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.749286004 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.747150442 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.750003398 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.748401056 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.748168145 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.750524628 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.750644933 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.752406175 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.747299026 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.750723795 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.748563854 seconds)
  done (took 36.663601339 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.754151622 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.754975391 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.756076574 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.753844158 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.755782955 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.754747812 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.756780486 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.75643566 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.75582029 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.754254465 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.75637251 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.756634818 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.75610513 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.755409928 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.754781889 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.754565251 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.755593074 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.755023686 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.758012301 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.756780992 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.757340343 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.756206938 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.756176631 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.755497712 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.756612545 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.757045661 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.754611474 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.754549156 seconds)
  done (took 50.840359074 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.752289793 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.754767466 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.752490625 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.751248224 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.749222398 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.752567353 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.75134739 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.753515423 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.754114163 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.749986514 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.75204954 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.751656445 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.753947421 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.754738053 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.754213943 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.756463407 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753086518 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.751376589 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.751549692 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.75107482 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.754247628 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.755649643 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.756042889 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.753092762 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.75279985 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.756688635 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.751887992 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.754118577 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.756351936 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.749618251 seconds)
  done (took 54.272900648 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.77194048 seconds)
    (2/2) benchmarking "in"...
    done (took 1.772317169 seconds)
  done (took 5.225003752 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.751672099 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.753875326 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.755545701 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.754334386 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.751221037 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.753001273 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.755832461 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.752401113 seconds)
  done (took 15.707218607 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.757680562 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.757678362 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.755964036 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.754337335 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.760488323 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.757831443 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.759443442 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.753878899 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.760066047 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.75689471 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.764382583 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.765355767 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.759473807 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.756197406 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.754252399 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.757690551 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.754130761 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.758752181 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.758767005 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.754431757 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.758344399 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.758965248 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.756775872 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.751521895 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.755929119 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.769778154 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.759694446 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.756027559 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.756823191 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.761324692 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.755208512 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.75334805 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.760086959 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.761059749 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.758244001 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.761396083 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.765549272 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.754298302 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.76249339 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.759343773 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.757624336 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.755441396 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.759224807 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.758702356 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.757871181 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.757565196 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.757253406 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.754844213 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.756239608 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.761834074 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.765500366 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.758189183 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.756956227 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.762634901 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.757001955 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.765217151 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.760388677 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.760297668 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.767292877 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.768474732 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.771307253 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.765347785 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.759904075 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.760696629 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.766964862 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.783781416 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.765102072 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.754774502 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.755347879 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.757322846 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.767490398 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.770381542 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.770346694 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.760303876 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.760101517 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.759640428 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.758889286 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.758180404 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.764184167 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.762221105 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.761538577 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.763373725 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.771482112 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.786630035 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.759091153 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.761192575 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.7615811 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.759504703 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.762330493 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.772162484 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.759954265 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.761549882 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.760998634 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.76050647 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.763742626 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.762800966 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.758152824 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.762954793 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.75760227 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.759652908 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.765433579 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.763375398 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.772720239 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.763100279 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.761593417 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.769562156 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.758882065 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.759861885 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.769132215 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.759835836 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.762646689 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.763138038 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.769962772 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.759985965 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.76563144 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.770717872 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.761872496 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.765473281 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.762776115 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.761634131 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.770290952 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.791197362 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.760665704 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.761718049 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.766637933 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.776661722 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.764628654 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.767097238 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.761031624 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.757557941 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.758329919 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.763392602 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.761575036 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.763709862 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.764102277 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.763777215 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.758974106 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.762537471 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.76380679 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.766150523 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.762870816 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.765241492 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.765253718 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.765810097 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.766213001 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.765437014 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.768038401 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.76239903 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.766080211 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.764996416 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.761440136 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.763698824 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.765833352 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.766849679 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.76653144 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.765080197 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.763095362 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.763828806 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.764002217 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.764867238 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.764811691 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.765609321 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.769239929 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.766072919 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.771667159 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.763995191 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.761511089 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.764831698 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.763380163 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.762679728 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.765062256 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.763370076 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.768541263 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.776827909 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.762334732 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.766551673 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.767664462 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.765987122 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.770871899 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.768130135 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.766996839 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.773604145 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.767950946 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.769893016 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.764910598 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.769137005 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.76732792 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.766020823 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.76443867 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.76851131 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.767450437 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.773940302 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.778314645 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.775153171 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.769188998 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.77070796 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.767081194 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.774142711 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.772685674 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.767711308 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.767102875 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.767102828 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.767720051 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.76937459 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.767714321 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.766740005 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.767195153 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.766374509 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.766035162 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.768610149 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.766633579 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.768129464 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.768603324 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.76497483 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.765947468 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.766383831 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.767288639 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.763520703 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.764990359 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.766427224 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.769122877 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.770241387 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.775063378 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.762933091 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.768005541 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.768740247 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.765639271 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.764629099 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.767620164 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.770794677 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.768233391 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.77280137 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.767068964 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.771105036 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.773930257 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.766094504 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.768830344 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.771132382 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.765724008 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.766344966 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.771249014 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.776951573 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.768311133 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.772321668 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.770417133 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.766902932 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.765686799 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.775446484 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.764943256 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.767554444 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.769645366 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.770812584 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.769123584 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.770207555 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.772676085 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.769108757 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.775417334 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.768419723 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.770103122 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.770388113 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.770285105 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.772560062 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.770751491 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.773342115 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.780592425 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.77323023 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.769072436 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.77414705 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.770259234 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.772052865 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.771781162 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.773120862 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.770511971 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.780789811 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.779945608 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.776115664 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.770881452 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.769420571 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.773685454 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.770615435 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.774978627 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.767366503 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.770356694 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.769797868 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.770359986 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.767001417 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.772877709 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.768738025 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.770157942 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.768586706 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.773232273 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.770683467 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.769346451 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.773065704 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.774616029 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.772827671 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.769784901 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.772279035 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.771174043 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.774326169 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.771123457 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.774205208 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.778137511 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.768946599 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.773869188 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.772798917 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.772903911 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.7740183 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.774664096 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.776272786 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.776408226 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.782869694 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.775801312 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.785995915 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.770205344 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.783716767 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.776751347 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.776137281 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.786530474 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.770470899 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.771494004 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.772906936 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.773878296 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.779532728 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.773535001 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.774199702 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.779510264 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.776285824 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.775290483 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.773848298 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.77685392 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.772159181 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.775397347 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.783499995 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.772375698 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.775112497 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.777404777 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.767457027 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.774556754 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.773958687 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.771624017 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.777492596 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.775291888 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.775881341 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.775347434 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.774753518 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.7717076 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.776484028 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.77356585 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.771543542 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.772536838 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.778488598 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.771757329 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.782533225 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.774536469 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.782677478 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.774046329 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.782105763 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.77541556 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.776089378 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.77633673 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.772772562 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.774570568 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.777234773 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.775329266 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.776838302 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.774084339 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.779249697 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.777333202 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.779013256 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.773325763 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.777355393 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.77523559 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.782004059 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.805106742 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.777934925 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.779956309 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.77202868 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.774045656 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.783956834 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.779824096 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.772675593 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.777557652 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.786673688 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.787246561 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.773373338 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.777260097 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.777201637 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.776588345 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.773659782 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.772937204 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.777300612 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.775568674 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.77723845 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.777571409 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.780901457 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.769554381 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.77923275 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.774893722 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.775532409 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.787187456 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.777002496 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.781198675 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.778984894 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.772673601 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.776401102 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.774858601 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.779714958 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.7787798 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.775608398 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.777168429 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.784222732 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.786381708 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.783578715 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.773766718 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.776568114 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.776285839 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.776522717 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.776535193 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.781932674 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.778890539 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.780727655 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.778977123 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.777897985 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.777706004 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.777690295 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.781016861 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.777426776 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.78190223 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.789004951 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.776830993 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.770508257 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.774010172 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.779552356 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.776756924 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.780186434 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.786351378 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.779212368 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.789289629 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.790193355 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.783701388 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.780064088 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.782277903 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.790253858 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.778430508 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.780317929 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.782973195 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.781949651 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.782174509 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.785480423 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.78102008 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.787295718 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.777632977 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.780171105 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.785538852 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.778993366 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.777879973 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.783212465 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.785051549 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.778315459 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.775563469 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.781090726 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.778867131 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.785495069 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.778752362 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.780480942 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.780464802 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.774350788 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.780166231 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.788909682 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.779464567 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.782838521 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.777511344 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.780096169 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.783276674 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.77592501 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.776473881 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.779291875 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.778277662 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.783611496 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.788589795 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.781108208 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.782656801 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.779447523 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.782019895 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.782277755 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.779412861 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.774736361 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.778281574 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.782537902 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.781154806 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.782608511 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.786245598 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.779607719 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.783057458 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.783775788 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.783995212 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.782079486 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.794730178 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.791054701 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.779079434 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.780759327 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.782837188 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.786535973 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.781008904 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.784487644 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.779962202 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.780430009 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.781593434 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.786397786 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.781789265 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.781923165 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.802398733 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.780216803 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.782081789 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.781984262 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.789507114 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.781417296 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.777441181 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.780102255 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.786922012 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.782411376 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.794198042 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.782407266 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.792173976 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.78088422 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.783737441 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.7864666 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.787075569 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.793436941 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.787593304 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.783389223 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.784154828 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.786832395 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.801437691 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.778241493 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.78925746 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.8186704 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.781527946 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.787552493 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.785827432 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.784519267 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.78871588 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.786349212 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.789106718 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.782151785 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.784489133 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.787324508 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.783670943 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.790284364 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.786292828 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.780339553 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.78432966 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.784663305 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.784869167 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.780628744 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.789067756 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.785516458 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.78682415 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.783508468 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.789164979 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.785739294 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.799050188 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.792782137 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.784484949 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.787202145 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.779473779 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.783795626 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.787379444 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.79727876 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.793894399 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.786196004 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.787229708 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.789573875 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.787382235 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.781744715 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.787442687 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.786705983 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.786219432 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.784640076 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.800053704 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.79618904 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.788006425 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.78797977 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.78625366 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.786280479 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.789594325 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.791473473 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.791506061 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.78739193 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.787473492 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.790031234 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.784168232 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.785816453 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.785394654 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.795597419 seconds)
  done (took 1058.64376597 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.78657103 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.782914046 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.78601221 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.782199879 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.783191266 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.782845909 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.783446933 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.787349729 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.781152794 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.78266259 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.784396852 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.783330804 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.786414421 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.781890104 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.785175485 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.783613552 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.780257077 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.781485147 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.782378251 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.782452517 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.785390214 seconds)
  done (took 39.163667041 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.787968923 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.783734664 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.785876032 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.787237501 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.785284266 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.789863324 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.784081121 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.78793706 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.787537468 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78744747 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.787660979 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789275686 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.783584573 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.786048476 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78581614 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.788255125 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.786995161 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.785278469 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.788687625 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.78644367 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.789735878 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.78233341 seconds)
  done (took 41.019502559 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.79380508 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.791321955 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.786340176 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.783743258 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.790437072 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.785143077 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.793116605 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.788635693 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.787300895 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.788889616 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.785179038 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.791093638 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.795943606 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.796745483 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.788597029 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.786164707 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.933660679 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.790430511 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.794083977 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.794082071 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.784625438 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.797165582 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.784094634 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.7848109 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.787634962 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.790592919 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.791214796 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.789460786 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.792328404 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.791473849 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.797749306 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.79121616 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.790956303 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.792718388 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.789196009 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.792277228 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.792809124 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.793283896 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.785190977 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.788458701 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.798764834 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.809374966 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.793674399 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.795553998 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.786138861 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.793001724 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.793471546 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.804669821 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.78336598 seconds)
  done (took 89.626924076 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.789975709 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.792746231 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.786534137 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.790334394 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.793244348 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.79206966 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.789656204 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.789664455 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.789425791 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.786090132 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.789957594 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.789448729 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.790516764 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.79298788 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.793943229 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.791544893 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.788640244 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.791288066 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.790132333 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.791293019 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.788715089 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.792817193 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.793783946 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.79248798 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.794380779 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.789402034 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.793083456 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.792913246 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.788477923 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.788985846 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.79481623 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.789936312 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.790896167 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.791664328 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.790112429 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.794556127 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.792208534 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.788348359 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.793023341 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.789715876 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.790526629 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.792750168 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.79042786 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.790265444 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.7872823 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.791017159 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.787354851 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.787986645 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.78904224 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.790722386 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.792760282 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.79016384 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.79767027 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.788907371 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.793363857 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.793292863 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.788065199 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.790422646 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.790961481 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.788150823 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.791560176 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.795330971 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.790772986 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.79605706 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.796211022 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.789175833 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.79088256 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.79379919 seconds)
  done (took 123.51047861 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.798794368 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.796942589 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.798883956 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.795857633 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.798682867 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.796689521 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.797620626 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.796894514 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.798894525 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.801521171 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.797401191 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.793027903 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.799764609 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.798421751 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.796247302 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.797973218 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.800412686 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.797152654 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.794965251 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.79823623 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.798110474 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.796824635 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.80017256 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.798611409 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.798083701 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.795592649 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.799523619 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.79837215 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.798215961 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.799922869 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.801251962 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.798309274 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.801540408 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.802901626 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.80111024 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.80134482 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.800696657 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.800852466 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.80228069 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.800554442 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.798485005 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.800138604 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.799060764 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.799331237 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.802567005 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.801322289 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.79925675 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.796736152 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.796461617 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.800578958 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.802840565 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.801293697 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.80096743 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.800116699 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.800024307 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.800924994 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.80203869 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.801650376 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.800028627 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.800080767 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.800765909 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.801278966 seconds)
  done (took 113.272936225 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.800655242 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.800856291 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.796463141 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.794972222 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.794526715 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.796971295 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.799296299 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.800644988 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.797941703 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.801213236 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801968635 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.79495908 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796713923 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797120126 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.795106478 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.796566976 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.800036938 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.796819229 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.797856558 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.796928846 seconds)
  done (took 37.680206481 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.796825357 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.798838618 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.796287099 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.797832974 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.798058575 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.79447728 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.796744163 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796895357 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.79955583 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799468115 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.800114207 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.799561465 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798125758 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.798540548 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.799544196 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.7979688 seconds)
  done (took 30.494599559 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.797946299 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.800150654 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.803810614 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.801951558 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.795744387 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.796719454 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.802734415 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.798274346 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.797840706 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.79938969 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.800108429 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.804949855 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.802198193 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.803746217 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.797706703 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.803048244 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.801121373 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.795189132 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.79958698 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.803408839 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.801827707 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.797898172 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.801534577 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.80012331 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.800509018 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.800979153 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.798372621 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.798786607 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.797289183 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.806212951 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.801514929 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.799543104 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.801572619 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.802855873 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.806086504 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.799194231 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.801979745 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.802894642 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.803144555 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.804013369 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.804028316 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.800766681 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.802981349 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.803203135 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.799152264 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.802814867 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.799799244 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.799962712 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.799397429 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.801373716 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.800580869 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.807373176 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.804018931 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.802495954 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.802746778 seconds)
  done (took 100.788556797 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.803811337 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.800218916 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.802178376 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.80363552 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.804890036 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.800014988 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.804126926 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.801400424 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.801818012 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.802634263 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.798795294 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.8027984 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.798968793 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.80361111 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.802349601 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.804529842 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.802395945 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.801988838 seconds)
  done (took 34.169419725 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.803094559 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.801946023 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.804856431 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.803002454 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.803109192 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.804144911 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.800303775 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.803298202 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80213769 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.801111478 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802117623 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.80611299 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804586594 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.80321752 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.800473778 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801492769 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.803782314 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.802757542 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.800520116 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.800977745 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.804437002 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.804271629 seconds)
  done (took 41.391240071 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.804519045 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.807489226 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.820941052 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.830444781 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.829043663 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.844769863 seconds)
  done (took 12.668124175 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800470757 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8051593 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.802577647 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804567295 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804653692 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80478803 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804717425 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804036503 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806596312 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80328579 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803051316 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803729382 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80732983 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802704179 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807750294 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806798735 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805543128 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804414535 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804080978 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804803437 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802685067 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806200105 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806626237 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802522546 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805287446 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806544982 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807226094 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802832106 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806420861 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80648514 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806188573 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802249998 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805374703 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803231785 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807286517 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806108621 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803549726 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8071655 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809932761 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805611838 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.809401778 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807142037 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806268412 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804090168 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807413408 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80472569 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801934168 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802861579 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802949649 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806591523 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808692588 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804034704 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807207273 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806761691 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807938023 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809467381 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804695373 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806483177 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81057433 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807379917 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806561407 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807791002 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806151043 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806558085 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807526472 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806594252 seconds)
  done (took 120.900838354 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806676992 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.805309921 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806132152 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806536789 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805586427 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804245415 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806693405 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807010499 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805886221 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806670439 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809374737 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8067567 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807442096 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805345511 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805053055 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806390086 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806299626 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806995995 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806096179 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807886947 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806886392 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808120782 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807117967 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807525858 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806717569 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809265983 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803931156 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80628664 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807416781 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805301911 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805729454 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807534837 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808959925 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.807106589 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80670132 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806937756 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808025716 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807364247 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807430213 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808734965 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808413606 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812035164 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807914507 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809653843 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807499965 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806585843 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807467992 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809401678 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809040317 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807326363 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80544215 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807109159 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807189144 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807371139 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809798063 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807002606 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806888216 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809318486 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8075731 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809400086 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809464064 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809215066 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810925246 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808803369 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807570674 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806846288 seconds)
  done (took 121.023361046 seconds)
done (took 2466.945532253 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.845770528 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.808274098 seconds)
  done (took 15.389470765 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.975315825 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.926925585 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.81070163 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.841319763 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.808617235 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.833146066 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.803322326 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.809081331 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.810176538 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.809561847 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.80948848 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.997668618 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.862446237 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.809058636 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.809844724 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.900091625 seconds)
  done (took 51.357872706 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.815441063 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.814303889 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.827160218 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.820587069 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.813259797 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.825917527 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.853413829 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.819868343 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.84642878 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.833298824 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.882036418 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.827878268 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.816201691 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.863272145 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.832673247 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.83180359 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.911828673 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.894018352 seconds)
  done (took 34.869119333 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.889969352 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.813687662 seconds)
  done (took 10.447986166 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.816504761 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.807123084 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.899142186 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.81994373 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.830356324 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.838625144 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.822520955 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.824743379 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.830150666 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.842840965 seconds)
  done (took 70.07255363 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.821808367 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.814316996 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.814428228 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.811849306 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.806579765 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.80988402 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.815217644 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.813808744 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.476115906 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.854701333 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.825211704 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.819177925 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.817007011 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.81813813 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.810932109 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.83905473 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.906811272 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.812215507 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.810460571 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.820053526 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.814385862 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.869821208 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.832832888 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.821881286 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.846511167 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.47996992 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.824413142 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.821144302 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.907553472 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.811511575 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.816075843 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.814890731 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.816090262 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.164739732 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.138868523 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.815419629 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.831594335 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.823795834 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.811913607 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.915346535 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.81756285 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.821296203 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.480781445 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.118646734 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.925008419 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.861832269 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.131204522 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.837449917 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.819027095 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.844498069 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.823313215 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.816940776 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.832274012 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.299435988 seconds)
  done (took 129.273036479 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.809856209 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.171886651 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.9834736 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.816981667 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.10179286 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.024558168 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.811053627 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.862963515 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.811408815 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.044450982 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.069973826 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.92310539 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.812226661 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.811579558 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.809995228 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.81053258 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.973127125 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.886703126 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.81383571 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.809352072 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.845305299 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.062546537 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.941938324 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.816361322 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.844995275 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.031845763 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.938481629 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.92223185 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.593107058 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.811455446 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.879761459 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.81279248 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.816689023 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.810814544 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.974165353 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.909863244 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.902962933 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.813105737 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.812476392 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.812392362 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.48796218 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.01915884 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.911253805 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.955646622 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.012476725 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.023501396 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.596349735 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.81283833 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.556994247 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.982412408 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.052288629 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.050127876 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.940451954 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.81313479 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.139907578 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.812313735 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.813695451 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.066675052 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.959472805 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.916963266 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.815489252 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.81533601 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.813173145 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.063144421 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.816266676 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.911927107 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.815660587 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.812519523 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.915627671 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.918092734 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.955837122 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.030690424 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.847764849 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.742496216 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.347412448 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.064877269 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.883522625 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.068073148 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.817612405 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.811725899 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.896268073 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.659967007 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.073479793 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.067079179 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.070611794 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854507825 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.546563402 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.812851105 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.045768713 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.039353656 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.06790259 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.026731296 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.06253976 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.144910475 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.815321528 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.813329685 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.03830404 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.953597932 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.816342282 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.16376811 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.053764656 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.384067845 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.839472617 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.130892676 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.948975483 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.818326366 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.460823293 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.815693767 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.043631255 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.864134438 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.818109101 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.814819896 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.039340823 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.790850234 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.816820866 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.468594017 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.881111659 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.820009562 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.055920451 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.818406042 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081948505 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.816879162 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.057250732 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.409873155 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.852648573 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.995386063 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.025837405 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.817662428 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.068778765 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.065387014 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.935527823 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.04071097 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.433485945 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.816515316 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.109458874 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.817183969 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.81595629 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.992019197 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.821041923 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.965456149 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.819364034 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.10490117 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.844058526 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.066472727 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.820274717 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.07630386 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.853780649 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.871979257 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.81921112 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.947136599 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.821200443 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.746657084 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.981109091 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.824499065 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.817763247 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.373814784 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.818194361 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.977858729 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.057490112 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.844745268 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.899318032 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.491675791 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.819339086 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.911684283 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.845614326 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.221046959 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.821183904 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.07930114 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.81998221 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.817280436 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.818489374 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.066269625 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.006847885 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.823942017 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.818326857 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.716621678 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.817596823 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.819441563 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.005571738 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.155827017 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.817647881 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.027825517 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.821805755 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.950950507 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.823039064 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.892981818 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.15823926 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.818159826 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.818876986 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.816764184 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.81916518 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.818443094 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.034822818 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.850120533 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.363079694 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.963917507 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.09469003 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.135614997 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.075051696 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.868913685 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.826385667 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.08591558 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.821591586 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.886190143 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.821227141 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.845833835 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.0601322 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.824183696 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.087555098 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.101176402 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.863616913 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.874288142 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.82274261 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.819805354 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.819292001 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.971439994 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.909798951 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.821398581 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.819531746 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.939140577 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.947996718 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.035048438 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.822957016 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.86389447 seconds)
  done (took 890.971603486 seconds)
done (took 1204.117861553 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.822060337 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.820576429 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.806694824 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.825972153 seconds)
  done (took 29.029885564 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.830099902 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.826508692 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.830108321 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.826480249 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.83086394 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.826720804 seconds)
  done (took 12.725109122 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.875716013 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.821655142 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.823803952 seconds)
  done (took 21.274620723 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.895188652 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.209299603 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.94189601 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.247729337 seconds)
  done (took 10.048047895 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.831800881 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.831272187 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.8307616 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.829423496 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.83152741 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.829621938 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.830571207 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.834115454 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.830100177 seconds)
  done (took 18.235432833 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.261184059 seconds)
done (took 97.32646245 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.933272877 seconds)
    (2/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.909264492 seconds)
    (3/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.813212808 seconds)
    (4/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.487773661 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.813215974 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.716361705 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.969352988 seconds)
    (8/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.1663724 seconds)
    (9/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.024312968 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.110484765 seconds)
    (11/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.827635697 seconds)
    (12/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.393976925 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.86919713 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.919334818 seconds)
    (15/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.839173196 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.849370398 seconds)
    (17/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.19102557 seconds)
    (18/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.962530177 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.158168821 seconds)
    (20/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.826085516 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.953002314 seconds)
    (22/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.154904306 seconds)
    (23/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.410151038 seconds)
    (24/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.828972071 seconds)
    (25/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.235095347 seconds)
    (26/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.94223812 seconds)
    (27/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.17510384 seconds)
    (28/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.939339087 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.838782546 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.894748418 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.9143398 seconds)
    (32/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.736384661 seconds)
    (33/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.825743303 seconds)
    (34/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.484321621 seconds)
    (35/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.003447252 seconds)
    (36/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.105866241 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.832247168 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.510156393 seconds)
    (39/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.811761333 seconds)
    (40/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.005842039 seconds)
    (41/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.972886118 seconds)
    (42/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.733351563 seconds)
    (43/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.39643664 seconds)
    (44/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.032929633 seconds)
    (45/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.884159026 seconds)
    (46/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.914402266 seconds)
    (47/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.801054104 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.971844804 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.048934813 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.113152411 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.89754245 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.182993023 seconds)
    (53/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.89676702 seconds)
    (54/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.822117519 seconds)
    (55/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.830018061 seconds)
    (56/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.239490004 seconds)
    (57/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.823027446 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.005341358 seconds)
    (59/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.042536461 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.903207429 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.785075517 seconds)
    (62/309) benchmarking ("sort", Int8, false)...
    done (took 4.804342507 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.920939911 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.048821559 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.202572979 seconds)
    (66/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.829746472 seconds)
    (67/309) benchmarking ("sort", BigInt, false)...
    done (took 6.820368325 seconds)
    (68/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.807694908 seconds)
    (69/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 3.135882961 seconds)
    (70/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.13011561 seconds)
    (71/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.375575768 seconds)
    (72/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.141054268 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.831603508 seconds)
    (74/309) benchmarking ("sort", Int64, false)...
    done (took 5.484224205 seconds)
    (75/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.908987432 seconds)
    (76/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.977891567 seconds)
    (77/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.335679247 seconds)
    (78/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.978134884 seconds)
    (79/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.916007863 seconds)
    (80/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.968628395 seconds)
    (81/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.928160161 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.62311622 seconds)
    (83/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.121680516 seconds)
    (84/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.913929106 seconds)
    (85/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.916893517 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.733447386 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.983573977 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.828899407 seconds)
    (89/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.652887339 seconds)
    (90/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.805359931 seconds)
    (91/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.418328953 seconds)
    (92/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.809311037 seconds)
    (93/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.22077149 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.927355598 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.816466439 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.022910697 seconds)
    (97/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.199548144 seconds)
    (98/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.2629557 seconds)
    (99/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.839796074 seconds)
    (100/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.958269657 seconds)
    (101/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.974027537 seconds)
    (102/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.865553652 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.828999301 seconds)
    (104/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.246698327 seconds)
    (105/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.179360255 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.066845662 seconds)
    (107/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.929597827 seconds)
    (108/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.853376684 seconds)
    (109/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.93152528 seconds)
    (110/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.877347593 seconds)
    (111/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.813024155 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.360751578 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.444023462 seconds)
    (114/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.287765004 seconds)
    (115/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.005978016 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.833601072 seconds)
    (117/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.850642038 seconds)
    (118/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.111466282 seconds)
    (119/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.816370157 seconds)
    (120/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 3.453709645 seconds)
    (121/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.930421505 seconds)
    (122/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.923202502 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.216128324 seconds)
    (124/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.018755343 seconds)
    (125/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.931715943 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.764416692 seconds)
    (127/309) benchmarking ("sort", Float32, false)...
    done (took 5.533620934 seconds)
    (128/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.350175497 seconds)
    (129/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.093608361 seconds)
    (130/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.883235167 seconds)
    (131/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.841040906 seconds)
    (132/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.930755585 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 2.039731135 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.844912753 seconds)
    (135/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.059454811 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.075405076 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.935815107 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.036227056 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.82000711 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.07153434 seconds)
    (141/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.797692896 seconds)
    (142/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.072956495 seconds)
    (143/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.880873487 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.14724415 seconds)
    (145/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.455688663 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.915699912 seconds)
    (147/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.026310222 seconds)
    (148/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.154528047 seconds)
    (149/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.97971412 seconds)
    (150/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.808762578 seconds)
    (151/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.028277701 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.026928011 seconds)
    (153/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.234111282 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.834086996 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.45017428 seconds)
    (156/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.967703281 seconds)
    (157/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.976468515 seconds)
    (158/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.823212735 seconds)
    (159/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.719751701 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.636992091 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.73125318 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.830156507 seconds)
    (163/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.914832381 seconds)
    (164/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.501938402 seconds)
    (165/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.890787664 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.053832946 seconds)
    (167/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.889767703 seconds)
    (168/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.798429095 seconds)
    (169/309) benchmarking ("map", abs, Float32, true)...
    done (took 3.402613453 seconds)
    (170/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.905076183 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.184953106 seconds)
    (172/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.826281391 seconds)
    (173/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.958656222 seconds)
    (174/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.781149157 seconds)
    (175/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.77986166 seconds)
    (176/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.808787075 seconds)
    (177/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.70942431 seconds)
    (178/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.972656231 seconds)
    (179/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.028981011 seconds)
    (180/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.056093685 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.797305169 seconds)
    (182/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.77617413 seconds)
    (183/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.114915276 seconds)
    (184/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.026192908 seconds)
    (185/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.652531258 seconds)
    (186/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.819902619 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.027254768 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.887483449 seconds)
    (189/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.095345611 seconds)
    (190/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.630323951 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.12320117 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.814112615 seconds)
    (193/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.134672067 seconds)
    (194/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.223074617 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.820271057 seconds)
    (196/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.792199188 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.59863406 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.749582584 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.476683308 seconds)
    (200/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.899216829 seconds)
    (201/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.888821037 seconds)
    (202/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.811660537 seconds)
    (203/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.093110891 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.087777726 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.84301853 seconds)
    (206/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.788108069 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.781485992 seconds)
    (208/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.949633885 seconds)
    (209/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.934869876 seconds)
    (210/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.815149194 seconds)
    (211/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.765898342 seconds)
    (212/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.96893335 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.831306943 seconds)
    (214/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.978074875 seconds)
    (215/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.780676345 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.097654773 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.594833856 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.971684815 seconds)
    (219/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.267819959 seconds)
    (220/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.775375088 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.820284897 seconds)
    (222/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.076685484 seconds)
    (223/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.276528516 seconds)
    (224/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.002181994 seconds)
    (225/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.009447955 seconds)
    (226/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.793185763 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.7874614 seconds)
    (228/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.76978352 seconds)
    (229/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.960170801 seconds)
    (230/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.926892737 seconds)
    (231/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.87277324 seconds)
    (232/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.225182621 seconds)
    (233/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.860687229 seconds)
    (234/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.963711835 seconds)
    (235/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.875659892 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.819770594 seconds)
    (237/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.804056092 seconds)
    (238/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.281618956 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.723126971 seconds)
    (240/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.851014132 seconds)
    (241/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.343915101 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.15989949 seconds)
    (243/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.783820968 seconds)
    (244/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.861691673 seconds)
    (245/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.918682275 seconds)
    (246/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.707358442 seconds)
    (247/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.795879793 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.079219215 seconds)
    (249/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.926956813 seconds)
    (250/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.855511375 seconds)
    (251/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.780135634 seconds)
    (252/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.3432744 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.864068247 seconds)
    (254/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.805025778 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.873503205 seconds)
    (256/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.786368693 seconds)
    (257/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.99345448 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.763194195 seconds)
    (259/309) benchmarking ("map", identity, Bool, true)...
    done (took 3.191382549 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.087746512 seconds)
    (261/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.076967912 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.820704323 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.107052552 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.030691816 seconds)
    (265/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.87608658 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.113091357 seconds)
    (267/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.765501821 seconds)
    (268/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.943753681 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.733842871 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.78540496 seconds)
    (271/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.959447241 seconds)
    (272/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.786567858 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.08612648 seconds)
    (274/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.791143348 seconds)
    (275/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.941909142 seconds)
    (276/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.922189116 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.871487754 seconds)
    (278/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.902244488 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.769194201 seconds)
    (280/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.167484688 seconds)
    (281/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.892675502 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.894742502 seconds)
    (283/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.116400178 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.339924063 seconds)
    (285/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.798919132 seconds)
    (286/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.301992659 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.936296928 seconds)
    (288/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.073066114 seconds)
    (289/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.873796282 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.477755516 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.926878766 seconds)
    (292/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.068901305 seconds)
    (293/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.771117844 seconds)
    (294/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.637180542 seconds)
    (295/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.501714215 seconds)
    (296/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.026905674 seconds)
    (297/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.863151933 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.82749476 seconds)
    (299/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.920241953 seconds)
    (300/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.75679017 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.774213886 seconds)
    (302/309) benchmarking ("sort", Float64, false)...
    done (took 5.626418764 seconds)
    (303/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.132487216 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.807024171 seconds)
    (305/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.204712224 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.794081214 seconds)
    (307/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.891573336 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.783529181 seconds)
    (309/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.929748411 seconds)
  done (took 987.565616653 seconds)
done (took 989.579809008 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.819296873 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.813012241 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.794845661 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.817706065 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.909857979 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.822609666 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.806079678 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.797590498 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.84373749 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.846690997 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.797371394 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.820159907 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.799302492 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.79815615 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.795783187 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.811517119 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.118871543 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.832362343 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.815915454 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.806280888 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.815525348 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.796903504 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.84636879 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.821276959 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.801131667 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.798925413 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.803665743 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.819925656 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.910774233 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.802259759 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.798822083 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.809925291 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.120505688 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.829522995 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.792413923 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.818505052 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.810575387 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.805597798 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.801035912 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.830993215 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.211724904 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.842656881 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.800469873 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.797969364 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.797987569 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.80071014 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.800517442 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.802739875 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.810355903 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.811264089 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.203444794 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.856516055 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.801683963 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.794344388 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.805364958 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.796152388 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.79741289 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.811427553 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.815558206 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.810394195 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.104474682 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.830129174 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.795446627 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.811121986 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.799741676 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.23693314 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.830209653 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.796526497 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.204476898 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.837093336 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.236382545 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.843254857 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.790581932 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.807835394 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.82260104 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.108719415 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.814353115 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.78639706 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.795697255 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.788356297 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.7940771 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.799817659 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.789538319 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.786056503 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.801710199 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.808388313 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.792159664 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.784770914 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.791908409 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.803766909 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.791142273 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.793371919 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.783708356 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.775458962 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.788936497 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.783945731 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.785457439 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.78503892 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.785015079 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.791190261 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.191404894 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.842800054 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.777744909 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.778711236 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.780346559 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.796382748 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.19355812 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.827095121 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.801933418 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.827420513 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.781651305 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.091488553 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.818560976 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.795593817 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.786204282 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.781218867 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.774234173 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.087821838 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.218935457 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.835591891 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.777002881 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.775971941 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.794341018 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.775753058 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.770956546 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.094656794 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.808077612 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.78981201 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.896597262 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.782172677 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.804131087 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.770870599 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.774339539 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.798913272 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.78589549 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.801733312 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.772628673 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.786896657 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.78707366 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.766622616 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.779570678 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.777841634 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.768711231 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.773083514 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.763869832 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.791554226 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.780285375 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.779033749 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.785817912 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.888210305 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.763303271 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.075861628 seconds)
done (took 281.484247286 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.832780096 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.759384102 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.859019392 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.75831711 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.84127045 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.845931333 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.755865074 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.756321314 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.756454885 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.134008371 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.757337444 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.757253682 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.761264243 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.757374801 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.842144232 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.759619813 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.757048753 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.097324767 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.763577999 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.832337087 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.756935464 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.757563672 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.760263419 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.134166788 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.758622062 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.757950336 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.832475821 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.760469252 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.099684465 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.75952531 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.753007014 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.09931038 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.851314853 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.788333778 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.761115952 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.767840421 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.843106786 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.774977838 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.842429003 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.842647361 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.860077231 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.794891475 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.759714881 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.755423821 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.764889313 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.764272078 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.759332935 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.789516043 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.758815459 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.759014016 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.100412885 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.772468647 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.759827014 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.759508781 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.759679126 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.794784591 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.759877692 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.764739335 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.855348874 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.765685168 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.825713701 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.13583054 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.190634347 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.761992188 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.760120191 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.759199383 seconds)
  done (took 177.065053992 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.827873022 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.834973281 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.828402048 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.767972117 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.811644112 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.829798613 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.768268733 seconds)
  done (took 14.357544189 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.768091259 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.762490949 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.814845581 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.815376052 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.764206035 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.911084037 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.762869158 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.774292508 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.759854333 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.81520286 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.766236654 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.762698911 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.770396329 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.755929439 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.812817513 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.77531957 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.881608087 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.765276476 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.765562869 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.914633493 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.761264607 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.769751549 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.817945685 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.775710994 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.767711827 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.769758207 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.356983783 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.767216249 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.761040089 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.76450452 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.761063944 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.80612506 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.764334572 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.758675472 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.761349937 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.880072651 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.766102801 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.761790317 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.763922972 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.766047722 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.766155772 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.76336303 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.765112726 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.762454693 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.765276943 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.788605625 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.764799376 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.764617406 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.76496982 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.765368422 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.815466565 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.765311717 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.763051989 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.763002111 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.82075335 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.771598527 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.769025252 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.761665828 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.765634501 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.761976298 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.917021259 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.825556528 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.765222081 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.816197504 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.765668061 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.766304826 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.764627168 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.766147168 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.863038271 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.765766064 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.816574099 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.763753618 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.926043383 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.790559007 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.768299829 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.769602067 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.769725186 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.768284623 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.7630357 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.773311501 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.764641718 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.76756567 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.772823963 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.764873922 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.764934026 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.879778821 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.875002511 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.764407009 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.781254681 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.774336828 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.763694873 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.819863607 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.765337501 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.764461235 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.823998963 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.885552244 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.823200067 seconds)
  done (took 195.620792539 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.772554271 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.77606367 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.768077233 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.784159462 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.767061421 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.76754384 seconds)
  done (took 12.3280539 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.770264886 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.767794532 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.767645573 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.767623246 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.769748869 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.771231119 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.770290205 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.76910281 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.774209018 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.768094505 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.7698668 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.77908898 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.770891546 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.770053367 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.772095316 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.76845884 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.771432773 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.766018706 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.768896943 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.771080484 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.927270912 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.770156923 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.772283717 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.769709594 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.77569596 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.768415013 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.777844231 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.769203354 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.769072421 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.776412422 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.775892488 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.772115961 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.771231861 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.77542074 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.776767847 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.771178863 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.773534804 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.779554805 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.766829017 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.772655832 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.77958026 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.772728303 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.767886618 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.77694456 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.770002771 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.772828729 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.783567451 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.772703147 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.769648529 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.775523789 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.775272308 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.765591864 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.769632158 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.773125037 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.765580521 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.77195891 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.776756839 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.76609523 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.766901777 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.763100352 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.762245698 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.764264092 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.763207733 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.770941769 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.755814477 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.768999319 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.761799707 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.766527934 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.761684267 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.758777737 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.768443768 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.754325579 seconds)
  done (took 130.302967049 seconds)
done (took 531.376677821 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.911617935 seconds)
  done (took 8.595014902 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.883365477 seconds)
  done (took 8.623162151 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.324081864 seconds)
  done (took 10.02696584 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.781591055 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.792635804 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.775875043 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.769658088 seconds)
  done (took 28.842634293 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.881763422 seconds)
  done (took 8.571809868 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.78299989 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.757279348 seconds)
  done (took 15.262551755 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.83675481 seconds)
  done (took 8.527936966 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.133289305 seconds)
  done (took 8.845839009 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.774656083 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.78648228 seconds)
  done (took 15.266976607 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.74106187 seconds)
  done (took 8.430970312 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.237558218 seconds)
  done (took 11.026641182 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.778393129 seconds)
  done (took 8.574280494 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.764787996 seconds)
  done (took 8.454535721 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.853501735 seconds)
  done (took 8.542218591 seconds)
done (took 159.274817281 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.76043652 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.760767134 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.761796882 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.760488724 seconds)
  done (took 28.732368367 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.797116056 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.796574871 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.799441598 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.807351927 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.800894992 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.803439061 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.794703967 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.802989263 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.808286486 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.801102889 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.799576807 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.799667202 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.79922165 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.790295985 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.800025348 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.798323036 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.808473704 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.799530618 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.790615474 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.800273381 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.761448865 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.806751366 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.798611652 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.762831283 seconds)
  done (took 44.816195271 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.958242921 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.831408903 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.913443027 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.812415689 seconds)
  done (took 9.204439096 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.81153106 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.810539355 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.822203538 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.861493897 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.884457729 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.81960063 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.777500956 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.77782077 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.764551795 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.80933791 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.88533787 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.805423181 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.895471099 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.756667314 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.943220013 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.755929186 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.756521057 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.808492554 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.860024478 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.881411238 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.756905424 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.808298904 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.812755566 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.804573126 seconds)
  done (took 45.355149912 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.755419707 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.763750429 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.762869641 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.756534757 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.755983404 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.756541456 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.762505159 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.757447598 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.778541032 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.758717748 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.755441103 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.75549048 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.756377818 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.756742071 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.755989744 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.769595257 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.771067526 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.757508661 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.760026224 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.763829954 seconds)
  done (took 36.892488307 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.751695754 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.605662997 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.103345666 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.005933698 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.75206131 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.753008925 seconds)
  done (took 30.655350354 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.76738331 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.763219657 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.752966978 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.811395518 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.894759868 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.75914444 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.749369726 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.762898314 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.800329426 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.817707718 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.771765955 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.779323483 seconds)
  done (took 23.108005255 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.74338102 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.748999258 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.744966979 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.765465739 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.757088058 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.754867367 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.753212147 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.738803113 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.760883658 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.76738618 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.756019209 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.758404175 seconds)
  done (took 42.725134044 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830254532 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.62833836 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.77870473 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.466549794 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.277495571 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.951857176 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.260899521 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.083701967 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.744438623 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.014630043 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.747411791 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991356136 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.995793814 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.740958501 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.809214447 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.179689485 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.041519183 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978089347 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.772364569 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.39013646 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928171783 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.408962299 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.487248635 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.934342977 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.016701089 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.937365502 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.067270759 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.763382753 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940893457 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8450675 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817161427 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.808691895 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.080353911 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19096266 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925373217 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817548607 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.461887626 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.527012038 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.796912341 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.586174963 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.670686636 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.946022358 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819449865 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.808483103 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.743456995 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.281824778 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259530867 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.813839699 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.511693786 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.809044855 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.82097965 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899585158 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.81280201 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.624675816 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.763671066 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.090550198 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.80769508 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817054378 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.379065836 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870040338 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38396237 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.859212385 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.906834906 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.467362974 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287123506 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.963238263 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.817145829 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.816694539 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.746829017 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.550097401 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937480091 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.959339523 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.833286605 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.464174605 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117236363 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.884869403 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.903106554 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107108487 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.559511492 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.866505736 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043391874 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.773418287 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.749924702 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.666186903 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.749220632 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090266792 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855617657 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.432002413 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860359523 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.154852402 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.827178624 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837882526 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823710143 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.040812811 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.749032683 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.817056776 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.601774046 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.107209745 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838758541 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.151758914 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.752068584 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.820681649 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073467422 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.029065391 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.007208432 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.372639403 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977900674 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.817330011 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.902278423 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.693877302 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.939283527 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.095072801 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878581977 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.878983566 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95713574 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.783089623 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138253113 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855339323 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.996606723 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.845955157 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.096619077 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.143760538 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.080749258 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908178815 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.830684562 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.825971357 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.505795545 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.45969969 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.053443996 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.830303417 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.2852684 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.951313197 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.832400948 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.765494183 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.457766415 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.838688967 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.941231823 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.054483735 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.720835314 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21652724 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.765772354 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.976492004 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.944892312 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.053603375 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.47851051 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.911901927 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.090574386 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280662592 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.13576402 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953874049 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850122627 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923238634 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852915005 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.219337445 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.199256391 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.834372146 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.834236267 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.522357791 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.907048352 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844865903 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.840720695 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.634728856 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11720548 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.866713498 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.842496323 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.725325413 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.849160152 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903466962 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.841630408 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.846404979 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.36576064 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.59053877 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.848425992 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.520730476 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07396582 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846176149 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.586764894 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035808605 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.922807662 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.111261331 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.900931903 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.773137527 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.542107297 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.541570158 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83953723 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.774356261 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.840168102 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850187297 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851231249 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.045901778 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.124524017 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88884473 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.575211778 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.960112287 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854232003 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.847985668 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844408154 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.339311678 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.920273979 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410340002 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.967826283 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982172395 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.860053599 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.780769524 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.850022905 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.851757137 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.847509285 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.799597999 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90038817 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.504350701 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309267434 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113046804 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.504492722 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.872678282 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.613824439 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.986082732 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.896439385 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.642505049 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899559501 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.96178384 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946145342 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.882576817 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.607793131 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.64312544 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.436964843 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188443897 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183562813 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318927145 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.326031838 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.204421988 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.210071668 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109397567 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.40068234 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.934576364 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.22810284 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816802449 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96622838 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.520324506 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235502959 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887815359 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100969667 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.265560383 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.726390853 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.04024331 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.083386512 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906903935 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.747851551 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.910466627 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.165223155 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027699927 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.635182746 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.10278166 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210054479 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.666779051 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.981173332 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.874659946 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.572192958 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958589545 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.583152031 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.234977631 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.353288041 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.000481136 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372148511 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.880325718 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.319074332 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233308807 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.15189764 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.073637008 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811079469 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.884361643 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.886220172 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.872985618 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.85459043 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.79289641 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.153180886 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885732028 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109808383 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.097924491 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.252134758 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.780966104 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.879566972 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874977568 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184985404 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.606772415 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118827106 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.290377637 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.463526447 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88454136 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.809549103 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810323602 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.578654197 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.877822932 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.850086909 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.103976324 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.988017812 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.83032075 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330770377 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199669634 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.131196312 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.892348582 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.150251382 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152190663 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.617860455 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908918225 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.975550943 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.663014186 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.591790493 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.097870226 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.113848786 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.678364083 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.108693518 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.926603075 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.844510177 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.876376159 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.093857707 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.09778914 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.887252263 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134951742 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.607505911 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.88539606 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258054296 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934697976 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.890524158 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.096552176 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.970012432 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889395262 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958804838 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886777109 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.887581915 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.887380603 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923256716 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.905074234 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.014140522 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.893720748 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968537542 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.93955663 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.469266223 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.891691719 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153886905 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243643557 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.20441105 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940739667 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.877386903 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879959489 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812699586 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016996762 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.324279846 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151618919 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.007112156 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.020784799 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904119682 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.673095582 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.238883211 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198653827 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153807951 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.774258377 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878612332 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.965440269 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.104516748 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890413751 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.091004984 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.111672972 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205570813 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351924748 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.090359443 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.325818153 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15321154 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.247467263 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.879805995 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.470487824 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.886761218 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.643511362 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.92516663 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.896960248 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173347045 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892062929 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260669299 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.902916496 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.076318632 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.398314709 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.54123476 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.249987568 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.884335467 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.943815286 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157573028 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.269342758 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196509911 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948598594 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892473726 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.580138373 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018549204 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.824458182 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.14858255 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.881611417 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091770634 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.594517011 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.890778534 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164379151 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194237988 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.878972281 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.850437486 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943097324 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.891487434 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.106157069 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155311192 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140982883 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892845358 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.884038471 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.700717051 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164488391 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942704463 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816360464 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.886198261 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981710979 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.13078942 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.902470488 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.400451414 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.586568919 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184321705 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.803835665 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903537129 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.353712629 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.333896362 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221734118 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.44022583 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.125671169 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.444057315 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.78234283 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.26494603 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.887468823 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.352664996 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.267484491 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.888189079 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.453472186 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001982227 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.154889813 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210852802 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.890867829 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.68585858 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.930145059 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107548672 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.485346382 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829915008 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.889560196 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.945521407 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.883829412 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.013612648 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895488265 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.880774625 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835058944 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.728556425 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37655926 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.889315274 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.873069635 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.709642185 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.502102996 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99883946 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040172955 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890192711 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.587439656 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.176583232 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.140492232 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.452816422 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.96017942 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.888948522 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885799136 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.813615094 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.085226053 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.085090816 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195445237 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.309422008 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.002673428 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.888873459 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.100933311 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096640669 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.897247169 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.049279422 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340161449 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.00426177 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.804625841 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.600140855 seconds)
  done (took 1679.544222919 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.889709796 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.90784784 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.889515082 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.900667952 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.900227435 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.899292073 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.905801181 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.979492623 seconds)
  done (took 57.088557047 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.884994648 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.102605577 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.895238542 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.886002113 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.912319559 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.882554502 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.089639875 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.89832741 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.904386175 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.89642231 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.887553599 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.891004695 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.243061668 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.917435015 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.893991992 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.896763224 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.91023963 seconds)
  done (took 74.812689243 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.896025643 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.073528858 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.910270603 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.916257087 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.760777197 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.899289276 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.824454277 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.916884178 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.893492826 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.06222249 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.230297377 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.901621145 seconds)
  done (took 90.105366642 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.907900762 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.898003945 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.898614935 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.899498726 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.900106496 seconds)
  done (took 11.330811968 seconds)
done (took 2176.069578224 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.198371684 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.118162569 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.131022274 seconds)
  done (took 6.067998093 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.04461767 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.088570625 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.211425764 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.215010639 seconds)
  done (took 10.382895437 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.183672795 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.277933966 seconds)
  done (took 6.281240448 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.229823148 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.927055357 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.284529039 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.897137411 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.893650744 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.892084354 seconds)
  done (took 22.507686513 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.897673662 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.898443057 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.89626171 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.898253447 seconds)
  done (took 9.410059664 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.879151484 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.613076682 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.878656096 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.893853234 seconds)
  done (took 21.083945171 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.648095005 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.294364779 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.639013923 seconds)
  done (took 9.400152806 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.417869775 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.499526395 seconds)
  done (took 9.737256696 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.149208227 seconds)
  done (took 3.966886436 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.927209382 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.169300472 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.436505487 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.460710494 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.54873163 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.140006377 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.240621086 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.13082703 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.347658586 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.391459587 seconds)
  done (took 25.613841642 seconds)
done (took 139.908136095 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.515740425 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.928025867 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.098477722 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.263120983 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.133360556 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.096845503 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.11303726 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.27499254 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.796576748 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.773821232 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.260799048 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.142168927 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.062487183 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.924665154 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.063673956 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.919263289 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.132265085 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.343842843 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.9783585 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.169036395 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.118776658 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.90533577 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.099321912 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.917724855 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.182394856 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.051274489 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.448438234 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.919104531 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.119965806 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.461739745 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.05279373 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.309918519 seconds)
  done (took 169.398555729 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.89770851 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.89615215 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.896005237 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.897287491 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.213310479 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.896734192 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.898217874 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.895082802 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.933517884 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.910318131 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.898186814 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.196545331 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.896017786 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.895556596 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.898022459 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.897238698 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.07790672 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.896626522 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.898060312 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.894107815 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.895490993 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.041025839 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.897503834 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.066407459 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.059728186 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.903907374 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.895695714 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.905727131 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.910267909 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.906829058 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.91172303 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.896647191 seconds)
  done (took 207.90035493 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.897782995 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.897667407 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.897987267 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.894387468 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.895938716 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.89715565 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.896992795 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.895098838 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.396677932 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.423751962 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.91204649 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.901037121 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.899230442 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.897359478 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.903512892 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.897302455 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.908458539 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.909736358 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.911432208 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.911479668 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.914762252 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.506755497 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.916701764 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.519037476 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.910366654 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.913187937 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.89773287 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.915974473 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.918536608 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.916785528 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.91560223 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.898877834 seconds)
  done (took 221.031846645 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.092400622 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.905893411 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.907702833 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.81589071 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.906337856 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.908125061 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.900696819 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.086974467 seconds)
  done (took 19.376190463 seconds)
done (took 619.534420957 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.387530767 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.236449921 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.088650036 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.929548536 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.19012967 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.967039282 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.92802281 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.993209459 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.66177434 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.001614167 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.615570924 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.951019352 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.716180201 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.954591826 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.051913207 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.982371051 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.511873669 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.612269712 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.104606075 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.012387398 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.103711021 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.874836728 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.010333628 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.682566628 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.738540329 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.916207874 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.107881393 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.51728719 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.94205761 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.08995669 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.705394367 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.316724175 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.940644542 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.922608687 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.981297573 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.956032665 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.271970655 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.937656952 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.052033926 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.661090735 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.015192729 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.55456358 seconds)
  done (took 105.023382559 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.896730263 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.893149939 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.893039483 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.893941346 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.896401331 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.895050255 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.894599551 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.892689942 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.893997053 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.89502442 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.897187926 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.894849684 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.89560065 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.896475045 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.89426148 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.895578772 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.896412116 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.895840725 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.893885181 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.895918466 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.897218927 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.894685005 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.912212227 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.893808208 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.89522942 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.895323642 seconds)
  done (took 51.128187481 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.908364999 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.064638983 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.151904299 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.931609887 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.911035201 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.915528102 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.931179484 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.910915234 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.913699452 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.909890248 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.021084143 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.913901298 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.929246901 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.150111344 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.927609765 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.90943699 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.911827944 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.911064276 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.067563237 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.928763224 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.930897904 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.91368861 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.931780183 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.923421664 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.911568733 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.909506343 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.915993277 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.396581206 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.916277989 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.022668708 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.966435673 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.937038541 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.311006557 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.16051164 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.969156411 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.9195821 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.912924559 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.024530463 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.916916431 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.907749536 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.927684945 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.91862372 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.153699296 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.407988721 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.928634745 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.910280841 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.408850843 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.036475204 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.94948869 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.925665047 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.15387189 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.929258264 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.911646534 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.911821096 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.949877363 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.91954996 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.912586475 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.258205623 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.923613029 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.929902778 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.914986208 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.913094739 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.074185096 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.923768618 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.062596436 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.923978206 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.917783741 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.913888939 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.155477885 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.930536341 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.409709713 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.930572453 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.913585609 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.023957282 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.068614401 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.432710457 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.926632231 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.077497887 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.331770514 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.934199258 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.917802355 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.383984935 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.940866281 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.916607007 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.916832703 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.913917025 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.915338846 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.956516835 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.930012589 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.342917696 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.417640934 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.277016466 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.939592226 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.927781533 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.9145983 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.258061488 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.919978597 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.914339048 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.148643713 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.426207978 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.930097008 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.919923937 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.401070001 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.931612507 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.932736456 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.919581779 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.159722195 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.93125002 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.957824761 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.914309019 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.9206801 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.917869318 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.932615858 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.92158912 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.914723773 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.393052995 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.049239987 seconds)
  done (took 237.322753838 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.912610456 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.9090209 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.90681756 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.911314095 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.908443892 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.914468001 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.909270156 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.909720106 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.915293367 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.907760283 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.909966382 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.910542726 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.910671327 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.996928958 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.918154226 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.916252073 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.516439582 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.909153247 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.908444189 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.917322779 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.653708116 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.920647206 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.909917882 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.910700208 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.912186343 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.913983925 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.029310523 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.91030747 seconds)
  done (took 168.915493332 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.916603803 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.033668262 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.938304146 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.946874802 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.921354812 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.911807727 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.94112293 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.929679106 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.923240844 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.915262205 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.913744095 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.978404779 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.928663038 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.013526848 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.947014402 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.947234397 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.022053707 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.920295557 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.914995864 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.912909512 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.943571475 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.908104055 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.976507387 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.04604558 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.936513767 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.032439277 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.921505995 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.917265336 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.916391149 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.032231456 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.934088942 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.976833319 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.945858124 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.933797627 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.042549951 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.036079984 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.019543129 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.94323941 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.918255397 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.914629896 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.915263264 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.904189497 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.034137609 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.939708264 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.918584816 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.024039295 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.937311756 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.920744912 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.925369803 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.915744846 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.932215891 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.936965896 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.985935805 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.054409606 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.952386463 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.941422924 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.942057375 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.206974217 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.92611002 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.016615253 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.905575352 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.036912765 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.941229961 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.903093774 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.919045282 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.924628976 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.945449721 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.946754644 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.02436173 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.922033486 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.019426811 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.949745214 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.923971904 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.916124258 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.919890082 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.038289604 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.039475425 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.950491827 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.953616012 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.948980994 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.913366969 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.918256566 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.907957695 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.936794718 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.919697909 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.036166302 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.042933811 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.923245944 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.921221524 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.921297907 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.921972267 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.944646283 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.047509007 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.957732265 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.014323687 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.985674904 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.992080711 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.932126124 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.934289246 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.922517723 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.983268835 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.932745548 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.931902254 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.259365244 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.988943396 seconds)
  done (took 207.659791592 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.398442145 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.97279639 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.982744256 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.252392675 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.357183674 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.809045571 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.965908409 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.970644665 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.996253753 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.159709202 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.041620178 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.988564182 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.957152578 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.943980046 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.969177041 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.992215871 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.989643021 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.312673263 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.094345583 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.08073636 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.951789875 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.253326006 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.298318376 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.366071225 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.003731413 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.314832212 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.640370003 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.107552272 seconds)
  done (took 63.016615753 seconds)
done (took 834.888941077 seconds)
SAVING RESULT...
DONE!
