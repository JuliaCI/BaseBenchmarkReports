cset: moving following pidspec: 20705
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.352106596 seconds)
loading group "string"... done (took 0.561838772 seconds)
loading group "linalg"... done (took 7.723061088 seconds)
loading group "parallel"... done (took 0.17350334 seconds)
loading group "find"... done (took 1.290928406 seconds)
loading group "tuple"... done (took 1.971977354 seconds)
loading group "dates"... done (took 1.421107308 seconds)
loading group "micro"... done (took 0.249137253 seconds)
loading group "io"... done (took 0.981457454 seconds)
loading group "scalar"... done (took 41.091876494 seconds)
loading group "sparse"... done (took 13.418045155 seconds)
loading group "broadcast"... done (took 1.040423931 seconds)
loading group "union"... done (took 14.345711446 seconds)
loading group "simd"... done (took 4.774693353 seconds)
loading group "random"... done (took 9.701399824 seconds)
loading group "problem"... done (took 2.014892322 seconds)
loading group "array"... done (took 22.699126586 seconds)
loading group "misc"... done (took 2.048873198 seconds)
loading group "sort"... done (took 3.459287434 seconds)
loading group "collection"... done (took 19.76105719 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.575243849 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144046164 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150445021 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.131116867 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.206363695 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156547904 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159025415 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099133015 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.002625304 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.182478922 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15474409 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.528892462 seconds)
done (took 5.233859216 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.217422465 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095750949 seconds)
    (2/2) benchmarking "String"...
    done (took 0.10486878 seconds)
  done (took 0.882485478 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078060404 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146665592 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095049357 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079206723 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095038649 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078753762 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096009384 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078925843 seconds)
  done (took 1.36065042 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087319867 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.098579227 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082043924 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097097048 seconds)
  done (took 1.05623756 seconds)
done (took 4.292745038 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.739132494 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.274869315 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.206919849 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.466248065 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193991493 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.217376842 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.68374211 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.374955769 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254367706 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.10042104 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.144802029 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.388426691 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138238591 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.686817298 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.090464919 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123137585 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.17746863 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.453169907 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083187878 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110835783 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117498751 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142489394 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128323812 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091346778 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183266911 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081451642 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194771717 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107909475 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081441491 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.278760096 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200732841 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687768802 seconds)
  done (took 10.93382262 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113298255 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134918667 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098557754 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13891823 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13560836 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099833028 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085086636 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097302772 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122727437 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176563785 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13053533 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121163389 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095939653 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082411999 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115862862 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247144395 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120393698 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100887249 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101746642 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088315806 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138341262 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113266049 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110443095 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09362229 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166932511 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.2219467 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11089021 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12578613 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096762826 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113490196 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143367349 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143540575 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095262972 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080714944 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173507863 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124880865 seconds)
  done (took 5.162490045 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.091358691 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191484084 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122214133 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.171824068 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081161225 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144826648 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.096094159 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113790033 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258177769 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.108770297 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.129914766 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.486259801 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.106186678 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142902243 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114821375 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097268212 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083317017 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097617906 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.592772242 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.15805239 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.1387718 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.117513236 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110085774 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.089520875 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368760528 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097612408 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081564824 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100138883 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.068346799 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165973544 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101517882 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.150365304 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101363066 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10255454 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134034888 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191789862 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124696892 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134812546 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079329254 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096789682 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175781417 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086197232 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098119962 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.12055119 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133778683 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118049329 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098903641 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096391251 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204233297 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095876612 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098419526 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.954465051 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181318817 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.102562304 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095856836 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289721009 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.115907017 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097105498 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078491448 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.295675076 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.191798308 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097862202 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079392617 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097131693 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080546906 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.427673744 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081744027 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.81207112 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082611233 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.105848631 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082431023 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096945413 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103600941 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087460702 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11613425 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080291989 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099954354 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078908062 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097000258 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080470709 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107863305 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093962565 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.215559906 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080816884 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.09823171 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.077261545 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117314334 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126644338 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08609021 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097543095 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130899177 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098369636 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084917178 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.134126795 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080781302 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095708433 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106425638 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084281285 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143853321 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099725938 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.155983054 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.093642029 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123905348 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100240347 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113925447 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111715104 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099088997 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.167615403 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078784083 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095748107 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080213394 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096061758 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081129643 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099964886 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109048166 seconds)
  done (took 22.985598796 seconds)
done (took 40.86173889 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.324958427 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104541785 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10487113 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104340726 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.10148464 seconds)
  done (took 1.508684199 seconds)
done (took 2.247309665 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.287769426 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173654093 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09555139 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167061935 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093584096 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.165224749 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159509888 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094217464 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.219577293 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094970294 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162269584 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076720274 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095261517 seconds)
  done (took 2.65387535 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095624861 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115868341 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082864097 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111154076 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076754811 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111221484 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.0929643 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116170946 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110013062 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086370403 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093540251 seconds)
  done (took 1.82982407 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095686434 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114005177 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083148885 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111303998 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077282733 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111764748 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092922538 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116987393 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112838527 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086317976 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094324752 seconds)
  done (took 1.832857773 seconds)
done (took 7.045787751 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.093089268 seconds)
  done (took 0.827034544 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.945933784 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.754189365 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113423055 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150422948 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.317176425 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.176866764 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.47685772 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.129280385 seconds)
  done (took 11.007558292 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.146747302 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.087421561 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.1077293 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086596435 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.105490822 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087879383 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.102390587 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104209412 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.087001872 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.101631031 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087403175 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.103445273 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101776144 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.089902133 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.106175607 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088401551 seconds)
  done (took 2.397603803 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119337444 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118042849 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107237901 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110809732 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088055474 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105839584 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107334225 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089546233 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103704537 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104135461 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091377919 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107235133 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104410513 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081463737 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108507525 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110181973 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088392615 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.109300286 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109649772 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092358221 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.110142874 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098934473 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089765724 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109800165 seconds)
  done (took 3.315075451 seconds)
done (took 18.285310222 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160456925 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11009881 seconds)
  done (took 1.012409079 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096612151 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114013514 seconds)
  done (took 0.956500038 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099502174 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.0971213 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.123479884 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110680493 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08091347 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096811862 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.12057524 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080786273 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097693941 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080948956 seconds)
  done (took 1.738439026 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083524143 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.11022107 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102049438 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095631927 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105788468 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095409716 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089916015 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099578239 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110675602 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078058557 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103618973 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116615902 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087661938 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119561664 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106916662 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084777033 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105368574 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099756877 seconds)
  done (took 2.545517146 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081184341 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098008509 seconds)
  done (took 0.928491882 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082922354 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094146293 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083578003 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101578478 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096939992 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.080597936 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.097324252 seconds)
  done (took 1.38533095 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.488162314 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137003455 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.262839423 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.103050092 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105079848 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.305941735 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099668167 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086360406 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.108696666 seconds)
  done (took 2.502886798 seconds)
done (took 11.815462932 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094688019 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116343088 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.116161433 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.470956268 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108294406 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.09912825 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.150005431 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.256764729 seconds)
done (took 2.166619993 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.144985748 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.605201917 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.433619877 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.236271874 seconds)
  done (took 2.028412666 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.405660879 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.099079727 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085943494 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.084093209 seconds)
  done (took 1.429926822 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080354717 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100486193 seconds)
  done (took 0.935414008 seconds)
done (took 5.297091664 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081626415 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097495768 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.114759305 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.099022663 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082151386 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.100450256 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.07923301 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.102970497 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082626763 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.100917113 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.099235842 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083236902 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.096912468 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081114854 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097680026 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083174368 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096918417 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08067269 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.096693061 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081137091 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099285093 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.081219609 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.097336806 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082568531 seconds)
  done (took 2.990763311 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101219327 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099970346 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105420709 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088842314 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105974036 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088344935 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.106076685 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.101407296 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088953169 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.105051074 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104595616 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.087939651 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102967899 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087342196 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103892308 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104583819 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089808484 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100862552 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084753319 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.106018889 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.106224571 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083933733 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.105601621 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106524847 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.088334187 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104696167 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085046452 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101687336 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105889316 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08853353 seconds)
  done (took 3.702656609 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08650238 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094782376 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079454278 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103291702 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079488411 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099832119 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080760641 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098703066 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081634933 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.098485718 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081965005 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.099222759 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.08000794 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.100685979 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.08110115 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.103222195 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115226782 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.081572308 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097666913 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.081347469 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101752888 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080149654 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.098917495 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080317428 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097817317 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080595585 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098405174 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080943581 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.099623511 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08073151 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.10197968 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083972047 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.099227793 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087194113 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.102691396 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079854178 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102481576 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.08025321 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.099760282 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096903044 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080908834 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.098290728 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081471749 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105351128 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.082282161 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100680391 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.082174736 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099574144 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080999491 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.10223287 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079962416 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.098589383 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082926502 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099649013 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084112174 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.098260147 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098479235 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.080515537 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099347708 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.081133716 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097390753 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081119957 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100508784 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.082446644 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.114424152 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.08768657 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098986959 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082440889 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100337485 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084366404 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.10085523 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.112102256 seconds)
  done (took 7.383313037 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084608898 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106807526 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081548614 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099294246 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077117164 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097194053 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099915888 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079919648 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097984745 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086078503 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098179566 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081808095 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101215066 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110379989 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082505244 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100690993 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088656331 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097419739 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081667599 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103942664 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081360319 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102081332 seconds)
  done (took 2.80532254 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.21136096 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105541642 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142895692 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107753991 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084515329 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107555252 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102157167 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088064949 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102906092 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085689122 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103305988 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.211873744 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084379555 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10112461 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101096487 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08606031 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103005902 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08600017 seconds)
  done (took 2.784600093 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093533313 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099276961 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102991567 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09996887 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098918039 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084883087 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104909651 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109063937 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084673857 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099874631 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091844939 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102406373 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100968928 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083414178 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101898995 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083273896 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102466562 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082376722 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109818754 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105499357 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105684062 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092755889 seconds)
  done (took 2.912180145 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098176698 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101518743 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119459708 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086010202 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096299647 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081251841 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107182534 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081858668 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108337051 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100550489 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081981846 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09823474 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088581029 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100023519 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104774066 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082818276 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101116377 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082191299 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101236202 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077428135 seconds)
  done (took 2.674848777 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103966986 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100672677 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100043657 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092935549 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101926412 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082789305 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111787884 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101310917 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083090427 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126084673 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10125467 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082541871 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110651022 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107095951 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099470118 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094197022 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110338725 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109865463 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08313619 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101085637 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125324166 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083437288 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110093566 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100975965 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083293091 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101641198 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100126247 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089411023 seconds)
  done (took 3.575101663 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082380385 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099641394 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081759723 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09632161 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080250703 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096446355 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079631847 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096177372 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082753144 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096227158 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081798273 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098940754 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081819168 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098921442 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082718607 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099047982 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082031411 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096938382 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079600588 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096584316 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081710296 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099020595 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082352935 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097552454 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07962126 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099388811 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078951353 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097489007 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080994309 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09753673 seconds)
  done (took 3.463472328 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092420896 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107114273 seconds)
  done (took 0.977102599 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080251294 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115566609 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078973105 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104553006 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086528394 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101881569 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107880918 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087172929 seconds)
  done (took 1.540786416 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09725044 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110381699 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084679961 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114958317 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110443209 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.09969037 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172273024 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102733471 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106353526 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081394692 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113238417 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082045439 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107060263 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083523028 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10758804 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089119978 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098869665 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105626587 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086327115 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101325795 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084953114 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110401266 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084954472 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097803246 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102002128 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09246083 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113239439 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.08276032 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104746858 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107953332 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08901251 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094146785 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082914247 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.10134435 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080078537 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110345065 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116658538 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085383461 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.11091635 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101372431 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095260921 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095634791 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086888181 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106681487 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109857509 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.08358689 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101342316 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077498583 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097598031 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085580767 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09563747 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082916707 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095837455 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089220283 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104699841 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111807012 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081068676 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102033176 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085388535 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104971632 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088259676 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103143385 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101933092 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083033366 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107683197 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087338139 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111667709 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094895853 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077440603 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098659641 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.09310486 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124755313 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.106829839 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083884949 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101425157 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080956906 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104244371 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084084116 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107106867 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106952364 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083798716 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10766168 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09069025 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101441153 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.102395267 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091886214 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099200766 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085704484 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098902258 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117567039 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082475574 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098334436 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080223493 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112667159 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086292979 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.10138129 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079656442 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108872802 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094704462 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08441446 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101472807 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083643004 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11251677 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105300063 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090004782 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110831421 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.106932624 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083208721 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103537197 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080894323 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102091325 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08546708 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.10880278 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076808359 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104531954 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083364177 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101906897 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109927638 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081707195 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101092354 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090725204 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106648488 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098116527 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080370475 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103114159 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084184322 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104329653 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091800305 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.10040422 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078356767 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09670413 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.10345707 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083788027 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.10471071 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088968239 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104842174 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077100178 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099681715 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106256138 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093099107 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102078353 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083174428 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108073471 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.101396599 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083886046 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.108468956 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08546608 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101263777 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088830205 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102343264 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077840983 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105465077 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.10343079 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082153964 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104500828 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086619345 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104713432 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100746806 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082459375 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106282848 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084324827 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100550465 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082348025 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099980202 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112267478 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.08628463 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095251932 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.080768564 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.108757753 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080577075 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101004944 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081493353 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104276633 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101751073 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082101252 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100782134 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085308164 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113411722 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105474201 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0842648 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107391191 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094277528 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10190387 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084510997 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102206688 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102204873 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085082095 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110564998 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088405982 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107840475 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103732857 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080834295 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107259025 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092071963 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101579317 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080669917 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100982421 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105240153 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.089956115 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.105613568 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.084702051 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100843414 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084499052 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106514979 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103511544 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083488923 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099605077 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089482461 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.101862319 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108413447 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084779186 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112263885 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08645678 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097179637 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086493866 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100413 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.10681667 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.079704469 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098093097 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081935496 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.103107416 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082367952 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.10451327 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077523313 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.1098206 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108324248 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083494343 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099926239 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084490254 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10823869 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084933255 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106764095 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085853665 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108433397 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112157902 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083402197 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104822736 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09399675 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102923822 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094861623 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089271527 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099782731 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082648587 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.101149164 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082262131 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105159635 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.1111882 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091916676 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095292315 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086340215 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100010995 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081955486 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097463682 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087273467 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105044123 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.101705101 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090706724 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10271414 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087073699 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107174249 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082411898 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103568976 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102485821 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087728717 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102647434 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086263175 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101254324 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085992054 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101913537 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080362301 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104153141 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101671754 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084759153 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106881178 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083460556 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102933479 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085911088 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103721326 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101082026 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084780395 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.100651932 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087302971 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102887494 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.083718347 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104723633 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078295011 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11061362 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083188574 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110654283 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.101331192 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080950536 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107826349 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086027844 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107910953 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102314047 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086019092 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.103366341 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083154696 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105785879 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090311385 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.10039358 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112708993 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093228627 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103470306 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.08606884 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102844296 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084278893 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102435007 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.102693102 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085915285 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101523529 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084192328 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107458437 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086319404 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103068046 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085316207 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104150019 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.101403012 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086061535 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097029619 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084127252 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101882462 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084404822 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113382093 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102559917 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087355515 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100078396 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085842749 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100731377 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080281378 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.111176774 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111462346 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084428937 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110468735 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08188332 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104619656 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112440764 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078177052 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099831728 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082264165 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099100474 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091366273 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.112607933 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092738974 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103323427 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100831396 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081093986 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103007919 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082540011 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096685357 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081987895 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10714372 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085631417 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101481321 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083580718 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106033668 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103191093 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094612084 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10218484 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084009574 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103216011 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079337124 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102273655 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100469214 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.08750113 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102702735 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081947884 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099680514 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.083833908 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103640946 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084501053 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102868392 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084565359 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109988027 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.1018 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087398595 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106117956 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077946394 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106034308 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08282762 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102661159 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100732972 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088242773 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105303846 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085825105 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112398677 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082553596 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104513637 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101947676 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081825796 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101790841 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08414136 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102669278 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082672434 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.104402955 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090692429 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101275827 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.105043225 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084299702 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102505357 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090794621 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104056002 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086392374 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111546605 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105536325 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086076892 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111076541 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.0867219 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.1072253 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103828892 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086645157 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108928038 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083021056 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.10909808 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.08335 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104041225 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10353971 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082444899 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102054551 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084353925 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101904576 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090070961 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104801315 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082461203 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102925783 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100593993 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086173751 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105900012 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092249192 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.105972922 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086824483 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099440399 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080809273 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104847528 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100387178 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08652995 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105867672 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090026676 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105651541 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083884167 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102200072 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111655464 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090479968 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106826824 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081364432 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.107530149 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084602207 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.106574508 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103538663 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084773135 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103960657 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088608773 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.10486957 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083617965 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110405668 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086780538 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105794416 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104010459 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085228496 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102871327 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079517641 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10429835 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085400606 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109041481 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105059676 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084878675 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113546264 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083330385 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.10323542 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087916478 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104014528 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106442534 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080448117 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103916407 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085480758 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104591126 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078628486 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103266069 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081555209 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106144056 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082485442 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099011595 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113358267 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092928749 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106262731 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082762519 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102732248 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078737485 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098754982 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101308439 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087436082 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103916543 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094888356 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102895499 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082439285 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.09968661 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083599368 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107371308 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105976364 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082480044 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098418648 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083267039 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106262625 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089280112 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102848271 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.08326643 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107026922 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104735829 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083173921 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106930453 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080525299 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.107895071 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116574916 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.086001466 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10333675 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091066471 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111737409 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083622273 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100976294 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103621645 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087156921 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.10258825 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085677146 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104894413 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118819499 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08872899 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101589707 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083412132 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106139547 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08393616 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.113443986 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104633357 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086230833 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107239831 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086743705 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114294862 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085968418 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11259427 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106239423 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08741741 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102847611 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084138792 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102250168 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082891518 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106258615 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104062365 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090483005 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.113532533 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082949132 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116080923 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112783331 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.08906788 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.101291684 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083443312 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.104077822 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080399095 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.108924974 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081902543 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103399481 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101051785 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084257379 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104260475 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090881607 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.105070853 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085439162 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105407632 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078441092 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106381992 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086558238 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105838075 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100217674 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.0858837 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104951599 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089536601 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109392163 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084173481 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106324412 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085289904 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105413671 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098719131 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092772005 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102644895 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087154148 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10335146 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085906697 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105927683 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087310504 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111137688 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105984732 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087325736 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116720686 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086369256 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102618318 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100560609 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091117463 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102181457 seconds)
  done (took 58.278438292 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148396732 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082353276 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099716949 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079757169 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114243629 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100232186 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080716707 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100425416 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081539266 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104005827 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079563127 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099924274 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109648091 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125342127 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094262607 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10560177 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079206872 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101997178 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099330855 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082128821 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11020092 seconds)
  done (took 2.906990489 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107085975 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118795805 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116462879 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119628282 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09063206 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115986011 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116141364 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116247898 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100716066 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112711231 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119843134 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115999052 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092527048 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112853038 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11139132 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093744788 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.12058641 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110926625 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117010916 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096632994 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114305191 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116301374 seconds)
  done (took 3.264947653 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08585568 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102853874 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086658312 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098958333 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.085217554 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099706293 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.089435588 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102698039 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087796224 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103033264 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08209443 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.104130992 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.1050416 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.07967597 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103762198 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082819902 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.15230465 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108900158 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08323945 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106513743 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078612015 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107916668 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099195877 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.081054903 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102630991 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088929155 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105449186 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.08242605 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104743449 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082178536 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104867852 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081298862 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106310856 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104409488 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08364988 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102803681 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084565537 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.104507755 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.08024585 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.10212304 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084615297 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100550611 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08496652 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106704163 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082148487 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.103062395 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085284227 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10640566 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098503993 seconds)
  done (took 5.521736246 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.106070872 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16346923 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087531681 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144473479 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122698028 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114051274 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088750559 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143195853 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104534273 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083528323 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125315984 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122160544 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105765523 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090144889 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.112472248 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104421179 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08681043 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103827946 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108752505 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085462075 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110269319 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091102712 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121807901 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120748969 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109144436 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084105962 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10551307 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109248507 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09909143 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111409578 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110446033 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091980931 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121737881 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107533401 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083598974 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108703223 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123782536 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084243204 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108335695 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102929248 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087679144 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110194281 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110732468 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103583573 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107136875 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110708098 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085298986 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103238033 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11823152 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087940481 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114797044 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.122505415 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.089054852 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105966281 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109967994 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121499965 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.087196156 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103600499 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088689378 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.119939647 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102764971 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089172872 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.1210523 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.10804706 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.093406331 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.122308315 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111445883 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108718735 seconds)
  done (took 8.229788212 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095096517 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112763054 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12133698 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120723452 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091584416 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113051566 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111871671 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.092074575 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112620958 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119375405 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111346503 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.135602555 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087715612 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116389064 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111914375 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092914339 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11281794 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112040217 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092311021 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112476291 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113218692 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122021102 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092463308 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121868241 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142501123 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106487601 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090842013 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113086449 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122345405 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111676485 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125045493 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092748464 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112754186 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122340033 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12377986 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091673519 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104618686 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11193227 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.093512589 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11327071 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106165111 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102391291 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112728184 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107197007 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092160006 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112668306 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122505441 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124897544 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11498316 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097922083 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113591037 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122009552 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110888188 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09304438 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121868519 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148101654 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121896003 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122467783 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112943048 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102019892 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122281325 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.130327148 seconds)
  done (took 7.759354156 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108721708 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116348968 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119865499 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100777653 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084006676 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.11061688 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082978296 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104070012 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114992948 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096396606 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118701569 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110082858 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092803887 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118694573 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110453855 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11423173 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089777673 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110359853 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115887637 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110065545 seconds)
  done (took 2.973765722 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095179252 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125605723 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08550684 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113732871 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109006248 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09154427 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108738604 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10949402 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087695475 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109572191 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097327736 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118556141 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106740313 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092128975 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118392628 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112311096 seconds)
  done (took 2.525625059 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101107788 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11843066 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121965958 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084911624 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106281311 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081440942 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107227318 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101483416 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082537825 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122507096 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084990426 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110341064 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105799788 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084798022 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102441325 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088449967 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10320352 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082980843 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107238116 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120790426 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096656404 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105660907 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105742612 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088122444 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106278625 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091214551 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107270487 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103141259 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085116358 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106092711 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086453312 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.11441001 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10195497 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084851612 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104316897 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082977395 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106823265 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085808287 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110231078 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105167673 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085074655 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10619475 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085600062 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107970347 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080929911 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10756574 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101206341 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09236931 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104487861 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086615345 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106801843 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086625243 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108990749 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117487614 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089227619 seconds)
  done (took 6.312706203 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100489419 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110000318 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081142812 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105038571 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088184393 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109375324 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109349143 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089230187 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107765316 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083493725 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108761266 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08963288 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108872985 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109591895 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088115874 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109471526 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081367382 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109114947 seconds)
  done (took 2.643917612 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091753901 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105714159 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092593574 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107545473 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084623398 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109584968 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080657779 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106245526 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104556033 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086460623 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106397854 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088541275 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105548935 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088641082 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107092232 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085400399 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109609412 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104103313 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087349238 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102248752 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088396497 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104935329 seconds)
  done (took 3.000297093 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119401302 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126639863 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092777869 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.234011273 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104495195 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133424434 seconds)
  done (took 1.664868145 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110834369 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122514435 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106139945 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109309602 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11679019 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087476081 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109662469 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109171284 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118127801 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102771379 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10963767 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119485287 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118253087 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097822123 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117216689 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115617501 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108717133 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089580652 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107233498 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12909678 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088395168 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119471418 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108983248 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087111555 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110086645 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118873903 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118691197 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12191776 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089258739 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120146586 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114716374 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088110867 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119518066 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124054824 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109118501 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099208577 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109268193 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12966647 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113674658 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098580932 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111169226 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114957532 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098453394 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116076765 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119766234 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108755478 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094533127 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109667123 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10830962 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137661081 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094583651 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11909201 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116756137 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118500885 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097885216 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.156445885 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102937745 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118695955 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116832739 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123629022 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118477603 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096309248 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119153837 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124626746 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116190833 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097244765 seconds)
  done (took 8.208369352 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103804938 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128216049 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109268658 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123400267 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098525372 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110419221 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108794627 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088885956 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110502616 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107754521 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153428019 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088929686 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11883866 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119518585 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087677462 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109794293 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109039128 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118723349 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089235098 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137162452 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110260912 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118123395 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118757334 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098642217 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124950984 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116545788 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108162433 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089274733 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109717035 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108459888 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095693957 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110359108 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119400952 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087354871 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118763547 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11074687 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088008466 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116662773 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10945208 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116062517 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098738982 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129592839 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11034608 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108644781 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103256043 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110415315 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109864319 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087579221 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111003285 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107832347 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103029085 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123521306 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124141191 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119133015 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1092679 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089478589 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11083288 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109134661 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089691977 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116681551 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119628268 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087786903 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136401895 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11049406 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109399201 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119165434 seconds)
  done (took 8.117876265 seconds)
done (took 156.972937416 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.21722083 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.201324414 seconds)
  done (took 1.276628187 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.088854559 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137479079 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096004827 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171632212 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085494198 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.142707877 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138733173 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09881312 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108100778 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085967638 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107853494 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088221217 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173347244 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086551874 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108347402 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108345744 seconds)
  done (took 2.690989095 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.119524405 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255705284 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.126455069 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106230211 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091289356 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111368303 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084484436 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.11355028 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090250813 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.107631122 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.089266137 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.108424273 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.083209992 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.108337596 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109962595 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089983316 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105395746 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089582513 seconds)
  done (took 2.852656015 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114873685 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149187997 seconds)
  done (took 1.133105281 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.243340846 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.164466517 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.233088117 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.480320769 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.278234943 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.368817344 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.205573993 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.214344242 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.167222912 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.210581382 seconds)
  done (took 3.427806637 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119771328 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180907853 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.319137217 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157116074 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107952963 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130377615 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.1577168 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132303736 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.123898673 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101949641 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.124196635 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119026652 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139633136 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095655698 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116730283 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118345067 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122929279 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115412134 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114947156 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.097123432 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139517325 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.084932212 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117119504 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115242804 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097639762 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121135187 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106629268 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086881593 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118329634 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093932029 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115808506 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.126868517 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.120094403 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.158053076 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124181757 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.158089238 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.119310874 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092231082 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.117145383 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.0905186 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120166168 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119930082 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124910473 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097874967 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106494116 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097696472 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10793668 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084071146 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116747886 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119676476 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.092970906 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115453172 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155685466 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11973411 seconds)
  done (took 7.448793594 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.789938681 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.160576018 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089553318 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.882923916 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136977493 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104848649 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.774609407 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112176404 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257861132 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.754275456 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13386224 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096992687 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230389079 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259850035 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.924797681 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.288205784 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.6388306 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127533664 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15366969 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154911353 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118441717 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115116573 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132590063 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429890789 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117584695 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089840033 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119681346 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120261738 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161557303 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126305048 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093167165 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.201187124 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.248417331 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.2048617 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094472493 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112488264 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088792942 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.192929818 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264482922 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195404234 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181610701 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109422571 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089646095 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123329281 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132921708 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086183426 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.1863919 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.176149214 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170921008 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116653125 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118893029 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09901287 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121908396 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165842444 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122933812 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311725815 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.322843758 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090447947 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122697856 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126276316 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.23755875 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124615122 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227359374 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140660471 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191579789 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113911519 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778531377 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.172091749 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11235687 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096147748 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121596207 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116704207 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.09933777 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16838458 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.407831643 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124914452 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114968535 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091316795 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22720509 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102564058 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11356647 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16244001 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118056573 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12050129 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103385684 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123770611 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169649021 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.252257396 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101795068 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121843908 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115208 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103712726 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117932668 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210787174 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220735264 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163708683 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.234046732 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100880672 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186652409 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169231596 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120363974 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.173934664 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118950568 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103244583 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124152967 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218062759 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145601372 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123686991 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094061492 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119787092 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148270754 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128123324 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097729549 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192970819 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.460246643 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170274206 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.11048558 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128644297 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097962843 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160580961 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119475722 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264052405 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121546535 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169770651 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119588002 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087947094 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121393337 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.16427933 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123137893 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098158781 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123503614 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120011589 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236805643 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21857366 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121631972 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223089731 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18479006 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118965279 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173232582 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122580128 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170267716 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121193564 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099291218 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11845854 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772591266 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123315093 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099382826 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117916961 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188588816 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089758609 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126307301 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126392518 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087362708 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81295308 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129158118 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121722023 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103786493 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120631183 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120699203 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096921817 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117028567 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162944244 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231936336 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120308729 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098063147 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.126391396 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161871967 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.119296734 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126115037 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102932767 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.127303431 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122963007 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115631475 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103793396 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190912009 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164933922 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220048603 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.57717655 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113751546 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.12471532 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.206907964 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113721293 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29165727 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098279586 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.225540559 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185737869 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100311126 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320048368 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.16525104 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186456015 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128087227 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173850378 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111793119 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118327705 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166794761 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111377809 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096608035 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163591634 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126144976 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123926381 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.956972536 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08995692 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225271796 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.110764137 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172046109 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117995014 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120458105 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.263639333 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113697485 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129325453 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165672874 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116027917 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103197329 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.872313112 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124945737 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100239543 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120409655 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224527339 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164292054 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121673277 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119500783 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098001253 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.184952137 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210994998 seconds)
  done (took 44.222280268 seconds)
done (took 63.915049679 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280939873 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.218260798 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.27119387 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172827659 seconds)
  done (took 1.913537294 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173111464 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151158951 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.12225573 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109029171 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151634454 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084639899 seconds)
  done (took 1.685144587 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.365968368 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279959771 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.247488892 seconds)
  done (took 1.793585865 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.321075099 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.252023769 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.475813939 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.328363909 seconds)
  done (took 2.373844194 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.212139308 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.134719881 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111511653 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103619732 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.200676468 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.248947021 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143704534 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.20354897 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099131065 seconds)
  done (took 2.398609453 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.199595152 seconds)
done (took 11.26046893 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.236289343 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.229225342 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.219560921 seconds)
    (4/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.163686999 seconds)
    (5/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.27431405 seconds)
    (6/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.194934115 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.12758743 seconds)
    (8/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.13524485 seconds)
    (9/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.096899502 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122537731 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.147801001 seconds)
    (12/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.235096081 seconds)
    (13/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.194445012 seconds)
    (14/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099660519 seconds)
    (15/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.12147108 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.095522678 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.152708082 seconds)
    (18/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.231429113 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.225208127 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.162295058 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.14830872 seconds)
    (22/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.200158432 seconds)
    (23/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.175564888 seconds)
    (24/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.123832588 seconds)
    (25/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.097585947 seconds)
    (26/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.1822615 seconds)
    (27/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.191688787 seconds)
    (28/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.139087233 seconds)
    (29/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091388749 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117317872 seconds)
    (31/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.221245768 seconds)
    (32/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112033015 seconds)
    (33/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.18690103 seconds)
    (34/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.180974869 seconds)
    (35/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.198478443 seconds)
    (36/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.199498616 seconds)
    (37/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.085388606 seconds)
    (38/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067465098 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.118263806 seconds)
    (40/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.198483441 seconds)
    (41/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.129820532 seconds)
    (42/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.136231529 seconds)
    (43/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.157117582 seconds)
    (44/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.0948916 seconds)
    (45/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.255382184 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.200902332 seconds)
    (47/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.181141317 seconds)
    (48/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.145738693 seconds)
    (49/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.157124663 seconds)
    (50/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086264673 seconds)
    (51/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.202442735 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.086923355 seconds)
    (53/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.121653133 seconds)
    (54/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.138182389 seconds)
    (55/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.143822569 seconds)
    (56/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.190894757 seconds)
    (57/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.179864639 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.112096468 seconds)
    (59/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.201157116 seconds)
    (60/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124797707 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.109184827 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.213120462 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.137830509 seconds)
    (64/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.115032365 seconds)
    (65/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.09213134 seconds)
    (66/309) benchmarking ("sort", Int64, false)...
    done (took 0.111420934 seconds)
    (67/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.171540022 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.111279658 seconds)
    (69/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.072400142 seconds)
    (70/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.216901295 seconds)
    (71/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.116425004 seconds)
    (72/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.19451882 seconds)
    (73/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.097924682 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.137846027 seconds)
    (75/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.091155444 seconds)
    (76/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.18708649 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.140737306 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.1394317 seconds)
    (79/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.115900731 seconds)
    (80/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.161245967 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.142392167 seconds)
    (82/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088085342 seconds)
    (83/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.090636534 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093620802 seconds)
    (85/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.121319947 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.086214901 seconds)
    (87/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.099166142 seconds)
    (88/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.096048281 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.132774103 seconds)
    (90/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094380187 seconds)
    (91/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.191852637 seconds)
    (92/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066592791 seconds)
    (93/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.187699031 seconds)
    (94/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.122279453 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.193510957 seconds)
    (96/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067404313 seconds)
    (97/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.110746323 seconds)
    (98/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094416242 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.114664284 seconds)
    (100/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.067032856 seconds)
    (101/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.06714379 seconds)
    (102/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.089728366 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.131778279 seconds)
    (104/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.118525268 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.132057933 seconds)
    (106/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.119361265 seconds)
    (107/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.088231578 seconds)
    (108/309) benchmarking ("sort", Bool, false)...
    done (took 0.205398735 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096106823 seconds)
    (110/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.186041524 seconds)
    (111/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094053824 seconds)
    (112/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.115626325 seconds)
    (113/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066460522 seconds)
    (114/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116324529 seconds)
    (115/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.087714627 seconds)
    (116/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.1184184 seconds)
    (117/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.114837438 seconds)
    (118/309) benchmarking ("sort", Int8, false)...
    done (took 0.212497988 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.166639851 seconds)
    (120/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.347066383 seconds)
    (121/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.203776953 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.139622491 seconds)
    (123/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098845109 seconds)
    (124/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.123178574 seconds)
    (125/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094080001 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.140503632 seconds)
    (127/309) benchmarking ("sort", Float64, false)...
    done (took 0.172207582 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.10973963 seconds)
    (129/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.091757907 seconds)
    (130/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.114389519 seconds)
    (131/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.175210151 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.110091682 seconds)
    (133/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.067453332 seconds)
    (134/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.218211735 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.087086051 seconds)
    (136/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118997095 seconds)
    (137/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067240332 seconds)
    (138/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.121935767 seconds)
    (139/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.100810711 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.115046728 seconds)
    (141/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.199031654 seconds)
    (142/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.06668968 seconds)
    (143/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119491864 seconds)
    (144/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.114833388 seconds)
    (145/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.100603142 seconds)
    (146/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.215373886 seconds)
    (147/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.076523265 seconds)
    (148/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137523453 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.174978183 seconds)
    (150/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.101018845 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.120134391 seconds)
    (152/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.158720633 seconds)
    (153/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.122425681 seconds)
    (154/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.143868333 seconds)
    (155/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.116028104 seconds)
    (156/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.110901269 seconds)
    (157/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.095685835 seconds)
    (158/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.091009797 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.087073236 seconds)
    (160/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065438557 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.137206061 seconds)
    (162/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067895736 seconds)
    (163/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.126375494 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.10993971 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.170849423 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.151834504 seconds)
    (167/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.076693156 seconds)
    (168/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.102843274 seconds)
    (169/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.087203216 seconds)
    (170/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.090111923 seconds)
    (171/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.09517105 seconds)
    (172/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.065851791 seconds)
    (173/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.182216887 seconds)
    (174/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.11526511 seconds)
    (175/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.101337894 seconds)
    (176/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.130082953 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.109268054 seconds)
    (178/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076715958 seconds)
    (179/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.11558693 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.087721314 seconds)
    (181/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.233424458 seconds)
    (182/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.111414937 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.155575101 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.123265036 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.133378811 seconds)
    (186/309) benchmarking ("sort", BigInt, false)...
    done (took 0.222300359 seconds)
    (187/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.06840889 seconds)
    (188/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.172533684 seconds)
    (189/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.085364281 seconds)
    (190/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.092183176 seconds)
    (191/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089989378 seconds)
    (192/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.091432256 seconds)
    (193/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102307223 seconds)
    (194/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.11851886 seconds)
    (195/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.086926363 seconds)
    (196/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117776339 seconds)
    (197/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.177985118 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.114606584 seconds)
    (199/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.091730676 seconds)
    (200/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091544656 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111166561 seconds)
    (202/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.096923739 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.110048175 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.085194109 seconds)
    (205/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.122664345 seconds)
    (206/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.112088196 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.107792696 seconds)
    (208/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.116837336 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.111348286 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.156256482 seconds)
    (211/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.186299411 seconds)
    (212/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066462909 seconds)
    (213/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135617644 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.137321419 seconds)
    (215/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.068523866 seconds)
    (216/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067785761 seconds)
    (217/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.142258193 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.173872779 seconds)
    (219/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.121674893 seconds)
    (220/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.1198162 seconds)
    (221/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094992929 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.166576569 seconds)
    (223/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.204264342 seconds)
    (224/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.085925216 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.17943227 seconds)
    (226/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.114568177 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.095628458 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.119850512 seconds)
    (229/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067201289 seconds)
    (230/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.09086972 seconds)
    (231/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.070360178 seconds)
    (232/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.082832543 seconds)
    (233/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.10062596 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.087547012 seconds)
    (235/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.111245864 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093356142 seconds)
    (237/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.093246151 seconds)
    (238/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.096579298 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.171075448 seconds)
    (240/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.077609361 seconds)
    (241/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.117489359 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086525001 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.185982668 seconds)
    (244/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.084911798 seconds)
    (245/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.090524767 seconds)
    (246/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.079465983 seconds)
    (247/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.094290669 seconds)
    (248/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.093805812 seconds)
    (249/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.091706245 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.190107483 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.165667228 seconds)
    (252/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085797685 seconds)
    (253/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.091733765 seconds)
    (254/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.069456973 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.13426878 seconds)
    (256/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.068179936 seconds)
    (257/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067120627 seconds)
    (258/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118907102 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086388333 seconds)
    (260/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.121468338 seconds)
    (261/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.068117901 seconds)
    (262/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.091329955 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087428733 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.13499503 seconds)
    (265/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067747917 seconds)
    (266/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116238604 seconds)
    (267/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.079126309 seconds)
    (268/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110165971 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094131703 seconds)
    (270/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.07562099 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.114242982 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118277633 seconds)
    (273/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094764264 seconds)
    (274/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066361938 seconds)
    (275/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.092681273 seconds)
    (276/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.086336275 seconds)
    (277/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.092844862 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.225079519 seconds)
    (279/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068773671 seconds)
    (280/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.067017172 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135807988 seconds)
    (282/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.089281489 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.112474973 seconds)
    (284/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.12896724 seconds)
    (285/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069303477 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109537609 seconds)
    (287/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.077392113 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.09467171 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.110873641 seconds)
    (290/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.068337395 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.111186002 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085759784 seconds)
    (293/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.110227841 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.113945421 seconds)
    (295/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.09383051 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095390582 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.113231826 seconds)
    (298/309) benchmarking ("sort", Float32, false)...
    done (took 0.174779253 seconds)
    (299/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.070681435 seconds)
    (300/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.088045915 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.118941094 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.137726209 seconds)
    (303/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.069103163 seconds)
    (304/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.16339778 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093503349 seconds)
    (306/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113208781 seconds)
    (307/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.087983707 seconds)
    (308/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.115712976 seconds)
    (309/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.069530191 seconds)
  done (took 39.896278462 seconds)
done (took 40.796054997 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.103404026 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149811051 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096386453 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.138438944 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124818449 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092357033 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120469644 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097344992 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.125444808 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125908595 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099854497 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094490376 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098229756 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122579484 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096462699 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.14084028 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.12478173 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095232914 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.121097633 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086435102 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.122148724 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086884984 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114651883 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070102212 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123347296 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093964973 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118315401 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120261065 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087297625 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110512409 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091703638 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.119294813 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08712718 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126156241 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094121243 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120100101 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097017303 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.122015275 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088240827 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112199436 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119509097 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08806722 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118010851 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.096753281 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11695485 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093270795 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120102599 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100238681 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.142009255 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116692436 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096260785 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121678257 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097304958 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119199575 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091594389 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121834048 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093172146 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.143299136 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.12188396 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092346225 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.12259574 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094725001 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.118727056 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09522226 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121883016 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122827514 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098903825 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.118573327 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098012314 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.118101352 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086637717 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.12114979 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090627881 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112677433 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.120498054 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.099373515 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.110608613 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.094555795 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118832025 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092912546 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110768471 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091210447 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113725504 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094047275 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115042674 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071084478 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115394123 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094433907 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111885927 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097191692 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11852538 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.095241481 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114580363 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099014574 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112486692 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093017574 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11388905 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087780525 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115471996 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091158449 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.113006417 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090353211 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121738453 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.112839285 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.095224662 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124271852 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087953547 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118380044 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087848167 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111738176 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102799769 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122941865 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087588747 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119076711 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086376661 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.121164552 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086826325 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112394891 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110666283 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089472748 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.11841835 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.088598667 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114754226 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.096024739 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126319079 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.089022216 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115973371 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09084221 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112118608 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093706766 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112113847 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088098209 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.115098172 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079118865 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115523546 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088496334 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.120405364 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091072072 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.121691346 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089641559 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.122244631 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091859981 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118766936 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093361263 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.113009694 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074596864 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118788284 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090521603 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114749807 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087461296 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.116091024 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087273005 seconds)
done (took 17.143168056 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088659393 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.188470932 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.154563246 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14378323 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108954264 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114161024 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123231123 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120013969 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115718262 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14449482 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110906698 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134322545 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.150141649 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.0875066 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113332391 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091972771 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114183497 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103082919 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.148534235 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.1342381 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166855064 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08634939 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149132648 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138186508 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122435028 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106919786 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113272662 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092542278 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11648857 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.113455924 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.13481834 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.091321558 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113992184 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135354822 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105973964 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121742958 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088161606 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.120685809 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087368772 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113723472 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142775285 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.135787102 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094062834 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118461225 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092554685 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.116350238 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090551188 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122737573 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09923008 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118180079 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127663177 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15823948 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09258368 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123832912 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086842337 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125558006 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122351289 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091130753 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113383576 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091233052 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111789416 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092179485 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128580406 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144525277 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092810176 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123737209 seconds)
  done (took 8.719060849 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105388145 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141027381 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.12303208 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132435243 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112894208 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089175967 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113701755 seconds)
  done (took 1.782013048 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089811114 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13550703 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111735396 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137214724 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.134343501 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109808196 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124328826 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088802589 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133317392 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089639857 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.137588603 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153599387 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090148004 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122831087 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138653293 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090208285 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138510908 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089103625 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118157848 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112632893 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11855857 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136749881 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091910029 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114967742 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103992956 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115892678 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163194861 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094517353 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11566564 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.093329166 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112853157 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.168390731 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105646394 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126823629 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088622824 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130942638 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128994501 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088168625 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.132058734 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094921051 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129569175 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089732208 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116606645 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087254744 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120357795 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125093759 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.091277753 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115895198 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.093016927 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13530415 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092594974 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128633105 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089648189 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.12004895 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.09050415 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121902006 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12441883 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091150568 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134977208 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091926311 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131469023 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105268825 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.130573191 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131870839 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092850342 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129443333 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103487968 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119202393 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090545345 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.11991454 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132666219 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087941405 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116411872 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100911719 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116707374 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113992187 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139439757 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116370701 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100453926 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.11563439 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090754025 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.11483676 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113581007 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119814206 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089863318 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120750012 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093436132 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113529324 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.08803617 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119322041 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087752076 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117421547 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117867618 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.091676607 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117344936 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107291984 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116160206 seconds)
  done (took 11.944763647 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091691917 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115289133 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093275563 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115978826 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091568927 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116296185 seconds)
  done (took 1.600618316 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116645262 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119127791 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10456194 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122961972 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158430433 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104233855 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.132414094 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124436806 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.10891861 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129515768 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.131025015 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105405734 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.138920236 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122327604 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105347385 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123254198 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130802459 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101913874 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12872066 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09744789 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13883402 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122995693 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098133654 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133875902 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119292897 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097631764 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127185178 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103759855 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129630792 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123996298 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096701717 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119716424 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097095075 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.126012361 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.132629164 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096409718 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123306309 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12052828 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10257773 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119727892 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105592692 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124158757 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12887812 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095123691 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125712457 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122137589 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095287607 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126657205 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.130307037 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096017331 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120834059 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096172953 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.11943691 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094968438 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123194853 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125195744 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096017515 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.13133543 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122836928 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.098049826 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120030205 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094986328 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125268844 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119422527 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10531189 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120674446 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096976944 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123639062 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12251091 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097006111 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121206709 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09346371 seconds)
  done (took 9.333428231 seconds)
done (took 34.341572228 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.690965904 seconds)
  done (took 1.669587252 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.714758074 seconds)
  done (took 1.695380971 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.556267434 seconds)
  done (took 17.532582951 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.507112573 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.590218449 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.888753751 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.183184533 seconds)
  done (took 3.146706653 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.962654691 seconds)
  done (took 1.95645737 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.299488332 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259509978 seconds)
  done (took 1.542148932 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.77664126 seconds)
  done (took 1.765812896 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.359801322 seconds)
  done (took 2.346870411 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.334935342 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186350891 seconds)
  done (took 1.51515322 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.54692755 seconds)
  done (took 1.542670775 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.07985257 seconds)
  done (took 8.080806391 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.269616906 seconds)
  done (took 1.273866965 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302478513 seconds)
  done (took 1.298504128 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.539133079 seconds)
  done (took 4.534461795 seconds)
done (took 50.889967783 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100327327 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127498481 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102738436 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125630427 seconds)
  done (took 1.445909402 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10225337 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122271099 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100927199 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121269726 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127513911 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097300207 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123764932 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101304308 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121232028 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096668666 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122303133 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121111705 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100722015 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124085531 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094623799 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124758063 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099783287 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122629358 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124039002 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09720337 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119710883 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098381517 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125693332 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094362818 seconds)
  done (took 3.68188205 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100809676 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119936229 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097993829 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118441998 seconds)
  done (took 1.441119465 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101607516 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143058827 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.13933273 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101667592 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.14455269 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.13717587 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093048175 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118550155 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094290331 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125536395 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091125876 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150222715 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138548065 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099868424 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128190439 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.08860434 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118182979 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137889449 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100427898 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127953054 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.095742149 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126156588 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091252473 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140718289 seconds)
  done (took 3.832719603 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170694582 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.147935987 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140170145 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095805177 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162729117 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141779145 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089006479 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142469275 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088693948 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133532846 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119020811 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134833199 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130409067 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088544881 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11506079 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088276232 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129993998 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130763688 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092102684 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.142960683 seconds)
  done (took 3.490575987 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098716627 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118661858 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088822743 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117648875 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099596004 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122066508 seconds)
  done (took 1.651068627 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091386427 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115157307 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090685281 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114705113 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095504035 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115765093 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089092994 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115699343 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090818618 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115890482 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090319912 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114089583 seconds)
  done (took 2.244438056 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.467744998 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093852984 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121447197 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11477066 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097005675 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115600568 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.104032787 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119181023 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141188314 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090314305 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116394968 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092061663 seconds)
  done (took 2.678669267 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236039076 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126656126 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290134972 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278185005 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1587191 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173374781 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281868671 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162260821 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.22778945 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161635213 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205429958 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225824497 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152132857 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191316025 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140085153 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120061229 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228389181 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24126985 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154848359 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204300008 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227487849 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166632713 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182350772 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150685353 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113701111 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172945314 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122176871 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130980962 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206785938 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204789077 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1904468 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163745212 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149119127 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239723347 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25586821 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196012193 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288051072 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136519775 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.172824803 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169965071 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26497038 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112719588 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234057494 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157001495 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131728761 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19375481 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167028647 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176811877 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152589482 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140516457 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222595498 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214068909 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.220530613 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112581875 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237253352 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158256849 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.17083965 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195814673 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252922615 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226903559 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181076873 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094856303 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.216239458 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192499091 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186092497 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.195740872 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182760741 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1499258 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193612311 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188813894 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193874776 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188645502 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.186848326 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140952601 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170477057 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174266931 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200729981 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230753527 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205172307 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095453627 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171241118 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152063375 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134680507 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196392473 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098547692 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241294458 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150954615 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163218966 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220350134 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161784567 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162054702 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202515498 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224599339 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149339026 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.085188097 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155501801 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15777658 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193063787 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141399349 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160632857 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163936203 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.13189992 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179886327 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097528008 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204418359 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091681213 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17538786 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211185283 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101014514 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16296179 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15460866 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.1515152 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175173349 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226291408 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117171701 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135372756 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209921007 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206262331 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.151324947 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178563128 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204126652 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.14648349 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151259375 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201006514 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246627249 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141587337 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20379746 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158350098 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13681911 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105468175 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210685528 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15666162 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.134815366 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137502164 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.212352336 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209020724 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.12760463 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111851609 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213851792 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107536626 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133622821 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163236232 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149941647 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140810331 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147559867 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.125533842 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21080421 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179151808 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156369893 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166099987 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153313301 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255845193 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14345877 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.149848439 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123012378 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122241979 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.19409053 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228213517 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105122819 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233969973 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.174879663 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206490833 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196449024 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108331659 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179310267 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131434632 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.09370927 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223766124 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170361734 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162481403 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198062672 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230745975 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.18000954 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.211960748 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174411883 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175511071 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167615977 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159265822 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111504704 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161825801 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194889541 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097365026 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.145701963 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135427349 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14975636 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116990301 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135230489 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22600191 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17195275 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192138711 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159461432 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151335553 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183029222 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.130528812 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175668115 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179716844 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149121168 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.201407101 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224161484 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189387469 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146114236 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201941885 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.12185162 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126468948 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.116690928 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199347935 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108080947 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138775524 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167536408 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182853183 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182733652 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206542707 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213817038 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199336679 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191919123 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095703107 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169997645 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186540456 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17845655 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.189571133 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141985195 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.15157532 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178729572 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159285808 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257019134 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169480554 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177056169 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235565899 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.124167078 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133786367 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152860144 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18894776 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15657827 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178554589 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149266833 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14353371 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162593802 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134509025 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163184102 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185971504 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16529639 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219621761 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.123825501 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215695056 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101098143 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1948455 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15987711 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167032392 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.08332018 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176557822 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235519437 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148994872 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170453025 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191162184 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133237961 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.30940061 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211345111 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221205353 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138287524 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16036266 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133665811 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165842888 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20057987 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179398619 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160265044 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190345685 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160755222 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.109741019 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143867751 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149919798 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153463366 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133177351 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149986117 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.179561948 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.11209014 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216050368 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162614149 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160248342 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175003456 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150366956 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117829331 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15273803 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244592677 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17825459 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240292195 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.122800091 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.209789089 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207838609 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127305032 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10556955 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136331788 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180227329 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138982107 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192471024 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.218030895 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20694177 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18172181 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217168996 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112077536 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12192901 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159180635 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175858044 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237529334 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15393266 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159277237 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204805952 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.144127808 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104999778 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173804564 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230749202 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14777828 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199716149 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080409571 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.305780433 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100620089 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134933802 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16589909 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21037283 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137745555 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.187560936 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172105647 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169356219 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166611873 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151620111 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194562268 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245420888 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202729182 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211065094 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105341555 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157017606 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178267466 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223685472 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159691703 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111941285 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237108207 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195732727 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.227050925 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.115724363 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172334476 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198439773 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130533472 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217926461 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135920124 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209043042 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136944256 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195473245 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156199536 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144769346 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178405258 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.218618339 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115030554 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219662351 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17653197 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137150294 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106801001 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197525594 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179125628 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158779572 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100292274 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211055144 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097556911 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222304512 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233151682 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137505091 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157044531 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150002211 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108436189 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186016281 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159331818 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113990843 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.165725991 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204736776 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.137193369 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19359304 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234066664 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171074711 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17793415 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14656891 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.69482015 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133267086 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196098147 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157798966 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238272424 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151051279 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174420747 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160197297 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170427563 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198521063 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162454674 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23256096 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194183913 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.210431617 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105799891 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160354612 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163638505 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145173764 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152867936 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169887159 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161553496 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.155864252 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179910052 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199761964 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107006627 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142902912 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20111529 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157164537 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183491675 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180218316 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140843982 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1758788 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219780551 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106925583 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.211747683 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209664138 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143184337 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155001128 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135681764 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157924557 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26659669 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098608214 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230284991 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178811703 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160399339 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170700199 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150345118 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19448871 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15947086 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180156015 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148228214 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.16100103 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159109077 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14057824 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130435194 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127740186 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197577809 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.122610743 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161434076 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.166888956 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194162219 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125752009 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145817065 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200890444 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190846937 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24750915 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137520252 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107947617 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164889002 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154031436 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.18058437 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208153829 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.109183454 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138697748 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.13872301 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.132519512 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.140700536 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157594033 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200336575 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168764782 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208723114 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.139283849 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.28216886 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142411776 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156755687 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089927545 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133930011 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151833891 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118588065 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161042956 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.222650174 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264380049 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.120334831 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.134560466 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15182101 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127070025 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110178973 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168242793 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165468451 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17931792 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147298767 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.11107984 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161149298 seconds)
  done (took 83.447943655 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163425129 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132164773 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147457202 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202436424 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178696092 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.272116494 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209798658 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256739723 seconds)
  done (took 2.660903775 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094293345 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146223249 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158930165 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13466649 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092126814 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120878627 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.347908023 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134383684 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116568011 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121915045 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174114568 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094133987 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.556443018 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090623103 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.121288255 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108543291 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091938446 seconds)
  done (took 3.796842207 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.477453625 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.722309529 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.512869399 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097223897 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.223963227 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112986546 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.835115412 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.197971754 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.115542641 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.486997005 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.775278677 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159942317 seconds)
  done (took 18.817436441 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099959855 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.122475209 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108942325 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.136941181 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096504986 seconds)
  done (took 1.669869938 seconds)
done (took 131.849356007 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.105099688 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.407322045 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072125402 seconds)
  done (took 1.614408499 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108423105 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138844133 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110057176 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137054863 seconds)
  done (took 1.604340034 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099007275 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128796248 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109264611 seconds)
  done (took 1.4409407 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.326160766 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.191079572 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.165190973 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107224763 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131568923 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10310088 seconds)
  done (took 1.448287289 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097526588 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129127997 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097863793 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130834167 seconds)
  done (took 1.563868224 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095148091 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071429135 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103874471 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075860066 seconds)
  done (took 1.449158183 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115378848 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133023677 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103984683 seconds)
  done (took 1.46093727 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130862694 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139341303 seconds)
  done (took 1.378892523 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105889884 seconds)
  done (took 1.210395106 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118943191 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.171582529 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.190343241 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.166599812 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.232657358 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166939304 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.143327928 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.116190017 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132885504 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145400837 seconds)
  done (took 2.694179208 seconds)
done (took 17.756392648 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103986313 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.514002073 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.414485954 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117503096 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723055951 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381748546 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.045407217 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147376447 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167495299 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09392004 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141322138 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673410008 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.07252561 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.469413964 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.031305676 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.467073771 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.706023517 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093603262 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120950013 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094447956 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.029164696 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092305975 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123534171 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092996958 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703642898 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.427094963 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09559563 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.466468241 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092975048 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128303492 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383518566 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123846232 seconds)
  done (took 17.436672242 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095871688 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176460778 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09926303 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138085308 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124777941 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094109909 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126136562 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094171608 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180965194 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123623814 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111158139 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122669592 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127078834 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09646879 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144517765 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092720403 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126839223 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093668633 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122078997 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123419796 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113319494 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121252593 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094649035 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123252706 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09407383 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136839965 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123464377 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094374378 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122013921 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099489517 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.1291133 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095152765 seconds)
  done (took 4.874724942 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141848582 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185440499 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129686784 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129010065 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170592728 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124622946 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200916874 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118531624 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184725503 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124911939 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141457255 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093063344 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157810578 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124484447 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115775909 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123650966 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097888939 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123636733 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093354967 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.1244538 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141121803 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093087157 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123203315 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093829883 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125009345 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108063687 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125115314 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122626695 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093650168 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.1282766 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099909925 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124966578 seconds)
  done (took 5.205715686 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097445664 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127295139 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109954901 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.140056024 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095872893 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126446127 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097720484 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126018378 seconds)
  done (took 2.039418182 seconds)
done (took 30.662940423 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112364224 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.12916687 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106903212 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136501416 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10335799 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132754918 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092049509 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.136294735 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135078152 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102992365 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139092398 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092242232 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124334902 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091919691 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.137010174 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098276362 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134103114 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.10280302 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.135955269 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133638276 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095529589 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134798959 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103413983 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134756603 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104324203 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.135009082 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138932167 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10070724 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124210289 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094366348 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.126036213 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104529484 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125721061 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106205604 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128273186 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.098077928 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.125480898 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094573405 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134050363 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.134473113 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100588228 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134932577 seconds)
  done (took 6.066934291 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108203571 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141124073 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10562003 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081970412 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118465001 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080853389 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138809898 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078967262 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111234218 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108061339 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075021589 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107182241 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07868479 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102871509 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078126106 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075724803 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109537637 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077213604 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077274168 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107620019 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079739232 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073333285 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109615158 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079390127 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075358958 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111511978 seconds)
  done (took 3.613988265 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101502617 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.137482644 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112824387 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185594717 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.163381672 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.101078136 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.134082248 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141717529 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109636221 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121789951 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097575425 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150809553 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111464514 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131057126 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092252642 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138863025 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136629806 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095458023 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129725853 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113335942 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140243431 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103347685 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144750791 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134794749 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092318949 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12410436 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.09713273 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136939544 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098434213 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132428159 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097158747 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.126925458 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125267363 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104932224 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.128314107 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.09478456 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143074734 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103035675 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.132203178 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.093021386 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.126463221 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123324433 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114755043 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169744496 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092685849 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.131938818 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129560898 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103551712 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122921212 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110781694 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132931036 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092284205 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126698444 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092617996 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122729233 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107185705 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.126137862 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095435689 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132381127 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.12616309 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105688845 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126154562 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108559951 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.123289527 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100376264 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122232327 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.09315423 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122448849 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.145124226 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094890998 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16472978 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094072131 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124666324 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102565801 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130958494 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130156985 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094441228 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139543362 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102727215 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.127373845 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102579334 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127268338 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.13413814 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.112530779 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.126130108 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096195516 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124130749 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100443612 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.126699391 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094487514 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138098982 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.09302767 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126689358 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.140890215 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094315069 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124730683 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099883321 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128621566 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093354554 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137163384 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098105514 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123826848 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.133306 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093493667 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.126954383 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103707035 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128022202 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091457243 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127683419 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099447757 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123784501 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093465836 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126268963 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094775213 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132565661 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130356475 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098248045 seconds)
  done (took 14.97168377 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229909798 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.21688916 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.239997606 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.26387383 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137161092 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114995486 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213845419 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156811002 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125244826 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.16252225 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.16387751 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.184088196 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.140521896 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181264053 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.141757661 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.123925732 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112672174 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.167161817 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.218139841 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.293602152 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.112668648 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.133605198 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.16350257 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.162022624 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.1066558 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134771163 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.141569274 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106353524 seconds)
  done (took 5.789738426 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.110100489 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.159070002 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.09905831 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14624538 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.151447027 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093438672 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129941595 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094472029 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.138433556 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.1378283 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093165667 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130640852 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.10105012 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133478017 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124534577 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103663941 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.134256863 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094892652 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127518584 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097788747 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130886954 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102702349 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.129353201 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122878355 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103300026 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122576623 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086254733 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143709722 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123514841 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116743947 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122988268 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.09997739 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13501264 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093979865 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12444872 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095052406 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12758109 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095886995 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126841525 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092904036 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122351721 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078727477 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123236023 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136874096 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100107951 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080119741 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.131590049 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129434443 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095199309 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121213452 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096755355 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125906942 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097849661 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131549267 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099493527 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126351419 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097872953 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.117948573 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100234162 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126391812 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085290776 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.12322552 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099140927 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119533835 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102056613 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.13032579 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093943833 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.127252325 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097906926 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.131383908 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.09601753 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128512125 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091640365 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127558215 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.097568824 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129567188 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.097492645 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123465424 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123890277 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.09503645 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076096348 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124193034 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074146626 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127558974 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092670119 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123408078 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.09608306 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13148214 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13976723 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095587755 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133656303 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094903027 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.124516439 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.09697818 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114432549 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097290201 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139873487 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142729915 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09385799 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.124279258 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108060441 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127155417 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093488559 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107918801 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101781104 seconds)
  done (took 13.087070492 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.12837765 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155214453 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095483678 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.144833393 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15799078 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.15966864 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102396346 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.13203435 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096065894 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.144735014 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.09494046 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133891978 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097707189 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139079089 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157892379 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103651594 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127212845 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108154286 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.133778099 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.172277124 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112734055 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144195287 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108364823 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126015601 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128994351 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111465805 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.164344224 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.109641251 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138657337 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143219919 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109134736 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163412996 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.144407298 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099854126 seconds)
  done (took 5.544158776 seconds)
done (took 50.191404549 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.218819593 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.459779041 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.215014838 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.197045574 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.25949717 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.228417605 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.232180739 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.223364804 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.248373757 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.218197051 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.479833292 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.861177021 seconds)
done (took 58.991734664 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.304645301 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.352898262 seconds)
    (2/2) benchmarking "String"...
    done (took 1.505430411 seconds)
  done (took 4.001798558 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.597619702 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.175587803 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.479443037 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.215858824 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.218207235 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.508166135 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.891609819 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.575393448 seconds)
  done (took 28.206989886 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.226922793 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.617763705 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.978417126 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.976146065 seconds)
  done (took 18.944169121 seconds)
done (took 61.200067271 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.242833082 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.238536596 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.221851932 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.209482177 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.333346046 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.243566134 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.579406792 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.23288484 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.23665025 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.198606522 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.240197519 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.217165198 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.231773948 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.553907369 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.222024504 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.22366403 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.267299327 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.691950208 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.626958056 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.223624751 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.231522247 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.245275381 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.232316274 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.221424976 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.27861826 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.218520846 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.247680658 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.223961264 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.879345621 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.22488006 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.23583678 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.763420525 seconds)
  done (took 191.383311262 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.21895914 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.316776407 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.383740381 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.270709836 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.884296432 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.415463902 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.353366727 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.950210933 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.238081321 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.223912496 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.420537646 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.219803081 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.485719553 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.231590794 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.237980809 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.227161414 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.443884829 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.519913663 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.243161276 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.494652419 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.247496313 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.442549728 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.36090263 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.415171645 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.261098094 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.243422651 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.247564268 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.231249591 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.413832935 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.371328957 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.239215375 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.256707048 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.855413675 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.079163393 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.224352016 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.243455952 seconds)
  done (took 151.059547346 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.518500381 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.222546626 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.221387433 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.222391985 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.254636751 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.220703462 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.811427037 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.815694921 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.725375227 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.246727815 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.225636487 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.28178942 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.220754047 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.500078674 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.221387611 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.318164799 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.234239362 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.222698717 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.237039573 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.265978207 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.226650149 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.222754315 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.809650063 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.238433307 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.213520517 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.246254146 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.223503439 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.255217659 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.613877188 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.222499689 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.256137042 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.556911415 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.274532522 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.222662585 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.605304112 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.270907858 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.336709944 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.222435613 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.254542092 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.220598068 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.502844261 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.22236077 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.222264602 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.225050964 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.887440948 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.222558335 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.810529466 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.226175366 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.180721776 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.22131315 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.222041414 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.923829152 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.862855542 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.24158079 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.220821558 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.222062818 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.220023852 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.221034139 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.253407788 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.901143507 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.3142136 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.238201241 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.22264388 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.250860564 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.219080948 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.459008973 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.218130239 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.671778002 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.291287771 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.324290248 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.787084959 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.221454098 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.31531816 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.338666431 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.217525374 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.218013052 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.218174945 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.219166464 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.328250236 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.218486247 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.64211572 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.218986515 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.224426549 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.21910729 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.278567283 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.314955871 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.219173783 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.590521706 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.219678883 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.217791324 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.967429844 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315385084 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.218451198 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.218908243 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.217652184 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.219812564 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.637180661 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.791858824 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.485970092 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.22418857 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.079137258 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.220626122 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.655820189 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.768508635 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.873455117 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.220568934 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.330456213 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.223366867 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.221389307 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.220138553 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.247637079 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.237792636 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.278215289 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.219810196 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.618759492 seconds)
  done (took 349.277594736 seconds)
done (took 694.383689261 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.896613396 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.886845321 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.998786159 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.881385994 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.866010268 seconds)
  done (took 10.676589247 seconds)
done (took 11.822043822 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.407506943 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.407116632 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.282225558 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.409690995 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.249205289 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.425397434 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.385662889 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.242272401 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.322784623 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.303003181 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.321096273 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.273848405 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.248102459 seconds)
  done (took 18.424626172 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.546530617 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.526434047 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.284905693 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.555489104 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.261206997 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.543398228 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.428203559 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.441398086 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.438396219 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.25568333 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.235095937 seconds)
  done (took 16.66555007 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.543890381 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.550152672 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.289981533 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.546746899 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.263603149 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.549010467 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.42698086 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.441812143 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.445266791 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.254726665 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.235199589 seconds)
  done (took 16.695952836 seconds)
done (took 52.932507075 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.231636142 seconds)
  done (took 2.38123261 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.26757269 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.427198026 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.248586271 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.236127074 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.233173995 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.232377492 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.236247676 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.232513611 seconds)
  done (took 11.264669921 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.230289892 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.227601861 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.230666918 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.227271612 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.228606092 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.230726569 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.229313724 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.231178112 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.22826173 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.228415113 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.229677526 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.228119339 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.230375143 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.233148885 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.231615689 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.23180883 seconds)
  done (took 20.827082292 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.230538308 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.229122634 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.231733287 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.232744905 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.231749657 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.233526733 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.233889524 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.234366401 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.231730092 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.229495591 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.229504728 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.229490705 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.230470986 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.229318387 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.230284083 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.230662399 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.230275631 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.230908716 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.234938584 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.230003358 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.230680685 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.229491407 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.229491621 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.2301354 seconds)
  done (took 30.695917149 seconds)
done (took 66.317739104 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.386148518 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.9502428 seconds)
  done (took 9.486913048 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.23198442 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.232725595 seconds)
  done (took 3.617826183 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.232116551 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.23294198 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.232026928 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.23301478 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.231449785 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.231217601 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.231909495 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.233335817 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.232767377 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.23155535 seconds)
  done (took 13.475324263 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.231465567 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.231588474 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.229390168 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.232052472 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.232214095 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.228525509 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.231556853 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.232033906 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.23185229 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.228965887 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.231096926 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.228906917 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.231835366 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.230705144 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.231911402 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.228926024 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.229199987 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.228868296 seconds)
  done (took 23.301580139 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.232613656 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.231256383 seconds)
  done (took 3.613818549 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.229119274 seconds)
    (2/7) benchmarking "second"...
    done (took 1.229582626 seconds)
    (3/7) benchmarking "month"...
    done (took 1.229590222 seconds)
    (4/7) benchmarking "year"...
    done (took 1.227712791 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.228919138 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.229792635 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.229679057 seconds)
  done (took 9.755635603 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.232341439 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.42309781 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.506942128 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.841472587 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.233200261 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.235959968 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.09487294 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.235694041 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.23851721 seconds)
  done (took 14.193362482 seconds)
done (took 78.594563272 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.247190467 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.244039685 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.393140518 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.243424752 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.260603335 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.571428888 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.231923783 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.352098289 seconds)
done (took 37.694704536 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.243904982 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.966600294 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.969783186 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.226343495 seconds)
  done (took 11.314831438 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.215289561 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.158331884 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.220757556 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.23313678 seconds)
  done (took 17.980445353 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.248963112 seconds)
    (2/2) benchmarking "read"...
    done (took 1.564825282 seconds)
  done (took 4.964755377 seconds)
done (took 41.655343356 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232330135 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.232691047 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.232689842 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.232028132 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.231801392 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.229700157 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.230162538 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.232931697 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.233105142 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.232820975 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.231586774 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232902085 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.229630369 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229552793 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229979907 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232782651 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.228292746 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229439827 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.230305313 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230927185 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232004041 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.229930329 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.229851732 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.232406777 seconds)
  done (took 30.702685366 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.233597506 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.23115582 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.234297966 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.231469211 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.230283649 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.231636557 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.232635704 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.229457219 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.232036811 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.233324022 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229174782 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.230707972 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.231215402 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.22837092 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233732803 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.229065641 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.233800183 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229686567 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233744884 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.22946889 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.231694901 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230932836 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.230427984 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232456927 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.229207544 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230219545 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.232448459 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.231640471 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232945052 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.231276415 seconds)
  done (took 38.094454527 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.237441997 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.239077678 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.233201331 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.233397509 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.232625367 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.232499139 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.232077148 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.232125654 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.232335776 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.233248874 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.232577189 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.233165424 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.232554816 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.233972857 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.233966776 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.234133456 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.23425992 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.233783283 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.232864394 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.232924413 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.234025986 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.23193999 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.234158164 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.23295563 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.232740302 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.233753896 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.233152773 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.233422749 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.234987384 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.233865169 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.232888389 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.234201244 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.232536216 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.233972926 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.234714974 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.23426612 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.239992991 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.24171276 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.234105793 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.234208118 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.234572501 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.234278033 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.234879917 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.235561279 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.234019972 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.236452304 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.233211358 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.234050967 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.235208979 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.234956965 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.235554632 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.23511867 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.235427952 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.235265865 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.235038622 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.235216575 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.234205204 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.236258868 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.234832266 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.235769437 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.236049569 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.235585239 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.236213038 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.236060258 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.236351603 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.236877424 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.235599562 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.236415769 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.237598536 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.236595583 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.235540758 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.237255108 seconds)
  done (took 90.049416874 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.23584762 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.236169839 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.233531297 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.23374834 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234356726 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.23647763 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.23466287 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235912591 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232762447 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.236811147 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236254334 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.234412037 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233795442 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.235214105 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237889415 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.235192445 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.23635579 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234118536 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.235415053 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.235257695 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236987886 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.231835971 seconds)
  done (took 28.328710727 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236853478 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.237588828 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.233939477 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.235731209 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.232505945 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.23681419 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.235854365 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.237299918 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235693331 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232551177 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233963939 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23871875 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.233665733 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234588073 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232756252 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.236173657 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236568004 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.234794577 seconds)
  done (took 23.389833192 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.234254808 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.233330113 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.23669028 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.233861406 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.234067955 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.23646106 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233539944 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.236437972 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.23662697 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.233828722 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.236230221 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236719777 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.236025775 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231914789 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236988575 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.234073503 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.236231004 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23298146 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236286942 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234374068 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.23440643 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236936827 seconds)
  done (took 28.326792457 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237127398 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.237497536 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.234788463 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.233984893 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.235475062 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.236279488 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.237782514 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.234728631 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.237772734 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.237185217 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234084735 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.236160998 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.238700785 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.235553488 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.23450016 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235236358 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.236715296 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.234718468 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236569749 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.233250265 seconds)
  done (took 25.873223554 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.238858259 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239941304 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.238267252 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239206345 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238115608 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.237842601 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.237942167 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.240580459 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.239078605 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.239691336 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.238591872 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.23908859 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238096569 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.238414172 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.238869257 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239770515 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.238363881 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.238232943 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.238473298 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239196441 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.238506401 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.237828784 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.238786786 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.238930426 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.23807822 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.238856777 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238464929 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.238748561 seconds)
  done (took 35.841717596 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238203258 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.237116056 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.235909317 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.237432428 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.234814091 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.234475658 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.235931728 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.235730185 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.237389892 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.235757784 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.237404697 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.238385191 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.23863938 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.238053222 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.237979508 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.237841412 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238431905 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.235216077 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235824686 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235677443 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.238619235 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23843496 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.238098331 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.236091861 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235143537 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.238574394 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235883211 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.235887859 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237921163 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.236769669 seconds)
  done (took 38.263901568 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.257415121 seconds)
    (2/2) benchmarking "in"...
    done (took 1.255577905 seconds)
  done (took 3.668387161 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.235853009 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23953119 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.238190437 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.235087112 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.235807656 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.239102165 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.237676269 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236047251 seconds)
  done (took 11.053780944 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.23992621 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.23899257 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.237260427 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.237653514 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.239485836 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.238539539 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246320815 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.256963656 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.239385738 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.239090597 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.244431375 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.244139285 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.239647641 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.239212462 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.236748506 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240485361 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.23988716 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.238737137 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.240300332 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.238877121 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.239331682 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.240476089 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240302921 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.235209382 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.240458789 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.247871241 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.259855179 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.239555399 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.238870422 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.242122824 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.239505895 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.236753857 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.241066623 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.239937032 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.239435229 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.239085751 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.247897422 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256255224 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.245966046 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257999034 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.243007627 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.237239235 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.24014886 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.240151961 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.242611915 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.241289641 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.240649768 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.237419723 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.240645174 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.242022573 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.243085634 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238992106 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.23797818 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242980711 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.241925069 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247596323 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.261179948 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.243045814 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.248368257 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.250514152 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.270170282 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.261538083 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242053792 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.241997519 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252660151 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.259792985 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247696611 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.25655571 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.237989991 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.241210308 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.248035079 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270113523 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.264845783 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.242080679 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.24170239 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.242371647 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242753229 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241027644 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248317318 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.261375937 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.24251222 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242694437 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250938952 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.261685527 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.242281134 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.24113874 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.243176213 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.242687194 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.244156158 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253128263 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.260822021 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.244499527 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.242332781 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.241771355 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.243670088 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.243893856 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.243161462 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243513523 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.241269792 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.241929786 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243160651 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.247317727 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.25062035 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243318472 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244870503 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.25022872 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.262518352 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242695643 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.248851492 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.243337757 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243957918 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.244909176 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.248753363 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.240562741 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245675884 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.249880265 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.243124444 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.245037208 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.243028377 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.244714447 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252881674 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.266056979 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.245089372 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.244628203 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.247106709 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.253533049 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244502496 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.247138647 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.244859727 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.243574453 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.242141381 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.244313405 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.244591434 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.246095037 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244691204 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24584039 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.243210383 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.245860148 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.246101814 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.246472979 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.24634772 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.245987821 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.246323355 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.247648139 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.245142714 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.247102093 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.251546132 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.264291082 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.246620139 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.246941915 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.244015015 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.24683707 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.246108454 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.24757406 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.246819744 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24682467 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.246311984 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.245635962 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247805763 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.248489525 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247952786 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.247539677 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.250337379 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.247578933 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.25135107 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.245825094 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.245276663 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.24782835 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.248160018 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.246740145 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.248154687 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.248495702 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.250594059 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.25460185 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.250459244 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.248344495 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.251985086 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249243396 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.249501748 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248635123 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.251567128 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.255054826 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.248748164 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.255673178 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.266549137 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249016456 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.249667266 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.248250323 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.249762296 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24882615 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.251473996 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.255793919 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259859979 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271003666 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.247844369 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.253717707 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.249662596 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.251874252 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.252228836 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.248651765 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.248351364 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249656566 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248107055 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248659071 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.250224435 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.248242152 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.249540266 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.250816683 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.250094082 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.249928839 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250432876 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.250433657 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250458335 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.248146508 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250117794 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249383905 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.250468114 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.247975317 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.249582741 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.249608318 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.250453979 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.250449878 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.255748142 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.248610897 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251754192 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251958756 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.250889595 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.250846986 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.25230251 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250956024 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.251461351 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258598945 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.269379349 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.252173828 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258537815 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.268124607 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.251509088 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.253163236 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.250831659 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.249723765 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.253817413 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.259882499 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.252063876 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.252726922 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.252643333 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252656083 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253037373 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.258233573 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.268619164 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.253726176 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.253036009 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.25393934 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.252001593 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.253317424 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.253058467 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.251968471 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253959303 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.253249603 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.253619297 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252833942 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.253296616 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.253533898 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.254242712 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255369375 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.259313559 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.259073995 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.252084007 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.254737798 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.25310498 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.257477982 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.253243695 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.254080008 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.253873607 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263597251 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.276897207 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.260337323 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.27345223 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.253675875 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259227556 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.272991252 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.257584543 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254161066 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254185652 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.253735678 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.254134589 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.251572798 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25519637 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.255247799 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.255203775 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.255826962 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.257912314 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.255943007 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.254729659 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.254926821 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.255258124 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.255782207 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.254929547 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.255406168 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.257289247 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257113727 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.254960533 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.255490423 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26137163 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.27332458 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.256217916 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.256724135 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.255914523 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.256284977 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.257915017 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.25529242 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.258253333 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.263286614 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.259547802 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.263754138 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.257698207 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265400978 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.256769857 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.259891042 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.263317585 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.254079298 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.255422887 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.258116813 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.258265259 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264642744 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.275129307 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.258674219 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.26140936 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257818837 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.258625445 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.259324991 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.257811108 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.258881772 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.258847451 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267117348 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.273862083 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.260260431 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.258728793 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.256408994 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.258532304 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.25960353 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.257344736 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260953809 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.25809829 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.258408652 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.257937513 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.258079454 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.258521245 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.258371196 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.259048206 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.256810743 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.259617653 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265657061 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.277366512 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263130386 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.263793863 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.265849549 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.279057121 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266799259 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.281066334 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.260134033 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.26069389 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.260759561 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.26207766 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.260641843 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.260978245 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.261290904 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.261746196 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.264372538 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.260991602 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.262065467 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.260572541 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.259871677 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.260480622 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268802274 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279697441 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.261543846 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.265187651 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.258213873 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.260865892 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.264103651 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.260528242 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.26005122 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.263001701 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269288881 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26877859 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.262118988 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.261392649 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261620241 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261744609 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.26246806 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.262117912 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.261200422 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.261087991 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.262493677 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.263749388 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264763811 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.262357782 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.262617241 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262706557 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.262752746 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.271178064 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.282001876 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.262321417 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262159325 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.264166398 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.262054247 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.261918387 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.262975184 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.26365713 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.262115701 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.261978819 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.269227419 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.269040351 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.265543661 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.262911239 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.263194009 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.263544878 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.263986097 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264535213 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.264693018 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263638311 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.264212231 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.263789231 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.265201525 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.263285775 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.263654003 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.263503923 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264958205 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265833274 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.269213033 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.264420555 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.263400345 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.263213764 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265093411 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.263672888 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.26433398 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.269089171 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286075448 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.273480024 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.272571776 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.267740449 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.264453413 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268513998 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.27199802 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.264332539 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.265159946 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.265228921 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.267733612 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.265651197 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.268070232 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266658244 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.270767529 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.284851034 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.266013169 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273639065 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.283294609 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.264893342 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.266538446 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.268415317 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.265348664 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.264750252 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.267259793 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.265488844 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272208269 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.284220344 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.2668664 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267182833 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.266044687 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.26742186 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.27027418 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267304678 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.267628344 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.263729393 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.266432506 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266140434 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267792919 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.263598259 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.267159897 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.266516877 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.270942576 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.273502756 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.265268992 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268490586 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.268999013 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.268047995 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268594119 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269047849 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.266436086 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.266906408 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.267867534 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268959154 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.268422818 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.271618452 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.267845819 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.270553186 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.2697414 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269048698 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270957156 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.277628831 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.275195404 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.267617406 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.268336591 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.268694938 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.271218249 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269189414 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.268143925 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.267435422 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.269355249 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.269607853 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269157624 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.270004089 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.270164601 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283159707 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.287296009 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269200541 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.269410213 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272456028 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.27022919 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.267581037 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.270487034 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.271205117 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.272003749 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.276210696 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.270386666 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27605035 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.288838815 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.27102592 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.275209903 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.271718715 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.277741584 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.272568681 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269701213 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.270261832 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.274273815 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.28362876 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270446261 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278714793 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.296545078 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.289553808 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.270971651 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.271413128 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270027587 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.271450943 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.27457998 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.271748226 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.271620064 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271851526 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.271598263 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.271911036 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277169061 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.272241673 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.274602489 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.270870918 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.271237587 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.273015692 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.270222014 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.273303012 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.274002391 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.271998801 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.272687636 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.271459361 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.272989652 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.283290419 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.297937185 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.273185016 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.272684226 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.27128323 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.276159157 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.274493326 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280502408 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.279957506 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.27286763 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.274261953 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.273252577 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.273213959 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.272695537 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.273614044 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.273726235 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.273338849 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.271803669 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.284781768 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.298256825 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.278314852 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.272312391 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274726461 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.275158933 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275288705 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274263753 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.273170311 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.275130703 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.275108753 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.277548868 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.273590043 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.273907028 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.275850706 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.280905231 seconds)
  done (took 751.239213868 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.271372804 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272344993 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271964877 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.272781308 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273352049 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272681896 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271965408 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.273231638 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.271431319 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.272346359 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.272319188 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272434417 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.273896347 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.272986616 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273160306 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.27313892 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273161453 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27318761 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.273153347 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273280088 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.274109644 seconds)
  done (took 27.917614636 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.275849659 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.27305449 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273844141 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.276619202 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273764729 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.276226726 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.273875522 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276541741 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.276934468 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274110877 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.277802531 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276266723 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.27548167 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.274413092 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273678476 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276309587 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.277786434 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27325599 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.2779784 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.274294778 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.276206968 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.274094214 seconds)
  done (took 29.249868621 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.277023526 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.278313529 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.277137288 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.274644083 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.278683058 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.274910536 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.277963212 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.278234767 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.277686318 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.278382666 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.276157313 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.276411138 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.282288092 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.282155437 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.279872749 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.278220507 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.421999224 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.280547263 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.279617371 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.278679794 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.275785853 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.282654827 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.295797022 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.276095317 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.277053456 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.278954521 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.279539583 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.278449802 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.278841153 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.278712222 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.281547026 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.280137062 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.277742797 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.280911749 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.277425908 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.280974511 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.282005608 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.279811282 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.27657945 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.279804982 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.28710315 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.295946535 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.279005208 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.285422189 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.298900063 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.280289911 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.281482852 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.285053556 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.278949765 seconds)
  done (took 64.072031151 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.280290691 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.279736257 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.278318367 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.280459606 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.28023252 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.27950346 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.280933734 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.280938177 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.278783398 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.278006251 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.281621124 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.28034735 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.276621268 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.281708734 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.281069629 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.277980612 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.279254377 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.278967228 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.278895088 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.278394908 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.27876575 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.280911703 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.28218653 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.27860735 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.282324003 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.279333861 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.279329095 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.282183537 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.279458652 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.278897283 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.28183056 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.28311221 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.282582554 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.280709906 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.279402566 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.282286391 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.28208014 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.279589562 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.283882464 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.278623969 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.282680617 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.282822645 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.283422293 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.284855171 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.281735224 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.281008142 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.28046934 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.280545281 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.28138602 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.283223185 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.283396509 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.281153937 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283345106 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.281005642 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283525998 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.283194473 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.282570479 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.282161119 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.283528197 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.281229742 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.282433817 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.28398788 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.282575226 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.283960346 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.283439904 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.282332122 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.281336609 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.284906535 seconds)
  done (took 88.316901733 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284496312 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.284212143 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283957802 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283851455 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.282903555 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.284368522 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.282672625 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.283920711 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.284549774 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.284405737 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.285665969 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.284866394 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.283602984 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.285398678 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.28544926 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.285516422 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.283868934 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.284852353 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.285781873 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285127767 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.285939444 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.285504267 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.286179627 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286390881 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.285710455 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.284644946 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.285478534 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.285367012 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285766406 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.285854187 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.286680754 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.284323623 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.285701117 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.286525774 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.286687594 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.287180765 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285704784 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286829782 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.286978088 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.285817278 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.286473744 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.286017938 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.287003335 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.287256512 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.285445402 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.285272635 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.288320311 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.284258008 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.284031495 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.283637179 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.283470751 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.285474241 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284137299 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.28423359 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.285237898 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.285117636 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282918324 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.283475379 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283920467 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.285454075 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.283906353 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.284862918 seconds)
  done (took 80.879169986 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284200902 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.284367443 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.28289181 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.28204487 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.284593206 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.282556309 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.285546067 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.284822621 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.285092483 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.284382624 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286411384 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282013842 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283380313 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285513324 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.28263213 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282448845 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283332159 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.282391153 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285384368 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.283692626 seconds)
  done (took 26.87583827 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.282854647 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.286145235 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.2834072 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.283579272 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.286339082 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.283000511 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.284863093 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286544536 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282522266 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286585284 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.28626923 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286876617 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283109448 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.283806494 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.287189219 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.284421051 seconds)
  done (took 21.757789976 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.283286363 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.286451801 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.286114956 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.285593161 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.285397334 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.283993523 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.287510661 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.284726211 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.285802291 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.28757194 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.287472147 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.287194829 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.28765388 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.287342546 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.284816934 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.288432998 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.286939264 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.285701903 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.287956381 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.287582184 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.286811659 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.286217395 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.288235772 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.287671961 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.285559344 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.285623902 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.28520334 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.287799818 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.285581608 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.288738846 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.286395417 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.286932428 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.285893046 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.285824924 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.288576417 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.286272342 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.289446157 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.289433703 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.288653965 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.28888805 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.289268872 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.287296746 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.288985934 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.289062769 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.286061214 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.29012979 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.286954064 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.286631289 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.286005735 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.287526799 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.28936839 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.290106482 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.28996448 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.290021706 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.29097185 seconds)
  done (took 72.001593751 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290727197 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.289722678 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.286922717 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.28994529 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.289760391 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.287659535 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.291013736 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.289599136 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.287433287 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.289956342 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.290086875 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.292048915 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.289355592 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.292170466 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.289239767 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292145589 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.288529585 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.287624323 seconds)
  done (took 24.417680433 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.287576439 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.289015258 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.291516129 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.289132202 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.289558282 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.290878674 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.289320012 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.291245635 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291752699 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.290112788 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289557895 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.291414957 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290926128 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.291989842 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.290188112 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289791174 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.292494414 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.292019225 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.290682629 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.290000443 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.292980811 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292940155 seconds)
  done (took 29.600015078 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.29230566 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.290555427 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.292371848 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.30673671 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.307433897 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.31111752 seconds)
  done (took 9.005998914 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297616593 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292326201 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290439524 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293858215 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291824081 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290813373 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290665413 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291781188 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292563638 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291430402 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289944894 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292680436 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293978158 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29169023 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293946015 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29360336 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29036846 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291345852 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292375353 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293043024 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291210469 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294671059 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291283464 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291617541 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29178907 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291781125 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294204678 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292627839 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292318795 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293932645 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295272568 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292003338 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294582872 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293594122 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295811253 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295517246 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292632656 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295280916 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295499277 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292503092 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.296067989 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295380157 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295495763 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293941702 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295159174 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292669051 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292123329 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292329383 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293218009 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296218718 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295347438 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293104664 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295568211 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295274432 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295130877 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296486062 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293919419 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294074879 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295994306 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295612843 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294000315 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296772737 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292716852 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294333516 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296869365 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294385353 seconds)
  done (took 86.606464356 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294470489 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.295313179 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294187336 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296085213 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295285183 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293958592 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294625586 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295061086 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296039791 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295349651 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298434225 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29499344 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295904006 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295472371 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295311884 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295387125 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294860905 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295785451 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294662451 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298286352 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296248055 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295827152 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296133967 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296525333 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297351759 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298862817 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296627037 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295801982 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296025982 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295541327 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297023892 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295823223 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29536192 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295772516 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295897545 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29519722 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296662747 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297479797 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296587137 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299025549 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296886343 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300540363 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296238427 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296703412 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29633632 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296590293 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297034492 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298080561 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296716233 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298238794 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299094961 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297979232 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298036071 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297329324 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297887326 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296803989 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295698806 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295702467 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297481686 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299089095 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296378195 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296062741 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300065389 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298085504 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296760409 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297165665 seconds)
  done (took 86.783953982 seconds)
done (took 1753.467537064 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.321488743 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.278893057 seconds)
  done (took 13.813975085 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.4590724 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.416839135 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.297715496 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.350170924 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.298185996 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.297288176 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.318647057 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.297950246 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.299879481 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.292342984 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.292385573 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.480231289 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.289914931 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.288605497 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.289329099 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.383725454 seconds)
  done (took 42.567257201 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.316347619 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.296377169 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.400689006 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.31436526 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.314010676 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.468196686 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.347397092 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.294826466 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.452874315 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.339041213 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.754863671 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.311535611 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.295296127 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.335750004 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.309814738 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.466356005 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.52957212 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.783851943 seconds)
  done (took 29.535765102 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.704537364 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.315093734 seconds)
  done (took 9.225527718 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.285814358 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.326469709 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.317095902 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.322282097 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.316069165 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.292037969 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.296345317 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.368735942 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.29304833 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.358095606 seconds)
  done (took 64.382173233 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.292846773 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.275763464 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.275660898 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.274966071 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.276082928 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.267983409 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.275111719 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.270239982 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.72187241 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.388982044 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.274301596 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.278831296 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.290027282 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.271770996 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.269817565 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.304415023 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.420888368 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.27172134 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.266445628 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.275942468 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.270253979 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.380185172 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.307826416 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.26746018 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.385411875 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.70688018 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.269664733 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.275052092 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.389132247 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.267151181 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.267027048 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.267404758 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.269196814 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.870464481 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.770791022 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.278408046 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.289505548 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.276819589 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.266030902 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.432740961 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.2692664 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.275474963 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.261095178 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.757468538 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.398818755 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.375959224 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.381729512 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.285051048 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.268793406 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.32521102 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.26922148 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.269835781 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.296994437 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.996479154 seconds)
  done (took 107.372736395 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.294442983 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.650940629 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.42699636 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.278348618 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.871484089 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.934899303 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.27522796 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.527928568 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.328283426 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.261469131 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.546708635 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.743162046 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.277302078 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.263238949 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.894345962 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.326339357 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.261800771 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.978026743 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.278174589 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.262621631 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.744674473 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.262713264 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.262532699 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.420244917 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.298728628 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.69516127 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.635648645 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.552136569 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.279645012 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.263868336 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.704706283 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.282707603 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.268079152 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.262384282 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.512709264 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.594483378 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.591226841 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.278182611 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.306007327 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.265142236 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.284515034 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.689177042 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.597124813 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.278847183 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.262236303 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.710317402 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.277053721 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.265733639 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.264087575 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.458748814 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.875496181 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.261296016 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.524742635 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.252465076 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.627246704 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.337389432 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.316956694 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.71181922 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.265819714 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.184066795 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.285789797 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.250945302 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.257622679 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.256170707 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.250277388 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.576960076 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.368015903 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.258035615 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.574802197 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.701475081 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.266842592 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.769988797 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.154379888 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.273314713 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.352936198 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.251430681 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.769684474 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.721262281 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.282528675 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.252458584 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.562994857 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.266611171 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.524178675 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.265704499 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.253021532 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.757060852 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.256206681 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.291633398 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.253099247 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.252455987 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.879882301 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.25341949 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.525602439 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.30476076 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.253161129 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.25278034 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.270156331 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.253374286 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.267642407 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.253731845 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.755017732 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.269848788 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.209750307 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.268454809 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.260855876 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.253220988 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.253732781 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.252975344 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.466793254 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.771511577 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.271074288 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.253670744 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.25351319 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.273483099 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.412663633 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.259716038 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.541224906 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.272107452 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.253667765 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.257813794 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.962174471 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.288469654 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.255091555 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.259805624 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.129140534 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.467977249 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.270739487 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.255493042 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.256482547 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.281487074 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.417678435 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.273575168 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.278071478 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.258764445 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.932789856 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.300712087 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.270899389 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.517698392 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.260379883 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.096712601 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.277395693 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.254207398 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.5517785 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.512622718 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.295331444 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.25843146 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.271829163 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.927772242 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.299336091 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.401571417 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.273954407 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.300794497 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.454995575 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.56091035 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.256649222 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.881368967 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.258335843 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.466170093 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.255560761 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.564699301 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.723904989 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.27374103 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.264364381 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.933856162 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.93944363 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.939347496 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.25797112 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.522077763 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.235064687 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.735712929 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.257171029 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.257803304 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.676397796 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.259027702 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.260615412 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.258502219 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.259489956 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.400536134 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.429377578 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.451359713 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.259264527 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.688192525 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.282482574 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.259265385 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.279509443 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.261898587 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.604149136 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.332237099 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.257880002 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.270728491 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.258710352 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.260060638 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.71358181 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.201068372 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.259574866 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.40942097 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.863781911 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.274428862 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.259618385 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.924004826 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.531768157 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.749255023 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.332183819 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.547905257 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.276237536 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.294463758 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.807934471 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.292886132 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.711332505 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.275988581 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.260040468 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.825041188 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.276038726 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.612811973 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.260565946 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.26303019 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.783986166 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.27478581 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.265289652 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.432255425 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.278038147 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.518413614 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.26153693 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.296265796 seconds)
  done (took 1091.723293642 seconds)
done (took 1359.831730656 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.262139304 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.261098006 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.246728965 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.266917631 seconds)
  done (took 26.218477172 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.270496838 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.267141079 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.26885493 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.266368049 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.270139022 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.266274336 seconds)
  done (took 8.789827823 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.334758647 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.262802621 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.268602898 seconds)
  done (took 19.047803608 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.458744692 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.516544747 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.600159765 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.410335481 seconds)
  done (took 10.168379594 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.268645609 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.267826576 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.269230201 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.270206979 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.272253103 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.27232396 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.270879263 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.271910727 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.27275522 seconds)
  done (took 12.618240923 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.039065422 seconds)
done (took 83.063543572 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.262835578 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.090813759 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.262436568 seconds)
    (4/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.968244342 seconds)
    (5/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.243246722 seconds)
    (6/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.269471811 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.502144076 seconds)
    (8/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.287184795 seconds)
    (9/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.289912269 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.30348944 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.886686333 seconds)
    (12/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.472760726 seconds)
    (13/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.122759083 seconds)
    (14/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.294268135 seconds)
    (15/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.288507998 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.289510267 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.881328616 seconds)
    (18/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.244390422 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.302446774 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.162056441 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.639100576 seconds)
    (22/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.613896111 seconds)
    (23/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.263805455 seconds)
    (24/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.265039599 seconds)
    (25/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.295211176 seconds)
    (26/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.429238044 seconds)
    (27/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.790851437 seconds)
    (28/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.847962846 seconds)
    (29/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.333770349 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.395278235 seconds)
    (31/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.079638747 seconds)
    (32/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.300188943 seconds)
    (33/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.245466054 seconds)
    (34/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.246084945 seconds)
    (35/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.187279056 seconds)
    (36/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.441003601 seconds)
    (37/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.764626969 seconds)
    (38/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.246577267 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.37713377 seconds)
    (40/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.24602379 seconds)
    (41/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.261144766 seconds)
    (42/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.598133619 seconds)
    (43/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.443093677 seconds)
    (44/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.290528375 seconds)
    (45/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.957923556 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.349135681 seconds)
    (47/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.266818402 seconds)
    (48/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.45174601 seconds)
    (49/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.575041447 seconds)
    (50/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.051090836 seconds)
    (51/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.942401449 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.339516595 seconds)
    (53/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.315787877 seconds)
    (54/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.327458381 seconds)
    (55/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.034024237 seconds)
    (56/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.247338217 seconds)
    (57/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.619513415 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.306195712 seconds)
    (59/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.476402969 seconds)
    (60/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.398813072 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.620665435 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.28331129 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.628011292 seconds)
    (64/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.307382675 seconds)
    (65/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.696973255 seconds)
    (66/309) benchmarking ("sort", Int64, false)...
    done (took 5.433534028 seconds)
    (67/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.282985342 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.832190484 seconds)
    (69/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.247304472 seconds)
    (70/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.26631768 seconds)
    (71/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.606274294 seconds)
    (72/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.616051385 seconds)
    (73/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.393335381 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.156737189 seconds)
    (75/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.348760982 seconds)
    (76/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.246840076 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.266882642 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.698222369 seconds)
    (79/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.622266031 seconds)
    (80/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.248187312 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.279049443 seconds)
    (82/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.380721051 seconds)
    (83/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.247737103 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.017182813 seconds)
    (85/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.328101154 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.72142093 seconds)
    (87/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.981694908 seconds)
    (88/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.291926786 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.138702262 seconds)
    (90/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.483294774 seconds)
    (91/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.250022787 seconds)
    (92/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.550152126 seconds)
    (93/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.465577121 seconds)
    (94/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.283572542 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.286648445 seconds)
    (96/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.249621777 seconds)
    (97/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.353104524 seconds)
    (98/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.294216752 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.990507641 seconds)
    (100/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.208344118 seconds)
    (101/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.24881398 seconds)
    (102/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.667493201 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.350358435 seconds)
    (104/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.269227154 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.364129046 seconds)
    (106/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.353858047 seconds)
    (107/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.332492948 seconds)
    (108/309) benchmarking ("sort", Bool, false)...
    done (took 1.778515095 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.308578886 seconds)
    (110/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.263343185 seconds)
    (111/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.529769747 seconds)
    (112/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.332549387 seconds)
    (113/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.248970215 seconds)
    (114/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.005886857 seconds)
    (115/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.295676147 seconds)
    (116/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.534292621 seconds)
    (117/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.474182039 seconds)
    (118/309) benchmarking ("sort", Int8, false)...
    done (took 4.336306096 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.27073353 seconds)
    (120/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.41792294 seconds)
    (121/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.757699395 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.537881292 seconds)
    (123/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.2809083 seconds)
    (124/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.355733615 seconds)
    (125/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.401442095 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.103218578 seconds)
    (127/309) benchmarking ("sort", Float64, false)...
    done (took 5.527804418 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.324245777 seconds)
    (129/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.265920987 seconds)
    (130/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.895626851 seconds)
    (131/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.610270424 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.275582309 seconds)
    (133/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.870499212 seconds)
    (134/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.271147566 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.999993292 seconds)
    (136/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.297362048 seconds)
    (137/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.2520729 seconds)
    (138/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.3816246 seconds)
    (139/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.430156379 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.271174269 seconds)
    (141/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.289055254 seconds)
    (142/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.280236604 seconds)
    (143/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.310759864 seconds)
    (144/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.299020591 seconds)
    (145/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.994339252 seconds)
    (146/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.35484209 seconds)
    (147/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.63029455 seconds)
    (148/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.355202807 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.374635879 seconds)
    (150/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.357415282 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.617260019 seconds)
    (152/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.266434428 seconds)
    (153/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.281895102 seconds)
    (154/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.380234391 seconds)
    (155/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.077634003 seconds)
    (156/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.277488134 seconds)
    (157/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.299304041 seconds)
    (158/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.804616922 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.16029515 seconds)
    (160/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.512287598 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.315233088 seconds)
    (162/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.252291328 seconds)
    (163/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.011049736 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.306018716 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.277260923 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.274308479 seconds)
    (167/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.011931395 seconds)
    (168/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.515184554 seconds)
    (169/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.272487614 seconds)
    (170/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.055343868 seconds)
    (171/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.355389834 seconds)
    (172/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.254059585 seconds)
    (173/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.123016567 seconds)
    (174/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.292003498 seconds)
    (175/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.966870248 seconds)
    (176/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.591871421 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.89089819 seconds)
    (178/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.652279572 seconds)
    (179/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.317351826 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.667601643 seconds)
    (181/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.268064196 seconds)
    (182/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.307953759 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.276465881 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.332103653 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.176855014 seconds)
    (186/309) benchmarking ("sort", BigInt, false)...
    done (took 6.274829221 seconds)
    (187/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.269393068 seconds)
    (188/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.444597632 seconds)
    (189/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.001315035 seconds)
    (190/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.872714177 seconds)
    (191/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.33798936 seconds)
    (192/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.255467441 seconds)
    (193/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.608600878 seconds)
    (194/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.301262285 seconds)
    (195/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.279611798 seconds)
    (196/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.302502941 seconds)
    (197/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.575939601 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.568784596 seconds)
    (199/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.254923831 seconds)
    (200/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.478318249 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.694908434 seconds)
    (202/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.410178329 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.33303927 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.885451071 seconds)
    (205/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.279741237 seconds)
    (206/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.374111153 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.677599126 seconds)
    (208/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.361444301 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.319687974 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.25597723 seconds)
    (211/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.120342366 seconds)
    (212/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.067287912 seconds)
    (213/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.307454959 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.722479925 seconds)
    (215/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.256874437 seconds)
    (216/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.291146982 seconds)
    (217/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.07242068 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.392039923 seconds)
    (219/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.265747893 seconds)
    (220/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.317734129 seconds)
    (221/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.307730103 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.255968848 seconds)
    (223/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.258393991 seconds)
    (224/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.621222249 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.384640827 seconds)
    (226/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.400956359 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.902432487 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.48711523 seconds)
    (229/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.257382117 seconds)
    (230/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.256566855 seconds)
    (231/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.257441288 seconds)
    (232/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.884048861 seconds)
    (233/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.648213656 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.81668393 seconds)
    (235/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.317271835 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.301944177 seconds)
    (237/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.264649182 seconds)
    (238/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.288564391 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.375626185 seconds)
    (240/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.541563567 seconds)
    (241/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.385152129 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.317585543 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.296166766 seconds)
    (244/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.828486669 seconds)
    (245/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.258298046 seconds)
    (246/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.638314978 seconds)
    (247/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.409088075 seconds)
    (248/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.817224219 seconds)
    (249/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.384416887 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.289910349 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.296865486 seconds)
    (252/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.519426904 seconds)
    (253/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.681079113 seconds)
    (254/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.258374266 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.686537789 seconds)
    (256/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.298471442 seconds)
    (257/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.276240573 seconds)
    (258/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.321865008 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.16466226 seconds)
    (260/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.364567491 seconds)
    (261/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.2595239 seconds)
    (262/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.258631964 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.482662263 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.696346246 seconds)
    (265/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.466303285 seconds)
    (266/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.301324508 seconds)
    (267/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.259506978 seconds)
    (268/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.094346564 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.306152385 seconds)
    (270/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.659265691 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.31153544 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.664659088 seconds)
    (273/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.306413834 seconds)
    (274/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.354487131 seconds)
    (275/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.882320551 seconds)
    (276/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.386170363 seconds)
    (277/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.289042331 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.283576595 seconds)
    (279/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.843657847 seconds)
    (280/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.261018 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.768148957 seconds)
    (282/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.388302044 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.683206643 seconds)
    (284/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.154974927 seconds)
    (285/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.98892079 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.697694172 seconds)
    (287/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.635054199 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.36363676 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.362624048 seconds)
    (290/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.260689463 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.114764206 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.39047543 seconds)
    (293/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.363038269 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.267752254 seconds)
    (295/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.279578622 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.114999819 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.180649138 seconds)
    (298/309) benchmarking ("sort", Float32, false)...
    done (took 5.27537315 seconds)
    (299/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.26214229 seconds)
    (300/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.420425027 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.322214696 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.11312586 seconds)
    (303/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.477103403 seconds)
    (304/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.299702081 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.305754038 seconds)
    (306/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.405266146 seconds)
    (307/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.282014357 seconds)
    (308/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.315787247 seconds)
    (309/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.880155342 seconds)
  done (took 1011.96877771 seconds)
done (took 1013.154399452 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.31539061 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.310459788 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.293066855 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.314897857 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.404211589 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.32086344 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.303043412 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.294275079 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.341187355 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.342730941 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.290902808 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.320305924 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.295360526 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.292758108 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.294010924 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.308804444 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.289529928 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.29457126 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.311428207 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.304445222 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.310965506 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.292711636 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.343071284 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.320098818 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.297703335 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.297633833 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.297218181 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.314442104 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.406870485 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.297706949 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.297660269 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.304974012 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.290858423 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.294187008 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.290350476 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.314805095 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.306099126 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.304221216 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.298818238 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.326206774 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.67635103 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.310136713 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.296515076 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.294909793 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.295491374 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.300622387 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.296697344 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.302908138 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.309475991 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.311269621 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.665293062 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.327223839 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.298857499 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.296959596 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.30750851 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.295822419 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.300886902 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.313909807 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.316972859 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.314106836 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.279607694 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.30102348 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.298488404 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.313371341 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.305597773 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.708418913 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.308370323 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.302190607 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.679232633 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.320146045 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.707690315 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.322053748 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.298697528 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.311038034 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.327928757 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.29444474 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.291986211 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.296628494 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.304275069 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.297592879 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.307846885 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.312108018 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.303719172 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.298815668 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.311820046 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.324465939 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.308798161 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.29948646 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.308542409 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.318851745 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.3054603 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.309756089 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.303222359 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.295428347 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.308706603 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.302627788 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.30099862 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.302259234 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.305250069 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.310189528 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.679025838 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.333455105 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.296808878 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.296154322 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.297431947 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.313370567 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.679329559 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.316379662 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.321577703 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.346383863 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.301490847 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.281280692 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.304295945 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.317960473 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.308820247 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.303221957 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.296827174 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.28407895 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.674663941 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.330939622 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.302965779 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.29921873 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.318122776 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.303798624 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.297217012 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.301992822 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.302696718 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.316042005 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.421256709 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.312352561 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.333379315 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.300691893 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.304283596 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.328077125 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.31929593 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.333170715 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.305113235 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.319547266 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.3189119 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.299105209 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.312506034 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.311630742 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.302083098 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.308181864 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.295986961 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.328698541 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.315653043 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.316090849 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.322970918 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.422580971 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.299957846 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.287849379 seconds)
done (took 219.340441425 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.362303961 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.298041586 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.385418197 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.300167378 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.401073642 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.414451707 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.297663623 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.297564083 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.297202135 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.674892055 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.298106082 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.29578121 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.295875707 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.296985148 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.391165042 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.300855031 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.29751503 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.638729054 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.3015125 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.374109646 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.300751479 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.298005859 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.29887756 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.679442936 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.296465049 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.2986124 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.382865557 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.30054482 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.705980382 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.298166669 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.300492801 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.707531731 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.402591422 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.318695906 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.309396628 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.308994006 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.408248375 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.317069625 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.391833385 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.383191357 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.400264304 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.340826231 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.297031665 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.302085486 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.302817341 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.302563106 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.298662605 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.32842371 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.298317606 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.30046296 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.640533226 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.310896087 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.300227208 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.300947358 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.300357133 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.332208072 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.300585897 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.303394399 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.395396324 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.30359473 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.377373905 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.6813435 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.67843706 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.303411424 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.302884717 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.300891995 seconds)
  done (took 146.4433118 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.367472375 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.37588952 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.413069236 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.320520156 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.353215039 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.41897063 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.320274918 seconds)
  done (took 10.783356135 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.310157328 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.304327944 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.352897452 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.353259763 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.303826843 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.451272258 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.304146869 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.314838405 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.302590421 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.355417114 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.306337862 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.305352732 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.311712005 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.298704355 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.352886814 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.315570973 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.41946655 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.306659288 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.305271893 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.455095497 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.303080787 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.311509759 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.354813969 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.316528712 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.307116075 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.309560932 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.877942136 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.30528526 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.302886714 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.305187143 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.303630514 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.342266386 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.305313202 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.303252764 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.303424989 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.421157266 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.305748329 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.303176254 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.307088533 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.304246966 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.305728601 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.306288473 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.3060497 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.303524823 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.30717304 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.328233613 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.307166519 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.307185558 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.30657093 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.307180321 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.356203829 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.307229528 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.30491367 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.304885797 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.363039187 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.313189762 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.308042326 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.30460421 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.307859686 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.305903458 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.457898428 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.353753357 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.307492063 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.353455585 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.308539411 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.308238511 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.308346241 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.307754841 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.360657537 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.309020272 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.354945201 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.306637904 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.460821109 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.330078585 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.309843216 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.309654985 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.310415897 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.309054147 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.305247547 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.313669845 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.306269968 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.309684938 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.314315192 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.307124634 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.304761707 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.409840117 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.41869522 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.306088619 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.320592793 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.315527308 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.308262109 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.361583441 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.309488411 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.30568034 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.359620495 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.423729881 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.363170171 seconds)
  done (took 150.531601847 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.313259157 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.318124477 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.310576869 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.326568877 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.309903304 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.309203968 seconds)
  done (took 9.107486711 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.312466871 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.311086416 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.310931765 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.310575475 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.309466282 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.311804713 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.30989348 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.312401405 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.314550742 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.31056154 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.311548494 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.312361107 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.312921108 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.310321595 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.311627718 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.310795663 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.311648203 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.309848314 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.31130572 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.310961339 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.40655927 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.311485861 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.31131445 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.312936752 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.317004008 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.31290353 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.322835375 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.313220276 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.311349214 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.316736747 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.330957186 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.314203593 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.314463595 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.317944866 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.316212178 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.315077571 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.316315419 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.31285933 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.311016148 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.313139568 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.313527798 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.313309193 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.314261649 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.313829666 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.315113712 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.319042815 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.317699266 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.322772337 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.3141825 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.314936162 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.31586025 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.315168931 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.314342358 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.314428861 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.316615018 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.333718323 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.317601193 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.315108023 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.313215638 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.314940373 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.315880981 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.317126137 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.317281604 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.318429413 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.322167833 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.314816606 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.315289725 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.319211081 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.314763716 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.315633946 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.315607428 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.31249943 seconds)
  done (took 96.976300009 seconds)
done (took 415.051490869 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.629283397 seconds)
  done (took 7.854235588 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.366914219 seconds)
  done (took 7.594955054 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.298922627 seconds)
  done (took 21.524274678 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.332066062 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.329239589 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.334408982 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.317847052 seconds)
  done (took 26.538044106 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.51742909 seconds)
  done (took 7.74020829 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.303888818 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.334600144 seconds)
  done (took 13.863835508 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.697349196 seconds)
  done (took 7.920456612 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.486008005 seconds)
  done (took 7.711206537 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.733998772 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.321259719 seconds)
  done (took 14.536563226 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.286943577 seconds)
  done (took 7.511855109 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.331124544 seconds)
  done (took 8.555734781 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.320031308 seconds)
  done (took 7.544196032 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.384446037 seconds)
  done (took 7.608976091 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.184352172 seconds)
  done (took 9.409259021 seconds)
done (took 157.140113432 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.308100531 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.307916005 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.310378992 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.30623567 seconds)
  done (took 26.457500696 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.34884519 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.347723623 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.350224429 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.35894293 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.351972863 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.347887474 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.341740458 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.341999511 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.360614728 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.351911273 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.350268113 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.351348652 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.35043075 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.342159314 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.350942714 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.350182163 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.360775003 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.350318678 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.341848785 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.353546773 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.318517864 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.360825971 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.352917209 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.317410515 seconds)
  done (took 33.580074665 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.835835725 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.386589937 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.468848093 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.368471835 seconds)
  done (took 7.285815929 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.367941765 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.369578312 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.380278272 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.42060864 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.457253802 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.379176858 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.343508586 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.339551799 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.326593537 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.371549034 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.446035384 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.387478353 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.45778462 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.317819253 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.497611302 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.317677921 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.317053002 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.369711923 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.423572196 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.43512482 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.319052547 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.370393979 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.373640146 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.387982421 seconds)
  done (took 34.403998903 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.317448153 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.326658278 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.317734916 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.316970036 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.328479084 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.318310502 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.318190193 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.318863349 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.317330435 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.324346271 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.316774408 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.331105108 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.31698017 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.317953652 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.324526497 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.319890616 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.32496578 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.317008692 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.318989857 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.322794221 seconds)
  done (took 27.644631926 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.311742391 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.166671175 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.662982667 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.569443566 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.314545177 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.312721856 seconds)
  done (took 27.56750852 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.386419636 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.53054565 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.319409602 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.667543119 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.757517229 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.335593526 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.3195184 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.553581611 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.863256006 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.85389225 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.380890899 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.384311783 seconds)
  done (took 19.581634776 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.314707286 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.313378423 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.326904827 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.329445661 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.372151496 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.338372054 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.32764639 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.313890709 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.379506655 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.393028904 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.338104999 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.373751263 seconds)
  done (took 37.352100423 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408001255 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.357840082 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.206373203 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.32017528 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.034502461 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.527576734 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.374737418 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.781142291 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.326983067 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.589258291 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315971359 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412300793 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.571456844 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31625796 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.322227241 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.27270635 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.563745973 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776458573 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318362375 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.221739936 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348513095 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.325003819 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.314773238 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.349724904 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.528778289 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.45975065 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.578317402 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.099000917 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.606342532 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.329110012 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328158526 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.316705897 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592244046 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984053906 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438736704 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328840383 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322006575 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.880761455 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.297569055 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.229596278 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.221482262 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.320619047 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329370017 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319214921 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.2528852 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318737967 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.769236724 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.329184673 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.029728063 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.318708994 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.330946964 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413280698 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.321918256 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.889347103 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.322242922 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.32646926 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.318389978 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344084231 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906189668 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.702712902 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.328301581 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.253716827 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.326257933 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.346878936 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940192933 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.437388683 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.32352306 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.32326627 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254213477 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.2849796 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.339965435 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481958807 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.343211079 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.952865533 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013417568 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.342292325 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.251171271 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83980724 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.327316979 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.261899169 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.548483223 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.096598144 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.256264319 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.266008707 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.255242815 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990929138 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330495464 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.661296593 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.347361652 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.778646337 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.336700677 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342386574 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345524542 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.544870083 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.200834437 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320285557 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.251304679 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468875878 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34343044 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.759125912 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263608672 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.326501242 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.577764599 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.53470814 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.324556576 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.304113718 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543479179 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343164662 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.34212081 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.333384033 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.338568991 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.889840442 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.351178867 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.714114646 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346582445 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.098263953 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015601525 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327504687 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.430135647 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.325573554 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.563937265 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.048163088 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.207145334 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390920332 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328428031 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.324277811 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.339514795 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.921359605 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.204912459 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.319739099 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.32824922 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.340231373 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.324471422 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270027945 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.321197397 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339858566 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.103877413 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.548218511 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338031591 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605295531 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.259125012 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472939486 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.334605178 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.546867535 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.510475984 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.341006731 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.584623704 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326495059 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.347379885 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.355664297 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344663342 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427638829 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34618138 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.325475855 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.583326865 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.329787872 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.330240347 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.350359238 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.109020536 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32546162 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.330951409 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328103009 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915271273 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321599319 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.330557233 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.214382559 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.341194859 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394278848 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.333209716 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.336896267 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.138803904 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348524897 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.348722961 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.325976437 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550350552 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.336951853 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.348529999 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411659193 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.522103595 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.901650386 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361885769 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.261229 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.038230498 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.02087959 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328128591 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.517103447 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.328166498 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337877906 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.338818454 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.327731318 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.905026684 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352197367 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.267347691 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.340052397 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.338847453 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.333988742 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328181302 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.106185279 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.753149769 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345199672 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.342275565 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472176138 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.342829799 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.26232532 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.845819001 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.335035117 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.328349102 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.106009525 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363389184 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.256884251 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.806907417 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.589303167 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.331260198 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.345305052 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.434823879 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.364839441 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.334582951 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.258293966 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363316007 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.345223741 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344014498 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.340488232 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.332143075 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.697698236 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895674372 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046574529 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88359951 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.261722283 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.33483388 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.24725415 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.777291566 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273259221 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.987176259 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.516227809 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.795410184 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282700138 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.531268631 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.53022606 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.109387483 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.343879065 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.559321254 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238015197 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.284658796 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367563316 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.542043754 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366348514 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.332939351 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.266880804 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.848903375 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568910915 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.251075744 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415159668 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.774645226 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.268067256 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.133297924 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.365438144 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.6262378 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523772157 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.884291628 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.719526035 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.332800596 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.339048293 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.812198689 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.3376507 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.859765274 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950378237 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.358693455 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.537231357 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276939915 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.344590667 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.344337598 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.329915919 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.608756782 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.344392913 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.587366894 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.345149384 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268390654 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.342192184 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858848131 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.223992671 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.338754853 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334479754 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044805647 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338635775 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.62772893 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.354091228 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.094441298 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353313425 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.268447744 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268452974 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.028587741 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.344654362 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30877965 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814596312 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.355005683 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361902657 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354930428 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187219942 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.589105704 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.34841246 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.906980937 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.584607289 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.334847178 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3616034 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.435261949 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320539954 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.338928051 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.236120839 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.571075564 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338523918 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.56751372 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.259794721 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.241390364 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.361436483 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572683949 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.22155735 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.340702282 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592856852 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.074187078 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.359908016 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05594223 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385095247 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.346620636 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.356271505 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.347912136 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36280633 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425041418 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.346772118 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.347666221 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.348060944 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504935932 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347441341 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.346209777 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.352315004 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431741691 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.766941144 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.1130328 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.111832491 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916468715 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083085983 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.93520081 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373579548 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.338129249 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33896365 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272756037 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49062765 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.864045584 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611899145 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468086545 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.346982085 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368991051 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.330064291 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380518519 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.557807074 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61516981 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.310757831 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342528876 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.131817383 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.221793819 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.350184044 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.549538424 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823315191 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890292857 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461349547 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.351314449 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.788191704 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622021414 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.398479607 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.34000072 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.928846305 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.347666703 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.633386728 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.369307809 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343307092 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493115653 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.349864865 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007206542 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.376034177 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.501321054 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.113365131 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.384376307 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.60424411 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.800615571 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.352756649 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921117452 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.054042563 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607696993 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411211225 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.350601835 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.445788024 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48868668 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.338664586 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.259138223 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341022298 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188539869 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.051662954 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.351906275 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926825003 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627703279 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.339328402 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.341265193 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37235798 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.351369495 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.564216022 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013678848 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.573626234 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.355204459 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.351963881 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.913005275 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921729071 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372106301 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276292029 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.347699408 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59077203 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.597092511 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364959524 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.819852588 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.055549553 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870743051 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.314898918 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364059883 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35555328 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.045522006 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930390209 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.125897376 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829785659 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.002022874 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343244097 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640026299 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.347883846 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.344230223 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626586473 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.347683121 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.351140018 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.362258118 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.922761398 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.119905571 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.359632235 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.333028376 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.287509425 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.569032163 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.344100516 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302454239 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347334441 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.516989853 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.352320531 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475522006 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357355203 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.344027106 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354616063 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.106814505 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.623849662 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.350366465 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.34462728 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.325737636 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.353605982 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376733281 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602944733 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349484964 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.028223815 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.696846684 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.600965337 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.356607639 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.33208987 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.349583244 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345811972 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.064807771 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.356400725 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.352157463 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890589413 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.358710099 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.363136351 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.352286015 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.562604351 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.558184917 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.349512147 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366864221 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346254804 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369089937 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.25138755 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.11526656 seconds)
  done (took 1637.376763379 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.353931189 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.347625985 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.351541203 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.374372458 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.381312121 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.406389261 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.388927256 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.393134695 seconds)
  done (took 52.256717265 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.35078779 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.502730665 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.377452185 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.352415722 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.360215177 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.355880386 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.803318167 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.371116877 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.356023524 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.358351838 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.358690655 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.362064617 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.981601183 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.364239841 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.355034086 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.350124209 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.364573098 seconds)
  done (took 65.587486886 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.347872144 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.931151841 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.447950316 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.352243552 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.393980815 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.374124513 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.132744586 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.420686841 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.350955315 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.683818872 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.01652767 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.379044366 seconds)
  done (took 85.093785453 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.358290846 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.35894103 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.356456245 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.35777384 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.358068884 seconds)
  done (took 8.053180262 seconds)
done (took 2063.467345709 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.61840324 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.025934777 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.981860195 seconds)
  done (took 5.271625617 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.502723321 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.551409722 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.671211199 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.677991815 seconds)
  done (took 7.672103302 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.643631952 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.729217142 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.54704561 seconds)
  done (took 6.189011657 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.761366403 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.361901142 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.391979998 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.353584086 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.362555625 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.363132876 seconds)
  done (took 20.349574428 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.360448296 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.362999888 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.360112651 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.363192753 seconds)
  done (took 6.716214532 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.337230842 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.042080717 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.34135523 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.360782284 seconds)
  done (took 18.351574827 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.106680669 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.119784295 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.105904891 seconds)
  done (took 7.60202903 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.36775191 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.201914022 seconds)
  done (took 9.839587493 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.642625736 seconds)
  done (took 2.91230426 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.492638746 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.686752795 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.394760834 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.277217792 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.408078331 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.107192721 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.973997455 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.559785985 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.246366887 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.474172294 seconds)
  done (took 27.891696409 seconds)
done (took 131.193176623 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.128325944 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.733101584 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.562900243 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.137677741 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.588438131 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.564145567 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.562219611 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.102304409 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.643062453 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.594766823 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.130905612 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.589428319 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.721002456 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.731747108 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.730123242 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.730648897 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.590721202 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.142078089 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.768007479 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.001714601 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.564736579 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.712298663 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.942989616 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.727604844 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.588174501 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.512182001 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.284974678 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.732932555 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.923601063 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.299988611 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.51127179 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.16267397 seconds)
  done (took 190.988949751 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.35793558 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.373349823 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.356936035 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.37274287 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.36685064 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.357938842 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.376558543 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.376162876 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.385646185 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.357495393 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.358511275 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.364987825 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.356968178 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.359110338 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.357724518 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.357757206 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.358273003 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.3675683 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.369849243 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.357962747 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.358433392 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.374697341 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.374683525 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.363402335 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.358264453 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.359059653 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.358987358 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.375298994 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.358901871 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.360215846 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.360212698 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.359135126 seconds)
  done (took 204.923694233 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.358993953 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.365255869 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.360645848 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.360912067 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.360446123 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.377993282 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.378878411 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.36865637 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.367623723 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.359293899 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.359525041 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.359287941 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.376537821 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.360599191 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.362044474 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.377957611 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.386574254 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.374853681 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.362077394 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.360039564 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.361562125 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.361683704 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.361984277 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.361473808 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.361416913 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.37253331 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.375093701 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.362465485 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.377637644 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.360841782 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.375025281 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.361369096 seconds)
  done (took 205.005170116 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.563871572 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.368722427 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.369635705 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.329774048 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.370716732 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.37018725 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.365860975 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.558547354 seconds)
  done (took 14.572570871 seconds)
done (took 616.761379796 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.628096027 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.340039212 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.580461283 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.39300967 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.133134153 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.415936702 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.390449432 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.552836806 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.286997661 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.568106532 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.635121589 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.405569854 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.778112439 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.389673447 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.637283903 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.484990151 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.244638008 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.359100919 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.697161604 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.895582095 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.646607731 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.851278968 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.572598857 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.282645867 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.792609221 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.843263993 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.105935879 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.231608981 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.406529812 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.705186981 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.971707979 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.343246808 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.448165901 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.449679366 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.506385874 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.48641765 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.336192319 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.444005608 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.58456113 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.62421393 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.904298695 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.103414684 seconds)
  done (took 92.734025767 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.353051696 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.353800969 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.353860519 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.353466834 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.35542157 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.352870007 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.353148937 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.353352781 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.35421395 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.353993408 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.3543589 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.355194276 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.353685613 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.355758378 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.35342319 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.354038006 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.35614994 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.356420263 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.354137687 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.355347685 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.355614063 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.353413846 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.355462875 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.35497731 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.355590208 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.355607476 seconds)
  done (took 36.496023816 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.374378943 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.617853723 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.77394242 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.37980331 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.373357517 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.378457136 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.449045462 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.375250298 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.377289247 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.378775484 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.540229681 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.378038381 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.409730776 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.803849572 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.38431095 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.375290921 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.375567124 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.374459581 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.625712733 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.384746876 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.47202096 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.376951711 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.450768595 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.393727517 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.397286803 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.375688968 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.379414814 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.891620024 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.396202723 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.54071492 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.147746102 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.455299429 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.849905359 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.809249892 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.148802325 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.385393034 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.376859134 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.545023702 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.377469451 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.376551736 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.450855604 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.379328046 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.793292942 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.994244377 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.39375618 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.377867602 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.910257562 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.563724443 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.612777639 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.393538857 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.816987321 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.389102189 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.380716706 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.379284467 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.613728512 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.392595482 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.378674125 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.903636813 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.408435994 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.452804253 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.386319503 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.379015993 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.634094409 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.378634913 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.622048321 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.38034163 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.388088864 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.397762031 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.789108885 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.380965879 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.012419343 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.395215033 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.378899582 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.541007127 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.621806712 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.950985437 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.399135032 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.636654301 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.855109302 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.468763557 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.382398242 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.883688531 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.478587067 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.388012942 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.384326918 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.382410902 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.380173553 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.432128044 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.452340817 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.941008182 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.023438886 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.924962319 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.477993431 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.394532556 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.381682425 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.921183532 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.407259388 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.380776092 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.789222817 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.018430844 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.400081792 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.38894574 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.018069677 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.40816806 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.45754964 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.393872181 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.795914767 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.380483219 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.433163529 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.381552835 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.388291289 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.40340737 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.457729038 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.384491181 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.383277505 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.98576116 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.574611979 seconds)
  done (took 181.001719092 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.391049706 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.373541323 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.373765303 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.392513337 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.37474175 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.381976544 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.37476795 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.376365254 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.38240988 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.37575056 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.375214803 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.376543197 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.378421759 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.392619665 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.388320763 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.382744833 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.985029879 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.376468097 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.377542762 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.375849737 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.167317 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.385676095 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.376377956 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.376263978 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.376832818 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.377159288 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.37840669 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.378781648 seconds)
  done (took 153.310325628 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.384242426 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.933532359 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.408231305 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.509246861 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.411541753 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.382193903 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.508233156 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.44602011 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.403721558 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.382845433 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.381421635 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.676416074 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.385396482 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.882713494 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.569142017 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.533353951 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.888362386 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.404034164 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.382380484 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.383199472 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.512722384 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.394703257 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.679003209 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.936668628 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.404760386 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.936481122 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.37338322 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.383730025 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.383715749 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.934076561 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.399928654 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.678438878 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.459947073 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.443183889 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.953861396 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.900492635 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.9002078 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.527994947 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.390600769 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.384170925 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.385300151 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.368926051 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.937578065 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.411572559 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.386215204 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.928282542 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.412335233 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.387052241 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.393008343 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.383517192 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.444796095 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.464145707 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.701564321 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.943313927 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.475593353 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.398452727 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.513232464 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.775578538 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.389181497 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.886324271 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.368366146 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.94066855 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.404433233 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.371048127 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.387565488 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.390603181 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.52980642 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.520677605 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.895865671 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.404750884 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.886988779 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.547257243 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.393247197 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.385522444 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.38813961 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.940381228 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.905533708 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.547466321 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.522608753 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.578043477 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.380273086 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.386119968 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.37071277 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.461711632 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.390280142 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.942621313 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.906092302 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.406265639 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.389900788 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.388913243 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.389821118 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.557935135 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.966834706 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.479786161 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.878100326 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.701648372 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.685268361 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.390052743 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.446602953 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.406586061 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.687008404 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.390719958 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.445070661 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.837122278 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.688260014 seconds)
  done (took 164.795831876 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.62822947 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.597417385 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.477425883 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.524294496 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.980047585 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.938782008 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.607698665 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.527851716 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.495655836 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.643389828 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.509980994 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.479470789 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.55401905 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.469343853 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.119739018 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.478999919 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.494342788 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.540394759 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.501984314 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.426846452 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.026314046 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.665739881 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.55619577 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.223555691 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.476769122 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.154911858 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.940616654 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.921119863 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.565198477 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.725548606 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.90886024 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.527142814 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.329157073 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.052601887 seconds)
  done (took 66.366373521 seconds)
done (took 695.981024078 seconds)
SAVING RESULT...
DONE!
