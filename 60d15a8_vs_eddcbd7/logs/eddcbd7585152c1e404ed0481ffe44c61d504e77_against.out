cset: moving following pidspec: 11097
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.343385799 seconds)
loading group "string"... done (took 0.556715974 seconds)
loading group "linalg"... done (took 7.627718088 seconds)
loading group "parallel"... done (took 0.168980861 seconds)
loading group "find"... done (took 1.277372128 seconds)
loading group "tuple"... done (took 1.937092979 seconds)
loading group "dates"... done (took 1.412747692 seconds)
loading group "micro"... done (took 0.245249213 seconds)
loading group "io"... done (took 0.978765644 seconds)
loading group "scalar"... done (took 40.685694152 seconds)
loading group "sparse"... done (took 13.435651248 seconds)
loading group "broadcast"... done (took 1.034722937 seconds)
loading group "union"... done (took 14.206100537 seconds)
loading group "simd"... done (took 4.770339917 seconds)
loading group "random"... done (took 9.668868115 seconds)
loading group "problem"... done (took 2.004079957 seconds)
loading group "array"... done (took 22.671728478 seconds)
loading group "misc"... done (took 2.047768672 seconds)
loading group "sort"... done (took 3.448181391 seconds)
loading group "collection"... done (took 19.657520716 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.58352 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144771737 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150590107 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.131393147 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.205644963 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.157571684 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158304655 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098050272 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.997453591 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.181249972 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153507907 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.533850976 seconds)
done (took 5.249320048 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.217967861 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.097156192 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104445528 seconds)
  done (took 0.897057909 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.076954424 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146308347 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094756922 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078089844 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095182589 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077534735 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095483149 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077779259 seconds)
  done (took 1.366121385 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.088036254 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097306249 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082037424 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096993347 seconds)
  done (took 1.066736631 seconds)
done (took 4.333019628 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.742579276 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.274294444 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205043036 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.469115051 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.197029244 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.217489499 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.688405634 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.341749675 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253320942 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099385024 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143684631 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386745008 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13802285 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685077311 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.093404123 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125701972 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177133674 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.451483197 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082936019 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110118268 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.11601759 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142280579 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.13177625 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091521725 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.18391509 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.0818037 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19383067 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.10799893 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081360751 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.276447334 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200846865 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687306851 seconds)
  done (took 10.920860858 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115038883 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133142828 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09713399 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138386175 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136693944 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099277483 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084275568 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096026809 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121789262 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176622178 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.130833379 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121585082 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095047434 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082125484 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115113838 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246230765 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122116402 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099962634 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099877838 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088124022 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137324859 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114402112 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108989396 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094334665 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167195232 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223587516 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113007201 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129354194 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099127783 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11491212 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143664108 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14552463 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097366892 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081549132 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171378117 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126661406 seconds)
  done (took 5.181450546 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.106999633 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189984818 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12212865 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170514165 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081644822 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143501767 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094568939 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113141742 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257296574 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.12879686 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.485485057 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142473397 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099692108 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099584912 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082583498 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.112624258 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098398454 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.635427314 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.122568792 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.150019589 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114651635 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102599007 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.088334778 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.375565106 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095498959 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080303158 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097996885 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066150342 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161994794 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097966213 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.146246563 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.100276104 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103310544 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133476625 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19961635 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126236968 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.122913207 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079644716 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.135374685 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.094378156 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175786012 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087451435 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095307797 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080328055 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121257413 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132626228 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118080638 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098690761 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096379202 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.202928841 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095497712 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097045443 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.97023594 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095232447 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182298276 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089724348 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.10015333 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.305042684 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097557261 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098165394 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077035007 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.282777803 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.19251154 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100413258 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080388213 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097453778 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081098288 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.406196362 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081235757 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.020271314 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082190875 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107012942 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082500191 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09654445 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103621868 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087019064 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114854356 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080411485 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099332429 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078827003 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097411069 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080408387 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108105555 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.213223437 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098370132 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079557304 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095830439 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114792809 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11232781 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100376789 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094985827 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114395499 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100635302 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097066266 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.116636454 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098870058 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106578081 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.0831503 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142721746 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098188594 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.141033686 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096265192 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125032215 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098844385 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114840003 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113354905 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099192718 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.167898838 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077822345 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095584949 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07975884 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096456471 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081111433 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.10014953 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108734036 seconds)
  done (took 23.16919583 seconds)
done (took 41.078458486 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.323913406 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103527002 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103722652 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103472809 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101080261 seconds)
  done (took 1.512827853 seconds)
done (took 2.260459935 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.286108282 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.174113359 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095465102 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166288943 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09304581 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.164068382 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158766792 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093824272 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.219006609 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093646364 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160066253 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076389317 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094553587 seconds)
  done (took 2.654403396 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096063972 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114228232 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082714695 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109717167 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077337471 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110730796 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092800856 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11585428 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109481518 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085077082 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09276946 seconds)
  done (took 1.833058534 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096180621 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114351151 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082945825 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109636414 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077077553 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111474436 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092289021 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117159018 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111353032 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086457212 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092792829 seconds)
  done (took 1.836540837 seconds)
done (took 7.062830586 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.094432286 seconds)
  done (took 0.834315146 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.935002119 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.724088864 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113233364 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.15009774 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.313073887 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.17129669 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.469809499 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.127398927 seconds)
  done (took 10.954643558 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.115669571 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.114255494 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.10287769 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.087345572 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.103030693 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083056466 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103567717 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100044166 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083458691 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100507292 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086300867 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.0996456 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099743731 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083011578 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102711301 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085127775 seconds)
  done (took 2.363627957 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119129361 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118683784 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106579415 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108626532 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087019732 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105533504 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106237858 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088971588 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101866464 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10365874 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090365756 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107328537 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104464685 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081160592 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107358556 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108998037 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087185311 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107497039 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107804899 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090079604 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106799629 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095566821 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087318595 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106945156 seconds)
  done (took 3.294806947 seconds)
done (took 18.190685448 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.163555228 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113245092 seconds)
  done (took 1.027080445 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09871056 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115951829 seconds)
  done (took 0.96697478 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.10042776 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098485576 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.125256113 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111666815 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083052112 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097470108 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.122700147 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.083475821 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09872818 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080102645 seconds)
  done (took 1.759378075 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085465617 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111159668 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10414228 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096079493 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106095887 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094823551 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089220392 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098692488 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110354536 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078188451 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104412318 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115496643 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086385236 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117759736 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106109292 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085132792 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105947885 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.101448882 seconds)
  done (took 2.553781571 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083194092 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099924624 seconds)
  done (took 0.940640583 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.084370054 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096291166 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083584608 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100841062 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096938179 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.079784318 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096188965 seconds)
  done (took 1.3960235 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.486049609 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.136276635 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.259720247 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10200901 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103511976 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300899334 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.09778991 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084233461 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104658098 seconds)
  done (took 2.489528322 seconds)
done (took 11.88657008 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095846128 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.11802856 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112985324 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.465726554 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108696261 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099408248 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147737458 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.252445846 seconds)
done (took 2.1624657 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.147599651 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.609541144 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.428746072 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.232766556 seconds)
  done (took 2.033511703 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.411967161 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.098971116 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08367517 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.08176238 seconds)
  done (took 1.44302398 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082587483 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101243902 seconds)
  done (took 0.950048738 seconds)
done (took 5.341451867 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083462326 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098467007 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.11227988 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.096925955 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080414018 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.099434306 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.07798427 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.09757686 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080283032 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097107619 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.097116833 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.081945585 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097186758 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078931126 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09484062 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081860609 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094967761 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079359628 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.097416037 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079124581 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096787491 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079306646 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.094854234 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079359716 seconds)
  done (took 2.957671825 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102339611 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098963191 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.10344811 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087030779 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102277818 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086951708 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104177446 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096632295 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086898586 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100596508 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100835021 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085244122 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099699149 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085348236 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100183862 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101470057 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087447618 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097976241 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083387613 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102302332 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103479032 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081590016 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101743888 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10195208 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.08529124 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101365743 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083441859 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099507707 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102387557 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085894748 seconds)
  done (took 3.628252591 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088116124 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094225189 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.07856192 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101563961 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078675058 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097120124 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078489617 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09716828 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079585845 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095449847 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080608215 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095515852 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078391059 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097293853 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.07924571 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100431566 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111943866 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078851494 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09440947 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.07907392 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097960863 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078041175 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095483493 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078574229 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095343187 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078270936 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095511414 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078838942 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096192289 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078785183 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098379151 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082449018 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09580005 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084388567 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099323491 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077755717 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099427401 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078170653 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097165427 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.09481181 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078243717 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094452393 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078856705 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101692569 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079555046 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098112659 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079409306 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097480879 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079965492 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099005502 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077712618 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095484306 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080174315 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097635096 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082408521 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096006708 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096025914 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078017646 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096054389 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079070368 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094412839 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078200547 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098058604 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079479497 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110907471 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086455943 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095044246 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080803504 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097337853 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08113922 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098002232 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109407253 seconds)
  done (took 7.212272195 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086952128 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107934488 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081790204 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098846354 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076834976 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097299151 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099262713 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080410023 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097218459 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085192967 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096877894 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080527246 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0987403 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10738044 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080558315 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097791966 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086214343 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094186598 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078961121 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101010073 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078861392 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101200408 seconds)
  done (took 2.787213521 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.214299319 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107982211 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.145838274 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.110131957 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085659863 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108272419 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104007112 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087924235 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103037986 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085113892 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10289538 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.212995651 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083800688 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100883764 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100717117 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085761157 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101356339 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085003355 seconds)
  done (took 2.803429494 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095596585 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.102338979 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10492674 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100243919 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098768795 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084414263 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104355378 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107548041 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085376351 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098425354 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090112768 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101991947 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100662589 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082462496 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100751689 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082132057 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10191786 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081900166 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108430092 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104468951 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104732576 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092295997 seconds)
  done (took 2.914441191 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099309002 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100449015 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119289623 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08548202 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094930805 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08045495 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105497607 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082198276 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10747426 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100195582 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082988525 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097171964 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088633495 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099811368 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104707004 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082729577 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101296676 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082392838 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101223885 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07745385 seconds)
  done (took 2.673965632 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106412921 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103728076 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102481869 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094044877 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101907402 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082697631 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110693472 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100130109 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083169902 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124644259 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100651754 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081968703 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109823412 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107138145 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099378332 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092450111 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109551708 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10858531 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082855343 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101188435 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124394644 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082616506 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109359967 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099210613 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082667538 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100964683 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099902729 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089306507 seconds)
  done (took 3.575209335 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084172398 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101718365 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082129947 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097150933 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079178113 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096051735 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07963906 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095908931 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082163054 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095983653 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081674521 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097742033 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081092852 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098435131 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081495246 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099258621 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082455459 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096087541 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079636078 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096105504 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081667094 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099111963 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081002537 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09662771 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078131678 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099420076 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079492617 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097264702 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081732368 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097033811 seconds)
  done (took 3.464335543 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.094194918 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108007485 seconds)
  done (took 0.985418041 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.082349048 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114508651 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079445102 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103320503 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086716576 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100937798 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10733941 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087726755 seconds)
  done (took 1.545628973 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098431363 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109721325 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083451005 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.11505107 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109469151 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099223665 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171495879 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102017046 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105701746 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080783412 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113061545 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082339176 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105669315 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082446549 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105930168 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088172477 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098082506 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105467086 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086385255 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097669967 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086357536 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110050291 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083796486 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096924722 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.10126275 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09232024 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112964079 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082131359 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104042602 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106839714 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088458032 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093313278 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081884278 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101384548 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079767593 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.10994269 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116540124 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085040614 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110915056 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100845161 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093330818 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095006642 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086653142 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105974501 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109235597 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083014506 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101009408 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077710833 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097243338 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084900462 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095285929 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082087549 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094946718 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088785763 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104488077 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110462209 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081289389 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101453259 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084850721 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104283334 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087957874 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102653524 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10137054 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082437054 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106567159 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086661946 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11061151 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094511513 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.076587492 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097289496 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093259732 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123893758 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.106348479 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083823321 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100315147 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080655096 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103333346 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083361022 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106137301 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105528141 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083887053 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106637175 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090827733 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100634705 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.102590256 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091288737 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.09811629 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084809397 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098031724 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117670024 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081944969 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097134557 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080661509 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111266598 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085139028 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.1001417 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078860167 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108710855 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094335243 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083151376 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10083082 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083581269 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11193376 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105651345 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089534823 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109498614 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.107356054 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083859215 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102872667 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079368705 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101976575 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08479671 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107037171 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076395369 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103834907 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082634783 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102330398 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109579987 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081913145 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100064959 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090228026 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107018168 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098256569 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079407181 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102496438 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084037291 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103830781 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091084726 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.09985081 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077406031 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096347533 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.104368002 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083563517 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.104569627 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089394385 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103920311 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076976612 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099586044 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105364264 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09218564 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100780952 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082659061 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106717714 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.101580883 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082298545 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106428918 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085488022 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.09974432 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087750429 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102301479 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078116077 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105161188 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102947369 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081838972 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104524204 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086484051 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104053293 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100106161 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082211944 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105672938 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08385406 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.099735736 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081983555 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099396288 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111526123 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085464089 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095332585 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.080006843 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.108472951 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080669938 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101616954 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081404846 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103009164 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101117671 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.08087681 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100260194 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084924901 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113365651 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105607644 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085191382 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106092655 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094230113 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101517313 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.083753466 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101393463 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101765099 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084040979 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110159771 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087395731 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106306452 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102144745 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079969151 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106695649 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091341463 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099962775 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079510327 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099959434 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104556679 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.088763386 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.103823539 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.084081342 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099556496 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082829385 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105728196 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102820718 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083311515 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098877686 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.088687814 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100821686 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108191034 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084899016 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112165094 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086189331 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096898875 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086893831 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100364203 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106322237 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078695741 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.097493715 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082332594 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10234214 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081671401 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103463888 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077013725 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108507704 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108150374 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083167488 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100203014 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084203079 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108401368 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083962513 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105252429 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085892713 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109042679 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111272133 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082352561 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.105504678 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093662263 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103096233 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094577653 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089589775 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099420806 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082690158 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.10019501 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081519272 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10434675 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111028032 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090545922 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.09484453 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085422244 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.1000262 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081366362 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097440221 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.08688123 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104004375 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.100729048 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091104537 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102107593 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086546461 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105118137 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082485702 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103163186 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102070149 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086819349 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101925946 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086116474 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100456126 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086016964 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100476474 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080518069 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104180664 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100689816 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083512202 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107128545 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082471798 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102179879 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085736712 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103659561 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100727153 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084122256 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.099593019 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0874117 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101745682 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082986668 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104059432 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078121396 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109420797 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08321809 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110986988 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100267092 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.0794065 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107065085 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085659627 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107812531 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102156747 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.085166109 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102659765 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083163971 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104422441 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089702707 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099883543 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112796912 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092876729 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102494084 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.086019172 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102146947 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084118753 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101411428 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.101954732 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085423399 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101587086 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083710255 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106278159 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086174799 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102909124 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084886721 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104306595 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.101324487 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085750864 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095774771 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082754059 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100533468 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084457726 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112346634 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101719336 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087100529 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099945555 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084752182 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100078914 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079769436 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110666891 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110276984 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084589779 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109615388 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081908028 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103809114 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112113101 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078257855 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.09919129 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081353728 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.100366955 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091722246 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.111479132 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091556411 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10262527 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100700997 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081355609 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103223871 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081964491 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096421222 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08138619 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105405745 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084840051 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101002844 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.08308796 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105734743 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102899993 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094118322 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101858672 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082975529 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10291328 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079188537 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101323231 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100658639 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086785868 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102421187 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081429818 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099065759 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.084004352 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102982791 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083802519 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102305247 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084909971 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109868364 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101013518 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086912167 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106568901 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078909782 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105751228 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08233065 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101870162 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100789431 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087982272 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105330197 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084757312 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.11136256 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082635012 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10311332 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101230369 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082167664 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100770913 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083831792 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102420965 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081990433 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103587236 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090982952 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.10032631 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104433816 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083653982 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.10184106 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090497471 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103333503 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085183704 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110986271 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103800241 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085687559 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111028997 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086967695 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106308273 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10322869 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085380866 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10911433 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082277267 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108619886 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082963505 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103925564 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103640954 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082441089 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101843088 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084108922 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101139479 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.08896587 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103725372 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081561865 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101593077 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098784485 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08473266 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10503601 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091818647 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104851811 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085837107 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097849136 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079390601 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103914039 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099129604 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085369318 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104765179 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090164122 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105617481 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083999143 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101896285 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110591719 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090242419 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105907799 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082372979 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.107447787 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084142247 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105917193 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102893357 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084726525 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10338474 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088031928 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103978865 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083038972 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111071092 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086084541 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106051844 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103047646 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085438597 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102267358 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078796615 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103905519 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085428818 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109287619 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104470165 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084747979 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.1126177 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083709375 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102734686 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086475359 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103332107 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106896643 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079195587 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10282389 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086261284 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103660244 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079863054 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102244487 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081773353 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.105542241 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081898514 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098907404 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112711549 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093930679 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.10694234 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082285948 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101763865 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078969647 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099166983 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100819209 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086361515 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103866712 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093977908 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101905024 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082494161 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.09904189 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082668693 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107180208 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105540126 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081638598 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097134379 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082638049 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106053632 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089180733 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10279337 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082659635 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107429713 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103839502 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082251859 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106898894 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080656733 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.107216734 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115268013 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085252472 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102914627 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090161579 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111647621 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084019585 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099523978 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102947069 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087504052 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101936605 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085082895 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104371149 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118786484 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088194664 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101274815 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083469838 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105381395 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082821459 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112089912 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103904801 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085053952 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107129244 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085902212 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11386337 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085933116 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111502645 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105905465 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087045444 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102073902 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082795451 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101758617 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081359252 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104590343 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103534075 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090070417 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111222146 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082600693 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115077533 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112234493 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088926394 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099999867 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083562832 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.10339541 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079490529 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107471533 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.080937066 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102724825 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100545116 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083020198 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102692841 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089964391 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103683798 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084021329 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103174235 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078410508 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105920578 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085360894 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104669549 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099005005 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084899694 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103817646 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087683533 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107109612 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083704827 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105708771 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084947809 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104692375 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098618238 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090823764 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101279182 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087265156 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102048511 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084463583 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105158832 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087461903 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109959047 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103849473 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087378321 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115666417 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085027524 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101564821 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099009595 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089751939 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100784812 seconds)
  done (took 57.946207466 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.151343463 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080312011 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098516705 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079830947 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113570935 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099406046 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079713126 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099331801 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081109572 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102507677 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079384465 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099151121 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108757313 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125260653 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092661446 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104830878 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079032078 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10074239 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098466935 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081760073 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109319415 seconds)
  done (took 2.899048384 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.108921835 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121144239 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116661582 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118877857 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090802324 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116697576 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115769069 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115781851 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099402393 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112051527 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119162222 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115349668 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092473382 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111298462 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111761489 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093651225 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119828132 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.11001984 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116438417 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096632138 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114103585 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116171257 seconds)
  done (took 3.268677759 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087492293 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101880047 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086310508 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098654133 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.08362862 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099029353 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088970426 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102271296 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087584415 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103902641 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081935426 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102913011 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104532496 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079761684 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102225951 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082831628 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152107719 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107768578 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082766946 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106354631 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078210405 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107281135 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098869496 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080892286 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.10234118 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089835054 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104306435 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081427481 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103661463 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082015576 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104638117 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080643292 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106491646 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103253731 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084025526 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101941634 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08410128 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103400028 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080624205 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.10152396 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084534972 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099611932 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084311343 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106489232 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081873013 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102024506 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084604757 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104498718 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098388317 seconds)
  done (took 5.503821067 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.1087771 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16200856 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086659476 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143721619 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121825736 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113708954 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088267927 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.121065377 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104386719 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.103348709 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.102295133 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123318898 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105692399 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089647893 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.112692318 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104402636 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086471801 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104154277 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107903805 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085200899 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110188634 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.110180436 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099484717 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119455781 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109390971 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083266982 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106357829 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108593193 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098250976 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110872793 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110272368 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110366001 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.101476539 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.11094584 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103727023 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088749922 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122977278 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104070645 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087950242 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102933442 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086268967 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111276763 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.11135553 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.123293456 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086341166 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110429443 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083064985 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102584057 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117827977 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086255959 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115423621 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121627112 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10814421 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085485332 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110168027 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120607535 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084461398 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103847772 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107232211 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098696803 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102713748 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108244371 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.099735755 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107231422 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.11206818 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100558396 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111888114 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109636646 seconds)
  done (took 8.204793872 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098236108 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112546088 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121014305 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121569014 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092329186 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11239886 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112177461 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091010402 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111582829 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118407102 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111461884 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134170586 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08665833 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115570951 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110672746 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091567174 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11355131 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111571155 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091444331 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111397405 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112643913 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121341885 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095239978 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123776335 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.148024372 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111003694 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095510916 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114428123 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121947798 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110353276 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124295766 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091790142 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112368421 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121132282 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124397695 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091720872 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105312528 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110729169 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092339842 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112585355 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106347005 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101466746 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113255068 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106491196 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09092769 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113496938 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122991995 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.128854602 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119563501 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100978123 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.11819568 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126026104 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115969352 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096352487 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125676001 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.153646932 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126208616 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125497841 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116032941 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102286067 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122753136 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129748611 seconds)
  done (took 7.81889913 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111445774 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116167651 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119722183 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100187295 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083834453 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109056182 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083161056 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103807932 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113964786 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09548467 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118423801 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108978262 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092707461 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118203213 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109735384 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112193978 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089746609 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110016146 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114244096 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108120614 seconds)
  done (took 2.96912553 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.099092066 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12887826 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088961042 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116181081 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.113175006 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.096104506 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.1128706 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110560206 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086898445 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107690248 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097103468 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117807113 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106603955 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091592609 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117501788 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112610064 seconds)
  done (took 2.554595159 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.104125137 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118942791 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121165154 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085344655 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105966378 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080880179 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106940629 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101112041 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081643891 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121070747 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084507357 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110024559 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104269367 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083784115 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102290683 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08811819 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102214874 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082793075 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10677509 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119317613 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.09734268 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105552008 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104822701 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088010585 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106705599 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091435444 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107510724 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103203369 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084855251 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105896993 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085612342 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114230089 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101693832 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084853219 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102635655 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083191192 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105858617 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085125656 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110417375 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104028458 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085176107 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105700266 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086366401 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107606956 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081196807 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107771459 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100790268 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09231154 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102993528 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085789424 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106238732 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087198226 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108952141 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115726904 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088799297 seconds)
  done (took 6.300751374 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103560401 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109778934 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080710402 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104161475 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088504212 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108771139 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108699074 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088997984 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108207696 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083180237 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107929738 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089817439 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108937318 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.1085116 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088059444 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109749854 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080797717 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107941356 seconds)
  done (took 2.644925285 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095206398 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105503156 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094064678 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107216904 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084540155 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110289377 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080828538 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105981931 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103725796 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085698905 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105183469 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.08837568 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104891342 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087349491 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10644903 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084200513 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108280554 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103413623 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086244527 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100897085 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088068538 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104219129 seconds)
  done (took 2.99854709 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.121569911 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125299605 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.09251985 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.232551876 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.105101266 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132848796 seconds)
  done (took 1.669327205 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113151492 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121874981 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106421938 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10750868 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116092007 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086180165 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109014853 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108310792 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117701835 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102562129 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109448746 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1188111 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117982337 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097469818 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116267914 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115379721 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107113772 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088261214 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107419063 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128301062 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087552123 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11872612 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10882165 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087320979 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109846421 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117233647 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117193148 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12265902 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088540662 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118996769 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113627716 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087839077 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118741375 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122862266 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10861286 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098435981 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108776539 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128559679 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114550347 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098017555 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110202409 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114811591 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098537616 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114390829 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118079325 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107214837 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09376574 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109581033 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107569577 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135567977 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094222778 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118330955 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115948293 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117285931 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096957551 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.156392976 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103158701 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118252054 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115579003 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123097746 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118393408 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094418013 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117666783 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12403829 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114810533 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09698541 seconds)
  done (took 8.171244566 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107434775 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127275404 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10855841 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123130659 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097731165 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109634516 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10792411 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088185541 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108585535 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107204817 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151740532 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088621107 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118624555 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118432164 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086648476 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109793831 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108687394 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117918893 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087700071 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135025494 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108620395 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118508967 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117598611 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097679701 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123004253 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117331477 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107497268 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088183995 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109625961 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107264027 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094245223 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109252619 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117971224 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08697435 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119456098 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109011869 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087457245 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115490972 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108171531 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113735199 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097672436 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129152444 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110091502 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107988158 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101759667 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109884036 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108628909 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087009788 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110355747 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10737441 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102545234 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124727323 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123937619 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118844495 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108422611 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089169319 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109366923 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108318752 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088761671 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116382096 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117132298 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088375483 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135468878 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109807381 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108596052 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117948638 seconds)
  done (took 8.077765025 seconds)
done (took 156.338201768 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.226558177 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.205569966 seconds)
  done (took 1.296337728 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.092309726 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138136949 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096036143 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170808546 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085355604 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.14271307 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138426851 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098298065 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107750596 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085646774 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107018889 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086828006 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173039892 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085923854 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107916738 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107851038 seconds)
  done (took 2.696837543 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.124743344 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.253970261 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.126597176 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105962297 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089768611 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110425101 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084362242 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.113408172 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.088839794 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.106069171 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.08773466 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.108883834 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084904964 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.108250947 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109991478 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089521583 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.104687713 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089093216 seconds)
  done (took 2.857450125 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118749217 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150712004 seconds)
  done (took 1.145420697 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.24974422 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.163908403 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.234380364 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.477425278 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.282163667 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.365617327 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.20687712 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.216708665 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.167164135 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.210091901 seconds)
  done (took 3.444412769 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122531318 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181322885 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.317329621 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154935779 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107009368 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131694894 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158169089 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131667357 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122915268 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101594387 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123321465 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119807835 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137663218 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094038948 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116373274 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117187464 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12177032 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115783101 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11451067 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096536295 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138537141 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.084487413 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115809206 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114652403 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.098162292 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12074387 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106500925 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085454056 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118914606 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093848196 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.11540918 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.127686728 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.12012664 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.157059453 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123705519 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.159491046 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118429717 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090590851 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11746002 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090267397 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119431021 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.11965163 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124375711 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.09805724 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106322338 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.09674926 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107393278 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.083318912 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115955214 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118575531 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.092669069 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114633962 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15561967 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11955204 seconds)
  done (took 7.433516228 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.799521999 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155535613 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089750834 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.890442194 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135796032 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103369135 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.782054054 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111000829 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.259792079 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762142713 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133418184 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095705175 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229446439 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258884543 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.924179103 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286901806 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.638442149 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126970903 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15214262 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153794605 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118154885 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115054454 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131705234 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429062491 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117287065 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089219314 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118835037 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119399781 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159686873 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125315734 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092128472 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200572731 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.245586794 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204161922 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09359451 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112828235 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089271786 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.192331372 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.239942742 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216041701 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181606749 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109382007 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088804505 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122275299 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13285909 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086543819 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184412152 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175824932 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170730822 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115640738 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119084164 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099354218 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122275652 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16541011 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.123372164 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.310180804 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321468987 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089892211 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123059285 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126992274 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.23720492 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.1239802 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224743732 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140165065 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190572548 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113555834 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776825941 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170138215 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111575047 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095426579 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120272321 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115052142 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099726617 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168213077 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.40832085 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124810244 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114271847 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090899823 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226014392 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101565946 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113026064 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162062298 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117987371 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120341312 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102934562 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123268997 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.1686431 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.251214194 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101333889 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1201246 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114936878 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.104478579 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117444803 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213567363 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219843265 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163715494 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.232647459 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101337669 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186372166 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169689611 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119237612 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.174304853 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118826699 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102737504 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123627145 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217718212 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145529234 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122165996 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094602389 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118879792 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148476933 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126457536 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096730624 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.193302861 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458823081 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169846402 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110332333 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127850873 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098024876 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161182742 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119733353 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263009475 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121733354 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170112119 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119490302 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088215322 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121537567 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164146433 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12305155 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098711314 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124058372 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119986939 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236354684 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217753226 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121648137 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221408474 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185165016 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119096381 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171628519 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12230016 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167517692 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120327149 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098399198 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117829693 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.770448443 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123448022 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098958639 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117447307 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18723674 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088768482 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124739405 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126188457 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086619385 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807764762 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127475868 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120609968 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102588256 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118559138 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120383758 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096560337 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116100511 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161280881 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230046726 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120003279 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097120197 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.126886327 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.160367598 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117502011 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125822514 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102232722 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.126047219 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123283505 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114219806 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102869726 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190786972 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163410548 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.219149913 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.571313817 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113008882 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124367115 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.205683015 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113326924 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290139243 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096071423 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224681457 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18553177 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100265161 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.317992929 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.163502675 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187204177 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.12841947 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172228537 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11064861 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118347939 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166178283 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111385844 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096335922 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162038423 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126504666 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123533676 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.972346232 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089859042 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.22468253 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.110528502 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170231168 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117636626 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12057127 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.262243828 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114291015 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128316324 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164948546 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116400404 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101305311 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.866205842 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126049922 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.09960891 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118641918 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221856586 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163144209 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121433001 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119135586 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096668743 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.185738742 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211147459 seconds)
  done (took 44.12279227 seconds)
done (took 63.864548214 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280739209 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21893527 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.269944986 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173390233 seconds)
  done (took 1.923367472 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.176093703 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150603709 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122665384 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108812188 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151236299 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084325478 seconds)
  done (took 1.692991007 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.37737102 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.288131201 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.246448786 seconds)
  done (took 1.815298524 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.318217267 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.251695237 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.473187542 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.326267516 seconds)
  done (took 2.373797464 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211660575 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133613703 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110888352 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103343944 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.199818951 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.246271336 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143645068 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.2051614 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121993344 seconds)
  done (took 2.427156636 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.176513988 seconds)
done (took 11.313800612 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.262080754 seconds)
    (2/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.231710921 seconds)
    (3/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.228750978 seconds)
    (4/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.217682789 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.175074089 seconds)
    (6/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.127042609 seconds)
    (7/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.102462079 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.218903708 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.102206482 seconds)
    (10/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.174146281 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.123945811 seconds)
    (12/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.121989031 seconds)
    (13/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.205491533 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.167084024 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119258451 seconds)
    (16/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.206420741 seconds)
    (17/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.229411686 seconds)
    (18/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.200615396 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.125030611 seconds)
    (20/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.108042816 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.170048477 seconds)
    (22/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.097373836 seconds)
    (23/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.17372703 seconds)
    (24/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.198886023 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.13763458 seconds)
    (26/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.158755068 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086716901 seconds)
    (28/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.115622734 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.127456386 seconds)
    (30/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.214609667 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.179183023 seconds)
    (32/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.1208069 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.149737198 seconds)
    (34/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.108554008 seconds)
    (35/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.122064411 seconds)
    (36/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.187106576 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.221288424 seconds)
    (38/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.188196958 seconds)
    (39/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.192896769 seconds)
    (40/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.151645864 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118040649 seconds)
    (42/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082047686 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.143472024 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.135021175 seconds)
    (45/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.179101271 seconds)
    (46/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.234905873 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.215911286 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.131742302 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.138100717 seconds)
    (50/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.197119975 seconds)
    (51/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096663207 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.139580166 seconds)
    (53/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.181443724 seconds)
    (54/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.091447472 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117839488 seconds)
    (56/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.094797389 seconds)
    (57/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.123872376 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.115095088 seconds)
    (59/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.167799785 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.139048805 seconds)
    (61/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.173652959 seconds)
    (62/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.15775996 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.137713781 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110531649 seconds)
    (65/309) benchmarking ("sort", Int8, false)...
    done (took 0.188332037 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.086835076 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.136266054 seconds)
    (68/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.10972807 seconds)
    (69/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.097117847 seconds)
    (70/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.111022256 seconds)
    (71/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.06759565 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.137092743 seconds)
    (73/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085673916 seconds)
    (74/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.194497949 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.107953697 seconds)
    (76/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.091414868 seconds)
    (77/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.192307955 seconds)
    (78/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.096695245 seconds)
    (79/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.125975595 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.137097566 seconds)
    (81/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.097363455 seconds)
    (82/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.156412637 seconds)
    (83/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.092121896 seconds)
    (84/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.112051155 seconds)
    (85/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.237172474 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.086099662 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.138458561 seconds)
    (88/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133516577 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.08715694 seconds)
    (90/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.090035206 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.132724278 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.18020192 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.155131632 seconds)
    (94/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.18077712 seconds)
    (95/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.069168826 seconds)
    (96/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089075892 seconds)
    (97/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118541974 seconds)
    (98/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.065896059 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.110198183 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.087170124 seconds)
    (101/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.175673745 seconds)
    (102/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.191433886 seconds)
    (103/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.172873227 seconds)
    (104/309) benchmarking ("sort", Float64, false)...
    done (took 0.147820036 seconds)
    (105/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.123990293 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.15404053 seconds)
    (107/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.199136445 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.095156769 seconds)
    (109/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.111171165 seconds)
    (110/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.07831547 seconds)
    (111/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.208385913 seconds)
    (112/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094134872 seconds)
    (113/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.145087188 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.19518319 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.085753065 seconds)
    (116/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.108334736 seconds)
    (117/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.286619015 seconds)
    (118/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.148947826 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.145321335 seconds)
    (120/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.151270084 seconds)
    (121/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.076991848 seconds)
    (122/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.091604505 seconds)
    (123/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101720261 seconds)
    (124/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.215228666 seconds)
    (125/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.113014225 seconds)
    (126/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089166445 seconds)
    (127/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.121802693 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.180109109 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.093841466 seconds)
    (130/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.117755128 seconds)
    (131/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.11601835 seconds)
    (132/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.095132641 seconds)
    (133/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.065057373 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117964875 seconds)
    (135/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.121256843 seconds)
    (136/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.115907919 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.113821225 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.155379036 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.134005658 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.195355497 seconds)
    (141/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066017141 seconds)
    (142/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.148412775 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.085055393 seconds)
    (144/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.112103922 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.084381627 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.119137436 seconds)
    (147/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.119517751 seconds)
    (148/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11314297 seconds)
    (149/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.182236221 seconds)
    (150/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.161830934 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.107852535 seconds)
    (152/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135498026 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108793127 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094711749 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.113744427 seconds)
    (156/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.092461217 seconds)
    (157/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.138060586 seconds)
    (158/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066604797 seconds)
    (159/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112948456 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.115701048 seconds)
    (161/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.178412832 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.117830174 seconds)
    (163/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067482855 seconds)
    (164/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.074822049 seconds)
    (165/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.089263725 seconds)
    (166/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.093570443 seconds)
    (167/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.066578225 seconds)
    (168/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.17279923 seconds)
    (169/309) benchmarking ("sort", Float32, false)...
    done (took 0.174270512 seconds)
    (170/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.127813438 seconds)
    (171/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.091988808 seconds)
    (172/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.086966945 seconds)
    (173/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.224645981 seconds)
    (174/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.176321102 seconds)
    (175/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066890723 seconds)
    (176/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.090243746 seconds)
    (177/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.179301261 seconds)
    (178/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067884761 seconds)
    (179/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.11580342 seconds)
    (180/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086429149 seconds)
    (181/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119402231 seconds)
    (182/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068302951 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.092017563 seconds)
    (184/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118528438 seconds)
    (185/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.066498843 seconds)
    (186/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117583356 seconds)
    (187/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.083980016 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.110672225 seconds)
    (189/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.093300032 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116763262 seconds)
    (191/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.066327005 seconds)
    (192/309) benchmarking ("sort", BigInt, false)...
    done (took 0.24219 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.117652824 seconds)
    (194/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137865136 seconds)
    (195/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128626583 seconds)
    (196/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094495132 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119454319 seconds)
    (198/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088335262 seconds)
    (199/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.11617123 seconds)
    (200/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067027445 seconds)
    (201/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.120686444 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.09631786 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.135003319 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.157477975 seconds)
    (205/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.114327844 seconds)
    (206/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.081825916 seconds)
    (207/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.094535249 seconds)
    (208/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.076401586 seconds)
    (209/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.114897607 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086702096 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.11059099 seconds)
    (212/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.095852402 seconds)
    (213/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.089498485 seconds)
    (214/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.06873978 seconds)
    (215/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067916235 seconds)
    (216/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.119784563 seconds)
    (217/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067789119 seconds)
    (218/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.217088698 seconds)
    (219/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.128895686 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096322201 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118587361 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087710706 seconds)
    (223/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.116324868 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.15697889 seconds)
    (225/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.125180295 seconds)
    (226/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.111433943 seconds)
    (227/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.087043419 seconds)
    (228/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.111683215 seconds)
    (229/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.068581166 seconds)
    (230/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.077222903 seconds)
    (231/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.092062462 seconds)
    (232/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.068511089 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115043115 seconds)
    (234/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.068164934 seconds)
    (235/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.215568334 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086357226 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110923819 seconds)
    (238/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.22660492 seconds)
    (239/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068676178 seconds)
    (240/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.119840134 seconds)
    (241/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068884826 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.10957026 seconds)
    (243/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094519559 seconds)
    (244/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.17655473 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.190358612 seconds)
    (246/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.087770426 seconds)
    (247/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.126415283 seconds)
    (248/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.086592747 seconds)
    (249/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.092337178 seconds)
    (250/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.089200596 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.134364922 seconds)
    (252/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.077665686 seconds)
    (253/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.175821895 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.164602668 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.089884749 seconds)
    (256/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.124219805 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.087164595 seconds)
    (258/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.175967606 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085866588 seconds)
    (260/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.093273471 seconds)
    (261/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.067768994 seconds)
    (262/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066385081 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118146012 seconds)
    (264/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066842678 seconds)
    (265/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.100685629 seconds)
    (266/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068956315 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.093356604 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.172284279 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135652206 seconds)
    (270/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123837881 seconds)
    (271/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.071098031 seconds)
    (272/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136959163 seconds)
    (273/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.08765038 seconds)
    (274/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.111618447 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086487368 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.1120889 seconds)
    (277/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101473633 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.132874548 seconds)
    (279/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066536719 seconds)
    (280/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.091420198 seconds)
    (281/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.069124749 seconds)
    (282/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11339037 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.116592424 seconds)
    (284/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.150761993 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094545843 seconds)
    (286/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.091842704 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086099036 seconds)
    (288/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.111257019 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.113908642 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.111744664 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.093714787 seconds)
    (292/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.093319307 seconds)
    (293/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.06678947 seconds)
    (294/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.11465436 seconds)
    (295/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.213752579 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.172414176 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.117479425 seconds)
    (298/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068542828 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.093974043 seconds)
    (300/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.09226777 seconds)
    (301/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.091420291 seconds)
    (302/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069998297 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.110707079 seconds)
    (304/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.068968659 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.09251631 seconds)
    (306/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.113247763 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.170545184 seconds)
    (308/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.068766418 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.06621699 seconds)
  done (took 39.800864287 seconds)
done (took 40.706885348 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.10583812 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149810796 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095927704 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137094784 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124423864 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092269871 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119660432 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097869996 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124865071 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125689883 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098343459 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093913072 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097809921 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121915096 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097317664 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141289917 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124462467 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094748085 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120240412 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086734322 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120730421 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086399302 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114093252 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069653633 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122662165 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093401718 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118376597 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120487611 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087630109 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110423103 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091276994 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118442593 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087241585 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125276868 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093960605 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120435597 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096760413 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121667355 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.08822565 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112175069 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118130893 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087692113 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117661027 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095834563 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115826975 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093542849 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119252809 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100310214 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140495777 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116035932 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096356238 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120572073 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097335979 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119676818 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091925288 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121158781 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091125395 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.141742516 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.12299764 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092746571 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.12096983 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095767805 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.119635312 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095033153 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121085074 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121997531 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09927812 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117371982 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097725985 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117182227 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.08650487 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120921624 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089436348 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112327158 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09569484 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122989859 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.1093846 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.094236055 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.11792371 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092725736 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110889812 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09048511 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113119539 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093978915 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114022119 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07079502 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114718063 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094406546 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109799681 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096811863 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117847711 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094499352 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113616522 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099212096 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111819794 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092746303 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112749353 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087351802 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114429308 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091070145 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112801499 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088724779 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121419926 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088227188 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.119088798 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123357175 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088433236 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117189212 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086974778 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110657118 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102870972 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122873472 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086500855 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117749784 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086393177 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120730122 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.0860835 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111804797 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086176468 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11277512 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092900583 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112655766 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114246103 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.095294996 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126285321 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088263176 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114577766 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090706155 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111040415 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094442484 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111887862 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087364552 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113248215 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078762868 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114234983 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088321203 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.120271565 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090219374 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119930449 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089843367 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121625324 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091407921 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11893467 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092872449 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112009595 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074274788 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117975497 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090002698 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114386807 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088271643 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114706712 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086460323 seconds)
done (took 17.075342627 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.093561985 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186762391 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153498262 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143169859 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107787525 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113752057 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122716805 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120245882 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115393664 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144189401 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111237334 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133362359 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148819836 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087780419 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11222965 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092576058 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114323923 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103495687 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.148171695 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.13379914 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166935006 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087277368 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149098045 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136628239 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121577218 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115245923 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113125474 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091814556 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116064573 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104332889 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.134330093 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090132984 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.11382115 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134722445 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105681548 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121805321 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088218449 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.120743227 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086998348 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113314136 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142626774 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134549407 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094385879 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118227574 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092532216 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115140319 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090214859 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122092069 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.099482751 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11864314 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127043338 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157222576 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092766127 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122913554 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087180212 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124284971 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121573711 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091250581 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113357971 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.09166669 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111407007 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092689168 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128332202 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143006749 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092521854 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123417062 seconds)
  done (took 8.706832844 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.111126712 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140310714 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.122247232 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132896242 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112291794 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08917224 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11419136 seconds)
  done (took 1.794496824 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09456671 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134539969 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112401303 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137540687 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132502629 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110358648 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123354206 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088347368 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131910341 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089166065 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136383428 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153272277 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090291176 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121718976 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138017924 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089363588 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137955035 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089872182 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117373611 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112979618 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117728854 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135055143 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.09214043 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114322524 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103227716 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114966711 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16224092 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09468167 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114885692 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.093139781 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112838397 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166717555 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105999663 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127085888 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088022489 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129946253 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128858161 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088268753 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131361911 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094380819 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129751207 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089582046 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116567694 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086953919 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120897424 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124363687 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.091231702 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114638884 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092942462 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134644887 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091938962 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.12845188 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089459371 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119634382 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089902764 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121114309 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123743779 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091451826 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133497177 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091099596 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132612805 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105780239 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129824466 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131714196 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092616863 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128109986 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103105724 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117588202 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090897715 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118565082 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130676163 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088303945 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116390892 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100204197 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116278527 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112835511 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138275317 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116156891 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100419916 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114517047 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090654791 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114494956 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113188576 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119086422 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089055982 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120347679 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092057021 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113737549 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088563278 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118693841 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087250897 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11723602 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.116692458 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.09105063 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116760457 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107107428 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115893016 seconds)
  done (took 11.911587206 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.093403872 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115123277 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093187739 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115046561 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091048702 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115274858 seconds)
  done (took 1.606534301 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117595048 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118144905 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104479549 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121813069 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157265769 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103563828 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.131166781 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124094328 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108487312 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129401258 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130871733 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105807183 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.138269502 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121524796 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104714964 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121583087 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.13059336 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10193781 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127904411 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097484847 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.139882643 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121550598 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097763237 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132803858 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118897192 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096837518 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126812293 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103656426 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129297658 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124258594 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096757614 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119619842 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096414272 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124533891 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130609046 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096936503 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12220483 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120024385 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101898804 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118924753 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105240237 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122818113 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128120319 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094810883 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124960687 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122640762 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095273936 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125711193 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104404618 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121170193 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119151355 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097153907 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118662038 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094182987 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122511222 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12385463 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095155287 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131269071 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095801243 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.123040661 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118816202 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094541303 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125369774 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118895822 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105652587 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121348762 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095996442 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123062697 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122235892 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096758529 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119773479 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093013935 seconds)
  done (took 9.301557889 seconds)
done (took 34.288361295 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.701126009 seconds)
  done (took 1.679152638 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.719032592 seconds)
  done (took 1.700458422 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.203598986 seconds)
  done (took 18.185509069 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.50852227 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.589980803 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.888803068 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.181769665 seconds)
  done (took 3.150102251 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.966336428 seconds)
  done (took 1.971127001 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.302686858 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259171787 seconds)
  done (took 1.549208167 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.782543525 seconds)
  done (took 1.775308342 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.374665116 seconds)
  done (took 2.36266167 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.337892555 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186003283 seconds)
  done (took 1.521236982 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.551460799 seconds)
  done (took 1.547848842 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.887562719 seconds)
  done (took 7.88966974 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.273753209 seconds)
  done (took 1.284103729 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.305695051 seconds)
  done (took 1.305252259 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.552967929 seconds)
  done (took 4.554181577 seconds)
done (took 51.467453665 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.104275291 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126964899 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103345987 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125026739 seconds)
  done (took 1.454554026 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.106311255 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121131556 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101239089 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121410053 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126032565 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096880797 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123617747 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101848796 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121522065 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096379338 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123006797 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119972658 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099370564 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122624748 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093648788 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124538433 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099828793 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12246635 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124681451 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097053468 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119404207 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097471942 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126049681 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095005543 seconds)
  done (took 3.68511048 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105368307 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119333027 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097292859 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118523449 seconds)
  done (took 1.449995636 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.105586711 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143081347 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139415904 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100116239 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144323658 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136011039 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093160963 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117753919 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095680349 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125838064 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091145635 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149446299 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137558376 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100100073 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128272712 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088662581 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117981294 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136898959 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100137357 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126896696 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.095225279 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125975304 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090804569 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140879003 seconds)
  done (took 3.83503857 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.173917438 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.148122244 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139737822 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094926373 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160619673 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141771788 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089605077 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142088574 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08863605 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134058822 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118593242 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133555404 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130311905 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087802633 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115065204 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088285325 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130489099 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129714229 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092088703 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.142826 seconds)
  done (took 3.494492253 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103106324 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117893172 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089543486 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116140032 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100632118 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121276828 seconds)
  done (took 1.661383815 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09743144 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.116047759 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090943837 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.116020271 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095326111 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115712872 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08943078 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115764 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090617259 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114953356 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.08994833 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113946579 seconds)
  done (took 2.256623698 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.469807743 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093454039 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121226352 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11461652 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097272127 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.11534258 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.104430633 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.12030295 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141029515 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090183437 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115584014 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.09268875 seconds)
  done (took 2.685117252 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237283406 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126425214 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288687388 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278408916 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158542401 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172838862 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281580166 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163953044 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.226545446 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16023708 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204957233 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224697995 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152613626 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190964111 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138731022 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119436624 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225970499 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240373982 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153321006 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20352153 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227741284 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166633051 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180092264 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150506521 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113192921 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171639508 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122293671 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130197284 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207074193 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203774358 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188764635 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163713137 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149020464 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238912474 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254839774 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1940615 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287585088 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135610148 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.171876527 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168855845 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265580682 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112335462 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232135303 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154874073 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131882964 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193227281 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166919945 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176235979 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152209432 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139846617 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220767726 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21382951 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.219896526 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111713192 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236111253 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156487013 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168892649 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196234897 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251202716 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225507022 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178471104 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12004424 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189817567 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190590427 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186705943 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.195371151 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.180909532 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149376475 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192990784 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189623812 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193007322 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187339563 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.188412044 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142100271 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169286601 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173162314 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200075739 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230741549 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205716148 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095344457 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170299061 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151385576 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135287145 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195759899 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098867597 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241482743 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148232617 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163687734 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219113903 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161210248 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161495695 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201195062 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222165321 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149644928 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084089524 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15596663 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157820555 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191689492 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141585472 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159677911 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162178911 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131267579 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178934806 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096703745 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203456972 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.090744368 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173402653 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210338547 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.10066627 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16218784 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153255697 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151328514 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174208416 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227293767 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1169097 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135639931 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210435297 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204858233 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150520618 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180437046 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202868814 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147050993 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15100513 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200433601 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246112605 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139854997 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203878575 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158626533 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136863281 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105571868 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208106298 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155655111 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161783222 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10871832 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.211288373 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208186083 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126824288 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112718046 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213641748 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107164906 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133743107 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161934268 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149645035 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140474959 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147689617 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152140513 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18375557 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178013246 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155852111 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165182574 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152971599 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254869304 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143325437 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150651754 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122691279 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.12340705 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193681287 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227349956 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103731669 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23538526 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173679079 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232443471 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170595655 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108084586 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178450171 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131807566 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120725783 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194942622 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168694898 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162905815 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197773903 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229305889 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.17964244 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.209322239 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17394573 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174581379 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165859706 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157709831 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139961681 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13280858 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195145129 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097413262 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144082413 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135925576 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148853076 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116738791 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134610432 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222899423 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172448374 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192049146 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158722947 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151043086 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18346268 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129924077 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174774559 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178471117 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149556406 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199521624 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222788047 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188579179 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145191415 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20162002 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121353921 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125796019 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.115581593 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198549628 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107662353 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137066708 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166799878 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18321018 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18041574 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205236325 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213239906 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198763594 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192043083 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095242908 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170382409 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186225934 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20401461 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.163253965 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141386741 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.15212187 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179250374 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160143985 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256918068 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168657532 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176449523 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237309298 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123731048 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132757084 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152655336 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187698229 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155719786 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177907621 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148160376 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142755262 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1627748 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.13378402 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162436228 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186159092 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164708774 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218531313 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.12301669 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214998936 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09975654 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19461459 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160136817 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166013538 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082207074 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175556524 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234312186 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149024656 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169527256 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189749482 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132827854 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.308000514 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209303613 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220950655 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138172674 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158732165 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160066703 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165348766 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172971587 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17937565 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161190566 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189486795 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160105648 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137998817 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114948066 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150051306 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151772948 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132335887 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148901994 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177921114 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139407853 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186417508 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162532501 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160666697 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17468448 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150717753 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116181573 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151236167 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244927241 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176435635 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240111295 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150609334 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181466629 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207421175 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127464397 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105212775 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134762128 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177934967 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138390728 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190884652 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.217668621 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207017659 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179825938 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216723652 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112781946 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121844158 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158814965 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173791352 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236072642 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153449557 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158895094 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204309263 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.143830029 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104359195 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171800732 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229284486 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147383798 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197988599 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.07954642 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.306075635 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099835576 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134447461 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165239109 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236981825 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.109017533 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.185933298 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16993033 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168741389 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165393232 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151584544 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193449143 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245933544 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20063103 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209702521 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105028835 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157541558 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205895085 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195013281 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159401125 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.14082079 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207735863 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195779512 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.227181748 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114897263 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199834075 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169096053 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158231616 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188322883 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13587676 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207229838 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136314226 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193641498 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153932295 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144030896 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177163942 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.21731374 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142061391 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19092026 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177347036 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136683405 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105265092 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197664502 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180297362 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159541755 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100207759 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208905832 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097840166 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221211923 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232069225 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136420225 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156425565 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148061216 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136135776 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157706034 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159227601 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113683802 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.166691451 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202930856 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13692254 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219827251 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205242765 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170763962 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203173551 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117116435 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693663583 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133955803 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1945831 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157403621 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23704543 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15022329 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176227732 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159207217 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169686278 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196140421 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162760815 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233681414 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222327563 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180250235 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105065203 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187046563 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163195213 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.117477367 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152315347 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169096509 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16155739 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154687007 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178580545 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198765808 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107874324 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142356797 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200567172 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156986241 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211867887 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182257213 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111217739 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174122676 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218444697 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134344352 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181269181 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238370276 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115068726 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153274022 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135669975 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157024135 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262465467 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.09793817 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230286004 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178887625 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160535825 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170553581 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.149043612 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193059709 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158827771 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178288305 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146235456 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.16002933 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157849548 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140406626 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130273304 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1561247 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167656127 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.121660849 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187834086 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.138600334 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193578434 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125434208 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145772726 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199926819 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188035792 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245102367 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136545798 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107723584 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163603231 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152014406 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.179376381 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208052291 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.108001949 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138276753 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138698275 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.132227936 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.140456375 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155741112 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200050156 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167147027 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236027078 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109326946 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280717057 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141620268 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156032985 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089461521 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133851765 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151915471 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146292828 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160159128 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193977271 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264731593 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147816157 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106130799 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150914869 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127226656 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109258939 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168390952 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163739337 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206312754 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118410453 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.11027251 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160063155 seconds)
  done (took 83.141510882 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168980436 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132908597 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147458654 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202281185 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177699368 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.27100949 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210092997 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254588266 seconds)
  done (took 2.667303604 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.09698543 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146191269 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158888613 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134532335 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091787216 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120304898 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.346142376 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134970689 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116060181 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120683697 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173510513 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094049462 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.553520246 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090891419 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120556857 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108851749 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092526308 seconds)
  done (took 3.797637317 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.481713058 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.72254173 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.512563297 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097328779 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.149787022 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113665129 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.81582786 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.1974522 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.114803162 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.486625828 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.772161235 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.16328103 seconds)
  done (took 18.732541796 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.102935678 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.122137523 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107854917 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.136121096 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095814574 seconds)
  done (took 1.677513924 seconds)
done (took 131.532151064 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.108779155 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.406109 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.07189604 seconds)
  done (took 1.617574105 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.111209598 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138139767 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109561773 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136736677 seconds)
  done (took 1.610240764 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.10112402 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127204769 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110146564 seconds)
  done (took 1.446313543 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.324393314 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.190457991 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.164946346 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.110290084 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.13064306 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102467563 seconds)
  done (took 1.455359926 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.100624476 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128365512 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097336975 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.12986846 seconds)
  done (took 1.566592266 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.100121313 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071180744 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103675666 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074984407 seconds)
  done (took 1.45666493 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.117532365 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133309829 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104368436 seconds)
  done (took 1.468756874 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.135643649 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138708026 seconds)
  done (took 1.386754852 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.109325757 seconds)
  done (took 1.216529126 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.123608306 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.170070084 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.190979822 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.167057272 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.230469875 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.167575921 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141574727 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114761348 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.131423598 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.14480754 seconds)
  done (took 2.695268537 seconds)
done (took 17.817112466 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.107156381 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.514293588 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.414541613 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117520653 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723744482 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.38132891 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.069841793 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147107184 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166431864 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09337643 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14053191 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672271245 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.022598749 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.469877906 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.980735286 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.467824047 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.7051908 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093850025 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120739069 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094518295 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.054359354 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092668564 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123118115 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09252116 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703555463 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.427518654 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095636468 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.471947338 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093088001 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127641088 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.384039586 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122794999 seconds)
  done (took 17.391572495 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.099573954 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175146499 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098685155 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138776158 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124088145 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095389567 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126178657 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093866858 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180307481 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123506469 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112337794 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121970517 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126338898 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095419351 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142500529 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092490075 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126026913 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092140935 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121759098 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123052418 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112231949 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121229492 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094336311 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122451969 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094119443 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136583653 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123356434 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093898475 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121287754 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09873086 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128467885 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095118049 seconds)
  done (took 4.867287285 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145323565 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184605777 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129349062 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127935509 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170299604 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124316374 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200012038 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119144076 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183903857 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123982187 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140633983 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094210488 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157775836 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123386939 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115005161 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121858887 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097644528 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122834104 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093406961 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123788842 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141504116 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093355168 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12317212 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094273692 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123975761 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109008565 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12428752 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121374809 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094446587 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127979067 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099986556 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124780455 seconds)
  done (took 5.201629396 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.100805812 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127027627 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109259979 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139830512 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095493095 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126539775 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097842218 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126057077 seconds)
  done (took 2.043352533 seconds)
done (took 30.611271178 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11569252 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128257045 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106743921 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.13589777 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102446918 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132811561 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.09207842 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.135241419 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134335248 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101917196 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138360331 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092479382 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123435216 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093212044 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136874766 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097648634 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134133322 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102424789 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.135585049 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133022567 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095327315 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134581541 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103669562 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13438651 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104822776 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134570556 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138240165 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100178491 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123891266 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095211959 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125627174 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104224921 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125783862 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105692558 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128284252 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097219693 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.12554099 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095211584 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.13431012 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.13324114 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100125604 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134770899 seconds)
  done (took 6.057047778 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.110853742 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141025818 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105051521 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081660658 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118146188 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081172469 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139779676 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079314644 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111190148 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108689602 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074990142 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107566137 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078485646 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102578614 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077662187 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075309728 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109854878 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07621223 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076342824 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107256047 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080451158 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073159926 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109608355 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079066127 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075575245 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.11173047 seconds)
  done (took 3.618610355 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.104432851 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.137170087 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112539251 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.186771154 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162126237 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.101673138 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133776198 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140862417 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109970437 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121708799 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097581112 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151300322 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110968791 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130772282 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091765116 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138120332 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137159371 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094008986 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12936649 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113687792 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139929983 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102450884 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144071653 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133973868 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092593507 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123783222 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.09677643 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136049253 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097572269 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132515793 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.125242768 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.09697228 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123647707 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105030376 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126753143 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.09453181 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143111548 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103086153 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131299131 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122256496 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096158506 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122697364 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113854629 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169606869 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091924632 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.13235204 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129023937 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103729239 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.123082886 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111034612 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132535373 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092226091 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126195957 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09172763 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122612873 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106533974 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124723829 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.09481181 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131521369 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125543585 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106556052 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125826976 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109848551 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122753098 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099973059 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122593488 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093064316 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12205925 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144724154 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093976691 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164601819 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09303145 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124290913 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101133357 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130496866 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129290211 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093382158 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138644321 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10190387 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126898544 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102990953 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126579353 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095722732 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141438067 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.125632104 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.0956887 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123604562 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100713749 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125603971 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094239149 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137562047 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093276724 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126121203 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110221 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122227813 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123057538 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099797844 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127296801 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091714603 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136234706 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098655668 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124210268 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102706534 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123260314 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125264335 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104177874 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127424116 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092823271 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127633431 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099715115 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124101338 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094538057 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126517899 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094216063 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133555155 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099653721 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128153504 seconds)
  done (took 14.924006698 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.234458057 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216069696 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.239959258 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.263175508 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137355167 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.12291244 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.242691909 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.126040979 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124033207 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161974424 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.16320473 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182994702 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.140296486 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.215191591 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.112018752 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.12378906 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11285642 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165632426 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.21605354 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.292499116 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.112291232 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.132644387 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162764003 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161114627 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137274303 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.10274158 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140581317 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105088735 seconds)
  done (took 5.791487603 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.112189626 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157262154 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098197602 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145695134 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149211231 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093176397 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129402679 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095178653 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136450913 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136684658 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093050052 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130803344 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100788146 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.13400756 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.12495973 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104448393 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.13415035 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095311947 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127633467 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097600257 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130606024 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102083439 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128219513 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122116999 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103588164 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122964387 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086767916 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143998761 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123231556 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115519349 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121863587 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100017943 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134247079 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094085155 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123977766 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095032499 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126871242 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095064614 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125751954 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090893599 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123308901 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077593099 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123404827 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137589553 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.09966628 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.08008337 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130395808 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129548457 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095384173 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121978038 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096562738 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126706372 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096874331 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131067219 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.09774615 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125647389 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096481466 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.117148975 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100161247 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126531484 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085365573 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121966377 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098762037 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119814316 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102068492 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129928974 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092433875 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126887385 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097251554 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.131451738 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096388949 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.127509234 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.09175272 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126670489 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095880581 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128937672 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.09661222 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122650744 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123116544 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095190366 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075801803 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124468747 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073981083 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127695789 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.093187328 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12374578 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095929075 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13094892 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.139567871 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095320368 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133596421 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094109799 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123689572 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096546878 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114155288 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097050239 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139977051 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14205048 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09425046 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.123281466 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10828923 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.12768827 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092676662 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107725189 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101902955 seconds)
  done (took 13.058417111 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132696242 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154883415 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.096208797 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.144252549 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157290636 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159455435 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101944392 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131060323 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095707043 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143348452 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093949104 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132596207 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097352303 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138362257 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157768085 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103979904 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126683857 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107508759 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.133203321 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171340707 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112401969 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143761551 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107960689 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.12668821 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129134618 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111184178 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.163859377 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107802507 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138281296 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143374588 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108443075 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162602537 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.144204044 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099395897 seconds)
  done (took 5.536274859 seconds)
done (took 50.104215468 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.225905559 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.452713835 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.219092479 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.229791228 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.25738241 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.249647712 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.231277322 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.220742918 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.816855637 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.216972308 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.480884842 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.878052975 seconds)
done (took 60.627010389 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.297526065 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.356219058 seconds)
    (2/2) benchmarking "String"...
    done (took 1.486599902 seconds)
  done (took 3.987851878 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.595079802 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.179916958 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.482529181 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.21723467 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.217599855 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.509684017 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.885820867 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.589995821 seconds)
  done (took 28.22411396 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.231701693 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.613619416 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.955433863 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.959339849 seconds)
  done (took 18.906080276 seconds)
done (took 61.15249658 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.246413496 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.288471484 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.221587165 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.199067409 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.332952075 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.240653946 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.638645605 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.261245943 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.236070939 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.20519992 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.240286338 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.217477437 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.230325762 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.642288276 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.232402909 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.222642736 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.277236671 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.768366662 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.643656878 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.226715483 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.23999945 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.243970915 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.223530736 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.243288242 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.288359017 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.234727894 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.233400748 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.228828953 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.869978889 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.227104127 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.241435166 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.293319657 seconds)
  done (took 191.282664872 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.219880116 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.373668752 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.477060603 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.276715142 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.759975807 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.423860415 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.363006017 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.842238455 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.244527587 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.233363264 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.504939637 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.223394474 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.572358047 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.251477434 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.229655617 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.22517015 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.40004138 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.589162685 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.24223535 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.498252643 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.227248596 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.431180929 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.368754997 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.490161066 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.230691967 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.278243131 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.241770536 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.252535111 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.413351004 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.347124432 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.244276403 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.254415906 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.852290168 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.085753288 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.248443925 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.241272062 seconds)
  done (took 151.309339111 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.539395838 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.222713142 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.224216972 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.224592877 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.255650235 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.225882123 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.817751706 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.816047096 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.727077469 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.292618549 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.281816968 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.543067066 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.228381114 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.320298108 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.236406257 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.220412232 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.226106276 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.239801517 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.269317562 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.22266585 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.225841612 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.818729689 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.235911322 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.343916417 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.229882621 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.226268153 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.259794707 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.617974866 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.223348085 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.260522356 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.557949732 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.274568331 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.22510726 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.647922848 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.135208 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.340383558 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.223888051 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.25839771 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.227630532 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.223771335 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.509615771 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.22371134 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.228124247 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.227602808 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.231914191 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.92150853 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.228116358 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.822665825 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.227921215 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.228089401 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.224685272 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.228845957 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.399752259 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.246354875 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.966661433 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.245023523 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.227614536 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.229306835 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.22772145 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.229899043 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.261067077 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.758233921 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.343871595 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.245424807 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.233181138 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.258485489 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.225212628 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.323160355 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.230754729 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.074397885 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.29988379 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.333520297 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.822244647 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.23137474 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.326710742 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.349066154 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.223294991 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.229675334 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.229818824 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.227696291 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.34231266 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.227707102 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.659261254 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.228686215 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.229747355 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.289982715 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.32312104 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.225436176 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.651339929 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.2301233 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.231274511 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.058028834 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.329373872 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.227453744 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.229893607 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.228721655 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.663015133 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.822655938 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.537655098 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.22994382 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.848193217 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.248721781 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.67671974 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.79738688 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.908209089 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.227711709 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.345619737 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.230677169 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.232215578 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.231971993 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.261463006 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.249152874 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.291076844 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.229577497 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.633292386 seconds)
  done (took 350.988785847 seconds)
done (took 696.265847944 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.900271701 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.88824522 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.001024483 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.879113048 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.864021187 seconds)
  done (took 10.684855814 seconds)
done (took 11.837816376 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.423245703 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.428369543 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.294087661 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.42810345 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.26235716 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.448982184 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.40428974 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.253492881 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.337462247 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.317490622 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.333562093 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.285292959 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.261501748 seconds)
  done (took 18.632914326 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.566964719 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.56246696 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.295488826 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.576597662 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.271989203 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.560269337 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.441281603 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.46042935 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.450157779 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.267125886 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.246371362 seconds)
  done (took 16.855423465 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.564705755 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.578998263 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.301968437 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.567301046 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.273487027 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.570541945 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.443538147 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.468153147 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.460186006 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265091789 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.24595267 seconds)
  done (took 16.894648539 seconds)
done (took 53.538790197 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.243671925 seconds)
  done (took 2.39964584 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.278217011 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.440231446 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.261071976 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.244309354 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.245303219 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.244651549 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.249376607 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.24671994 seconds)
  done (took 11.367039421 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.243523839 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.242903426 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.241507453 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.244110923 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.245138137 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.240618967 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.243900158 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.240468143 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.239043971 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.239372428 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.242338349 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.239490805 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.236769509 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.240483287 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.244887818 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.244472227 seconds)
  done (took 21.025996688 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.243105416 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.239445239 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.238256049 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.240856803 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.242397518 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.241984269 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.243013152 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.243277449 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.241854167 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.238664681 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.240397265 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.239744334 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.243633031 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.239043946 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.242751097 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.242622929 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.243351276 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.243331334 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.246276744 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.240099907 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.241491008 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.241544311 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.243701697 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.243037561 seconds)
  done (took 30.962886091 seconds)
done (took 66.908864693 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.468755815 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.081372921 seconds)
  done (took 9.708128004 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.243350976 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.243109985 seconds)
  done (took 3.646438343 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.240531762 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.243685474 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.245640764 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.24302382 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.244526087 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.244706246 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.244233512 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.24421206 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.247171817 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.243639288 seconds)
  done (took 13.601251179 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.243029583 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.24487468 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.243112448 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.245217641 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.245864619 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.242760228 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.245845338 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.244870488 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.244164049 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.24368428 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.245624563 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.2437941 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.244227461 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.245650534 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.245855072 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.245007671 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.245306554 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.241920787 seconds)
  done (took 23.55924692 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.246812907 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.24815017 seconds)
  done (took 3.654117595 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.243946868 seconds)
    (2/7) benchmarking "second"...
    done (took 1.241712164 seconds)
    (3/7) benchmarking "month"...
    done (took 1.243652359 seconds)
    (4/7) benchmarking "year"...
    done (took 1.243751206 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.243218264 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.244172086 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.24531274 seconds)
  done (took 9.867410165 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.250200249 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.42875059 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.510273941 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.854750109 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.248535755 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.251139494 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.136407132 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.251529628 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.2555927 seconds)
  done (took 14.3478528 seconds)
done (took 79.540764528 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.288909957 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.254478509 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.457675988 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.26810284 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.258234933 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.585979773 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.263145782 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.368041531 seconds)
done (took 37.907045035 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.242739386 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.006927045 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.018197168 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.256257638 seconds)
  done (took 11.44158299 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.228276827 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.211271246 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.2270913 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.296833322 seconds)
  done (took 18.12657481 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.313706875 seconds)
    (2/2) benchmarking "read"...
    done (took 1.581161458 seconds)
  done (took 5.059995011 seconds)
done (took 42.032266884 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250566101 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.251488604 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.24554264 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.246792701 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.250925609 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.250053069 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.247095226 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.247312563 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.247914227 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.248275445 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.249752952 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.247397244 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249402448 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247918444 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244304477 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247944592 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.246391909 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247271674 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.250977293 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24833184 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250134336 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.247005852 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.249530225 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.247228704 seconds)
  done (took 31.123675257 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.250057895 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.250326988 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.250465239 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.250313448 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.249788343 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.250891119 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.248279113 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.250239682 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.252969183 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.251775713 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.249278781 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.246955619 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.250319987 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.247403065 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252401364 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.249346775 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.250830699 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249287194 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255271516 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.249259697 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.253197038 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250964103 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.248565704 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252682979 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.251713188 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247047573 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.250846452 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.250184051 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253271636 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.251172556 seconds)
  done (took 38.683272083 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.258661773 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.257074233 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.250099332 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.254623194 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.253999611 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.251360283 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.253660605 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.253233413 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.253047528 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.252104538 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.253850199 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.252759789 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.253481964 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.250682321 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.251539315 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.253711371 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.254316787 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.253034274 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.251826876 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.254164663 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.251285477 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.255000534 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.255432368 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.252389095 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.253318196 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.256845931 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.254841811 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.253981253 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.254208073 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.254535253 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.253962361 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.255191114 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.254151074 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.255774169 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.255150104 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.251836669 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.26222979 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.261908684 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.25522898 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.255438838 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.255188477 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.256659782 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.253786155 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.255705734 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.256511544 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.254906352 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.255989801 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.253770019 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.252722349 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.251155295 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.256650445 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.255910385 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.255020241 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.255477691 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.253962891 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.256630014 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.253056645 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.255603957 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.256591941 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.256468196 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.255309507 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.253012528 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.256230003 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.255065442 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.256217639 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.257330622 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.257773084 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.255744034 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.256071324 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.258441674 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.258895499 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.256127452 seconds)
  done (took 91.512876485 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.255169307 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.251394374 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.255903036 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.252385905 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254499096 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.255207171 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.254725298 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257786197 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254758237 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.257800476 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259737662 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.25260346 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254483956 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.259274113 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.25795935 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.254711897 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.256167155 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253697519 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.257702586 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.257191961 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.259123383 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.255019864 seconds)
  done (took 28.796296874 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.257231547 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.258679395 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.25101109 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.258717796 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.255217795 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.257771911 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.255443142 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.258584645 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261453309 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256151373 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255115426 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258685416 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.260249496 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252419557 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.254828679 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.25846663 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.259389091 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.257441436 seconds)
  done (took 23.797119374 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.256901754 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.254186756 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.259477981 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.256823054 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.256123486 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.258751192 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.258546588 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.258374131 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.260246697 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.25606664 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.260770483 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259461795 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.26113693 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259237546 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257861192 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.257025414 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.259260399 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256787304 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258512285 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.255625982 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.257117011 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.26175637 seconds)
  done (took 28.853806791 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.259069684 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.26061746 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.259100991 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.258993104 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.257844356 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.261487455 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.25973781 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.256960549 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.260624867 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.262224195 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256958116 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.260532389 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.259654793 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.259860705 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.25632645 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.256780019 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.262418705 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.259740652 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.259395506 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.258210921 seconds)
  done (took 26.360546649 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.261090926 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26368278 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.264184825 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263845266 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.261651493 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.260139919 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263122179 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.26136125 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.261684779 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.263175223 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.26137002 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.262772832 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264223038 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.264880827 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.263442564 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26203815 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.262842719 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.264010933 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.263553319 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264195046 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.26299026 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.26258732 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.261949828 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.262019277 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.262717288 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.263923777 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263167479 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.263959401 seconds)
  done (took 36.53417652 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.263509589 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.261591996 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.261745706 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.260934525 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.262350379 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.261682501 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.260604674 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.261227414 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.263579541 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.257718649 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.264164756 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.264328326 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.264890944 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.261197044 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.263527941 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.264843871 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264919201 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.263908136 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.261862327 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263687193 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.263512978 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265235999 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.261957878 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.262660221 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262392435 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.26519454 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.263519255 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.263277268 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.266422017 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.264175745 seconds)
  done (took 39.06766261 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.283801713 seconds)
    (2/2) benchmarking "in"...
    done (took 1.284085236 seconds)
  done (took 3.746340948 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.260990241 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266080729 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.266436015 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.261401916 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.263391624 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.26473008 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.265168948 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.261695943 seconds)
  done (took 11.287795524 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.266601643 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.267771918 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.265934458 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.267790365 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.268044253 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.265955537 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.274341032 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.286847381 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.26811052 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.269075031 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.272727626 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.273565233 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.268987133 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26762409 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.263858983 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269361447 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.268142767 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.270027698 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.268745795 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.269212127 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26901817 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.268408625 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269603704 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.266594079 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.270607098 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.277742808 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.292775758 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.266851725 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269634315 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.269392197 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.270475374 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.267661618 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.268544016 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.270013176 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.269701091 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.267861279 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.276424495 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.286440424 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.272670113 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.29145141 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268492592 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.266320256 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.2689205 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.269925369 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270076073 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.267921106 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.269512177 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.268456209 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.270305198 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.272688453 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.270782258 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267465982 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.266008811 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.272726051 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.268739496 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.274760319 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.28921786 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.275240145 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.279302907 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.278294652 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.303785236 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.297514081 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273283485 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.271823881 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.28106031 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.295656251 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.278606488 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.288073488 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.267652103 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.271217802 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.277463867 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.302958632 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.29792176 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.270391717 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271504723 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.272285954 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271292967 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.272987085 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.278127816 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.298221951 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.272785679 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27089724 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.28369381 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.295781459 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.271866409 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.272630425 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.27137961 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.270194461 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.273365962 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.28243082 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.29241225 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.276079298 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.273293728 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.272562538 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.273686704 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.272903329 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.272623321 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.270411209 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.267894096 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.271592471 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.272484494 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273776885 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.28112113 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271630323 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.273765118 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.279997001 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.290092972 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.274151726 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.27670904 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.274299348 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.273522625 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.275199688 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.276884326 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.270290044 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.276362169 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.280069808 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.27498133 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.273515948 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.272581926 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.275032399 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.284886667 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.299384705 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.272039101 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.275192674 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.277480736 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.284555272 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.275443321 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.276771708 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.275479108 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.270891631 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.274426312 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.275628071 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.275110009 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.276198576 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.272935368 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.276917294 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.272254897 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.275232121 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.274305458 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.276806419 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.275416888 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.2769088 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.273829483 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.274344566 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.274358632 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.2770384 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.280412433 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.296338875 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.276660529 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.275390819 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.274447833 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276392674 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.27558258 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.275860034 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.276944451 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.276594923 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.275093868 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.276652612 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27812906 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.277476778 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275993132 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.277634728 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.278529208 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.277074897 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.27762228 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.276231572 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.274775628 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.274969239 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.276162483 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.275865456 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.279121982 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.27563688 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.280155446 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.283534333 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.277254587 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.277340692 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.280359015 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.277095504 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.278607629 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.278915816 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.282130615 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.281984009 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.277723757 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.282539587 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.298832498 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.280383491 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.279393073 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.274169088 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.2779946 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.278474162 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.284851564 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.283542862 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.289783097 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.303845741 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.279638833 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.281494179 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.278274183 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.281060592 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.281630588 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.281386917 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.278694799 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.278589992 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.281285324 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274706409 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.279550729 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.279742507 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.278486758 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.279061745 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.278722418 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.281479247 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.278826078 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.281126677 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279190284 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.27669623 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.279726328 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.276830228 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.282268262 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.276242771 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.278311001 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.277653717 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.279615454 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.276263061 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.285977338 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.280130768 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.283318005 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.278794314 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.278345409 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.276174608 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.279396143 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278219733 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.278163717 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.285959439 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.30270278 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.28223169 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.28690867 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.301495587 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.28266124 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.283674087 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.281574259 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.279053588 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.280732431 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.285502769 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.27937804 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.281628313 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.283879452 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.280593589 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.279336895 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.287416633 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.302021104 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.282341843 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.282524273 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.283488855 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.280377061 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.282633706 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.27789487 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.283852358 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.287909232 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.280756551 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.280141226 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.28253221 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.280577116 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.284106799 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.283897441 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.283075432 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.291060597 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.288927594 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.285089071 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.282302819 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.284921685 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.288437584 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.28317566 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.283188467 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.282174746 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.292436287 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.309453918 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.28968062 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.303917831 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.28411925 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.285964629 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.305826879 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.288658309 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.285738491 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.285242802 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.282544238 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.281645946 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.280931399 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.284875861 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.28336886 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.287490636 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.283008316 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.287674162 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.284018728 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.284343448 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.282949359 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.285180444 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.2860633 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.28623446 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.287341438 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.28769432 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.286990146 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.283541733 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.285417567 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.290057212 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.305459327 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.285688274 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.284714906 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.28770141 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.280510491 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.284998687 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.285014024 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.28973912 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.290361406 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.286740835 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.29301069 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.286504438 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.293940304 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.285355902 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.291162967 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.29503883 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.285197226 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.2861569 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.288832667 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.287791224 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.293136735 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.304334908 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.288860537 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.291123758 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.286863293 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.289688262 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.290552391 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.28687725 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.289766374 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.290085782 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.295668199 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.307369649 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.29096952 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.290859794 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.285456558 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.288141628 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.289197256 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.288385286 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.289401443 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.288344115 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.287291433 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.289062783 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.288034015 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.288982105 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.288949971 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.293046044 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.284404676 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.287975798 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.296147395 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.313436561 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.29458231 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.289806285 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.293375255 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.311315476 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.296959312 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.308929391 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.289757343 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.290226906 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.289568378 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.29133396 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.288808358 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.289162408 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.288727726 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.290740802 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.294462852 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.291136705 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.291197943 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.291687528 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.290955755 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.291374631 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.295141543 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.314891832 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.292715195 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.294042481 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.288662001 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.294445483 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.295996812 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.290790181 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.291638618 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.290190759 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.302043052 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.294792587 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.289957524 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.289017664 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.287666742 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.291955706 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.294304589 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.293162629 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.292922609 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.291570614 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.289920681 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.28978927 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.290961859 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.292057546 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.29311467 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.29033327 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.292136356 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.303213087 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.311340245 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.290656736 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.291900759 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.29117142 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.292657885 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.290290554 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.294735871 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.292793168 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.290576232 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.29215448 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.29878119 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.299433261 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.2958708 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.29353179 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.293117903 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.295600336 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.290419592 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.29496278 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.294618377 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.294756548 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.293768548 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.292199802 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.295021116 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.29254064 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.295976874 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.294596737 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.295635066 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.295350231 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.300197118 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.29286655 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.290927206 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.293717722 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.293319018 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.293982135 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.293250763 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.298658933 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.320103824 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.304997378 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.302958737 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.297256635 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.295777579 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.295063155 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.301624976 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.296803707 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.29172467 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.296853316 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.295341179 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.296382521 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.296696834 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.297231929 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.30262327 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.31677435 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.294250172 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.299087559 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.314496412 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.296816286 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.297141143 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.296905103 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.298404985 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.292628192 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.298756038 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.292385751 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.302438737 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.315896147 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.297512694 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296892825 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.297076902 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.298776773 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.299465997 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.297036573 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.297171631 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.292950353 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.295483765 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.293769242 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.296748874 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.292660963 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.298483448 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.299014787 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.294193912 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.301239213 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.293084068 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296556467 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.294423487 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.297920146 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.296549292 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.295039661 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.297534254 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.296606026 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.296616456 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.296796798 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.297930967 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.300043511 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.29399142 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.294521671 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.298798287 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.300819004 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.298420168 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.307951796 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.304866918 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.294158911 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.298360571 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.298240949 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.300364215 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.294817429 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.300815419 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.300826871 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.297160625 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.29586289 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.295095989 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.296231494 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.298610383 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.312135886 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.317913826 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.294806083 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.299491935 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.302184719 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.299213752 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.294018549 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.296316199 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.300196578 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.298060336 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.306523859 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.297797314 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.302667454 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.316323235 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.300194581 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.303477037 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.301040126 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.307627197 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.302159975 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.298318319 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.296198492 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.303759427 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.313844521 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.29771818 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.309978644 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.329837189 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.320747616 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.302854339 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.29989223 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.297129624 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.299688346 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.301758203 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.301086668 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.301211315 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.300249132 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.298880607 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.301666939 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.304475559 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.301718799 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.302082859 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.301263713 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.297388291 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.302052368 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.298901156 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.299563789 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.301148178 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.297676403 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.300229259 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.30067889 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.300609237 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.315619944 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.327029266 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.302907838 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.301336533 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.298871518 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.304111689 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.302012572 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.313156298 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.309311029 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.299985659 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.3029866 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.302459588 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.304546964 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.302255386 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.303264749 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.302983132 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.301319794 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.298439404 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.315980559 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.33389301 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.306257807 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.301466772 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.304157403 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.301943971 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.303422173 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.300856819 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.299948415 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.302074095 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.305477505 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.307705878 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.300778928 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.30308184 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.305633051 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.311450571 seconds)
  done (took 768.806253198 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.300998392 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300762574 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299828599 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.300221758 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.299505474 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302789601 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.299933507 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.301026226 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.300498268 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.301655347 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.302581775 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303238086 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.299742528 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.303094532 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.301316152 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.299007607 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.301359733 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.302661556 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.301679911 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.300851575 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.301967476 seconds)
  done (took 28.537046715 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.303139778 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.301220161 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.303158097 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.306358286 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.302190886 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.304449642 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.303781175 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304215793 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.30502074 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.30189651 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.305433948 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306796047 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.301251734 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.301619182 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302327268 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.303574957 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.308568422 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.302656948 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.304173405 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.30728277 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.306595858 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.303233615 seconds)
  done (took 29.901452546 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.304203692 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.305536685 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.305594994 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.302801846 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.307729108 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.302453113 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.304609952 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.308868864 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.307483343 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.308601677 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.304738762 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.306347042 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.313508635 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.31275114 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.305177775 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.30604281 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.451918858 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.307144902 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.309521169 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.306848214 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.305557223 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.312572521 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.327128922 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.308582571 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.307272119 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.305045945 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.310034251 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.304773071 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.307394216 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.307423419 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.31157596 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.308053369 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.307915782 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.310130029 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.306566582 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.311133461 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.310300974 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.306376551 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.307697087 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.309458013 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.319335481 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.331190604 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.310748499 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.311785524 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.33452448 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.308311753 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.310349068 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.316300423 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.306810298 seconds)
  done (took 65.533480553 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.306982177 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.310913664 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.307670611 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.30894941 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.306522046 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.307433274 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.309152243 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.30611165 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.304578647 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.306789116 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.307829634 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.307137144 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.307269608 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.30818424 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.308409562 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.307001377 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.304332713 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.305016709 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.306824975 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.306500387 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.308446557 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.311916286 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.310266198 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.307177316 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.30961278 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.310682383 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.306866078 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.314039025 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.311134245 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.309221775 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.313095963 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.310832484 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.311740425 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.30720015 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.306027312 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.309169446 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.30976965 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.311005963 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.309650671 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.309100536 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.311582656 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.311982433 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.313018262 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.315663887 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.311060839 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.308159885 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.310657104 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.308958082 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.308937174 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.312303948 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.310985524 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.313438959 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.313572038 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.309397428 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.315650429 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.311272969 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.310183179 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.311423063 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.312660545 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.311430025 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.310231091 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.313188319 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.309504877 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.311222165 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.312787235 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.312026215 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.31080662 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.311165183 seconds)
  done (took 90.284599758 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.310126622 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.312115809 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.313564943 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.311491335 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.311356089 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.311146612 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.313258144 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.310765848 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.31441289 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.311107291 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.313209603 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.311877716 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.312620908 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.312806852 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.310725879 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.310859447 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.310319133 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.313673461 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.312495606 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.311706906 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.316325921 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.314561662 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.315794345 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.31528916 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.315815066 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.316384821 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.31526357 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.313555177 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.313650116 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.315532722 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.31692986 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.3194118 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.315558209 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.314230647 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.316158548 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.313305522 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.311332517 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.31492795 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.315318482 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.312095808 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.318002145 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.317082831 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.316001341 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.318773766 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.318271485 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.314645601 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.318012152 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.315828572 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.313746782 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.31752849 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.317940679 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.3189714 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.317178876 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.313437055 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.31880799 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.314764127 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.314431222 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.314728582 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.315947332 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.313878547 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.314741357 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.315282552 seconds)
  done (took 82.722561677 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.316391628 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.317726041 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.315250458 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.314521758 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.316414143 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.315024602 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.317785961 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.317919853 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.318270231 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.315098862 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319913813 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.316369515 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.317073584 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.319886489 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.317051926 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315170892 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.312100124 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.315353 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.317406362 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.314791031 seconds)
  done (took 27.556276552 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.314707822 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.316784762 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.314529254 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.31798075 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.316656749 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.314736343 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.318485413 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316339935 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318421231 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318905854 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.320456039 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.318112623 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31603139 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.31819206 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.320213974 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.315889178 seconds)
  done (took 22.30576867 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.316158029 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.31717414 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.319599752 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.321734901 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.317045191 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.315062543 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.319454797 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.322484062 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.31814331 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.320485726 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.321424038 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.318848656 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.316933359 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.320485683 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.317014627 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.317017788 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.318782651 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.320333921 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.321336177 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.319420712 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.319349444 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.319045791 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.321590319 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.321842166 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.317157707 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.319113481 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.31474287 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.316472943 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.319688558 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.31988726 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.31570041 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.319321172 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.318870344 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.32158798 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.320850017 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.321282195 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.319358196 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.321667077 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.321151629 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.321443986 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.321727893 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.321839968 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.31986208 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.32244871 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.316945756 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.322041429 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.318700587 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.320675388 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.319664578 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.320743433 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.324550546 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.32339228 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.321521051 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.325057025 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.321930562 seconds)
  done (took 73.820051014 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.32222925 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.324738812 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.321176866 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.322771828 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.321691885 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.319475833 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.322948816 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.323659355 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.321443512 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.326466371 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.321079993 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.329381548 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.323270715 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.325122964 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.321245875 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.322573358 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.323539701 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.320832887 seconds)
  done (took 25.047537957 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.322765426 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.323387897 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.326905565 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.324310786 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.325387666 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.328650466 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.324198497 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.327123544 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.326373236 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.322400464 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.323584501 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.327520795 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.3267235 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.326013835 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.322635623 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.323943114 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.327345479 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.328372397 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.325715651 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.328211291 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.325985659 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.329378785 seconds)
  done (took 30.401408037 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.326200226 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.323953986 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.325215433 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.344324996 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.346177459 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.350000769 seconds)
  done (took 9.250397871 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330932862 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326952659 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.324574366 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331370117 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328080236 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326755025 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326266951 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32550351 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326214447 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323006254 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322694143 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329692654 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327179278 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32331636 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328580144 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330458513 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323157111 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324410328 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326840252 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326779967 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324429267 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324771814 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322446126 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323099804 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322937312 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32453305 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325662519 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326532004 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328441482 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32868531 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327533295 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32353967 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32755684 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326435082 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329974065 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328184742 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324226456 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325587505 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327990252 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326288333 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.328951961 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32920992 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328964442 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324088784 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328173366 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326470137 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326778755 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324121625 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326988218 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3313222 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328892642 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327166946 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328138291 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328863091 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332696803 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328987022 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326498451 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324861734 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331078387 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329514705 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32876887 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331364964 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324127341 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330119728 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331499531 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325637991 seconds)
  done (took 88.850298927 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326063626 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.329946094 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328443995 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330336574 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326972794 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326518911 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326391323 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326196925 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329943222 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328938969 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333985716 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327786928 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330290548 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326927249 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328565797 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327999595 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328994935 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329346874 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328310616 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33223649 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329231048 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329163614 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328539459 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329825778 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327483839 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33120685 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329687859 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330798424 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328378919 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329983265 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329081705 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328794517 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328379493 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.330449999 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328514545 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328789793 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331679543 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329858703 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330328179 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334836402 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330157326 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33335186 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332927651 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332649682 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331314273 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331753182 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331195919 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331736022 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329120754 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330134443 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330448221 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334356161 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332426578 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335739081 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334217257 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330606166 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332963794 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.333040513 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335243467 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332136598 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332163468 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330935153 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335676898 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334660598 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332488886 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332152948 seconds)
  done (took 89.054286596 seconds)
done (took 1792.997884029 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.311418181 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.343407817 seconds)
  done (took 13.897609768 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.496622804 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.451638414 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.33466879 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.341945359 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.328450223 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.354148311 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.342903539 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.330786876 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.334487731 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.333982672 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.332574868 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.524153838 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.353629122 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.327846625 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.332626578 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.428585252 seconds)
  done (took 43.204307157 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.362763488 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.342414114 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.461726973 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.361334357 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.362882839 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.536789652 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.395977951 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.340249647 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.532356341 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.387138778 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.118767501 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.36591959 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.340307596 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.605862386 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.354836375 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.534949966 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.609512256 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.059073021 seconds)
  done (took 31.318558297 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.836068101 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.368679845 seconds)
  done (took 9.451446286 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.368792002 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.372847951 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.334997875 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.345690858 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.354222339 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.364880843 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.431256758 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.362867778 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.38083069 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.347060133 seconds)
  done (took 64.921670101 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.359001333 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.341177442 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.339825623 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.341545034 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.330978793 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.350334314 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.339471139 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.336147592 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.404205415 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.477979008 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.344796716 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.348796884 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.363478503 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.341974339 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.341122463 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.379836763 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.491754102 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.339226467 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.339074623 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.347913991 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.344234686 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.466835003 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.388344817 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.340799057 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.476915106 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.400308425 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.345113263 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.34959246 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.468068178 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.344389938 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.33971612 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.341779499 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.341884746 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.985108022 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.909239561 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.350631286 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.364967195 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.35069861 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.339063047 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.532848209 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.344405368 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.347531961 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.334722632 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.879038487 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.490485869 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.47295326 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.718544116 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.361955251 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.344882941 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.409489163 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.342209156 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.345366302 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.374630211 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.125270558 seconds)
  done (took 113.179481434 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.360291352 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.724761531 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.505390295 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.362870905 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.988358676 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.067044275 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.352687861 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.655079201 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.408993035 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.333148949 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.628721298 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.866883537 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.361173451 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.376118541 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.973262865 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.413841578 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.33698025 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.140159743 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.355306772 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.335344885 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.858795456 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.337830526 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.335908584 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.510311864 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.373359627 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.822281369 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.915184681 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.659580873 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.352768127 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.333655764 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.840066245 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.358526663 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.400591767 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.334397891 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.616524864 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.745059535 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.739757167 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.355504187 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.334706473 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.335305474 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.355906659 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.815847318 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.721982644 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.355131779 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.354080754 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.821017713 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.355243926 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.34259823 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.344396781 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.541360306 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.995019123 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.341002773 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.918188256 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.337865009 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.737862587 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.427918462 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.420872455 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.849113884 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.35568987 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.335083062 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.376027333 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.337028822 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.344084099 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.337024717 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.339227616 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.718441988 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.460040898 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.344090652 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.732809892 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.85312842 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.359503818 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.915330155 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.287076182 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.368071518 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.426337612 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.340179994 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.95001803 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.880334586 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.364207663 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.336354367 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.709926831 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.361658794 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.641977399 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.355311101 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.354962329 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.87337962 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.349212092 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.396128556 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.339857703 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.338259744 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.981691311 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.347389654 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.640520715 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.393177979 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.339590061 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.340697141 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.353375113 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.335803569 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.35898218 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.343598083 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.895871881 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.36819785 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.342469451 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.36036002 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.346697835 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.342634363 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.346093096 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.345436271 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.565492931 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.923997578 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.362889386 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.343240562 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.340377601 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.342578244 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.512230371 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.342133338 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.694970503 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.365285432 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.342637955 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.353122288 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.120691036 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.374461357 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.34073 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.346426263 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.258821512 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.553281425 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.366347475 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.338821777 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.346322509 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.364521483 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.715394189 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.359682355 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.364557372 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.344741617 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078902738 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.392361743 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.345175449 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.612316678 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.350857573 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.342807255 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.369832987 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.342832717 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.666320683 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.637167283 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.390547626 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.346258654 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.35657575 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.075954209 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.390844594 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.491284673 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.363320307 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.383331809 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.546405506 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.69929153 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.345001437 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.96786808 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.346211548 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.562318499 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.344138684 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.653972197 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.874439992 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.364357114 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.346442083 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.08476796 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.061435278 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.034036643 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.349624624 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.643912234 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.321264677 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.820631562 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.347460153 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.347172198 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.798013356 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.350488573 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.349052561 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.346671179 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.346131324 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.487175851 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.521328561 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.574300032 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.349846352 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.845599586 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.394711691 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.343958277 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.364712541 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.34627586 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.689498691 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.424025901 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.35033755 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.355268614 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.346115017 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.354367798 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.867158702 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.329108262 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.349296521 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.504192608 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.018684815 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.365019161 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.355658253 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.053690022 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.653488074 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.906453044 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.431793289 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.700012318 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.372861379 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.38722913 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.960308153 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.388244117 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.867801261 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.372803136 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.347093594 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.974318368 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.366192378 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.700334794 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.348205259 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.349096367 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.933877854 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.366239483 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.348629072 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.733577374 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.369212953 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.616768088 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.349851856 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.36941955 seconds)
  done (took 1115.341954523 seconds)
done (took 1392.55900744 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.346912024 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.35076399 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.335093257 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.355990712 seconds)
  done (took 26.653341602 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.360763132 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.355922523 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.354674996 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.359430983 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.361353302 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.356671183 seconds)
  done (took 9.41516616 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.462100824 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.358625638 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.355609939 seconds)
  done (took 19.441454984 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.579652315 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.753436292 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.743741593 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.787633682 seconds)
  done (took 11.133132934 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.354896729 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.360680479 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.357854981 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.361745348 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.36028728 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.361546585 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.362272303 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.361129477 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.358436991 seconds)
  done (took 13.502558815 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.694105718 seconds)
done (took 87.101027455 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.166891965 seconds)
    (2/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.446800037 seconds)
    (3/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.398377445 seconds)
    (4/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.376454017 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.421868118 seconds)
    (6/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.508462599 seconds)
    (7/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.216872331 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.341311802 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.638630029 seconds)
    (10/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.37920973 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.394269818 seconds)
    (12/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.44087338 seconds)
    (13/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.335636477 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.427664099 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.37890207 seconds)
    (16/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.964006998 seconds)
    (17/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.350649823 seconds)
    (18/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.179966536 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.811565975 seconds)
    (20/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.357619829 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.351426189 seconds)
    (22/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.366693032 seconds)
    (23/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.33556306 seconds)
    (24/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.677918485 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.353006695 seconds)
    (26/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.11306343 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.75399109 seconds)
    (28/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.287915242 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.329790626 seconds)
    (30/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.371522659 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.084045176 seconds)
    (32/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.433651166 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.235630163 seconds)
    (34/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.489456725 seconds)
    (35/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.355829391 seconds)
    (36/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.056499401 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.374902778 seconds)
    (38/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.332217759 seconds)
    (39/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.039226041 seconds)
    (40/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.069777344 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.46057442 seconds)
    (42/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.337737444 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.367847917 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.680479822 seconds)
    (45/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.354231789 seconds)
    (46/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.354150218 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.374263804 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.155496527 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.34032156 seconds)
    (50/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.337751904 seconds)
    (51/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.386416891 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.92821836 seconds)
    (53/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.320206084 seconds)
    (54/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.87522971 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.467715707 seconds)
    (56/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.393192124 seconds)
    (57/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.361909586 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.640618303 seconds)
    (59/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.878753326 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.007714133 seconds)
    (61/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.336948083 seconds)
    (62/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.36918504 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.139153493 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.415944693 seconds)
    (65/309) benchmarking ("sort", Int8, false)...
    done (took 4.382024677 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.36959201 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.060211689 seconds)
    (68/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.40240479 seconds)
    (69/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.372921626 seconds)
    (70/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.356665508 seconds)
    (71/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.340062739 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.817769782 seconds)
    (73/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.496254367 seconds)
    (74/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.756609825 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.396565299 seconds)
    (76/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.333862947 seconds)
    (77/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.92489259 seconds)
    (78/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.481199609 seconds)
    (79/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.368762185 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.255795915 seconds)
    (81/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.380852187 seconds)
    (82/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.364851553 seconds)
    (83/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.909182046 seconds)
    (84/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.622561064 seconds)
    (85/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.547535755 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.203378854 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.058931795 seconds)
    (88/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.374609662 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.638346387 seconds)
    (90/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.282382053 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.423082501 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.360813193 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.338787534 seconds)
    (94/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.802310083 seconds)
    (95/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.339797757 seconds)
    (96/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.42038431 seconds)
    (97/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.383500129 seconds)
    (98/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.174360734 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.23069774 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.400106278 seconds)
    (101/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.344382826 seconds)
    (102/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.352770926 seconds)
    (103/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.671446892 seconds)
    (104/309) benchmarking ("sort", Float64, false)...
    done (took 5.741151536 seconds)
    (105/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.359533304 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.431067299 seconds)
    (107/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.160228339 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.599955664 seconds)
    (109/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.472868898 seconds)
    (110/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.379222861 seconds)
    (111/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.473533828 seconds)
    (112/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.401782922 seconds)
    (113/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.339557543 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.358032789 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.378680725 seconds)
    (116/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.176955656 seconds)
    (117/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.341198477 seconds)
    (118/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.850025182 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.472691978 seconds)
    (120/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.207230824 seconds)
    (121/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.340468709 seconds)
    (122/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.676407157 seconds)
    (123/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.838870303 seconds)
    (124/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.358386787 seconds)
    (125/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.485891021 seconds)
    (126/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.427798759 seconds)
    (127/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.487696983 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 1.884791524 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.405438356 seconds)
    (130/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.376439262 seconds)
    (131/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.387532269 seconds)
    (132/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.442570974 seconds)
    (133/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.882026092 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.623604896 seconds)
    (135/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.475231123 seconds)
    (136/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.579691458 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.252765611 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.461692644 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.617734093 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.360749234 seconds)
    (141/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.342400847 seconds)
    (142/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.561114704 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.439113589 seconds)
    (144/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.365650307 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.482002666 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.496036142 seconds)
    (147/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.444549363 seconds)
    (148/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.388099077 seconds)
    (149/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.339833848 seconds)
    (150/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.341593281 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.73464008 seconds)
    (152/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.380009522 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.256296746 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.390889945 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.595894707 seconds)
    (156/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.407854544 seconds)
    (157/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.037656063 seconds)
    (158/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.649977007 seconds)
    (159/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.42847916 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.002343619 seconds)
    (161/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.345456676 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.406850176 seconds)
    (163/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.558032131 seconds)
    (164/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.761702794 seconds)
    (165/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.169601521 seconds)
    (166/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.469933491 seconds)
    (167/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.197195305 seconds)
    (168/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.3465059 seconds)
    (169/309) benchmarking ("sort", Float32, false)...
    done (took 5.417985518 seconds)
    (170/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.405687839 seconds)
    (171/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.37341814 seconds)
    (172/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.38458015 seconds)
    (173/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.380612925 seconds)
    (174/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.72263261 seconds)
    (175/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.990005163 seconds)
    (176/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.28127067 seconds)
    (177/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.681489925 seconds)
    (178/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.346123834 seconds)
    (179/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.39649805 seconds)
    (180/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.920579668 seconds)
    (181/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.369580942 seconds)
    (182/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.661558244 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.252396269 seconds)
    (184/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.49838231 seconds)
    (185/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.342243387 seconds)
    (186/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.425619045 seconds)
    (187/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.460392316 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.054965441 seconds)
    (189/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.369558054 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.393551769 seconds)
    (191/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.559609003 seconds)
    (192/309) benchmarking ("sort", BigInt, false)...
    done (took 6.387572287 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.204437836 seconds)
    (194/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.448586081 seconds)
    (195/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.949109981 seconds)
    (196/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.389743757 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.406019495 seconds)
    (198/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.420323684 seconds)
    (199/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.392776011 seconds)
    (200/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.343414461 seconds)
    (201/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.414369258 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.793014318 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.424401248 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.381393743 seconds)
    (205/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.368303953 seconds)
    (206/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.011141744 seconds)
    (207/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.294253593 seconds)
    (208/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.78569869 seconds)
    (209/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.491024087 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.421060449 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.362567944 seconds)
    (212/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.390185763 seconds)
    (213/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.347341057 seconds)
    (214/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.510431484 seconds)
    (215/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.984841163 seconds)
    (216/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.497249787 seconds)
    (217/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.178318256 seconds)
    (218/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.373125647 seconds)
    (219/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.008500742 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.027500625 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.570536388 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.804351463 seconds)
    (223/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.510432708 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.365355337 seconds)
    (225/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.497405536 seconds)
    (226/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.451023126 seconds)
    (227/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.637155578 seconds)
    (228/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.44862518 seconds)
    (229/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.053289457 seconds)
    (230/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.295139192 seconds)
    (231/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.37476329 seconds)
    (232/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.348036129 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.395309905 seconds)
    (234/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.047505621 seconds)
    (235/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.501102211 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.826681636 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.430298485 seconds)
    (238/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.36914744 seconds)
    (239/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.359362702 seconds)
    (240/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.394316995 seconds)
    (241/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.015763036 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.39396298 seconds)
    (243/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.392323712 seconds)
    (244/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.349821893 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.368079376 seconds)
    (246/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.307796296 seconds)
    (247/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.85774017 seconds)
    (248/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.879293883 seconds)
    (249/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.357654373 seconds)
    (250/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.449086566 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.633239247 seconds)
    (252/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.885714655 seconds)
    (253/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.349319936 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.385093218 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.36927468 seconds)
    (256/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.147577402 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.143307382 seconds)
    (258/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.345244044 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.679137156 seconds)
    (260/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.386962024 seconds)
    (261/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.786545232 seconds)
    (262/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.66215587 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.39962909 seconds)
    (264/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.347059593 seconds)
    (265/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.946727237 seconds)
    (266/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.334971131 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.763257684 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.455656242 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.38315836 seconds)
    (270/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.863935219 seconds)
    (271/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.485774185 seconds)
    (272/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.385501796 seconds)
    (273/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.405603859 seconds)
    (274/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.370093861 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.022111272 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.757655914 seconds)
    (277/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.039233996 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.815528941 seconds)
    (279/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.876547758 seconds)
    (280/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.356684504 seconds)
    (281/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.375150305 seconds)
    (282/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.456433606 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.11591153 seconds)
    (284/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.253764807 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.457217137 seconds)
    (286/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.992554033 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.459705126 seconds)
    (288/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.369648267 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.36277375 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.480947288 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.174708956 seconds)
    (292/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.34789803 seconds)
    (293/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.632478716 seconds)
    (294/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.479004017 seconds)
    (295/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.371109106 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.390915317 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.41810831 seconds)
    (298/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.352311452 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.358095669 seconds)
    (300/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.390991126 seconds)
    (301/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.343671372 seconds)
    (302/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.389258047 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.203044111 seconds)
    (304/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.785943871 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.41671798 seconds)
    (306/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.457189165 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.496042162 seconds)
    (308/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.352051915 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.938002901 seconds)
  done (took 1061.266594577 seconds)
done (took 1062.532674312 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.404984086 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.403868508 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.383218214 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.408380104 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.495766773 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.412842028 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.391871962 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.386455403 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.433197604 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.434099417 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.383089408 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.408508855 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.385421415 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.384201199 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.38810387 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.402339633 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.52496595 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.382305663 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.399698602 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.395738218 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.402848386 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.382750539 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.435744685 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.411752126 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.39192513 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.389099639 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.390597258 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.404236031 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.498824492 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.386138158 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.388209309 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.397789088 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.523719484 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.385677262 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.383644029 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.405368479 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.39572791 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.3963657 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.389908201 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.418973676 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.974624602 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.400981584 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.390948134 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.386795153 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.386491871 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.393680874 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.387020195 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.395752553 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.398554771 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.403329302 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.963204495 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.4195682 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.39171153 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.391881502 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.400767083 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.388305052 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.392447696 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.404853564 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.409800912 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.40510734 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.514398446 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.38901305 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.392531139 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.406136901 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.396754044 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.997648355 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.401700729 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.392562526 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.970446748 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.412436178 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.998173149 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.412286513 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.391246623 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.401777649 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.423146917 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.570648699 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.390060918 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.39155943 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.39754669 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.388566848 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.40172394 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.404064256 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.396591194 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.396101626 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.40387788 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.417570137 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.400262469 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.387938944 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.397322478 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.410385165 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.398987824 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.401767729 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.396289446 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.385502932 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.401229582 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.394869971 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.393659979 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.394407893 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.399032337 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.405013157 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.969931624 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.4268073 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.389063133 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.385530453 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.392196423 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.401429796 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.970761908 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.408046186 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.41297198 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.44099455 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.394698289 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.512995148 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.394911758 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.411693564 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.405449899 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.395004853 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.388815156 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.516356295 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.962202767 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.427435442 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.396621265 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.392561159 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.41214854 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.396299769 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.385916065 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.527127808 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.393364111 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.409175782 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.515010156 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.407694772 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.426130798 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.394227237 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.39600121 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.424994099 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.410517605 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.423556694 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.394946043 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.412637601 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.411370308 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.390529896 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.403427847 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.406763581 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.396170702 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.402805168 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.390297254 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.432336718 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.411869037 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.409412108 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.419554853 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.517732991 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.392126377 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.520675881 seconds)
done (took 236.222390818 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.45247083 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.392329853 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.477008604 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.387740481 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.493269452 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.487867105 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.390308117 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.391864192 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.390681056 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.765620634 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.388417771 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.390928675 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.391461618 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.387389463 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.474296131 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.393278747 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.392437489 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.727144331 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.394065093 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.462438582 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.396507502 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.388798916 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.392088119 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.771254474 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.387434849 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.385490657 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.460441445 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.392404435 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.736201115 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.385910396 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.393278772 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.73944161 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.486071451 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.413108229 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.399336432 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.3983764 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.496063423 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.4115207 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.473311459 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.475355832 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.477209274 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.427355631 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.386857717 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.391176928 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.393566169 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.391404808 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.392658903 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.4227819 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.394229074 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.391289639 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.736502953 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.402932207 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.403465373 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.388729532 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.391109689 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.415628864 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.389251418 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.391697312 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.4831213 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.397814968 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.455207404 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.771510785 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.77706936 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.397282441 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.396704764 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.391200083 seconds)
  done (took 152.368802213 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.460319455 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.467989706 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.515614888 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.410913698 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.445026326 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.515494867 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.411615351 seconds)
  done (took 11.525786315 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.398481708 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.39517269 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.443731732 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.444506553 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.394843187 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.541518969 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.392004795 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.407216394 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.391207769 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.447210265 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.397853758 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.395126078 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.403021903 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.390824224 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.442808874 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.40810903 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.50752355 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.39710799 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.395265334 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.547933336 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.393263257 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.403083878 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.446879343 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.406507154 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.394428759 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.399903864 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.961798621 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.397731498 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.392808668 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.395759064 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.393363046 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.438001565 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.398160494 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.393895554 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.395077208 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.512081735 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.400500693 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.395114575 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.395408137 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.393614679 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.396360865 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.39734079 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.396588445 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.392639053 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.399274866 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.420204877 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.39714716 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.396627188 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.396581014 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.400064521 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.44830842 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.39757727 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.396075702 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.395685363 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.452775448 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.405639928 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.400357683 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.39522274 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.400542268 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.396134943 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.548106108 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.446651724 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.401030167 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.445645357 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.39777392 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.400321496 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.403124723 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.398121833 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.45244323 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.395699547 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.445685509 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.399413883 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.549553409 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.422217767 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.400238039 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.400609635 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.402272086 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.399794572 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.395638612 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.405464319 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.397282803 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.398501505 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.404533572 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.395426315 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.395894444 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.501364742 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.50804709 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.396436101 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.413956332 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.40501078 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.399674785 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.450986285 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.401819703 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.396783948 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.452757976 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.51465246 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.454163799 seconds)
  done (took 159.430047743 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.403535124 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.40912089 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.402026776 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.416650698 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.40239811 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.401577816 seconds)
  done (took 9.742141262 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.401870392 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.401312857 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.399341803 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.401667087 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.401240673 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.400382624 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.400579466 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.401506296 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.404067203 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.402964537 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.401970491 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.401884833 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.404502425 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.400579186 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.400748589 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.402220253 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.400551603 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.397076687 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.401985562 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.403408101 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.49709999 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.40393591 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.401493004 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.405148318 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.405748214 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.404187625 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.410503404 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.405916829 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.403529117 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.406386935 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.424081002 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.403508405 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.400281737 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.411344402 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.405699636 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.403017359 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.407972195 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.401673316 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.39906901 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.404545349 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.405565179 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.40399961 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.402017796 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.402663025 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.406237965 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.410648441 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.407448253 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.413426974 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.40725321 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.405950712 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.403526014 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.40229896 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.407215491 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.403580824 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.405663476 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.425820727 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.409024511 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.404682608 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.403230971 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.404150246 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.406810978 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.404365241 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.407399963 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.408987419 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.412412652 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.403343964 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.40587724 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.408330645 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.406443596 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.406227679 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.405806188 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.404430062 seconds)
  done (took 103.55688845 seconds)
done (took 437.918803153 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.59747735 seconds)
  done (took 7.905052866 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.64727151 seconds)
  done (took 7.961455407 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.887647207 seconds)
  done (took 25.206102221 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.456894829 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.499117069 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.398778735 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.424038903 seconds)
  done (took 27.090680252 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.435567555 seconds)
  done (took 7.747573552 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.411713705 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.40013323 seconds)
  done (took 14.12390904 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.673632629 seconds)
  done (took 7.981890487 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.473387676 seconds)
  done (took 7.791538155 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.411908635 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.902128193 seconds)
  done (took 14.639150785 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.386245001 seconds)
  done (took 7.70066656 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.691584409 seconds)
  done (took 9.006652569 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.405066734 seconds)
  done (took 7.717337252 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.422640592 seconds)
  done (took 7.734945345 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.417966334 seconds)
  done (took 10.730569201 seconds)
done (took 164.648337466 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.397211079 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.398958815 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.399904947 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.402819329 seconds)
  done (took 26.910654453 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.445596504 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.445707778 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.450283305 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.453552253 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.459721477 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.460421716 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.434363298 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.43531953 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.453135545 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.445439128 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.444527648 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.443188142 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.440965295 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.436381974 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.445308182 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.443215849 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.453603735 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.443474255 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.449590452 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.445558723 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.410620936 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.454799706 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.446216891 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.408735725 seconds)
  done (took 35.962109858 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.95418173 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.480110057 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.563098806 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.460192147 seconds)
  done (took 7.772264089 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.458489285 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.466176303 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.473572552 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.516097743 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.56975306 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.469817644 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.438121316 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.432703445 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.417166908 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.464091791 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.539550419 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.480626449 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.56120215 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.408286314 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.590801415 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.412220367 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.410399854 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.465186088 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.511478895 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.526809672 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.410294197 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.460579302 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.466126683 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.482458125 seconds)
  done (took 36.748356469 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.405756467 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.419880744 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.410577882 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.411022824 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.419898404 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.409608483 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.408454855 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.412613009 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.408286047 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.41704451 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.4082292 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.4268313 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.409981867 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.413754297 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.415900756 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.411421254 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.419230645 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.409058565 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.412456396 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.412220594 seconds)
  done (took 29.573918438 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.405823645 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.262088362 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.75588309 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.660464154 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.405490442 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.40216279 seconds)
  done (took 28.207118434 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.488971316 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.669137076 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.41220384 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.835543533 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.939635075 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.437551166 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.414969953 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.689803104 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.064422699 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.05066357 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.48205488 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.490929222 seconds)
  done (took 21.293745055 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.40698869 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.412287511 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.420288412 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.425335555 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.476963005 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.436461068 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.41907792 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.406394113 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.482863195 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.497695133 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.433940641 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.472916406 seconds)
  done (took 38.612295871 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49465546 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.458505593 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.478075144 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407452151 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.140155057 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617936781 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.465581155 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.912104372 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.420165109 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682131307 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408852362 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502989994 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.672533129 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4176173 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.415429652 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.528459258 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66300162 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947419734 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411428084 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.8311656 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439645385 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.417918335 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.947472243 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.446653311 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.621913081 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.558661703 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.674342629 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.189913333 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.747739399 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.426110888 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424719908 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412055764 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686413478 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149766906 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53502391 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422730742 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413737552 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.966769081 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.410927836 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.833508735 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433557042 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.414942228 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424441044 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410784325 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.34881202 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409527925 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900419155 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.421999299 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.121507242 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.412076844 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4250606 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507171731 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.414934865 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.98592471 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420034861 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.443593209 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.408336418 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438784028 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998913891 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.419433366 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422125679 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.352772204 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.413482131 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.920371067 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139036125 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.534696805 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.415157538 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.417016458 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350316866 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.893810583 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432726509 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.55119191 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.434671021 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.07493405 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246131843 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.44738683 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.345778203 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995852033 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413579944 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.352614555 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642849382 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.190554985 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352173063 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.359209916 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.348306663 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.188960634 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420954301 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.895537576 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434997907 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.909875088 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.423746159 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429643467 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437631673 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.642494521 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.381350219 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411300939 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.428649497 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533901325 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435816426 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.896275968 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351447758 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.413835605 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673655102 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.625677198 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.433059502 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.546505161 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.675130315 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424112669 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.437530831 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.428873104 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.429732179 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.077080929 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.452005209 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.419029989 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434191384 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.191388682 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232508127 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420114099 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.52533486 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.427903914 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695468928 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.244384591 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.297657641 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484696608 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421646119 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.417645188 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.952223714 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.01857625 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.302443869 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.412827196 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420289787 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.432411338 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.419116939 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.379150339 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.411211136 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424485942 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.202074234 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.642024832 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416565247 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697592081 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354136279 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555002278 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.432564629 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.642379541 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.785211659 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.437152299 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681532542 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430009949 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.43420302 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.431840278 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439224109 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519535956 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440342386 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.418889831 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.681605037 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.424519588 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.423139406 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.97272038 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.197764252 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419844911 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.426885621 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42375784 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096309355 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416496668 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.422858554 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.33600002 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.434447488 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489286569 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.424511008 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.431653194 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.518144682 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446192297 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.427924468 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.428096504 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64251941 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.432082603 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.956828764 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.503089841 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.646223189 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091929146 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452332864 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.356310015 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.134000283 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.115138708 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420048387 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.611229929 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.422258666 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43184342 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.431945415 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.440498999 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.088527333 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446123694 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.884297736 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.432770328 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.433585749 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.427172857 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425669785 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.509599053 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.481424486 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.438695568 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.436941459 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565519248 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.436975476 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.359357944 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.940463809 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.425835291 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.423565665 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.201308597 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454365523 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.888289858 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94731736 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682532659 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436419251 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.431190074 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.080900232 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.464363571 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.423874984 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422785048 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454390096 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.427239367 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431267899 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.432207308 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.947191205 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.802533777 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987245828 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282098354 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065134412 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.47175484 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.429688408 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.31975035 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.907981428 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3598364 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.084808932 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638097628 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.922694431 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.381802712 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656191432 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.803242075 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.305541903 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.436704381 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655881643 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.451147189 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.439367994 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440152797 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.634051508 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45951657 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.431450512 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.355607991 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.938225284 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.688730445 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421945877 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.52531781 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909128713 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429950557 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.228712376 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.452635384 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.89955041 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.646579045 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.973586803 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.82077386 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.426824391 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.433043069 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95880546 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.42853539 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.955471554 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12612675 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.461567433 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.658237919 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.371735453 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.434703797 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.437483385 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.421052265 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.978712464 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.432601683 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.680549182 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.438972161 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.361030323 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.43203357 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035024813 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.299808697 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.431558214 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427770016 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25040348 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.44332837 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.76430514 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.437688661 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.505752518 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.455156738 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.361417518 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.359390388 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.125718967 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.429308684 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398292702 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971606549 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.434054281 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451233012 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.435721101 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302754925 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.68778961 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.443865408 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.09637074 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674259744 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.428431719 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453412678 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.529288238 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427000402 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.4130802 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.328368282 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.666951914 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428200563 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.658309463 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.583251844 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.355942798 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.530327828 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.644041507 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.322576646 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.437092461 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.726802116 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.161222781 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.436888713 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31879603 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480109068 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.436528063 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.453602721 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.428488364 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452032566 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522527897 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.443123969 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.442169898 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.439600004 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.628619825 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435713687 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.434324186 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.444336119 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523536182 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.491229481 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.476095512 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.203412843 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103379947 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31165818 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.120844688 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.467118239 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.434138893 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433134753 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.365729991 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58127784 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.960421935 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705116126 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.550653804 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.449467782 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458328233 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432810372 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.456534123 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644320771 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707524573 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.408337332 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435988148 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.225675188 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.314298246 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.44360018 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.643022818 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986622586 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041530426 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.559356657 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.448069225 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.920430117 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.710851376 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.525664217 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.435769429 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.02781996 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.450468835 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.913010513 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.457897525 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434127804 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587214213 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.442601023 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180145524 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.470471362 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.593932871 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.208204144 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.016502378 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.693124373 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.000934349 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.444105302 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.107110413 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.266639995 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.706179462 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505919405 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.442529296 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.545057654 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582232953 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.436755361 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.328619194 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.430396458 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285976783 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.148459019 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.446624408 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114833654 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.717644471 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.43205336 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.441610155 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461834768 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.447640666 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.663317686 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.23010929 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.666084512 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.449529197 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.436420799 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.009684342 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.107904865 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.471024771 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.371366993 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.43825031 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.725623383 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.692913623 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456755852 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.887759011 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.15097192 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028285892 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.411078324 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45688532 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.437641929 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.267747689 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12002635 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.507427861 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989125033 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.096574564 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.442672427 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.713699085 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.442997191 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.438847669 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.714664303 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.437243339 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.435305266 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.453181175 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.110452719 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.325512186 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.454919316 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.96810021 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.383479101 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.664233519 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.439651812 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.396102701 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436555515 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.643376898 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.442405978 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.559101326 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446953898 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.434735873 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449384274 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.193233382 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.721443136 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.444852983 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.438218833 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.43298691 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.449302809 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465987092 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.767102039 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444728423 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.111923203 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.793948277 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.70024908 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.44120937 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.42192809 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.443283681 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441347951 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.165546996 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.457328513 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.460759477 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052667916 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.443996774 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.453143869 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.445572447 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.658875319 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652625744 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.449312928 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.453713343 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.442141655 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453049103 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.346111147 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.221511616 seconds)
  done (took 1701.272941231 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.43813716 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.478418055 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.458857927 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.519160326 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.468907292 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.552483171 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.52332542 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.564966794 seconds)
  done (took 53.352751289 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.453011884 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.600341157 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.475645497 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.448605404 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.445632543 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.45738554 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.95909191 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.473249901 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.445844795 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.452729271 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.439972835 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.443460414 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.164036435 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.452835206 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.455143424 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.421797985 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.44994182 seconds)
  done (took 67.390302152 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.449610129 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.087401524 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.503415891 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.443106243 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.101332491 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.475655261 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.972945075 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.498176978 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.441797623 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.559162949 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.092792354 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.47610737 seconds)
  done (took 82.449864677 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.450072139 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.450807063 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.448561339 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.449437135 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.450044668 seconds)
  done (took 8.593734295 seconds)
done (took 2139.453646348 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.691217728 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.240612588 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.191815514 seconds)
  done (took 5.776410788 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.587577767 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.643866811 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.800633395 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.790181807 seconds)
  done (took 8.170053736 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.728993413 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.819216966 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.64417782 seconds)
  done (took 6.541273928 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.064475657 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.446376726 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.448686075 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.438988858 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.444648845 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.445192611 seconds)
  done (took 20.677366965 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.443941946 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.453598761 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.450921205 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.449802043 seconds)
  done (took 7.148605799 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.422309509 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.152406108 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.424379359 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.44181319 seconds)
  done (took 18.788900471 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.19452028 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.210060984 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.191115153 seconds)
  done (took 7.945148079 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.456522875 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.288459452 seconds)
  done (took 10.093253822 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.7571911 seconds)
  done (took 3.103798891 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.581006466 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.780588865 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.640216558 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.498156006 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.677940036 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.878568329 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.391602715 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.896876866 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.471683886 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.036381502 seconds)
  done (took 31.201540243 seconds)
done (took 138.443704928 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.744236012 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.848010496 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.651514006 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.759177147 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.676539135 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.65025191 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.953977877 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.723829094 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.233377326 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.209998606 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.758679355 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.676539589 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.679873737 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.851378012 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.678661202 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.853954316 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.681715202 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.796848546 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.444659007 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.456940581 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.95690864 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.358524635 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.593029948 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.384534215 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.680569119 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.604319806 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.936811166 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.851635939 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.446616581 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.985970766 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.602754565 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.45291333 seconds)
  done (took 202.538036142 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.459151709 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.44831816 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.460314668 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.460715462 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.453628328 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.447538476 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.44986803 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.46357627 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.452243915 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.449454675 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.456195082 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.458850195 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.444662968 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.483450049 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.449288102 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.466957641 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.464251179 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.448396895 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.446192789 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.449179593 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.449779511 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.464233038 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.4611906 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.462262935 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.465222518 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.447633427 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.465851864 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.459067012 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.44968322 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.46046472 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.448712359 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.46320913 seconds)
  done (took 207.965461186 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.452232033 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.447257765 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.447397048 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.448621381 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.457144702 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.449119082 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.467306531 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.445662594 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.472507055 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.449050563 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.448817177 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.453023018 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.448422857 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.459305054 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.450598606 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.447855362 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.466283376 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.446705027 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.449879283 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.482735675 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.452291733 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.448675835 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.452865161 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.460826115 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.447965615 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.466880168 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.470655991 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.450657575 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.450208734 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.460598861 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.45180492 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.468922058 seconds)
  done (took 207.928853512 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.658097062 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.459964167 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.459061624 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.418330882 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.458994789 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.460589519 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.461144578 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.654337647 seconds)
  done (took 15.385907722 seconds)
done (took 635.16976531 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.987103654 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.696267788 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.681083728 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.486980419 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.397379183 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.503013756 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.48128527 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.67354063 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.468964752 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.688006901 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.854683705 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.494483644 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.007637744 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.474645828 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.768020531 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.592233078 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.406191685 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.529260979 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.832190319 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.104021685 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.763807434 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.064370393 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.696101461 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.434348775 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.012597962 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.061666553 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.381228378 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.392990059 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.498642967 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.844829591 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.337443105 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.64467964 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.555360373 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.554050381 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.609865966 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.590294255 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.631648861 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.549244782 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.697279916 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.839864737 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.121872459 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.269897457 seconds)
  done (took 100.037439691 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.446501437 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.444840525 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.445632126 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.444970156 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.446044042 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.446057098 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.44516003 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.44590506 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.447550799 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.444942689 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.447163728 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.447786078 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.44840484 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.444236656 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.445973772 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.445871065 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.447235707 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.451359087 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.445702504 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.447885901 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.449545761 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.4428722 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.4496945 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.450599788 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.4511199 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.449034814 seconds)
  done (took 38.984995727 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.466050396 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.740811801 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.933885305 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.474229709 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.465736528 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.47119056 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.55738192 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.473377086 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.469172995 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.476328998 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.654501038 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.474246199 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.503894673 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.958021445 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.474265226 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.469320919 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.465228541 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.467465677 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.759142159 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.480111722 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.586949173 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.474150807 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.558038169 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.483132873 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.496510528 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.470763841 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.472786241 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.005019525 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.495139796 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.657906031 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.400773665 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.559221181 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.963751209 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.953460296 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.396063655 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.469418186 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.472419172 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.659547954 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.470540639 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.467111932 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.558081767 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.474382457 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.944968058 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.126757598 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.487230122 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.470823064 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.023293706 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.6798192 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.767296672 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.481802473 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.97989883 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.474462041 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.473452166 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.47032052 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.762534617 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.476668711 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.46789569 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.058609004 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.49823242 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.562517079 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.474311512 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.468017512 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.752284869 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.473550074 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.744652186 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.47376806 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.479142642 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.488737493 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.93705696 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.478014518 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.151638863 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.499311332 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.472378277 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.655675155 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.749408784 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.067862351 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.498246639 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.765063501 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.96934409 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.579746457 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.481357697 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.999877118 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.589327408 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.480450428 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.478121835 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.475457074 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.475795119 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.522248781 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.559365041 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.079916992 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.153409718 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.074941479 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.58544194 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.486938512 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.47516498 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.054135866 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.492936269 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.470928776 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.935237217 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.145614796 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.495911053 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.482090265 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.148241905 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.495911457 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.565438367 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.480179786 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.949170158 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.478716367 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.52632679 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.474813906 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.480285802 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.497084136 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.570999912 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.479315958 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.475329317 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.116877063 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.687273446 seconds)
  done (took 193.948030608 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.482160084 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.46611794 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.478258066 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.463552053 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.46401338 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.485971715 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.466880436 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.464457179 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.475039497 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.466085721 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.47049352 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.470747942 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.471568362 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.471011627 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.473467507 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.474150507 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.079613452 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.468070764 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.467607071 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.479340869 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.301880187 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.470531548 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.468442502 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.484354508 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.469405296 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.464789943 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.469242163 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.470604313 seconds)
  done (took 156.006326831 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.475573012 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.123221761 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.492739486 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.627419888 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.497109524 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.47413737 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.629226839 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.541837403 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.495326724 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.474287898 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.474630076 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.842598926 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.47818823 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.101314151 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.702398113 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.648741651 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.103721158 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.493241842 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.476391083 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.473556294 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.63316321 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.481767502 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.845023259 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.12522962 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.492020135 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.131411301 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.456233313 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.478282596 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.476693154 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.130007029 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.487815839 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.828171339 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.566808528 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.553359003 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.149301272 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.098437474 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.117859751 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.651159592 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.482844126 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.474074247 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.479614937 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.465189127 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.128902743 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.494112205 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.476681111 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.118178299 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.495003921 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.480509656 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.487083654 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.476159993 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.547615731 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.566931477 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.848092786 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.132420009 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.582098646 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.493703203 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.635364609 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.874569365 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.485230928 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.078785102 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.458068856 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.132466369 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.494948663 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.45985761 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.480944373 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.485660494 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.655250306 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.638131743 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.083157912 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.49323949 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.082501705 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.668866247 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.480146743 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.480574483 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.481568292 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.135079725 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.098115277 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.666885641 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.64194164 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.707054084 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.465450908 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.477621725 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.462988466 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.571093169 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.478765093 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.136919689 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.124769069 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.496450993 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.480683488 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.480596639 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.4824281 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.687837897 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.150097833 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.585490278 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.096709686 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.855418825 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.829689106 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.47927557 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.55074044 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.500131919 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.832203624 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.479251152 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.550495161 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.94196296 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.831581657 seconds)
  done (took 177.858225115 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.758871851 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.850491552 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.583365319 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.628883119 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.120466895 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.082449536 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.839203079 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.631486303 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.604914171 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.765320597 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.757662053 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.568384118 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.682040808 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.566731142 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.298284982 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.58018684 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.603310874 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.651445025 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.612099767 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.608825569 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.163093129 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.793287146 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.685394275 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.545095549 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.582579723 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.361978644 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.089521687 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.036278942 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.683990696 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.923681355 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.054400585 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.718733154 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.516931249 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.224747554 seconds)
  done (took 71.553617988 seconds)
done (took 739.745547304 seconds)
SAVING RESULT...
DONE!
