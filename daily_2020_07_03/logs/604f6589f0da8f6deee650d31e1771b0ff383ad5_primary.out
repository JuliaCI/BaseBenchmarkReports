cset: moving following pidspec: 20782
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.566547457 seconds)
loading group "shootout"... done (took 1.146693684 seconds)
loading group "string"... done (took 0.4165176 seconds)
loading group "linalg"... done (took 7.731216439 seconds)
loading group "parallel"... done (took 0.147858071 seconds)
loading group "find"... done (took 1.36015368 seconds)
loading group "tuple"... done (took 1.884461199 seconds)
loading group "union"... done (took 12.30640013 seconds)
loading group "dates"... done (took 1.295727465 seconds)
loading group "micro"... done (took 0.222948904 seconds)
loading group "simd"... done (took 4.209678916 seconds)
loading group "io"... done (took 0.971088961 seconds)
loading group "random"... done (took 8.575404519 seconds)
loading group "problem"... done (took 1.534559929 seconds)
loading group "array"... done (took 18.64271336 seconds)
loading group "misc"... done (took 1.546806673 seconds)
loading group "scalar"... done (took 38.913461756 seconds)
loading group "sort"... done (took 2.95719659 seconds)
loading group "sparse"... done (took 11.540997611 seconds)
loading group "collection"... done (took 16.560855939 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.523290131 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12333347 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13423346 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119413545 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152197947 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115241422 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12193772 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082826379 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.00760314 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149118995 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.112018163 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.439484418 seconds)
done (took 5.522523064 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.169872548 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086158758 seconds)
    (2/2) benchmarking "String"...
    done (took 0.077331359 seconds)
  done (took 1.29678427 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064689339 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126011151 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065865867 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066172042 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066278019 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066180324 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065976649 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065632811 seconds)
  done (took 1.656722518 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071571515 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071002329 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065273058 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067426517 seconds)
  done (took 1.411005912 seconds)
done (took 5.749867194 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.240151308 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.107132776 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.301133967 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.32573104 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.41382823 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.090073983 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.072743007 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.069771938 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.129148051 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.320976236 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.117988615 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.190622573 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096383774 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.181030959 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.013405264 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.128314479 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084569865 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.122233911 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091872556 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130992422 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.364277714 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.076004081 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.081450227 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.07003858 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.066855021 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.659149116 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663979928 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.139083829 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083097492 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.079211477 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.118563959 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.655561164 seconds)
  done (took 10.45229689 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099097045 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.095764017 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067499336 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123419953 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098098305 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070310158 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075474072 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067862367 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090079473 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128756362 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091074577 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107521254 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067428587 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070191898 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088413785 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197678113 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078782124 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080227203 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067589196 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077215537 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105692419 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076472429 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077598093 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077769353 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128183555 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.167870595 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095509879 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097138253 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065805818 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078479988 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113923251 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125456476 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067593311 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.069273366 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122748735 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093692386 seconds)
  done (took 4.588009247 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.107845697 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.089760375 seconds)
    (2/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.089670354 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.10047221 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.61749179 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065474129 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.148146002 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.232184584 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.073541383 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.387445194 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.15493739 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.12025834 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.141679215 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.121029525 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068225361 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.256232219 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.118583057 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.275404688 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068452772 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.067281894 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066291373 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075680118 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068640895 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063731742 seconds)
    (24/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.091280256 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.100384408 seconds)
    (26/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064651483 seconds)
    (27/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.085819796 seconds)
    (28/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.180280836 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.984365883 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.289934148 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067431856 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162990449 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.088765745 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.368986149 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.069950409 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.088627505 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.396870902 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.123463368 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06494204 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.160232027 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.12866856 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064087273 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.114419397 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.07712869 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.068323769 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.070897365 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067787376 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.077655406 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.076990349 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.100337186 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066932736 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064512797 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166206563 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063608534 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065292695 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.066548159 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.148210183 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06415898 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.144992292 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064100841 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067738136 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.094548539 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072284775 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.085611674 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.110476094 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.328479424 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063937263 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067075596 seconds)
    (69/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.038137796 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.016905818 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079328677 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.066925488 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.082362761 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065548503 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.067335816 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066348848 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.073863508 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069465384 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067986871 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.107906778 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066250461 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069204208 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064700407 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070455954 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.097362008 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065012389 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.466640529 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.09682386 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065660105 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.075864509 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103856081 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066049136 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.071623226 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066852565 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.071366477 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065691283 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066436844 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.071997576 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.091287202 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068847131 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111685082 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.144611136 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.07039439 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06562622 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070359175 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069350586 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068670372 seconds)
    (108/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065471267 seconds)
    (109/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068442638 seconds)
    (110/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06764082 seconds)
    (111/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06439124 seconds)
    (112/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064030029 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.116016516 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065041385 seconds)
  done (took 21.630319602 seconds)
done (took 38.913732442 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.237414796 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081479693 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081953655 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083961986 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082832107 seconds)
  done (took 1.798673818 seconds)
done (took 3.021454103 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.109232377 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.063561056 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.100134069 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.099838755 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.063255338 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.063595917 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.097560855 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.063896866 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.097835481 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.099936776 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.101790052 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.100987822 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.065927957 seconds)
  done (took 2.356404074 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.068436341 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079328151 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.082188943 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062744315 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072250066 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080646077 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.063244223 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080576091 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.088590769 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081839763 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081331766 seconds)
  done (took 2.057957942 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.068141617 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079370921 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.082494506 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062655789 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.073836514 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081226083 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.062618428 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081260712 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.085565046 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081764487 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.08175053 seconds)
  done (took 2.050330894 seconds)
done (took 7.675625482 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.073695255 seconds)
  done (took 1.26576799 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.527818727 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.499430331 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.076607083 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.097701128 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189954513 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.105559145 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.22897538 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08040086 seconds)
  done (took 8.177552496 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093679209 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068992696 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069372377 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068511197 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078414263 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069339148 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.0685279 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.069224071 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.068849494 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.068585632 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.068788658 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069465455 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070319605 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069354812 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069549615 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.068579715 seconds)
  done (took 2.425930033 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095495209 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093992308 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072210036 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073296846 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071125145 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070520652 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073494618 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072900195 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07162803 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073445421 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076202803 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074170864 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073498387 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064349831 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074527981 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077160322 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071690386 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074502959 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073485202 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074322865 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073363515 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063066845 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071925551 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073326452 seconds)
  done (took 3.099563547 seconds)
done (took 16.177836093 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112300885 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07561275 seconds)
  done (took 1.390591101 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.076910587 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077703263 seconds)
  done (took 1.370837643 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.075477436 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06071975 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.081542817 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.071594181 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.061427623 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.061181965 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.079416752 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06143422 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.061541604 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06161266 seconds)
  done (took 1.894259351 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.063341042 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.070602282 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068002121 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.077083252 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.067933388 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062630092 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.06620624 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.063197356 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.070203217 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061877966 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068124443 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083252041 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.067412835 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084110734 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.067323568 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067536533 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069378654 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066193965 seconds)
  done (took 2.465855354 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.061343613 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.062373251 seconds)
  done (took 1.350775967 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065722336 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06210984 seconds)
    (3/7) benchmarking "month"...
    done (took 0.064904078 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065574697 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064221685 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06260235 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06358294 seconds)
  done (took 1.668322343 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.361179507 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.123980666 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.333093688 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069393361 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.078056556 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.254736312 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064605333 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070469063 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070137776 seconds)
  done (took 2.688424066 seconds)
done (took 14.057456134 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079164314 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085562908 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097339635 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.406525555 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093607804 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068413448 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113699419 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.176330505 seconds)
done (took 2.362432057 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208240218 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.31063677 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.874033956 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.067507084 seconds)
  done (took 3.483396342 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.334309251 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087567762 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078211442 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067980874 seconds)
  done (took 1.810115315 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066540082 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06994471 seconds)
  done (took 1.372635739 seconds)
done (took 8.117417456 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064961882 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.063889621 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090519646 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065295963 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064371117 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065232115 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.065741769 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065000916 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064614589 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064945839 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.064642415 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.064741228 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065407386 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065365637 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065511973 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064714429 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065382987 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064865236 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064983427 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065825545 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065307608 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065051208 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065095682 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064977915 seconds)
  done (took 2.850445074 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.080074379 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065811134 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.067199378 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.066899328 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068108161 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068503752 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068564696 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067133845 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068604133 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067168753 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068961217 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069162506 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067424704 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069712407 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067161949 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068803859 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069344926 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067435492 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06674239 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068982408 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068836851 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067105953 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068989882 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068480266 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068960791 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069134787 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066602711 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065761629 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06719277 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068033022 seconds)
  done (took 3.298379902 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06466439 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060211755 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.060766782 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069231568 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06052286 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.060938894 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061447629 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.060308211 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.060943263 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.061420375 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.061340572 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.060460169 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.061382085 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.060275615 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.060414428 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06133603 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.064613842 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077406691 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.060475787 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.060613817 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.064335052 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.060278843 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.05992013 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.060720532 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.061976401 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.061716227 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063786417 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06195598 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.061127643 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.062107691 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.060267889 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.063961575 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065053264 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.06096595 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070209781 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065768061 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.061422156 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065410603 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.062748932 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061311581 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061420605 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06113877 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.061296491 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061301645 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070595702 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.062016944 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062653697 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.062354687 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061832667 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.061257981 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06156857 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.063346339 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066497103 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.063026925 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.061138678 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062925638 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061008469 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062205662 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.059834922 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.060021377 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.059875698 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.063480421 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.062189818 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062015506 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079955812 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.062947393 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070929229 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061977516 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062209738 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065055682 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.061868283 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075905983 seconds)
  done (took 5.785350239 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083314547 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086195479 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065682454 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065943546 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061874644 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062307756 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070623268 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062218253 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067035618 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081526816 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062675896 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066574385 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067206384 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066497097 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062593392 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067195993 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070601038 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062521533 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062253723 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066372841 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062281462 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070117708 seconds)
  done (took 2.753772736 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146149663 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066582156 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10378709 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073170614 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07096325 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072684716 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067848995 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06866656 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06825768 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06852923 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068803741 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068158621 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070412197 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068737147 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067688023 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067312977 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068470722 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068611024 seconds)
  done (took 2.609008207 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076362158 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066123988 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08700103 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067157518 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067937501 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066786172 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071492122 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072307922 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067000335 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067903329 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072537696 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067567967 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067825131 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067386697 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067102854 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067807638 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067074263 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067784319 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070979888 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070094336 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069958179 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070568785 seconds)
  done (took 2.792360837 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077033683 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065213541 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080633802 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067421 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061439846 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060702441 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.067114256 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065481849 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.066753896 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.065843456 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066662774 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062490679 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069594949 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066973672 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068323767 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065614508 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065398376 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066767073 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065673783 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06129644 seconds)
  done (took 2.590937018 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081477637 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073210398 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065107135 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07141015 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065523612 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066664489 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070716594 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.064260083 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.063861148 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084596126 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063920645 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06453064 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070420305 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.067741347 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06408214 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069842714 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070154229 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072826543 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063819232 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064367123 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084005751 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063959236 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069991986 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064765546 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063856437 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065329178 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065838245 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069711034 seconds)
  done (took 3.184938421 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064998224 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063289685 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063921407 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063843634 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063983989 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06389116 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063775183 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06374471 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063713583 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064593152 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065300231 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065235355 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06516008 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065159612 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064973695 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06547245 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06536391 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065688079 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065419354 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065411587 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064798828 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064541156 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064737537 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065329143 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064977379 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064408735 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064896391 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065274315 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063544441 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064280363 seconds)
  done (took 3.200821559 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073650761 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072060858 seconds)
  done (took 1.406356993 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062530639 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078029102 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061173315 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071845107 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070073025 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064056193 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071170067 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071456333 seconds)
  done (took 1.80682565 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.074909605 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.097746039 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.062442651 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.063588776 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.073716199 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.121664488 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083008804 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.071558377 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074765849 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065453016 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.064539518 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083512782 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.063136795 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074704684 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065346152 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070871599 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069291721 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076605256 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072783958 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060808637 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072770702 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062946362 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060980256 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.063850254 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.062314631 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067687951 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.0760505 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072816792 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070203755 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06154555 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.080328472 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062142025 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064090994 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070199145 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07427424 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.062707604 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097434251 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.063295157 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.069231512 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062015891 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073554654 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079014341 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073201485 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.078003647 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.062547243 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063103954 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060471316 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.063447013 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064507105 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068511558 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06081498 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066861196 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061494511 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.064302045 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071681008 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.061907728 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.067861256 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069279511 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072073914 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070427851 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068640055 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075102364 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069038916 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.069578498 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.062568237 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077983376 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.063594078 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072329819 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074531893 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.063104498 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076335337 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061957735 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061553191 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062415024 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094195981 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064628169 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.064055482 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.062606303 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062512363 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.064223027 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071130716 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.069708299 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069071746 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.066405602 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077045906 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07068278 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.062681544 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070922959 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.080665755 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065362879 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062592796 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.077736954 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065790895 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062127163 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.082627678 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071584518 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.064649474 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.063729748 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065019992 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077021011 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063823727 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061190749 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069308653 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.063742128 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071781832 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.066397572 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067442725 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.062294313 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069670742 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.066484621 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.061994016 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.059226077 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064145663 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.061986572 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059163479 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068456102 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.060317997 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.07360327 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065454616 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.072671505 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072379093 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.068623192 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073308542 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.059788559 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.058947316 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.075591803 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067992364 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.061366066 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075217587 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060030455 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069427834 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059708711 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.061256629 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.067743921 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058905439 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061446548 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.059563983 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.065117289 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.195672671 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.066357428 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069150161 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071856641 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074788797 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.065173473 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070802695 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064157039 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077010776 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072086036 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067202591 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.066333311 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.063884852 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073898743 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068470526 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071847169 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06254339 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.063143349 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06285353 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071620293 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071908702 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064697532 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073014272 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066696825 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.063608712 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063098518 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.063833024 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065433398 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066810937 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064347222 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069835905 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.07116284 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.075912721 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072324614 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070066456 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062131445 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062327769 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.06419771 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061900305 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067281536 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071216218 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076850564 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07445789 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081960144 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.062599113 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07139885 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064469193 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07885355 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075193308 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.063534414 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.067840252 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061517026 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064541136 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070922713 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073155359 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.075654991 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076503734 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067240298 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067056924 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062223867 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075889397 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.063119615 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070452168 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.070976167 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067667541 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.062885991 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064325349 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070050112 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065823235 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06308915 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.076255695 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069788817 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062805526 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075292096 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.063713496 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.073676364 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062617152 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065389832 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066759537 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065287134 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071044869 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076348614 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061428163 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063469755 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076691968 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.064859095 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064709346 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069899412 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.076053487 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066717887 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069508123 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072855665 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071162628 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066922018 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071194944 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064052673 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.070744875 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.066583133 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073531677 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.062409003 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07926944 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061325255 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.078556437 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.061584495 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.071429524 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.061702926 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069486328 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.062133322 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.076786703 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.063034803 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.062525558 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072442614 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059864108 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069114603 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.060702915 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064749338 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06616039 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.068326731 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.063000781 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068375182 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061935545 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067267401 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063856619 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067602872 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.068209717 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.063730694 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.059916095 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066904854 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070116995 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067004773 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.061109236 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.0616089 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.060636676 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068147215 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06165067 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.061290796 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067111784 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064548141 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067215378 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061842719 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.06257241 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.062541259 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067828849 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.205774287 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.081621306 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071901477 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070870652 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071846449 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063682047 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077831322 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.062922399 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069609839 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061850545 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071326411 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071853523 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.062765577 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.081056523 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064104499 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069751224 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074732627 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070879868 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065774657 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080704496 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.066110822 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069880427 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069837468 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067097827 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06930365 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064483446 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069193149 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071294228 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072915093 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.062819909 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067428785 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069138022 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062927281 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.070812209 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06307812 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06771982 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.063788545 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060104973 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065856744 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071913683 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066225887 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067669895 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063142737 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061327776 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.062995413 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070615247 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066347664 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071128476 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076417669 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061457335 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.063462575 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061691096 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064656681 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077466113 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.0702495 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06911273 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066135561 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060545261 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06307301 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.063241463 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.061854236 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.065101598 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060915396 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.061659713 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07263593 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.064500122 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066770651 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063343071 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06384999 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07110666 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.068156635 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063914015 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068915714 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.062254469 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06681733 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061870888 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064573748 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066787524 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062378944 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065909219 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.07197052 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.077936395 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068244803 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070076172 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064206366 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070064122 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076478758 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.071052014 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064000811 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071210175 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061945303 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.079824449 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071500796 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070141791 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071758013 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063730923 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077805613 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064719379 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070100696 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075111078 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062685564 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.069560275 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061281487 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.076008163 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067688706 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061002261 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069264639 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068177453 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066630259 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071968381 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.061951115 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068310528 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067230554 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064199115 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.063152761 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.063035118 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068400602 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075339234 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.061827628 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065509123 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067188792 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067041254 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064023472 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071365684 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067953157 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062811179 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063494914 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064519815 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062860989 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072192562 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061938997 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065989385 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065381131 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061775793 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066791315 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075885841 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069812272 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070049191 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061039647 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060346351 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.077352977 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064920893 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.065499221 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069046099 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.21279137 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076239507 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.07270843 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079601316 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064487307 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067856866 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072849665 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.062338336 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.061591884 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064555669 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.063057587 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070214581 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070426001 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067681724 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063991713 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067582078 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.073415551 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.062726718 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066155809 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.066839674 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.061976233 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070921716 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06885162 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068412455 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.062990745 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060960047 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064263233 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069803865 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067800273 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069562506 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063242504 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.06917929 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.07423649 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067827261 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064191514 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061478954 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064962485 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069085969 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.066633681 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060830716 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065386639 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064599654 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.069167094 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07027696 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065317582 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061043598 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076847518 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068506229 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.06910306 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.063849209 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.064452973 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063405736 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062227874 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.073472389 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062715279 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.064990285 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066901836 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.064694723 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.077439106 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068348911 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.075338241 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062571208 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065944647 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062783294 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071550121 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066552921 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.062971974 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072352888 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061698454 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076910424 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.073938315 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.069093758 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062184661 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066869373 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070631705 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075503179 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071859749 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070800931 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.066538711 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072346397 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.064835787 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.07290114 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062278825 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061496161 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071988227 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070650272 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074561927 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062880267 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.07212088 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.065365924 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06958253 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070302953 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064868471 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065097056 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064774613 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071709013 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066783442 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071307586 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067072015 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077835049 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.063959643 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072992729 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071157796 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.072709551 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074187338 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075234501 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07306863 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063771346 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069271338 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07052581 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.064196257 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06637373 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.066576368 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.082310429 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064753246 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064477585 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075003939 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.070322458 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.06253267 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070516101 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068024239 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.071513646 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.062477837 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.070812204 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.066228996 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.062156666 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065693753 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066082087 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059546659 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060429994 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.060597082 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068936768 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065400887 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062392949 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079041481 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.063667432 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068881967 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071843492 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067366305 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.06336132 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060809994 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062818517 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.211929742 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07801742 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06733726 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071245692 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064933187 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071974498 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061872571 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069319232 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068988332 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070634346 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062600014 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062225436 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074418955 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076017042 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065953424 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070123374 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069047664 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.062528697 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.081506639 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070234133 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062781993 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.071562704 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064204932 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.061733387 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060469127 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.063340632 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071922891 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060890853 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.063760205 seconds)
  done (took 42.314187988 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098936313 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062499239 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062100759 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061372609 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070431005 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062558233 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061516662 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062095434 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062045666 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064154898 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06141375 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060959257 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068081899 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076348725 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071360815 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065413514 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06147024 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062172077 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06125369 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062293286 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068994139 seconds)
  done (took 2.752933653 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.069523792 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075996868 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07293719 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078813584 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069968813 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065835577 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073043527 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066359013 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074327135 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070800558 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.073744982 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066572158 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070830544 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07086629 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07146698 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066307419 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074139753 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071254113 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067685474 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075633999 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068335921 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075250657 seconds)
  done (took 2.920837439 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.062932641 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.061786001 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06896429 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060368948 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.06035707 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.064613777 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.060679763 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.064708767 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.064775022 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.066212729 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071117548 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.063283707 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.062535774 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.066940172 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.061893352 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.063935847 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107291091 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.063434186 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063755306 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.062282097 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.065433938 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070618988 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062888744 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062709552 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065790832 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.065990482 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.06204805 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.06515056 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.062937961 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066076322 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.063856093 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061694869 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070215559 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069702399 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065437504 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065416311 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.063941153 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065874619 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061554828 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.061143137 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069547703 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.0648046 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.062354345 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064247267 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070349329 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.062571297 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.061930752 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070786501 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061810808 seconds)
  done (took 4.565479246 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.073202212 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109274414 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06813207 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09105107 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076632178 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069548698 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068884622 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093122624 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063462959 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064180196 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077799466 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077377027 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066317162 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067421789 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068588069 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066002498 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066787621 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065015608 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069278803 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065278562 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068471011 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070283415 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076348114 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077501957 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066819468 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065137761 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065388864 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067466805 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076747686 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069414638 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067220201 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067997862 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076954629 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070697335 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065391659 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065216928 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.078274908 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066244818 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065892575 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064030151 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065663821 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067161433 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070038891 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.078505588 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065120087 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070593944 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066003309 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063118644 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076554421 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.064281239 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069699793 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077704808 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067019944 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065575213 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067101685 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076305527 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064389461 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064415579 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066135644 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.075678744 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063946531 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066625959 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078060578 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.065404081 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069863432 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077589952 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070458543 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066625011 seconds)
  done (took 6.296166468 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071575877 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093502463 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077699712 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078600676 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071903662 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072576988 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072179192 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072129189 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071924201 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07611107 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071857279 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111923944 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067988673 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073582379 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072536302 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072041202 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072603684 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074390222 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074301557 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073583666 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073931519 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080352031 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073961177 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078935047 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076906992 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069645344 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073665583 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073840483 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080281869 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073604873 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.077260071 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073960393 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073701977 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081068598 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077117382 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073885567 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063427762 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073344103 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074090578 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073704765 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06829986 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07897705 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073569657 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.06968495 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072413914 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071828939 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078047054 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076398515 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076115357 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077978163 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073284066 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078228068 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071715617 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072133624 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078397885 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.081088175 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077811099 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07841164 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072067163 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079433352 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080039486 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082805144 seconds)
  done (took 6.07792433 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076178351 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0688233 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080607146 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063317845 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06066942 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071027822 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060735555 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.060793364 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068985799 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.069307753 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070675311 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070667994 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072976118 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070524946 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070507493 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073463287 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07080589 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070991643 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070673814 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072420166 seconds)
  done (took 2.780279234 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074948273 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08010239 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066986969 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071566451 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.066267042 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071030885 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066089138 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066308164 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067382322 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067507641 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073208612 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072860304 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067780087 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071931191 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072668027 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070769332 seconds)
  done (took 2.50149628 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081929333 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.069106679 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.075430239 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.062625074 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065708861 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061727789 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.062049291 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060796245 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061357511 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.075470066 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.062086047 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073361736 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.061992413 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.061235773 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062430804 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068047811 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061434412 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062123984 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.062227295 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.074840828 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.06877595 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063947678 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066933996 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.062120025 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067365121 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069638973 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06406453 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066746042 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062357734 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062556941 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067765035 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068771879 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061764744 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062680026 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.061250196 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062654113 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.062309692 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062801866 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067726041 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063447852 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062063226 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067170056 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.062774507 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06478701 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062851157 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064040683 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063312473 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069664166 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064364205 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069042743 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063768229 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066572871 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.062615775 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.069652894 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.064845518 seconds)
  done (took 4.972603173 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077683063 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066399468 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060890141 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060789007 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067464098 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.085473132 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068280037 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067783295 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068850939 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062922156 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068739937 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067286873 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068812584 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066703574 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066800838 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066586626 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060643611 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066862571 seconds)
  done (took 2.604845103 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071576022 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066247588 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.070212333 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065409237 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065932943 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065328521 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061368752 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061485728 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061003558 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065558582 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066252647 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.065844116 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060778258 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.065350494 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065710457 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065899754 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066296739 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06150555 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065990648 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061546422 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065583032 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062103715 seconds)
  done (took 2.806479832 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093904581 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082378224 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138657556 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079500386 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08677977 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071891189 seconds)
  done (took 1.935509749 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091765517 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096726835 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066395461 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066024469 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071746416 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069099417 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069061446 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069382518 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0732518 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073874657 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071657312 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074074309 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073466519 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075367644 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071733078 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072348772 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069338131 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069422094 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0661372 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077810121 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069691356 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073829314 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069694255 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069369209 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069477007 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075861852 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074041458 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073953494 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069443643 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073710364 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0722269 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069932218 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074078806 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07464692 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066134977 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073760042 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069760897 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078451006 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07135636 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07568093 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065965202 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071405895 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07386772 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073133696 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073693763 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069819869 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072682876 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069837096 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069325497 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083441199 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071870638 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075103622 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071775603 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073832977 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073450939 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079555338 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074428754 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075332354 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07155335 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074085839 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075738421 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071269103 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077363364 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076134973 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073190085 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077179613 seconds)
  done (took 6.216990797 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102106408 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066097569 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069061611 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073640718 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07573095 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069799363 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07011128 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069607035 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069383793 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066204919 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103768016 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069733863 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075541039 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075981071 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070183802 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070520016 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072573255 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077679883 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068489512 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08194177 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07043523 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075535467 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075687468 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075843518 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073964086 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071714941 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069793964 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069538487 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069121748 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069639578 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073457797 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070649356 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077189871 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068033127 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077072754 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071161489 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0709392 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074945227 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07064654 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07306866 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075920599 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078408273 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069309384 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069195723 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075325307 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070901363 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069653608 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066279375 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069186429 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066728217 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07385547 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074043185 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073878576 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075615008 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069575839 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069534963 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069381599 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069345683 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06960316 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071529074 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075395544 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069838076 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079496049 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069509532 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070892914 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077232032 seconds)
  done (took 6.225408168 seconds)
done (took 128.488282208 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.211791282 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184363994 seconds)
  done (took 1.768450854 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073101966 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.101690477 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080872247 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133356887 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069461547 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103792212 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102553012 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080439528 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069939495 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069224385 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069576256 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072978498 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134941245 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070022698 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071095344 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072285083 seconds)
  done (took 2.769626842 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102190427 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.212648999 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106885998 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068083336 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10262788 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075074637 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.070491948 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081255445 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074533849 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070137247 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075306413 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07334388 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069624378 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073640035 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074068831 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075033772 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069461315 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075192054 seconds)
  done (took 2.943764374 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100267364 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09175674 seconds)
  done (took 1.590398461 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.170645011 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13200315 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.199975678 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.332128919 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.145860915 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.411562028 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.135736119 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.133775956 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11103684 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.131510752 seconds)
  done (took 3.297593784 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101798086 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.193659602 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293163938 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11856287 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074222961 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.105496322 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121270665 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080773249 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078945512 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.07936098 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079305065 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076743328 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098530104 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074621377 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073991257 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075380443 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10155746 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073730282 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07502636 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074691071 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.102746034 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068758791 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075261812 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073250175 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076504335 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076892278 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069758096 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068640173 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074762866 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074832341 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077423963 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.102237087 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076416298 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.100927306 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073069741 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.103811699 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075909788 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072639685 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07443888 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073230387 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075683905 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075493083 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077198362 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076215826 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070933156 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076932008 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070018293 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068567888 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078587942 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070944994 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079976688 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077535733 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.102531258 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.07028108 seconds)
  done (took 6.132409598 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106467934 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105115106 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069698967 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11254961 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103013005 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071202792 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106175366 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100532545 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108759635 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071246666 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069550381 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070953502 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079505771 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083181452 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114108297 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106060889 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071590051 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069197943 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106289231 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107000353 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070005834 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102644517 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099647604 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108924128 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068487692 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071763718 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06963304 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070294909 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074727325 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076257256 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068391998 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07713088 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084182007 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075705175 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067295879 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067575516 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06832231 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.076530318 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076700056 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07660006 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.075071115 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06759936 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067739776 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068906403 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07046637 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068611755 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075924271 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.076276164 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.075109359 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068058688 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070113983 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069366198 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070085694 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077910338 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.074843087 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.077098044 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077738817 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068446278 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067463791 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070146336 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077390749 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07613503 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076394327 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069071284 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080454284 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068931918 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077311214 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080508614 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068156845 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068795399 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067963463 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067937338 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068712946 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076559224 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.075114917 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068882034 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068702085 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068373302 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079095324 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07721822 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06952301 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075606079 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067627236 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068323849 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068600517 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069095856 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.074370727 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07670564 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068857724 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067851357 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068839181 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067901705 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06704405 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074650075 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076262825 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076316802 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07526734 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068960195 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077826728 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078212743 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06998044 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076195057 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067931213 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070505174 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069203457 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074620043 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.073265245 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.075258353 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067582225 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066980077 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.073236318 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075618189 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066633016 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.072901252 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075103692 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.073532519 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06636011 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07614031 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066866592 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075366473 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067334307 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.2123824 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071966778 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078824709 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071036105 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069991634 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070851772 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078411157 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071914679 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070781422 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070594208 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070195673 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078129602 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080389869 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06939543 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075456243 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075642678 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069135616 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075422236 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068320151 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076439304 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069137793 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068768988 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067761357 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078048494 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06806829 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067919058 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068672418 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07660211 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068005836 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077009898 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074648519 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067180028 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078511783 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076741232 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074662952 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.077219856 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069733353 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068469449 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067670288 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068632988 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074453383 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076389535 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069433784 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068494896 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.074618924 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.076736595 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067519866 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.074755697 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075361241 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.075591777 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068596456 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068620694 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079986387 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077568175 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075628354 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.075102944 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078426531 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069679626 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075709953 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075933633 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068395459 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082133394 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069444427 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079720505 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075608293 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074386605 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075821715 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.077524545 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.077174348 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.077973688 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.080325014 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06795844 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067598913 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.075522456 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06907757 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068211008 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07500323 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069029638 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070794443 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082880405 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068607889 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077248384 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067602317 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077391004 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069744805 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071233125 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08238205 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069275282 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069509899 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078327916 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06822406 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075549191 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077415847 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075305345 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068204363 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068971261 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076392329 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.076198415 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067959036 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067966627 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069123303 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.074951756 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074481647 seconds)
  done (took 18.31983313 seconds)
done (took 38.233450213 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.21068297 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.159215871 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.188296456 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118943045 seconds)
  done (took 2.174487414 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107870534 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100227556 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.086065233 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064256737 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.09233809 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064813421 seconds)
  done (took 1.956424589 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.305164596 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208371656 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.186057438 seconds)
  done (took 2.133622796 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209675153 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.202792589 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.464544338 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.285928646 seconds)
  done (took 2.693827716 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.139670814 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08172122 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.063239869 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.081091467 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.122187509 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.147571439 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.092354547 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.116477262 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07468637 seconds)
  done (took 2.412904059 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146754387 seconds)
done (took 12.971082018 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.48937311 seconds)
    (2/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.105433691 seconds)
    (3/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.214801403 seconds)
    (4/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.202845127 seconds)
    (5/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09959875 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.12533387 seconds)
    (7/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.07124196 seconds)
    (8/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.233722675 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070628872 seconds)
    (10/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07569816 seconds)
    (11/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.170438329 seconds)
    (12/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075394535 seconds)
    (13/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085735921 seconds)
    (14/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.199328927 seconds)
    (15/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.143143962 seconds)
    (16/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.082344707 seconds)
    (17/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.089428317 seconds)
    (18/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076807605 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.19772415 seconds)
    (20/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.078440362 seconds)
    (21/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07362607 seconds)
    (22/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076178317 seconds)
    (23/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066041911 seconds)
    (24/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.116917423 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.08322895 seconds)
    (26/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.204030287 seconds)
    (27/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.074958428 seconds)
    (28/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065064338 seconds)
    (29/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07562708 seconds)
    (30/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066168811 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090683513 seconds)
    (32/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.065039103 seconds)
    (33/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07442142 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.148185775 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127488674 seconds)
    (36/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.074291861 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.136968362 seconds)
    (38/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.230761074 seconds)
    (39/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.073762884 seconds)
    (40/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.083280486 seconds)
    (41/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.065599198 seconds)
    (42/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.203768591 seconds)
    (43/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077318092 seconds)
    (44/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.105005624 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072542059 seconds)
    (46/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.192505422 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.125714611 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091702275 seconds)
    (49/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075008292 seconds)
    (50/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.168952434 seconds)
    (51/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.064532745 seconds)
    (52/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.173694647 seconds)
    (53/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.138794307 seconds)
    (54/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071895083 seconds)
    (55/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.15714751 seconds)
    (56/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076064916 seconds)
    (57/309) benchmarking ("sort", Bool, false)...
    done (took 0.147419204 seconds)
    (58/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.183210958 seconds)
    (59/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.074090139 seconds)
    (60/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.082279538 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.125983552 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 0.065894366 seconds)
    (63/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.175355466 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090641339 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084317828 seconds)
    (66/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075319577 seconds)
    (67/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.083043856 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.064097355 seconds)
    (69/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.136495353 seconds)
    (70/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073576427 seconds)
    (71/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064129471 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.207156366 seconds)
    (73/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.189140586 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.116262548 seconds)
    (75/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.155881609 seconds)
    (76/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.063949933 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.074840571 seconds)
    (78/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.154568288 seconds)
    (79/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.189724745 seconds)
    (80/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.070350274 seconds)
    (81/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174547836 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.098518573 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087573295 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.162554163 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.117606244 seconds)
    (86/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.200032281 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.127849469 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.131657491 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.086235717 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.085235251 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.08972012 seconds)
    (92/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.064271027 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.275268916 seconds)
    (94/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073460602 seconds)
    (95/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075740738 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066816054 seconds)
    (97/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081013868 seconds)
    (98/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072784503 seconds)
    (99/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.194343299 seconds)
    (100/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.064653333 seconds)
    (101/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.141863021 seconds)
    (102/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.124109628 seconds)
    (103/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.0941553 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116246526 seconds)
    (105/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074583572 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.114327032 seconds)
    (107/309) benchmarking ("sort", BigInt, false)...
    done (took 0.245502851 seconds)
    (108/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.064117478 seconds)
    (109/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.171702956 seconds)
    (110/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.064592036 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.084861652 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.09349935 seconds)
    (113/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073927187 seconds)
    (114/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.075476896 seconds)
    (115/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.065265594 seconds)
    (116/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074083066 seconds)
    (117/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.135857775 seconds)
    (118/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065649317 seconds)
    (119/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.138847359 seconds)
    (120/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.179371754 seconds)
    (121/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07488409 seconds)
    (122/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.073353949 seconds)
    (123/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069205001 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09077109 seconds)
    (125/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.06987211 seconds)
    (126/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.16530687 seconds)
    (127/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.064899346 seconds)
    (128/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074915042 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130213045 seconds)
    (130/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.066974201 seconds)
    (131/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.064016857 seconds)
    (132/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.065890242 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073375404 seconds)
    (134/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.155785929 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124068228 seconds)
    (136/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.138997537 seconds)
    (137/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.129922016 seconds)
    (138/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.138099241 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074006217 seconds)
    (140/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075318168 seconds)
    (141/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.180628584 seconds)
    (142/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.064797273 seconds)
    (143/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073573745 seconds)
    (144/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064785755 seconds)
    (145/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073236237 seconds)
    (146/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.064381967 seconds)
    (147/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.187783484 seconds)
    (148/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.157147457 seconds)
    (149/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.065575743 seconds)
    (150/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.065544951 seconds)
    (151/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.064113958 seconds)
    (152/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064354392 seconds)
    (153/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07376893 seconds)
    (154/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091358203 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.105094278 seconds)
    (156/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073017465 seconds)
    (157/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.188593267 seconds)
    (158/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078353512 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.091193093 seconds)
    (160/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.192656037 seconds)
    (161/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.063790749 seconds)
    (162/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.064183652 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064726732 seconds)
    (164/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.089006213 seconds)
    (165/309) benchmarking ("sort", Float64, false)...
    done (took 0.129358001 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.161661703 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142025628 seconds)
    (168/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063987193 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.131070573 seconds)
    (170/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.063629713 seconds)
    (171/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.065291616 seconds)
    (172/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.063732934 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09029454 seconds)
    (174/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.159703335 seconds)
    (175/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068141004 seconds)
    (176/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.064690797 seconds)
    (177/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.065388637 seconds)
    (178/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064678636 seconds)
    (179/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073223698 seconds)
    (180/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.178647077 seconds)
    (181/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093313889 seconds)
    (182/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.065537237 seconds)
    (183/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.064522296 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.170846027 seconds)
    (185/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.195848389 seconds)
    (186/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074446491 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14255034 seconds)
    (188/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073015836 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.106879656 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08086197 seconds)
    (191/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064487982 seconds)
    (192/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.135570675 seconds)
    (193/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.06565633 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065731264 seconds)
    (195/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.065151535 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085329331 seconds)
    (197/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.06524625 seconds)
    (198/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065046333 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.086033204 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086422965 seconds)
    (201/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.065437811 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087860129 seconds)
    (203/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.15502432 seconds)
    (204/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07108255 seconds)
    (205/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067985991 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.071450275 seconds)
    (207/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.064977136 seconds)
    (208/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.064362946 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.085068944 seconds)
    (210/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.062851937 seconds)
    (211/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.186832769 seconds)
    (212/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.064660595 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070263399 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.075527087 seconds)
    (215/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068322664 seconds)
    (216/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.064813597 seconds)
    (217/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.065921461 seconds)
    (218/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.062614854 seconds)
    (219/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.062665837 seconds)
    (220/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.064473664 seconds)
    (221/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.062773882 seconds)
    (222/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.064604955 seconds)
    (223/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.065438749 seconds)
    (224/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064156528 seconds)
    (225/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.064213078 seconds)
    (226/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.064465919 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074071425 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072383199 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.128993069 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.131877299 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.063966683 seconds)
    (232/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.064447106 seconds)
    (233/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076889957 seconds)
    (234/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.065823421 seconds)
    (235/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.08787845 seconds)
    (236/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07430617 seconds)
    (237/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.135767236 seconds)
    (238/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.070279052 seconds)
    (239/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.064373688 seconds)
    (240/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.07052558 seconds)
    (241/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.063975656 seconds)
    (242/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085294734 seconds)
    (243/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066749023 seconds)
    (244/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.063053118 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.063611882 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.076061838 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133414485 seconds)
    (248/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064319758 seconds)
    (249/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.062880994 seconds)
    (250/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.077145767 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06507678 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064245034 seconds)
    (253/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070797843 seconds)
    (254/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.064784255 seconds)
    (255/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.064592231 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.113267394 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.062718683 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065146698 seconds)
    (259/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.063206866 seconds)
    (260/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.063192854 seconds)
    (261/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.162483447 seconds)
    (262/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.160906545 seconds)
    (263/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.065350831 seconds)
    (264/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.061966994 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.137425993 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086174633 seconds)
    (267/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.076926198 seconds)
    (268/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.063958149 seconds)
    (269/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.070576912 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.063039813 seconds)
    (271/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.06976406 seconds)
    (272/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.063956937 seconds)
    (273/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064573605 seconds)
    (274/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.063716418 seconds)
    (275/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064907824 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.063036715 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069505395 seconds)
    (278/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.063980127 seconds)
    (279/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.078215886 seconds)
    (280/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.062273917 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06384711 seconds)
    (282/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.06806173 seconds)
    (283/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.062654791 seconds)
    (284/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.158289082 seconds)
    (285/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.06393901 seconds)
    (286/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.071663437 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.063354701 seconds)
    (288/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.063954074 seconds)
    (289/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.064223535 seconds)
    (290/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.062639724 seconds)
    (291/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.063162768 seconds)
    (292/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.065837348 seconds)
    (293/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.063948238 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071545687 seconds)
    (295/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.06273215 seconds)
    (296/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.062468131 seconds)
    (297/309) benchmarking ("sort", Float32, false)...
    done (took 0.127357635 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.063735262 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.063712926 seconds)
    (300/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.064340292 seconds)
    (301/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.062374512 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07032791 seconds)
    (303/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067977251 seconds)
    (304/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.062564266 seconds)
    (305/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.064916786 seconds)
    (306/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.062891709 seconds)
    (307/309) benchmarking ("sort", Int8, false)...
    done (took 0.15971041 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088093436 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063870969 seconds)
  done (took 32.128990163 seconds)
done (took 33.580968502 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.094489313 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099771123 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075496018 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094704336 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083327641 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097796108 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077312088 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082538676 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084740494 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08339485 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082166403 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.075591052 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078766001 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078543629 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076086878 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100308377 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082954922 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076952787 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077148413 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068015354 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076428513 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067796216 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06756864 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.074039741 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079049417 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075024417 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076853929 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076609543 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067451405 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067339563 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072503302 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075857822 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066501067 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079226831 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075553831 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075104373 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076130975 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078988213 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065907722 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066687132 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076718292 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066473643 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074879853 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072709282 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071314056 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072791202 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074146491 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078151235 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096103776 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07046679 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076388793 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076935131 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077407468 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.0718317 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071250449 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074246243 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072176268 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096269303 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075116866 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0701434 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075961187 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074821492 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072806133 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073792723 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073990742 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077120006 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078063312 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072575383 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076317629 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073216043 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065920212 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073995749 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073478722 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066344667 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077674976 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079003978 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06534297 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070254094 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074789894 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074451948 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065801188 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069927935 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065711813 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070967596 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069733545 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071696608 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071066958 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073069802 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06588212 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074560911 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073496988 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073925461 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065578997 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078773734 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066317013 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072419147 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066520193 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066456275 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066160433 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071467844 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065975517 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0701436 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075009442 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065453687 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070641141 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078813955 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065904004 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073091851 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06556321 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066009795 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07720436 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076160176 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066120296 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070287562 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065537551 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071400182 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065665697 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065726248 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066123639 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066450826 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070438133 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06591611 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069703631 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071073589 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078271962 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065773065 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070643101 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069517003 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.0656 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072590049 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066132333 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065888014 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065549395 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079135025 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069291146 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065958646 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070895995 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069362171 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073527 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064948088 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074089255 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07187899 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069881086 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072566711 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064904103 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076337673 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07015409 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069846516 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064866941 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065479999 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064443127 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065160571 seconds)
done (took 12.875554939 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069430906 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.114877256 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.088869299 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.091071332 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.081011487 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067318128 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.072831338 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.088713624 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06873373 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.093542008 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086195053 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086921387 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.106646854 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065551462 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066925345 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067307608 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068142804 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.076438305 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.090952209 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088140216 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.102852367 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066182924 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.083970072 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.085227957 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.081214828 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.086175764 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067460767 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.067088439 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069401771 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.087967964 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091122446 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069518774 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067725332 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.086145808 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.082920189 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.077882268 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067373095 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.073309698 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067315492 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066367176 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067967063 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.084424632 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.073568753 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.073245457 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067181667 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.07401886 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06821522 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.080676141 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.085222207 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.073478293 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.079590166 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.087324396 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068742264 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.080906291 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065729169 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.080366804 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.073670574 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067448673 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067058362 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071996483 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066832916 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069141385 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.076195762 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.074153556 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070036256 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081979146 seconds)
  done (took 6.669953977 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084001155 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093808866 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082578533 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083415433 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067041779 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067064626 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066683452 seconds)
  done (took 2.145367561 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066535709 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087394526 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090079176 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090139684 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08323425 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090866311 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067823173 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.099065716 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.065833881 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086652049 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.119396655 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092311613 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070443195 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077706954 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066786429 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.081753358 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067389059 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075930082 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.082926384 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091200844 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071056535 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.093087179 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079993655 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068345245 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.101425709 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079757461 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.066347012 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067049753 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068192549 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.067984296 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068148953 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107510978 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080129238 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077720771 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068116067 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.067147537 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079929564 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070492376 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.076978539 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.078824747 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079717707 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068475172 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.065631701 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06817136 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069751517 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078320807 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.065781203 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068131902 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068307277 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086793397 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066339419 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080629734 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.074063547 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074065405 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075014474 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07327913 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077190901 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069186226 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086733656 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.074541322 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068182813 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083737058 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082469376 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079461887 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082985278 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.071700665 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079171111 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080628059 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068152336 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.069021092 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068330216 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082798347 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.067202849 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.068955089 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070954718 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069548204 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077595779 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091422728 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091065594 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07961152 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067678707 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068043892 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.078015955 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090956121 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071564228 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067827565 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070056485 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065848706 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071270015 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068024161 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073190639 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068363207 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.074949945 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.069193964 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070375572 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083223557 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066446596 seconds)
  done (took 9.004450968 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069749255 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068053251 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068972472 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067625569 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067453591 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067881029 seconds)
  done (took 2.045109096 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.089074119 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067846223 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081070586 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.06788145 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105984863 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.081666542 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.082811151 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076553761 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.079897125 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079749532 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08225298 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08474712 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.085713441 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.069841768 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.081385605 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068766785 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.081949896 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.071531627 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078734274 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069982495 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.079287238 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.069653287 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070100292 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086418911 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070919101 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.068718604 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077148841 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079316896 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078545576 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.076160501 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069469433 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070954941 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075187972 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.075502811 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.084557448 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074821763 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067565686 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073660949 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070051084 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070468707 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.084199421 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070173158 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.069867789 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.073156872 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.075690402 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074988666 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073160066 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075221268 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.081264018 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.073401874 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073568734 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068435667 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070541275 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.073302395 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075085885 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075347757 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073293195 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.081604595 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.068996205 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074609917 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067275615 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.069891882 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075573598 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.069818083 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.073713716 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07285364 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074866196 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.069418271 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069722495 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068482167 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.072835478 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067743613 seconds)
  done (took 7.014831818 seconds)
done (took 28.495234023 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.519686429 seconds)
  done (took 2.102344349 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.622920317 seconds)
  done (took 2.242806967 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.515748496 seconds)
  done (took 8.136188035 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.406246834 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.475382218 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.75589229 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133553235 seconds)
  done (took 3.416470467 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.696164827 seconds)
  done (took 2.329589062 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.227955676 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223273544 seconds)
  done (took 2.088056103 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.344863957 seconds)
  done (took 1.96819363 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.06152811 seconds)
  done (took 2.682326487 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.251106606 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160276611 seconds)
  done (took 2.045951313 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.441072679 seconds)
  done (took 2.064885177 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.239662523 seconds)
  done (took 5.870700491 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23317668 seconds)
  done (took 1.897933821 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.232210901 seconds)
  done (took 1.865963057 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.75369027 seconds)
  done (took 3.378048509 seconds)
done (took 43.716319475 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082388652 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084952684 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084311784 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080932749 seconds)
  done (took 1.935622099 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.075211215 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.070637086 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.07407215 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.074100019 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072054955 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.072810663 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.073565487 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070157254 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.071536153 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.070875886 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069275766 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.070190099 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.074215145 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.072235969 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.075965839 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.076559785 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.073194431 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.072800892 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075937249 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.072637243 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.076709139 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.072914608 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.070876905 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072459028 seconds)
  done (took 3.377526391 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078117809 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073462002 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077754281 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073369877 seconds)
  done (took 1.9423459 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.076006175 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.087523933 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.090948822 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.095850546 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079189897 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.079025737 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.089312219 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.088573506 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066886804 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.088304166 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.068348875 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.067213236 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.066543028 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.08630945 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.08511807 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063319788 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065373988 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.076770277 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.075750888 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.078109555 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068118967 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.066267725 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076514301 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.076616338 seconds)
  done (took 3.502984527 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.084130637 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06597734 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082890926 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091567812 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09211368 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06599762 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.082983927 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092714514 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.136788809 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065915156 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071701139 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066059551 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.103700238 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066127753 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082706629 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10805503 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111863084 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070080364 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098761822 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067115238 seconds)
  done (took 3.353236905 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.082860139 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069638202 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069882419 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066007093 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075727017 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072804343 seconds)
  done (took 2.08621174 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067834392 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067878615 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067623072 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.0695934 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072549764 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066895866 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065782071 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067833529 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068073639 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067922667 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068616978 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067607026 seconds)
  done (took 2.460949909 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.158520351 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071643958 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070208131 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066301256 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071170045 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067269343 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082636867 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070582622 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.087771975 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069054269 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068998748 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071085379 seconds)
  done (took 2.598548109 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108468786 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18488723 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103106678 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073605914 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217518754 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100308162 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.091038947 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.130208644 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094145645 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.0713128 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107975306 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140452369 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107813754 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.13095452 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094294655 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149545155 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153114502 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101781178 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120714799 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086197558 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.071471011 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151499024 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071284043 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09831822 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132145268 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.105056289 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118803847 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136996204 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095602052 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.094181951 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097802868 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075435966 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15895129 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.084837924 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.110783047 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121428335 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132806533 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085950787 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085717397 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162854562 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152051512 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127581892 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127336771 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137688452 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079440991 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.111132372 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085954549 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10879884 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14668595 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102173991 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076598558 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107548638 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.111895838 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137320119 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.245452474 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086309146 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166189076 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.124662233 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120489777 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081355681 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109481729 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.104045929 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110386986 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164171636 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144089912 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103366295 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137495892 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122016705 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100631929 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.101140345 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.112846373 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087412701 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119033665 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123084994 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14380693 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121072691 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122855796 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.110989208 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082577159 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111650697 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128181563 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09517051 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115258027 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155521234 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113041449 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090978739 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110304585 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.141415699 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073254111 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160154489 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094528305 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121564363 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105141855 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144882987 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103771175 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.086507191 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108497519 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142036135 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1028651 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129686685 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098821164 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117530733 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09822139 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129374619 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082456429 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101958227 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104542225 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.100062712 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.075202632 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105147673 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.304516227 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117216854 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07714619 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113553268 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097752845 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.078282094 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12021156 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143773267 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083029826 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076695802 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151067759 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.097212743 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.117051719 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110829204 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.096226097 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134388273 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145226669 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095153933 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090473385 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076045547 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185276582 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076620189 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144250302 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085607556 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125591602 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107834858 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131763333 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139851933 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095248974 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079455127 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106737896 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.115794334 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103151781 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114296452 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077390895 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.109211852 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150014605 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.105858348 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090906088 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.096997885 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.070891659 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122124394 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077546842 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09724645 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096877433 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.095682214 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.094522661 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147339302 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.096983173 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112353902 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099552871 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.068686553 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091501562 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150930388 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083529786 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.108748477 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135314151 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101830688 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071155861 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.122041228 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.074082301 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.301932226 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.117318156 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11003606 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080259577 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128737594 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070425178 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077041699 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130361338 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106065416 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103568816 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.137273738 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107526169 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.11399238 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.110395999 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.109486732 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104568028 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109715098 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.113527005 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119725484 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.086176975 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15143245 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098553176 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080496285 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092463483 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082858637 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.081887246 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12980472 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155389578 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116168334 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105338718 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108924892 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117025434 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.110333042 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095000676 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083618079 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137983312 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076805627 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075209321 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115636071 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.113521034 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09357653 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.144353386 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.081684387 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138674615 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124418461 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094955364 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126035462 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070373437 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071246514 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.082109834 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115004991 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121071575 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080366208 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079696167 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137351959 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136279903 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11779562 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103592908 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070356862 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10988992 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142148022 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.115165532 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081067821 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265168796 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089157829 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131105245 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096738472 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165252157 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105806935 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11434045 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.091700323 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.080676637 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075570251 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09850653 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130003156 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093803227 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08185074 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.069431677 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074799534 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119995524 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091658808 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116426088 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106106011 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136330454 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074788822 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103191682 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112943373 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11054731 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110493649 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110763587 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.09671533 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092050227 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109034431 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123331305 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075390096 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157827624 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132152751 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083228381 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101347509 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096671079 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110759586 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110117754 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11876922 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111128727 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1287366 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12638064 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103409271 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091168784 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098013781 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.096846945 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.097453707 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081596626 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.105742654 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12069602 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103706234 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109721404 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.097360801 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.093432929 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112363047 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112924276 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091084612 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.116666354 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157161145 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.099989484 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.308240687 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109138967 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109404438 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105180043 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11488968 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.130519227 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147340575 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072503359 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077682019 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.07314612 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128157985 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080557475 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118601718 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078404423 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109229157 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125671042 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091225338 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070880099 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105615593 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094147352 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.096964608 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146242449 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.111042377 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075062034 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106194931 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108976024 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09831794 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157595318 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.100986294 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103533756 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074027678 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120148034 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075682923 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116521145 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139355683 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083327679 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.085015611 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.072372651 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111550425 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102900291 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116765495 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090244291 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105025708 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121983479 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133912921 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105373301 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118702924 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140333166 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115247791 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094841068 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157398527 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137746434 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.145021103 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.081291587 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.089260054 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106027483 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106020549 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102103377 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078024702 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080383842 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146848513 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122930405 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.069284299 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25602534 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084043744 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.090072894 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116779179 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116399983 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084102174 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132814378 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077633209 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108824144 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095157465 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127833121 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122911115 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154725517 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098202026 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090566333 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078578636 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154057333 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.083305348 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13399966 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122599673 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104918435 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.070895171 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097999964 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125183793 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.637439236 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109529416 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07689684 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139309565 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109226836 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162051349 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094372774 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.11861022 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108820608 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103414127 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09546555 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129645748 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095618051 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11077209 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.175161731 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120091524 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.10730154 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076627162 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.087635553 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077250374 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.093112999 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.084909712 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101621523 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109222204 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104041084 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106284951 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.088883782 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.107409443 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117295725 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114380485 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.105457526 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091212634 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140319915 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105809756 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285443398 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131099583 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080413503 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076999252 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.109103112 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138862078 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097937153 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094524819 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079252926 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.092289091 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155794431 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140419443 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103172583 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103160353 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.092346626 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.102076983 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114008839 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117743337 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111355167 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086849473 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.101825285 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104244737 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08009875 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075979912 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097804296 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.071234445 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091491981 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129110882 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108821041 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091824045 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.104392783 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080504285 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10891582 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147425082 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104818984 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078075514 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078939013 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.078300426 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.084967347 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104195905 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110916893 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113926927 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147787918 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10324169 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096170532 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.08081897 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.224846376 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090592046 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098212868 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.11154698 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076894008 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.131902213 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092578474 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092142705 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096821483 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104808606 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158127326 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086742504 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109745321 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113705829 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116670887 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103560896 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107456211 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096729458 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092474359 seconds)
  done (took 55.375667601 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.103746545 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.14245568 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.15143896 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.082816249 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.095347166 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121051033 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198246027 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187911865 seconds)
  done (took 2.869033168 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067433797 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094708659 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101055174 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082118108 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066438503 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067925987 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227538304 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080718143 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066589723 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091494489 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076241751 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068181614 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.42427772 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066112623 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06748762 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.074599399 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06717301 seconds)
  done (took 3.537281651 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.379377758 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.612560053 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.365211063 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076687045 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.750855282 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091583895 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.263194457 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.141744172 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.08083842 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.503359604 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.365979791 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131359487 seconds)
  done (took 18.52645661 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080318123 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077610119 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091290159 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091058876 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079172839 seconds)
  done (took 2.17607136 seconds)
done (took 105.380438818 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080143215 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.192406789 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.067092855 seconds)
  done (took 2.042469423 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.089622942 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087371334 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090940959 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.088200447 seconds)
  done (took 2.120905864 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073525379 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075562997 seconds)
  done (took 1.908188446 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.232026377 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.174649846 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.098051402 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083439854 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080604001 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081325653 seconds)
  done (took 2.013025934 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071587427 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.072190792 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074643792 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075948328 seconds)
  done (took 2.052469073 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.067819435 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.066129664 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.068638346 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071900613 seconds)
  done (took 2.032529702 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.083650449 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.08406061 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078795617 seconds)
  done (took 2.004565228 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100880869 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092640891 seconds)
  done (took 1.950979113 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.079818561 seconds)
  done (took 1.842160267 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092679826 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099355888 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129419309 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112366743 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139459104 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.116594348 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.081650945 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086318728 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076956962 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.083843802 seconds)
  done (took 2.777416096 seconds)
done (took 23.087674689 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07878714 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.372430974 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359903228 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088913521 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674229154 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356024718 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.985648677 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09194048 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.10702146 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068169327 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08554046 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.662042838 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.977479047 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.331132709 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.963720145 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328429394 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65245814 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068473102 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067672264 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068625824 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.97077703 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06756645 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068289334 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068469906 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649141578 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37294458 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069339817 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.329314534 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068844757 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072455616 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358697314 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069892294 seconds)
  done (took 16.290112622 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070377892 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121285997 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073014742 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084465999 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070369636 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069502136 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071339899 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068621885 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116626279 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069257139 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085874643 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067844116 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072272726 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069659149 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089413573 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068080724 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071676803 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069251364 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06924845 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069475719 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087697717 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068316565 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069829318 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06959751 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069422737 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082330595 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070152011 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06859869 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06891861 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072755272 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073871751 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070928766 seconds)
  done (took 4.19741005 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115555276 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12365495 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073508171 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105548356 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115731017 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070228283 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144929047 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092103028 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119503565 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069456924 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08648614 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068307554 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102755506 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070080654 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089291522 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068981759 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072179232 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069714871 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068608523 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069520633 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088456697 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068628632 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069283335 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06984882 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069545649 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083489165 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070302341 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068987709 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069144365 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072367511 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075168437 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070191143 seconds)
  done (took 4.448775001 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.069858493 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072151646 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.079578277 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081365795 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06660141 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.069301984 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.070802145 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.067637854 seconds)
  done (took 2.356073994 seconds)
done (took 29.065610277 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077613996 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068237353 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071689311 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086093423 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073453739 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.0776341 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064783802 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074223602 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074284618 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071526762 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.072518739 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066611428 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07010784 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065714247 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072633423 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066457064 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080038449 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070247552 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078956417 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079763211 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069479744 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07279408 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074887098 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078741099 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078645669 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078746378 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076095629 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072809961 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068019144 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070205099 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.068905693 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.076761176 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.081118007 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080903727 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066662245 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066951214 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071618902 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069460929 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080220912 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075697012 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068856071 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076299719 seconds)
  done (took 4.831597665 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.082232138 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.086734476 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.080585437 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.078501995 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096046068 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08127175 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.085034603 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.076871197 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.076461139 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.084978952 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073236683 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.08024454 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077751688 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071917757 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077440659 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074672308 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.078405823 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.072702511 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076639971 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.076613087 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085463856 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072314382 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086082744 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07895615 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07406227 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.079977122 seconds)
  done (took 3.851900824 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.072468348 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084465179 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091929044 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142089037 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108930819 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.085161545 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081058538 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092251379 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095934463 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067815723 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072655775 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091955918 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092399384 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073732877 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.110747358 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083868434 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079991449 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069694246 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074921174 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096373003 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088819569 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.0858519 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094320069 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083915674 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068121333 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07107806 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073572051 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082263152 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070764014 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078229677 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070210668 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071327456 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068333029 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079424502 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072331348 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068233751 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.087155241 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078606276 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080373157 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.104918986 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076722313 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068524144 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092290021 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12727005 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068964343 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07235402 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07156821 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078747539 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066418326 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09485517 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079281337 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067399964 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.067823361 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066945946 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066769971 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.070201234 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069172728 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069474446 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077322039 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073670945 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08647801 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072313563 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085707833 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066942333 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077384851 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067085658 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068907941 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067004018 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098506356 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072001627 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.115132184 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070839622 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068768052 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080995827 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080413956 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074442167 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068189442 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086506543 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077564768 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070933437 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077009088 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073276152 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07207366 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099519885 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068661625 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069711213 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066123849 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.070743813 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070513981 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068032423 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078647708 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066527067 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070662437 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086474596 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067566267 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068254259 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.070246509 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.069304808 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066829582 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081217574 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07380773 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069380843 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078909313 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069971505 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071787736 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08194145 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074275654 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066509338 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068649675 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.070274047 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068635305 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068571378 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07035822 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069560921 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074432778 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073733086 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073367268 seconds)
  done (took 10.902147401 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16270784 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152044745 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070073184 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146772246 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075923106 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079638761 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148348509 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095727186 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068581785 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068965127 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067480555 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.107439053 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.102680972 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.113768563 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079766966 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068962895 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.094230315 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112417146 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150163696 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.145899841 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090860985 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076147937 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070302635 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069814163 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069343856 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077626733 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085029493 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075940252 seconds)
  done (took 4.548398798 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.076448282 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.102752751 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072150014 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090164072 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086940743 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068223107 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070088306 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069638215 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.084766457 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077062763 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068442107 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073838915 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.071749521 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071164503 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06871727 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074191098 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074720692 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067811186 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072217087 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07351926 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078735204 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092561844 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073267783 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067972372 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.070511977 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067686208 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.076087464 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.079566616 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068207542 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.103746548 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06613145 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073059633 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082055112 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068187931 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067194858 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068200702 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068276805 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06821379 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068783652 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066494395 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066465114 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.071732154 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06701007 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.075907368 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.080720887 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.074547766 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.069850517 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071191736 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.070829648 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065825379 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071084312 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071386574 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070601778 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075194624 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072011461 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.070977535 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068656767 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.093652029 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074376578 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068151967 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067259435 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067061894 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070302937 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.077366525 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083700361 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070258121 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066928957 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068179433 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.080339447 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081067854 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067562741 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07230403 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065598334 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069503836 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070189224 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070346093 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068683867 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066524267 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067449943 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067972145 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068270267 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067645076 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.067342937 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070449535 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066782649 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069098164 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06852583 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.069806884 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07614276 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067602906 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.071635625 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06863848 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067376536 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070946042 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.07355051 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070728395 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.078432517 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.078306443 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068211141 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06613266 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084778214 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071037801 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068019178 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.073798972 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072035427 seconds)
  done (took 9.454094486 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089711622 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06866172 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084325501 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090353888 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.078096638 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.072406237 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078319246 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.067647675 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083666125 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072722018 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075853246 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066628493 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079172429 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077782622 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068226339 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078674417 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070521348 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085508801 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082686757 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067020648 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077082582 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080536441 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080415691 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082351118 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081700753 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082704953 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.079632038 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.077093878 seconds)
  done (took 4.012832557 seconds)
done (took 39.372225928 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.876073303 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.109803893 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.855664875 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.086022387 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.908058265 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.059986257 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.989099069 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.866264202 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.373225497 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.893549417 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.108101875 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.34861663 seconds)
done (took 67.384795193 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.889735087 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.006005693 seconds)
    (2/2) benchmarking "String"...
    done (took 2.098129411 seconds)
  done (took 5.890653598 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.05116836 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.516694311 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.115618943 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.850650422 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.857657986 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.279926147 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.613325145 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.294807014 seconds)
  done (took 31.315277714 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.986724748 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.069071242 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.543193297 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.570213905 seconds)
  done (took 15.996333416 seconds)
done (took 65.022029727 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.869525859 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.850679512 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.895736262 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.880927682 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.852196048 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.852567417 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.854956609 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.853265084 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.872165392 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.883055815 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.852568281 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.866228911 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.853503624 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.890173439 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.33587668 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.900192608 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.856795014 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.855816388 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.863907193 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.897397883 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.857873946 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.854809079 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.278574884 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.006882739 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.474759568 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.002994718 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.238469151 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.270612653 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.854692181 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.850835654 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.935023423 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.005543667 seconds)
  done (took 206.254533449 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.853961236 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.880456239 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.937995072 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.872385668 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.353395481 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.033258732 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.970263917 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.39029437 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.858585602 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.87477457 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.003580683 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.858325551 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.030632699 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.798188 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.888439526 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.952521338 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.099058544 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.032498866 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.89605919 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.020168107 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.855662223 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.86646513 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.822562446 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.985042673 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.892258982 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.872232189 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.868589703 seconds)
    (28/36) benchmarking "trsm"...
    done (took 7.005655197 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.037555035 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.065003851 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.878226271 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.894818254 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.073183459 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.72270384 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.870684262 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.863966677 seconds)
  done (took 172.96969243 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.03925508 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.859988994 seconds)
    (2/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.867462966 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.856703983 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.911455111 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.978670716 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.858900391 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.535240652 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.866415502 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.936314022 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.857950287 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.855827566 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.856762214 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.854213687 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.868962629 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.971594822 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.85736744 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.870565602 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.85812205 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.881137614 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.858565882 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.857585734 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.855517207 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.856028657 seconds)
    (24/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.855244298 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.856533396 seconds)
    (26/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.8566838 seconds)
    (27/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.856245452 seconds)
    (28/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.106118675 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.118155204 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.858294446 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.857557714 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.405686905 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.869759804 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.884430636 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.858894536 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.94956173 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.912979867 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.978435746 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.857117443 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.075120045 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.945991371 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.857426059 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.856611241 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.921399652 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.870307847 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.858718509 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.856778111 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.863866873 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.921601599 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.104953591 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.858483076 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.979654972 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.34438058 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.858211763 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.85873908 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.857014677 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.470164944 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.858868673 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.858949075 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.864219227 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.864812121 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.858916752 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.858109788 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.247944553 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.930230728 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.883803215 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.861773973 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.860473909 seconds)
    (69/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.088000667 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.383458687 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.004125489 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.860271998 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.859479746 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.859738265 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.861621184 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.859261556 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.861366404 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.980823479 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.868733521 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.984413895 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.939791784 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.98206631 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.862800334 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.871042562 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.688719224 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.93142719 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.896871769 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.685519549 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.862161429 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.236548506 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.625942591 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.859636521 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.85956103 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.872849764 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.859613535 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.860296567 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.860918709 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.939735163 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.86073017 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.981694667 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.579904953 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.069487857 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.861138271 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.860523915 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.869178582 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.942867376 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.985079812 seconds)
    (108/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.864766938 seconds)
    (109/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.926774401 seconds)
    (110/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.866288141 seconds)
    (111/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.862074178 seconds)
    (112/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.860737496 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.955068662 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.861809498 seconds)
  done (took 409.404800934 seconds)
done (took 792.510256395 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.484264436 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.458309536 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.550104046 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.476258816 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.449713562 seconds)
  done (took 14.21312594 seconds)
done (took 16.009330726 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.875900217 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.867308014 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.918491533 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.94602528 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.880602598 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.880266154 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.943271976 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.884583491 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.913278203 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.920389492 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.952526198 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.950943003 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.886704623 seconds)
  done (took 26.616020238 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.869553025 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.10186429 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.088704992 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.899023617 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.893609541 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.094192462 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.923460928 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.002271959 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.00554571 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.094618394 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.100573077 seconds)
  done (took 23.873823651 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.869250095 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.009709008 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.10436159 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.902540369 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.870893422 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.095234385 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.931398164 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.004518033 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.011797368 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.106816515 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.105916928 seconds)
  done (took 23.814974933 seconds)
done (took 76.101052285 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.864402782 seconds)
  done (took 3.66185073 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.884107295 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.042150327 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.865863569 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.866213449 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.86485198 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.86618233 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.866548838 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.864808483 seconds)
  done (took 16.921613761 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.864885965 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.864912597 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.865031732 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.864359852 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.864185967 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.864984376 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.864597034 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.864587672 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.865547682 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.865443519 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.865129766 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.865010831 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.864727992 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.864583248 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.864637005 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.865169588 seconds)
  done (took 31.635536529 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.867221205 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.864843145 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.86538983 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.865897616 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.865828618 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.865769705 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.866452946 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.865310651 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.865771694 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.8664881 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.866400318 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.865558508 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.865102722 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.865443513 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.865427657 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.866124253 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.865203591 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.865456352 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.870389314 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.866881569 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.866534782 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.865345557 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.866522666 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.866344037 seconds)
  done (took 46.590695283 seconds)
done (took 100.615772518 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.588050851 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.456550657 seconds)
  done (took 9.844003328 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.870181505 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.866183239 seconds)
  done (took 5.60299722 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.865590523 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.867155523 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.867026316 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.866492332 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.866093668 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.866683762 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.866400063 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.86710371 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.867333465 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.86757293 seconds)
  done (took 20.466150153 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.866540129 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.866631307 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.867646598 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.867610812 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.867282163 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.867674525 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.866878893 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.867038333 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.867087862 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.867095109 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.867999971 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.867743111 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.869351215 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.8672982 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.868144461 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.868368471 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.867378847 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.867855184 seconds)
  done (took 35.416033955 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.867905668 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.867825835 seconds)
  done (took 5.53772584 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.868401695 seconds)
    (2/7) benchmarking "second"...
    done (took 1.867638398 seconds)
    (3/7) benchmarking "month"...
    done (took 1.869303561 seconds)
    (4/7) benchmarking "year"...
    done (took 1.867727495 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.868755859 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.867936228 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.869184063 seconds)
  done (took 14.879648587 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.868720368 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.043526755 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.105047683 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.513773806 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.87023747 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.871830383 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.772228655 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.872318354 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.873280186 seconds)
  done (took 20.593088698 seconds)
done (took 114.140175377 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.615674341 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.872800766 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.156723862 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.925010236 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.89766593 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.201367941 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.909972648 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.191366478 seconds)
done (took 43.574742813 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.893758875 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.86740292 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.89682794 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.899394619 seconds)
  done (took 22.466039074 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.879080625 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.213481092 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.895168718 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.722181448 seconds)
  done (took 22.526251431 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.233130885 seconds)
    (2/2) benchmarking "read"...
    done (took 2.254704416 seconds)
  done (took 6.297628885 seconds)
done (took 59.989986003 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.87004299 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.869729785 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.870258026 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.870253699 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.869845289 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.870266417 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.870096778 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.870091039 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.869798259 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.869707577 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.869873906 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.874082944 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.871103914 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.870699447 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.870665258 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.871778194 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.871115553 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.870959688 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.871575002 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.871058752 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.871345036 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.870936841 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.870961874 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.871070297 seconds)
  done (took 46.701135286 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.871675546 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.871104153 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.875137449 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.871556221 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.871340607 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.872388034 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.872441327 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.872016229 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.871317105 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.872754267 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.871210161 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.871865211 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.87319949 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.872027864 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.872764984 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.873173205 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.871675251 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.872352157 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.873872569 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.873068437 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.872063363 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.872457136 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.872553419 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.872649066 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.872195408 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.873174624 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.87337886 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.872334914 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.872771952 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.873048404 seconds)
  done (took 57.979113157 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.872036804 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.874119493 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.873053117 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.875870137 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.872557276 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.873280943 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.872785596 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.873375905 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.872686514 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.873574019 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.873917282 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.873039104 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.874231634 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.873348534 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.873290533 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.873246358 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.873359143 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.873834825 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.873862203 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.875441424 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.87442429 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.87430043 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.873724995 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.874251069 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.873646234 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.873897736 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.874768632 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.874454059 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.874668429 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.875534835 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.874488549 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.874694064 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.874897168 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.875703949 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.87468328 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.876165991 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.875986001 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.875054354 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.875094135 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.875456494 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.874707155 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.876397117 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.875018145 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.875640447 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.875338829 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.875625969 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.875691493 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.875396789 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.875582602 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.875331285 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.874807858 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.877199772 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.875859044 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.875238715 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.874974249 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.87551607 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.876322395 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.875603467 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.875808683 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.876257 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.876185401 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.875886769 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.877133777 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.876922185 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.87654523 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.876941545 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.876205142 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.877049825 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.876151425 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.877089106 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.877180532 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.876553156 seconds)
  done (took 136.807245505 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.876763046 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.877037822 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.877063899 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.876964421 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.87687705 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.876645654 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.877052362 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.877436324 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.878161103 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.877507376 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.878938345 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.879086788 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.877936358 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.877516555 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.877885494 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.877470826 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.878180783 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.878145629 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.878055225 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.879114574 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.878059192 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.878438736 seconds)
  done (took 43.120347525 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.87887018 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.879188409 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.878631598 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.879197639 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.87865155 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.878653229 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.878287814 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.878670896 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.878300768 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.878233958 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.877964951 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.878671305 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.878417168 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.878700564 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.878431856 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.87877457 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.878410499 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.878122602 seconds)
  done (took 35.626264463 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.879537722 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.879559406 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.879236098 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.87952336 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.879435188 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.879985208 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.878298079 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.878419911 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.879054391 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.87999454 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.879245111 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.878309327 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.879646651 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.879218664 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.878638927 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.88029982 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.880865635 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.880595935 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.878672533 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.880033505 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.880318454 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.879760172 seconds)
  done (took 43.161061754 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.880774785 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.879516264 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.879469415 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.878980453 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.879767501 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.880885219 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.881227687 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.880163457 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.880402827 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.88077271 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.880489554 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.880202149 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.882646444 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.881812241 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.882025029 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.881595126 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.88049376 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.880747055 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.880407157 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.882707728 seconds)
  done (took 39.428806204 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.881752588 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.881734603 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.881155677 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.882342728 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.882187576 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.882779774 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.881851326 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.881933314 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.881123127 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.883334795 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.881837389 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.882065829 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.881537256 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.882096352 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.882425261 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.88244669 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.882405053 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.882632684 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.882344968 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.882615005 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.884002786 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.883683786 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.882588502 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.882065735 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.883074417 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.882271537 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.882787919 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.882174159 seconds)
  done (took 54.519992361 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.883176857 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.882380444 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.882383936 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.883806696 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.882829143 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.884605977 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.883347775 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.884148408 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.88319729 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.882768927 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.883308919 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.884167549 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.882599714 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.883616689 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.883268189 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.883988394 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.884099969 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.883135571 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.883601228 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.884182614 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.883854257 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.88329582 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.883513206 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.884451626 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.886007808 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.883343166 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.884662227 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.884109172 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.88254813 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.884009353 seconds)
  done (took 58.324820734 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.905188021 seconds)
    (2/2) benchmarking "in"...
    done (took 1.904910271 seconds)
  done (took 5.627176121 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.883727247 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.884327746 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.88398064 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.884487931 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.88379567 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.885324614 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.884998334 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.883640575 seconds)
  done (took 16.890848743 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.884543196 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.888408838 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.884962622 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.884365618 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.884966233 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.893714558 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.888330787 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.886015556 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.886413746 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.888813848 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.88960216 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.888954688 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.894520074 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.890141998 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.885980347 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.888850933 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.886740778 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.888887699 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.886810149 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.885812494 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.88974585 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.886939769 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.885241907 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.886786388 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.886003155 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.888680542 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.895320766 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.887453509 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.889033222 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.885589042 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.893779931 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.886466663 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.887401878 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.887690898 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.887767733 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.888111304 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.89359581 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.887555289 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.886755307 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.886975889 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.889827848 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.890230559 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.89011559 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.895067011 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.889913712 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.887282436 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.887220627 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.88785292 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.889708085 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.890949529 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.895573043 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.887510942 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.887500087 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.888239064 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.890294391 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.887396184 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.887599707 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.889445491 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.894727421 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.89450424 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.893339401 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.908225548 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.897639194 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.887805625 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.888116184 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.90120277 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.912908454 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.890579482 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.891014825 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.888995521 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.896486416 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.889778474 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.887964979 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.889178272 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.899811423 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.898638709 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.890902132 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.889125295 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.889013003 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.889236683 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.890255033 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.889208411 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.890898111 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.890839671 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.902959099 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.914642587 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.890353513 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.889785216 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.892653972 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.893725148 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.893824654 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.893068297 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.893388672 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.890492575 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.89192279 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.894559483 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.890590994 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.891341761 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.892494924 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.898513358 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.890833927 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.890053551 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.893551236 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.898705464 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.890611939 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.891092358 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.891236598 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.891144555 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.900096601 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.890860193 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.890734435 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.890793511 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.894561558 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.894991003 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.890856511 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.89560585 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.899544632 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.899534239 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.895393293 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.893735107 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.895791329 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.894827966 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.904018495 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.915876471 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.893114328 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.896926073 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.897932545 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.905017845 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.896251715 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.892249337 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.894826438 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.892591876 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.892761483 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.894771544 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.891641864 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.892482343 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.892347928 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.892917596 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.892065392 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.893967419 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.897179004 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.893866963 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.89497164 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.892266924 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.896322074 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.892683832 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.895279209 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.900486377 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.896677758 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.892592835 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.89335559 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.895813418 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.896711397 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.893914472 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.893138611 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.8936267 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.894439362 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.895280504 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.895832876 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.894084766 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.89380222 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.897279291 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.897423008 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.89462529 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.894459829 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.896345695 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.894315478 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.894259048 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.896085666 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.895357822 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.896330538 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.89415468 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.898266175 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.894075795 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.893892875 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.894716161 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.893805705 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.896615555 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.897822257 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.905845001 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.898564594 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.90474333 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.894797332 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.901941594 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.895647955 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.897169812 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.895458462 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.895247918 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.895833232 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.895659892 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.895330789 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.899799369 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.915232873 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.906528429 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.896950766 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.899222067 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.903331856 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.900329131 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.899611542 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.896445199 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.896899328 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.898859115 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.896218148 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.897943789 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.896125286 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.898770194 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.898076064 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.895445102 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.900258717 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.895827476 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.895950817 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.897975992 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.896348057 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.898715383 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.896420431 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.898257954 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.899369202 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.896239432 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.904544268 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.900706802 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.89760566 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.895968346 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.899755242 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.897558737 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.897645644 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.89899757 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.901744789 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.899081325 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.899534408 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.905379314 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.901502226 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.900411588 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.900722368 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.897816003 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.901273354 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.90033901 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.901725363 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.906707245 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.900815208 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.89829316 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.903316719 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.897959085 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.901978933 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.899125278 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.899900079 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.898596418 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.90034468 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.898651157 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.898388862 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.905805374 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.900054423 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.901099127 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.89897098 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.90325662 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.902185816 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.901129057 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.898311227 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.902150129 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.907634572 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.905007288 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.90288798 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.903984533 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.9014815 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.902038634 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.903190251 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.900778332 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.913462951 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.910313665 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.899524136 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.900732512 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.900267592 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.902531556 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.900290309 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.90068871 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.907618452 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.903529162 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.903856839 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.904732278 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.90071087 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.902707575 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.906580177 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.901950083 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.907000285 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.902110568 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.901499319 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.900955176 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.901778044 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.903304539 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.900057845 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.902529397 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.904858689 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.900429537 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.901547669 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.899215213 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.910329009 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.901551806 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.901147246 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.907852622 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.904836351 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.9041038 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.903003657 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.901374272 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.902849876 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.90225403 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.903705947 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.905341381 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.901947569 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.905996219 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.913242545 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.905589107 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.910003328 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.904428601 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.913577197 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.902519251 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.905074391 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.903371861 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.90661002 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.910535016 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.902621747 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.904392418 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.910159815 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.906530723 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.905686096 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.907026598 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.902622952 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.902802904 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.903186929 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.90654916 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.907771724 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.90679813 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.902807739 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.902259949 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.902138649 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.906209015 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.907405467 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.905488597 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.904623357 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.906335866 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.903190363 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.903535086 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.903186202 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.903891358 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.904809251 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.904014015 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.903454966 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.913819896 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.90536184 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.907652361 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.908114948 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.90430361 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.912364266 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.905156353 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.904037624 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.908038871 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.904284214 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.908358592 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.904308843 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.904170772 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.907468085 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.905024309 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.908471328 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.917295304 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.912543286 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.90994405 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.906536621 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.903965928 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.905694446 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.917606436 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.928400161 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.905121776 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.907062814 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.909160547 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.912501446 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.907257857 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.912026639 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.909114886 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.913762191 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.907366947 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.906979344 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.909144208 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.918339896 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.906076934 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.905388146 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.906370666 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.9107269 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.909930589 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.905626351 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.909542314 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.908378725 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.910344276 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.918548203 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.906946794 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.910096179 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.906672903 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.906006136 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.907944294 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.906656717 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.908676066 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.908229808 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.906794698 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.906362141 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.908987061 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.91243821 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.908543657 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.91071474 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.917148258 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.906559827 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.906782201 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.911979921 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.906712219 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.90902975 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.907677051 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.90896933 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.911810358 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.907076847 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.910750035 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.910572641 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.917102708 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.909565803 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.906667685 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.907591745 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.910880433 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.910625693 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.908636765 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.91063513 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.915883598 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.912374454 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.920678303 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.918060269 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.908715552 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.91178678 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.91542503 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.916742906 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.908746539 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.910983838 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.908955643 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.911722921 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.911116978 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.909698512 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.90936621 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.911951281 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.914858266 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.909068526 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.911551409 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.908931039 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.91011313 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.911667851 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.911839477 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.915614354 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.910040927 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.909036398 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.91165359 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.911286585 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.910784315 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.912820415 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.911048807 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.909529371 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.911258965 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.912560576 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.914871896 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.910165333 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.910523645 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.911559494 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.909810891 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.910536449 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.912038978 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.913128621 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.91028911 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.913999773 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.919462182 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.910863373 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.913787962 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.913781579 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.913358595 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.910079473 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.910618063 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.911442348 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.910530282 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.918677902 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.910805407 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.911732249 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.914284195 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.910162858 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.916342467 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.913204074 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.916515687 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.911522484 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.914416477 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.910745695 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.915270266 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.923245888 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.915859389 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.915559368 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.9197603 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.915937551 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.913856982 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.911914252 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.911864846 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.914565695 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.916297496 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.916234812 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.914802979 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.916118828 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.91334291 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.915491094 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.912591641 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.915338494 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.912469414 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.912335104 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.916316841 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.92302859 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.920865193 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.912540237 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.914857432 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.912900922 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.91712644 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.926715159 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.913000219 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.913541562 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.913525075 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.914618291 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.916847891 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.921564461 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.92451379 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.916709027 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.913553326 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.918554683 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.931569386 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.9165356 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.926571175 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.945883545 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.918566816 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.913892938 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.914849677 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.917412667 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.914631236 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.918877952 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.914422659 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.921517254 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.914666084 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.913941701 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.923340036 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.916133509 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.913923275 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.914228923 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.918413332 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.921071466 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.913971646 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.921555482 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.914981453 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.915203636 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.91837117 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.918424211 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.914221974 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.914613975 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.914084021 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.916937112 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.915854234 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.9154651 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.924604221 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.915724185 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.917860438 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.926424865 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.929185522 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.915412617 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.915919737 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.916195739 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.920015184 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.918890946 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.916852616 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.918962474 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.923740553 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.92052286 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.923171178 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.917382336 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.916642425 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.91701637 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.916413633 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.915800597 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.928724139 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.928032101 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.920757439 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.919947024 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.924380334 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.916238161 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.924552692 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.923120364 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.918419072 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.918794178 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.917895927 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.917284144 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.916963362 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.917933941 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.921608622 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.925888946 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.918350045 seconds)
  done (took 1136.727957071 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.918532166 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.917973564 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.916949849 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.917760051 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.918317572 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.917997086 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.917685454 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.917488034 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.917476441 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.918620894 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.917909677 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.918086353 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.919264767 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.918467804 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.918069977 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.918900906 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.91788653 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.917799151 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.918799699 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.91896765 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.917298786 seconds)
  done (took 42.130672919 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.918552629 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.917729987 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.918381035 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.918362938 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.918187271 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.918527097 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.918971988 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.91803329 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.919273451 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.91906191 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.922042453 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.918227553 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.918963645 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.919108251 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.918255279 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.919904327 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.91887096 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.919262293 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.918816123 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.920045657 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.919094694 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.92046126 seconds)
  done (took 44.068193337 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.920011995 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.920177847 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.922665334 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.919394558 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.919758132 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.921054375 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.920707213 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.925603567 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.923259651 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.924365199 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.92810074 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.92916915 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.920412435 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.925634214 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.920281409 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.920649917 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.06577236 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.922821811 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.921445433 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.92029837 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.92121722 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.926522017 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.919788594 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.920366894 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.923572248 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.920802264 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.919667112 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.920742962 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.9212257 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.926044294 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.926071533 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.920711042 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.922564753 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.92597241 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.924939185 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.925394889 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.926354134 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.921734728 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.92111643 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.922248437 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.935613567 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.946393816 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.921492847 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.922695561 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.92874086 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.922085295 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.92247709 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.92566546 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.931578482 seconds)
  done (took 96.257937319 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.922264186 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.921836758 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.921833374 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.922062698 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.92297884 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.922754491 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.922287544 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.92204838 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.922518461 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.921948342 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.923212908 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.922811831 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.922341942 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.922487796 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.926030787 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.922825066 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.922613183 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.924092747 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.923434992 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.922581907 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.923445092 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.923342905 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.924169717 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.923646644 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.923971314 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.921946127 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.92313386 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.923293422 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.922806877 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.923398164 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.92520358 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.924198572 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.923931208 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.924202145 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.923665181 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.924143567 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.923644004 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.924618476 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.92378644 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.924021634 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.922936395 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.922737426 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.925509348 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.923779713 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.924382199 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.92530033 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.924778034 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.923963635 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.923084628 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.924083633 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.925030394 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.925489428 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.924177701 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.924961996 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.923606984 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.924389741 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.924108718 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.925413009 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.924952971 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.924306637 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.92461459 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.927753857 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.926573391 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.925799337 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.925522657 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.926631814 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.926882988 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.926078323 seconds)
  done (took 132.683984047 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.926646023 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.92678539 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.926519421 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.92692724 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.926758066 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.926683776 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.927387188 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.926723663 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.928810784 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.926300156 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.926569663 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.925824985 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.927275621 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.926572161 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.926656281 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.926690499 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.927056323 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.927659936 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.927373435 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.927080974 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.927019971 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.926690085 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.927203632 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.9283742 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.927950253 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.927652447 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.926728523 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.927588969 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.927753695 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.927479911 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.927464528 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.92676119 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.928239178 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.927523873 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.928748383 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.928717252 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.927270786 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.928814599 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.927745481 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.930547336 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.929130662 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.929112758 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.929166361 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.929235421 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.928670529 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.928762051 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.928772569 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.928543956 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.928731447 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.929090424 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.928920692 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.928515649 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.928518784 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.928501016 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.929932018 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.929058876 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.930427697 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.929089444 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.929483917 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.929266644 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.929311626 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.928903526 seconds)
  done (took 121.393319071 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.929312652 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.928393181 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.929243854 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.928755572 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.929057889 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.929448618 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.929869619 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.93067295 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.929037494 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.928593476 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.929842134 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.929485774 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.930398373 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.92965562 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.930170616 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.931365563 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.929860149 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.929696975 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.929765173 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.930180276 seconds)
  done (took 40.454215455 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.929988251 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.932224109 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.931258791 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.930130712 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.929708505 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.929435409 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.929938971 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.929806952 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.930745046 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.930009964 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.930402502 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.930961676 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.930600128 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.930691412 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.932747506 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.931235623 seconds)
  done (took 32.751179135 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.932321878 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.931151592 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.931532296 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.930980255 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.932047013 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.930439004 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.932346898 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.931664967 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.93190338 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.931346899 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.931594066 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.931968884 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.932390139 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.931234088 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.931745931 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.931822084 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.933460148 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.932266486 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.931389582 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.932502507 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.932183728 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.931682104 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.931761521 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.931932216 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.932247357 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.932828568 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.931768668 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.932581791 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.932429128 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.932974127 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.932695478 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.933435302 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.932847827 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.932818653 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.933125021 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.932032298 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.931365369 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.932598429 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.932382597 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.933369878 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.93256498 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.938399695 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.933387723 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.933214723 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.93343809 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.932579918 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.933947122 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.934447404 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.9336977 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.934993921 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.933376885 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.932532071 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.933901486 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.932607593 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.933771222 seconds)
  done (took 108.15706724 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.9326609 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.933101728 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.933838477 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.933396431 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.932941092 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.932924535 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.93329696 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.932213358 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.932744931 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.93208783 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.931049703 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.931012526 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.932130512 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.931120825 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.931647716 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.931395091 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.930195102 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.931723118 seconds)
  done (took 36.644207768 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.932049994 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.931340998 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.931577626 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.931337941 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.931727149 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.932957798 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.931211156 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.93052744 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.930801667 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.932139459 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.930831472 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.933116231 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.931354183 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.931115866 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.931664687 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.930168841 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.934480896 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.930361439 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.929914352 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.9318261 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.931306657 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.930416074 seconds)
  done (took 44.355146792 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.932270207 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.932333941 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.950015935 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.955313352 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.957734546 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.968458413 seconds)
  done (took 13.558124883 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.931446505 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.928655606 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.924497053 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.924620052 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.926580193 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.925031955 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.92641606 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.924892889 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.924164317 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.924816854 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.92514608 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.925333929 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.925853228 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.924563858 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.925421609 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.924831824 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.925069566 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.92571499 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.924773935 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.925145682 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.925409924 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.927140264 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.925164405 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.926156224 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.924938409 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.92476312 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.924709371 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.926305769 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.924637727 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.92572784 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.924546137 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.925120941 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.926861474 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.924388318 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.924791313 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.924566551 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.925060357 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.924102654 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.924191421 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.919820118 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.920997786 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.920457435 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.921333769 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.920807093 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.919562564 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.919901687 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.92008987 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.920650627 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.922837418 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.920959677 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.920482997 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.920837643 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.919760173 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.921195779 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.919222541 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.920034534 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.919663664 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.920781725 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.920589458 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.920317863 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.920527855 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.92017524 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.920530308 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.920651501 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.919324105 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.920295167 seconds)
  done (took 128.806838038 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.920717733 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.920614278 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.920549317 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.921157201 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.920404559 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.920384885 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.921203046 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.921183701 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.921079654 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.921428724 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.921163153 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.921700137 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.921686307 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.921159721 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.921345275 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.921472682 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.92251276 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.922004425 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.921584721 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.92142445 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.921125268 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.921586077 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.920932679 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.922042115 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.921189295 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.921375699 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.920650794 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.920997147 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.921684505 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.921510246 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.922141025 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.921428639 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.922904695 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.923466804 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.921881129 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.922047198 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.921189821 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.922529807 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.922799721 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.921753427 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.921902191 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.922050753 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.92295968 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.922313281 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.924061993 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.922443671 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.922284885 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.92486493 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.922113611 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.923730925 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.922278641 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.9219944 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.920548574 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.921247604 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.922538033 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.920588629 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.920939084 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.919823229 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.92101309 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.920893742 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.916096881 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.915730249 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.915899803 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.916310521 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.917326559 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.915200977 seconds)
  done (took 128.651637606 seconds)
done (took 2646.636936649 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.980998345 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.924923484 seconds)
  done (took 15.751394824 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.081695566 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.03188448 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.919810972 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.936614398 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.917917559 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.943860583 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.941589656 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.915725725 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.915412436 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.915647961 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.918431908 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.10012972 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.973875519 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.916175826 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.916197296 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.006347789 seconds)
  done (took 53.204064583 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.916537679 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.91657688 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.928088908 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.91659017 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.917156641 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.928913989 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.948433199 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.921961256 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.951470093 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.92890909 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.985766731 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.928964348 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.917586858 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.966540805 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.930695451 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.931263558 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.006221774 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.994765865 seconds)
  done (took 36.779344856 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.993957588 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.925629345 seconds)
  done (took 10.768929293 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.936050644 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.970737733 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.993967081 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.926861079 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.932786514 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.918716591 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.945906781 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.916545565 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.916573368 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.103986957 seconds)
  done (took 71.404585104 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.919171839 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.918449041 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.915604686 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.91372995 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.910911596 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.917135471 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.912172389 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.914690154 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.593811358 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.963734546 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.923354911 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.917829736 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.911736384 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.914031507 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.912557689 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.935546703 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.027975088 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.910752192 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.910685834 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.919004381 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.913260553 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.967027984 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.926699923 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.913556152 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.94601272 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.584999592 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.92358499 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.918883441 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.045737174 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.911645355 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.912401595 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.098912459 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.916860638 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.376584459 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.222325594 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.92174219 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.92454742 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.918986455 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.910609636 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.031076178 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.911436533 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.917675089 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.806083217 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.204571731 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.022790906 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.954767197 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.250244635 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.929254736 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.910524783 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.938361071 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.914733785 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.90984456 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.924672988 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.423709298 seconds)
  done (took 135.311148643 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.910260946 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.28028963 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.07471487 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.907583493 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.194225346 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.111803307 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.908525588 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.953863837 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.909824955 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.150012166 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.072315513 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.012057233 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.907131154 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.904406474 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.909219234 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.904313806 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.056098925 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.975869506 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.907422606 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.903307826 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.93256076 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.145434944 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.044866909 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.906390774 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.922325839 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.118611266 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.02839164 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.010456385 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.253078175 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.904345332 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.96766567 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.907660758 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.903924661 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.904385787 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.067225063 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.001334484 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.989239884 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.907339435 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.906403059 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.904400493 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.566675356 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.10480375 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.002723308 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.037135423 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.103350277 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.111930549 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.687922023 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.904219773 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.645270784 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.065435735 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.134487845 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.151424344 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.026798062 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.909013992 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.245166819 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.906358619 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.90637258 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.155868018 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.050044688 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.005952026 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.911217735 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.90410829 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.906403335 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.146489157 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.909608248 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.002468267 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.91039334 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.906948538 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.002475941 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.007463653 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.050096869 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.119395179 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.936036408 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.82934595 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.45456503 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.151617758 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.972254384 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.158815327 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.910906055 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.90715584 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.989636172 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.75884697 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.067721424 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.15236399 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.163899757 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.369296545 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.663115359 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.907691832 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.133135316 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.129087097 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.158673595 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.140243938 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.063699433 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.071760913 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.907503182 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.908640838 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.11779509 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.033199142 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.910035287 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.249983655 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.140265245 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.464468686 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.925494298 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.21578088 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.037952691 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.911482983 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.541302556 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.909018791 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.131865195 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.948903596 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.910078002 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.909064742 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.129138974 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.886575596 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.909055 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.546731364 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.968848247 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.912607524 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.141467339 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.911486182 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.170548903 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.912533585 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.141782293 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.482855874 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.937739403 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.081176804 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.137897755 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.911869485 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.151978385 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.150930114 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.024389705 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.128927015 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.518748274 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.912284851 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.196475334 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.914377933 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.910161258 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.077735887 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.909935171 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.054371477 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.91292913 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.192763889 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.931187776 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.068481556 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.914541536 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.180113616 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.942624 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.960376331 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.914643342 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.040173044 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.913145422 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.819749061 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.066748876 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.916516741 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.909962343 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.462739395 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.912288623 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.058294641 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.139459182 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.933528096 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.982407841 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.572460567 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.910304976 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.992307432 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.935094136 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.309136745 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.911918739 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.072191768 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.915066996 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.909695367 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.911760656 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.145674019 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.091913342 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.912304006 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.910718325 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.804533178 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.911313949 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.911189759 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.091744738 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.889529011 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.912337713 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.115802674 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.915176568 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.041348849 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.916417656 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.993801593 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.247382643 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.910884803 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.91161087 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.913059341 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.911255396 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.913735415 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.120080393 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.94267886 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.450994914 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.048453437 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.180212459 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.220674779 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.16337575 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.955486803 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.916521571 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.166844441 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.916131964 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.975094569 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.916044083 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.932608804 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.143062159 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.916717553 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.121971566 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.194768692 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.792435468 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.960345667 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.915115898 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.915470222 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.913910477 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.077931818 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.997306959 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.915042278 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.913920237 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.02658371 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.05254957 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.12354754 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.915927778 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.040044904 seconds)
  done (took 911.24986103 seconds)
done (took 1236.317214004 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.915133812 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.91742603 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.916946508 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.916782872 seconds)
  done (took 29.513120741 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.918330373 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.915575199 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.915669824 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.915808421 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.9174288 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.915229542 seconds)
  done (took 13.346076588 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.934910288 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.917680466 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.917154599 seconds)
  done (took 21.616564496 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.98782489 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.303835795 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.055690359 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.334820697 seconds)
  done (took 10.530848615 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.91865649 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.919169301 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.917496191 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.917272101 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.918377545 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.91843689 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.918632062 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.917595668 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.918925381 seconds)
  done (took 19.114352572 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.887551377 seconds)
done (took 99.856022064 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.386026221 seconds)
    (2/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.593338714 seconds)
    (3/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.919420518 seconds)
    (4/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.83071173 seconds)
    (5/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.944472534 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.775886497 seconds)
    (7/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.988537855 seconds)
    (8/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.457484059 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.05483089 seconds)
    (10/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.050014051 seconds)
    (11/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.092050835 seconds)
    (12/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.944345001 seconds)
    (13/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.120386023 seconds)
    (14/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.274090161 seconds)
    (15/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.179416825 seconds)
    (16/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.922791361 seconds)
    (17/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.99373213 seconds)
    (18/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.932741681 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.916471996 seconds)
    (20/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.050115851 seconds)
    (21/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.916403121 seconds)
    (22/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 8.058937624 seconds)
    (23/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.284470607 seconds)
    (24/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.932839786 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.101920705 seconds)
    (26/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.999412594 seconds)
    (27/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.083192315 seconds)
    (28/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.051881788 seconds)
    (29/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.92086985 seconds)
    (30/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.022287505 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.891152667 seconds)
    (32/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.542828244 seconds)
    (33/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.943386549 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.919142401 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.138315141 seconds)
    (36/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.940739415 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.0509166 seconds)
    (38/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.333937657 seconds)
    (39/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.053307902 seconds)
    (40/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.004753461 seconds)
    (41/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.351007509 seconds)
    (42/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.923332313 seconds)
    (43/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.013570359 seconds)
    (44/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.525995792 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.103907522 seconds)
    (46/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.323845647 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.050130137 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.680994396 seconds)
    (49/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.92131028 seconds)
    (50/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.826494171 seconds)
    (51/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.027718231 seconds)
    (52/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.060489433 seconds)
    (53/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.923700269 seconds)
    (54/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.469645653 seconds)
    (55/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.151858519 seconds)
    (56/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.927439459 seconds)
    (57/309) benchmarking ("sort", Bool, false)...
    done (took 2.161331476 seconds)
    (58/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.430684399 seconds)
    (59/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.331456923 seconds)
    (60/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.06946233 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.021716345 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 5.58574627 seconds)
    (63/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.00789006 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.693350134 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.175142207 seconds)
    (66/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.93772545 seconds)
    (67/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.162153389 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.078984533 seconds)
    (69/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.080328626 seconds)
    (70/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.942728779 seconds)
    (71/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.007669817 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.918770115 seconds)
    (73/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.01149776 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.05825773 seconds)
    (75/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.026135496 seconds)
    (76/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.925829912 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.954544932 seconds)
    (78/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.050343728 seconds)
    (79/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.253545158 seconds)
    (80/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.926324356 seconds)
    (81/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.921204341 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.313240294 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.236987599 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.9233206 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.922746993 seconds)
    (86/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 3.78016493 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.051378003 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.94413215 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.244169558 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.044574859 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.316679051 seconds)
    (92/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.924308582 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.14347293 seconds)
    (94/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.999817446 seconds)
    (95/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.943873958 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.315527118 seconds)
    (97/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.411280532 seconds)
    (98/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.94519536 seconds)
    (99/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.143595735 seconds)
    (100/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.115990085 seconds)
    (101/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.048852568 seconds)
    (102/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.88011353 seconds)
    (103/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.960084856 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.928084062 seconds)
    (105/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.998172929 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.054685833 seconds)
    (107/309) benchmarking ("sort", BigInt, false)...
    done (took 6.922282075 seconds)
    (108/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.005591931 seconds)
    (109/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.071116299 seconds)
    (110/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.291213775 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.235218147 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.922972876 seconds)
    (113/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.029137884 seconds)
    (114/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.054021027 seconds)
    (115/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.608087639 seconds)
    (116/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.016090822 seconds)
    (117/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.078043828 seconds)
    (118/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.929274373 seconds)
    (119/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.11647457 seconds)
    (120/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.926360352 seconds)
    (121/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.093774161 seconds)
    (122/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.057093033 seconds)
    (123/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.982580171 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.587269251 seconds)
    (125/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.01587452 seconds)
    (126/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.795549825 seconds)
    (127/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.121846078 seconds)
    (128/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.959726982 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.957362577 seconds)
    (130/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.922801531 seconds)
    (131/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.406055153 seconds)
    (132/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.929126005 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.183048645 seconds)
    (134/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.063903633 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.027835612 seconds)
    (136/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.081258498 seconds)
    (137/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.9322742 seconds)
    (138/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.130809833 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.181636949 seconds)
    (140/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.93122246 seconds)
    (141/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.544771975 seconds)
    (142/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.858970518 seconds)
    (143/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.951022547 seconds)
    (144/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.236322217 seconds)
    (145/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.927476613 seconds)
    (146/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 3.350124393 seconds)
    (147/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.94815516 seconds)
    (148/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 3.546456475 seconds)
    (149/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.115356306 seconds)
    (150/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.014260808 seconds)
    (151/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.136161031 seconds)
    (152/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.942315954 seconds)
    (153/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.946823771 seconds)
    (154/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.950119132 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.890742392 seconds)
    (156/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.953706686 seconds)
    (157/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.225013976 seconds)
    (158/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.579489353 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.209761977 seconds)
    (160/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.355747546 seconds)
    (161/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.05422069 seconds)
    (162/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.27201665 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.243099905 seconds)
    (164/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.414101469 seconds)
    (165/309) benchmarking ("sort", Float64, false)...
    done (took 5.717958193 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.024862227 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.928195016 seconds)
    (168/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.064925376 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.927568601 seconds)
    (170/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.368580865 seconds)
    (171/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.941630722 seconds)
    (172/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.127950486 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.54109036 seconds)
    (174/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.059593111 seconds)
    (175/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.990591633 seconds)
    (176/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.127025542 seconds)
    (177/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.039747967 seconds)
    (178/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.160791408 seconds)
    (179/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.009766838 seconds)
    (180/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.926994377 seconds)
    (181/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.929862755 seconds)
    (182/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.120213828 seconds)
    (183/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.296418359 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.932661976 seconds)
    (185/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.328327044 seconds)
    (186/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.944867061 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.926610867 seconds)
    (188/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.95687727 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.054391678 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.736492025 seconds)
    (191/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.197056986 seconds)
    (192/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.214683895 seconds)
    (193/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.930762706 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.497452663 seconds)
    (195/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.094868673 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.898858364 seconds)
    (197/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.044548425 seconds)
    (198/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.931775019 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.033467324 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.845907222 seconds)
    (201/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.725711792 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.818380385 seconds)
    (203/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.178645404 seconds)
    (204/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.952563584 seconds)
    (205/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.987563184 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.992647964 seconds)
    (207/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.700003038 seconds)
    (208/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.038727971 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.059708256 seconds)
    (210/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.05011614 seconds)
    (211/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.293976715 seconds)
    (212/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.089000032 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.296515754 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.192974349 seconds)
    (215/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.012241423 seconds)
    (216/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.436030988 seconds)
    (217/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.033195014 seconds)
    (218/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.285202583 seconds)
    (219/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.291760293 seconds)
    (220/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.378273268 seconds)
    (221/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.353910958 seconds)
    (222/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.933747968 seconds)
    (223/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.975743254 seconds)
    (224/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.577879745 seconds)
    (225/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.934762145 seconds)
    (226/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.260286295 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.586883242 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.253993255 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.928733682 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.930003126 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.192784452 seconds)
    (232/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.250357715 seconds)
    (233/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.604748159 seconds)
    (234/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.255110053 seconds)
    (235/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.865900831 seconds)
    (236/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 3.086371121 seconds)
    (237/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.208297245 seconds)
    (238/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.950164208 seconds)
    (239/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.026996899 seconds)
    (240/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.31385874 seconds)
    (241/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.019098727 seconds)
    (242/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.943303135 seconds)
    (243/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.023089975 seconds)
    (244/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.040610278 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.270875393 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.278796253 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.933125945 seconds)
    (248/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.384327158 seconds)
    (249/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.688765514 seconds)
    (250/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.815341254 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.177618487 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.382973931 seconds)
    (253/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.947625995 seconds)
    (254/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.388022817 seconds)
    (255/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.068748226 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.940108988 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 3.354210016 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.231065466 seconds)
    (259/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.275760858 seconds)
    (260/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.156581199 seconds)
    (261/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.388930704 seconds)
    (262/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.081090031 seconds)
    (263/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.197606601 seconds)
    (264/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.122852174 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.932472703 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.905042925 seconds)
    (267/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.853648384 seconds)
    (268/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.937398709 seconds)
    (269/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.154915279 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.243071317 seconds)
    (271/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.93942746 seconds)
    (272/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.930782843 seconds)
    (273/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.114492146 seconds)
    (274/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 3.100914842 seconds)
    (275/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.936327752 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 3.482196373 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.95282784 seconds)
    (278/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.235391978 seconds)
    (279/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.756216316 seconds)
    (280/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.090649801 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.933796599 seconds)
    (282/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.099962415 seconds)
    (283/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.141584652 seconds)
    (284/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.703241812 seconds)
    (285/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.066225196 seconds)
    (286/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.955669761 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.210040179 seconds)
    (288/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.110050279 seconds)
    (289/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.088344389 seconds)
    (290/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.119810593 seconds)
    (291/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.325413407 seconds)
    (292/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.994525861 seconds)
    (293/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.421825884 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.77959044 seconds)
    (295/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.683184464 seconds)
    (296/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.118519461 seconds)
    (297/309) benchmarking ("sort", Float32, false)...
    done (took 5.664180776 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.344327942 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.28415302 seconds)
    (300/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.472789014 seconds)
    (301/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.038338533 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.96330797 seconds)
    (303/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.947847852 seconds)
    (304/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.053817109 seconds)
    (305/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.937027881 seconds)
    (306/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.443164695 seconds)
    (307/309) benchmarking ("sort", Int8, false)...
    done (took 4.844021114 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.551481273 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.15586332 seconds)
  done (took 1024.734978923 seconds)
done (took 1026.641277617 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.963399943 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.956007937 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.93887811 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.95914129 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.051560485 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.982740133 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.951058958 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.942922186 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.988441515 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.987943243 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.936447221 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.981677161 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.939986416 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.93819775 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.938291547 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.955033903 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.231911712 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.964456144 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.956389693 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.951059959 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.956776497 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.938202987 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.988971012 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.9821977 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.943252055 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.943646166 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.942909217 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.958932122 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.051974772 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.94277094 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.943958427 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.952050204 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.232960942 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.96146996 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.937104054 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.95901155 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.95249381 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.95202491 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.943244559 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.973378004 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.319765231 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.970990912 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.941593155 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.940043413 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.939679726 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.947990083 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.940428697 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.948577651 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.956315949 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.956191912 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.315534992 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.989625071 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.945731186 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.941176877 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.954558743 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.941964704 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.94560808 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.959063198 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.961100584 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.956659039 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.220187053 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.971547601 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.946380197 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.959766539 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.950188749 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.350257196 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.972285348 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.948234775 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.320179594 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.98236232 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.352385193 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.98471518 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.943037893 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.956943698 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.974825353 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.233827118 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.964377378 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.946232423 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.951113364 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.939761379 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.953970226 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.957343185 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.9485576 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.942363582 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.958250097 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.986784769 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.954656341 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.942600787 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.953291188 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.962772692 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.951917959 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.956091484 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.946481119 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.941164288 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.954951575 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.947845793 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.946179449 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.947792534 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.947948095 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.957464476 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.320098173 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.9928048 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.941421089 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.941469789 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.943995038 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.959054023 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.321470544 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.978042649 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.967584104 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.993673871 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.944323844 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.223298054 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.972908812 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.961453044 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.955554806 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.947309558 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.942247351 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.22392312 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.341900353 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.991811993 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.945115765 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.942234799 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.961749847 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.945184514 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.942022997 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.236593026 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.971551699 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.960929445 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.067569317 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.958453079 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.977181737 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.943344669 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.948473048 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.989447623 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.961981796 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.977267183 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.947850157 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.961863617 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.962656626 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.941973392 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.957803879 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.958926488 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.946010862 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.953473644 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.942824816 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.989615106 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.96043859 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.960860593 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.966189449 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.068568691 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.942831685 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.224912071 seconds)
done (took 304.827748698 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.020360884 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.941511096 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.034013575 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.943525686 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.03059918 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.016087201 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.941480845 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.942538688 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.9423005 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.43788559 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.943686767 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.948958936 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.939972594 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.943023133 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.011751448 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.943318124 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.942597627 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.384870751 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.945854985 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.023636066 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.942995236 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.944242474 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.943987678 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.44470804 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.941365818 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.942505728 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.023461877 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.943506439 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.392892191 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.94374278 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.946022768 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.39359827 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.025480879 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.972867579 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.952491151 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.952033252 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.033211642 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.952959869 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.010075309 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.010773349 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.036410728 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.979459704 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.944914753 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.942643454 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.945943099 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.946016576 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.944320648 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.974363056 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.944377499 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.953731415 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.38682253 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.950881982 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.950851718 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.945295279 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.945041258 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.975714439 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.945563072 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.946689308 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.02522359 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.946856705 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.012327366 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.447925768 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.441493695 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.946886279 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.946314215 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.947555684 seconds)
  done (took 190.240188767 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.01307055 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.023357226 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.011727659 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.949781724 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.995547792 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.013292505 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.949231644 seconds)
  done (took 15.832583405 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.954063912 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.947613812 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.998396416 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.996296108 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.946098738 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.123471529 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.95814411 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.951216155 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.973439598 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.948370064 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.583128646 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.99668781 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.953173828 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.945473713 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.959007362 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.003758998 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.949193978 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.948316502 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.061962793 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.09592168 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.952580905 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.954240375 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.973962143 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.959350745 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.947182102 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.94918153 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.947533528 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.954520096 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.947595139 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.950079561 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.946568741 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.999712883 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.946374719 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.946542256 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.94781992 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.949355283 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.948573081 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.948445103 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.948170979 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.948801353 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.948118084 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.948051526 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.948154822 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.948278278 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.947944296 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.971474637 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.948967369 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.950235866 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.948738314 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.94955939 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.975176444 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.947643335 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.948849451 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.953795269 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.992325955 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.956037527 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.948741002 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.949201981 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.949103378 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.950032375 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.948897433 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.097603356 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.998867654 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.949578817 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.999415793 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.104138126 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.949441364 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.948748962 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.949587566 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.041102285 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.949551268 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.000718084 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.948790174 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.063294473 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.949597895 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.127949975 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.97171851 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.95397875 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.953184919 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.95062803 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.957474972 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.950680296 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.954566007 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.957038269 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.954741864 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.950810844 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.950289979 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.952775054 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.958784206 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.950587819 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.998526429 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.951261588 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.950302856 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.090275927 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.950640728 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.067144938 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.978391988 seconds)
  done (took 213.701586002 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.957571151 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.95697378 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.952533282 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.966177048 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.952696672 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.951301651 seconds)
  done (took 13.618897477 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.953685064 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.953742498 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.951627142 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.950711813 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.950347907 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.952659376 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.951301344 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.95386748 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.956268549 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.951098231 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.952473256 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.952953206 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.951772002 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.951593717 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.952041568 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.952273123 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.952036327 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.951435202 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.951315141 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.951763336 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.159274664 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.951542039 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.952364281 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.958432162 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.955451112 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.952512985 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.964842124 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.951533896 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.952108775 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.959368845 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.956308769 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.952417467 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.956373101 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.958581382 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.956406128 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.957317311 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.956739098 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.953891425 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.95340163 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.953363729 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.955123517 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.954189815 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.953493709 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.954757207 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.95507988 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.960353061 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.957777291 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.966605494 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.954269709 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.95581275 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.95446204 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.953060592 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.95374911 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.955785503 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.959465931 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.959180673 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.961064983 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.953900663 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.953926155 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.958188384 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.956771805 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.954586244 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.956692532 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.958063768 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.961202727 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.955410218 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.95864426 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.957639198 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.954357321 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.955962745 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.955838566 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.955135057 seconds)
  done (took 143.850274866 seconds)
done (took 579.129633945 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.21576463 seconds)
  done (took 9.099431598 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.079610947 seconds)
  done (took 9.02242005 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.189494967 seconds)
  done (took 10.075864159 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.978545425 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.994100352 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.96790444 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.957471125 seconds)
  done (took 29.79664317 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.297216198 seconds)
  done (took 9.181626649 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.975457169 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.952855144 seconds)
  done (took 15.874600431 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.042045466 seconds)
  done (took 8.927311755 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.235245572 seconds)
  done (took 9.1286078 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.957189142 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.96499016 seconds)
  done (took 15.826627803 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.964793313 seconds)
  done (took 8.85006926 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.140122838 seconds)
  done (took 10.05574948 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.982299145 seconds)
  done (took 8.931281294 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.005647528 seconds)
  done (took 8.891148184 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.782800687 seconds)
  done (took 9.668044707 seconds)
done (took 165.213951411 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.969847503 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.956325822 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.959325011 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.958267929 seconds)
  done (took 29.729320728 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.991831777 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.992167688 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.001505925 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.993079356 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.981021443 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.982403866 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.992196238 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.991641156 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.983154802 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.989516122 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.992277194 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.992038278 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.992537694 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.001959056 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.001290079 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.991791756 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.993433203 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.993977003 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.984022163 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.000966081 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.991889786 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.992877472 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.958800759 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.958793739 seconds)
  done (took 49.631228754 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.176608408 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.043944366 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.126344619 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.030292839 seconds)
  done (took 10.264280035 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.958509362 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.035433507 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.026584273 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.015036231 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.018469345 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.073774409 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.02806668 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.099621992 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.086676218 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.088606673 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.96647316 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.98078096 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.982748746 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.014274629 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.073650088 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.958114023 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.960298681 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.078656537 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.035700575 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.254169753 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.958833028 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.027000263 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.019119958 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.02721231 seconds)
  done (took 50.655794033 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.960678845 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.967115309 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.967518897 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.961190699 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.961395124 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.961059078 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.968356843 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.963267957 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.982547799 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.962944403 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.960871189 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.961504377 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.966785499 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.961048451 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.961591202 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.973625543 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.975690981 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.960811378 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.964648773 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.967467512 seconds)
  done (took 41.198465017 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.959020186 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.219411926 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.302813711 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.211058851 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.959767058 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.961254512 seconds)
  done (took 32.502592209 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.972327231 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.966143146 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.960185927 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.015256139 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.096833475 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.964809346 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.961357301 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.970667457 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.002000404 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.021490463 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.980569342 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.987703364 seconds)
  done (took 25.790714378 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.960668271 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.968317021 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.961898636 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.980653289 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.973598556 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.970227999 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.971452574 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.963223692 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.976812201 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.981033892 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.970179186 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.974949578 seconds)
  done (took 45.545750418 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.670026268 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040523398 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.963794303 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.98899822 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.396463852 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.877050818 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.868207481 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.697067236 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.515760321 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.89675995 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.173704848 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.971418876 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.059371932 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.972627429 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.242499703 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.430764562 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180546199 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.216268539 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.971858192 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.051402441 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.174610027 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.185765386 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.259123681 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.972555532 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974919957 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.985003397 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.508611142 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.760291623 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.078849556 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.264673464 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.294618251 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.918913457 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020008103 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.977705459 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.989423243 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97517945 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976698001 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.24494228 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.980592556 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166270783 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042714967 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.221850538 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978034706 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.3852789 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.678117741 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.26220327 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.088381091 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.9723012 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976629987 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.973409208 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.900287994 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055124154 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.975080839 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977900644 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.673666977 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.973456812 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049575529 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.975804864 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177997023 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.786383618 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.657589799 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.976738814 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975811191 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.528183568 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.979488073 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.163786382 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.604166849 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.421248281 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.395526453 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.07276499 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.976001487 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.976222009 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.181606438 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.0180574 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.599686303 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087225162 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.112366549 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.993881998 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.615697223 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278246542 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.392893967 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.540286204 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.893531754 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24933583 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.811297206 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.042566104 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192195974 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.823114242 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.900696206 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.180992231 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00792542 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978638002 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.239078298 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.603524982 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.162408856 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.991167435 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.407393882 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994523997 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.980658434 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977848813 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.190986168 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417190616 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.075046712 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.096780276 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992621123 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.059077412 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.902488403 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.991785303 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.977456895 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.859301728 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.976900993 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882179894 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.10471119 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.853607775 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.096226984 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.918608834 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980066606 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.979723603 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090602963 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.92702311 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217220647 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.271115667 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.623088258 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893526983 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.19006431 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.331473137 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211388267 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.982435295 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.193686889 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.505901311 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.377516268 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.035986716 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.257550567 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.035309108 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.264217746 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.401109901 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043692144 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.660106717 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.582525562 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.195043772 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993376037 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.980712886 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.982359222 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98476889 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.914853726 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.859733188 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.339420669 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.150313012 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.193263967 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.451335581 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 5.042157073 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.898383728 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.367997822 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.117401883 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.979578479 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.614299225 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 6.256921832 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.760516554 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.067106893 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.171919728 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380503269 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.019571968 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994135878 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072208191 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998162869 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.994465686 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.257756405 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.346922352 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.982760465 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.982612515 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.930326092 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.98579591 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.983158892 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.533671368 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.948359095 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.987982114 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.992556328 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.855753851 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043233107 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.984861657 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.985116259 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.550766483 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.502421152 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.987494584 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.65508359 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.990724582 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.13164908 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.246029999 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.308607178 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111715521 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.683896869 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.365843941 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.091263966 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.683104486 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.908855478 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.982523868 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.92390558 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984812645 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.98243793 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988152783 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.170670456 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.254526327 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280356339 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.44212695 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.045197406 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186555013 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.604250132 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.006774889 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.985248255 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990161297 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.985763549 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.983294804 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.485176381 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.529086877 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.980046457 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084487495 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.98870582 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111223287 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.995233864 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.909490281 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.984640892 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.985442516 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.455805046 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.081954572 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.93199035 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.263100152 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.712664223 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177187417 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031418272 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.996171443 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.98960656 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.645563944 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.0946132 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.912166027 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444781891 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09862644 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.592556312 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.731133316 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.537907885 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274139322 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.290748762 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.302343316 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.051185177 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.197887844 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.069926505 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.041245306 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.075914852 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.919840547 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.912461027 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.620792342 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311627153 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.308032712 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996141121 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201646245 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.593801947 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.28830455 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014969142 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.857560839 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364082816 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.959364984 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002646491 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 6.429513962 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.17051109 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071549976 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990049778 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.937022882 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.318298702 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02701598 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.687972507 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002021458 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.339491044 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.444429769 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.220806143 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.332386981 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199361614 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.995059895 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.331876666 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.230891132 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.104403591 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.992368249 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.9597618 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.210755576 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.569499995 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.86016996 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99315834 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.27422806 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.354240029 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.902793926 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.989573786 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.262987517 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324774926 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.988477785 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.301686969 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.353107171 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.090994291 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039419856 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.214026082 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.764462317 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362899458 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.541112127 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.46239646 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.001955268 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.913987662 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.68808755 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.197364745 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.990667973 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.957769512 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.192897019 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222315892 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.671570325 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.211673403 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.234583649 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.001973948 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.252657175 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061612712 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.088371166 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.271255071 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.436143815 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.233937134 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.219285541 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.549215 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.209005853 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.438531373 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.136879699 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.994722176 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.197380697 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.208322424 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.206888126 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.340469618 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157062428 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.700921039 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.997919888 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.200297966 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28398325 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.049253741 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.339088187 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.16815832 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.079336225 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000840497 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067610605 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.996853708 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001499417 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.337462162 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.519254557 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.006364783 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068994892 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.99414438 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.558822087 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.001727116 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.999948048 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256549249 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336289778 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.316599172 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.974000628 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.994195125 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.99634307 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121574818 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.922084367 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000776155 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.265768829 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.996425147 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.529140009 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.222979265 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011298852 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.283783527 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.38673003 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.68442855 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.107621554 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99998642 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.20286727 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.28724852 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.219060919 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.188167523 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.265978262 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.325466823 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.026415541 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.34653653 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24122423 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998107533 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 3.021613331 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.998262676 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115277829 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.197727674 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.261203122 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.498928383 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.615623229 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.334873928 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.849513806 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.998337051 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.665583267 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339189272 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.258935433 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.043877862 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073620588 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002606347 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.468996477 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.799070529 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1271109 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.884052666 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.925188392 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.006510001 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.277382281 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.238709761 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.706170842 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.99961508 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266675296 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29672062 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263715504 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.044438997 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.87225955 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215411443 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000189421 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.008153151 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.216063688 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.204773962 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.240131713 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000060801 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.998612783 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.803804344 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.92426606 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.998981885 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043411023 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.223551711 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015539076 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.512485149 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.697322854 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.271216632 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04391636 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000787288 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.264967717 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.507550657 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.538466664 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.009011742 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.210187166 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.932986707 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.376120781 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.999084621 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.451201308 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.381517825 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.999034257 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.660578018 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.322143835 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.271028133 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.934418391 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.010884241 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213663737 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.890115918 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.000245969 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.982022529 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454429656 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310004282 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.733941657 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.554459409 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.001430709 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.001183742 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.457978163 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109098524 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.457574428 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.09651037 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016459864 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.518450567 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.697107281 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.285625496 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.245109849 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.567399124 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.674422275 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.000623317 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.998428811 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.00234765 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.917505836 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.186704232 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.189683789 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272608787 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.031056708 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.465089608 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.114453396 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.345078075 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123551708 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283926379 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.117179207 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.520204144 seconds)
  done (took 1723.75523363 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.00903834 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.040798316 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.024652264 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.026036381 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.047806877 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.020678682 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.05117452 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.079294888 seconds)
  done (took 58.226294407 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.001338784 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.10134725 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.006624097 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.004593271 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.007005717 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.002361634 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.16463319 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.016036546 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.006044493 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.006797167 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.003828404 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.001511601 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.302884003 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.023860875 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.00167931 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.001872234 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.006671078 seconds)
  done (took 76.623962277 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.004223193 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.325613378 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.039881028 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.002970855 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.453172219 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.009723776 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.105151779 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.050546975 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.061107067 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.209925276 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.292907178 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.048683886 seconds)
  done (took 91.533641144 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.014772314 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.004602985 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.005356109 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.004813573 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.005318713 seconds)
  done (took 11.974748479 seconds)
done (took 2249.397885867 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.233034267 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.06287839 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.104087533 seconds)
  done (took 6.096851571 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.151413948 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.197154918 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.308532672 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.069063074 seconds)
  done (took 10.664477551 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.311841952 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.384923095 seconds)
  done (took 6.627860704 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.322319226 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.026329025 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.381302801 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.006776675 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.008814924 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.008491915 seconds)
  done (took 22.959842516 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.005272114 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.005749326 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.006525274 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.007252212 seconds)
  done (took 9.955726997 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.008570815 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.728688189 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.008415105 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.019381576 seconds)
  done (took 21.69867159 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.155685851 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.123077398 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.150261701 seconds)
  done (took 8.362672445 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.198812271 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.318698992 seconds)
  done (took 7.450726438 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.148997675 seconds)
  done (took 4.082314874 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.036435276 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.278049033 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.493076593 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.520541176 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.580873555 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.894037901 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.31638121 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.231554675 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.445146025 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.448289775 seconds)
  done (took 26.178671661 seconds)
done (took 139.972043686 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.33778379 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.027241772 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.205784194 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.349143696 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.238972469 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.205716671 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.225770464 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.336829518 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.026487583 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.015858164 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.35252826 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.244922814 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.173278612 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.025746379 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.185243143 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.026527316 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.22906153 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.357350413 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.064967406 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.32255045 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.242638292 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.002017111 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.197727054 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.018085705 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.231312795 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.158875124 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.549565184 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.028668371 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.211312637 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.557051717 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.162982855 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.462707437 seconds)
  done (took 172.710006822 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.011161885 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.010992869 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.011550767 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.01048803 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.575877071 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.011568577 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.008580366 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.00967735 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.439428774 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.43899382 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.011007357 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.549570589 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.010657358 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.010281499 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.012759886 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.010772536 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.598911633 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.011321735 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.012126639 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.009966153 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.010127202 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.384734627 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.011364781 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.395517242 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.593281478 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.011436892 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.011016807 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.012511246 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.011869374 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.010998795 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.012615351 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.011916973 seconds)
  done (took 214.182235544 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.937040083 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.013099791 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.012347997 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.012151075 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.013070611 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.014408245 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.013516494 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.0120709 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.585950173 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.580768973 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.013792498 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.013294512 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.012914054 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.012174947 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.014103995 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.013011272 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.012567971 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.976837912 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.01360578 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.01419807 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.013010336 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.735019178 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.016265104 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.750640044 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.017569852 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.014630102 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.0126318 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.013289743 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.013562816 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.014756913 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.014681009 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.013848654 seconds)
  done (took 224.859615947 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.252193539 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.013166495 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.014873418 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.920090014 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.015180393 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.013113793 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.007526196 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.259519268 seconds)
  done (took 20.437148057 seconds)
done (took 634.133562864 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.39652761 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.241544976 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.168770792 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.039748937 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.289944612 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.081295706 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.034424196 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.100424804 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.867315106 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.112054229 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.667811986 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.057200525 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.766474538 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.063794732 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.13858059 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.093944351 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.585420484 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.681417876 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.157925081 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.109924481 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.190514637 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.952322732 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.11787676 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.900510314 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.68674864 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.003687006 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.086931393 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.593501052 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.04798633 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.171476444 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.719094841 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.327504382 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.051543149 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.033545919 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.08801408 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.066902937 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.260429029 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.049370966 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.139906702 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.744687975 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.113113748 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.761291469 seconds)
  done (took 108.703122808 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.032658563 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.024345182 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.024410771 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.023667538 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.033290432 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.024790252 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.02512432 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.025156353 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.025453075 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.025205287 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.02473303 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.034125344 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.024875816 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.034126286 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.025452135 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.026215003 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.025174044 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.034072477 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.025707786 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.024532843 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.025735763 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.025298868 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.017862332 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.026427256 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.026041861 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.026595545 seconds)
  done (took 54.645844094 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.018003438 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.188398238 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.266248079 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.039180827 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.01893534 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.021211169 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.035877075 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.02338011 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.020076674 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.0206002 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.12261183 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.024222712 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.035525158 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.263819058 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.035296394 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.018928954 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.018473703 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.025452011 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.196969673 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.034587156 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.039035013 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.024311391 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.037958224 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.032261146 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.021273163 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.020422827 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.022813586 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.454444942 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.028391914 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.122432994 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.063437139 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.043650837 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.420678517 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.272254364 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.074478005 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.026876313 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.019276915 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.127573842 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.027122702 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.020566297 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.038646814 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.026462938 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.262495093 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.537770178 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.036038716 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.021393804 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.466077075 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.137009014 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.063955443 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.030707634 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.266202345 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.038665076 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.021643781 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.022152181 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.058879627 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.028200649 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.020881368 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.34173788 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.033117712 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.038779105 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.028746868 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.022167271 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.202119868 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.03178611 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.190385909 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.033728669 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.028153037 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.023219094 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.26641612 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.038920944 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.557358954 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.034957217 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.020363972 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.123973001 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.196396461 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.489928426 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.033123549 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.203780297 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.435694876 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.045456874 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.02791619 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.4453591 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.048712396 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.028133164 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.02222265 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.022800708 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.021369483 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.066379597 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.037993522 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.47020931 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.55231525 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.357687548 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.047991221 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.038506624 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.021969875 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.339372483 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.029505409 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.021587382 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.257656907 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.557795829 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.037956981 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.030044079 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.53551262 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.03829527 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.042145509 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.030153396 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.270541239 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.038351703 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.068787127 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.022928631 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.028998152 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.025736815 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.042058568 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.029493704 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.022158954 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.523306883 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.147218852 seconds)
  done (took 250.121169304 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.022828544 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.024331852 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.020866686 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.023696701 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.021988768 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.022964912 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.021810701 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.022020576 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.023994517 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.021602794 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.022111087 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.023942289 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.023178754 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.054741496 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.61074984 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.025509494 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.628159642 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.023393607 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.023674256 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.026954581 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.704504408 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.027951385 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.024220437 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.027846641 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.026351696 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.024905282 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.025345025 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.028756411 seconds)
  done (took 172.529560283 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.0252745 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.207928309 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.046974349 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.054908107 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.034453397 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.025253911 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.165170144 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.050512341 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.030401027 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.02553165 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.025649196 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.085373131 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.037171453 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.124645846 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.059988752 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.133374151 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.134471955 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.033416709 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.02587161 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.025399917 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.05562577 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.034891993 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.085579773 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.148520401 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.045823804 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.138690489 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.046425745 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.02716157 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.026177542 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.138397022 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.048818518 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.087020991 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.056652617 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.046523396 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.144858657 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.146911931 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.134752798 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.134498039 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.035514885 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.028322549 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.027837415 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.029459633 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.140037788 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.046987778 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.02900562 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.143380835 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.046574656 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.028081196 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.027856212 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.028003341 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.040770616 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.045437581 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.091700087 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.156706446 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.065278722 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.051550255 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.127491928 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.161784481 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.028576328 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.126777055 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.038058827 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.141126568 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.050196258 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.02950936 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.029417243 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.031542373 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.057848015 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.135501676 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.137184801 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.037277852 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.127763122 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.067304252 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.036416235 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.029365578 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.029218112 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.141512482 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.148971622 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.068445708 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.066051616 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.060893331 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.038816517 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.030282854 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.031387873 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.047941437 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.035116206 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.143437592 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.150326617 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.038272833 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.031108959 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.031301062 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.03114665 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.055890836 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.150485246 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.069324608 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.137280293 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.097056125 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.103122204 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.043660128 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.044605716 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.034984343 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.092322264 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.04404547 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.042292191 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.333201558 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.090020291 seconds)
  done (took 219.771577447 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.397119511 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.079827614 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.088013553 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.355620888 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.415995755 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.262443908 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.075807868 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.077730228 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.10211057 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.26618282 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.153509386 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.096254674 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.0658192 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.052805041 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.079243652 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.099000226 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.086412322 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.425072613 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.28926553 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.245550132 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.075128286 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.370409129 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.421687018 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.6527012 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.129220124 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.490203555 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.66278798 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.215021784 seconds)
  done (took 66.69349846 seconds)
done (took 874.406374027 seconds)
SAVING RESULT...
DONE!
