cset: moving following pidspec: 32677
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.192951283 seconds)
loading group "string"... done (took 0.537978049 seconds)
loading group "linalg"... done (took 9.649174103 seconds)
loading group "parallel"... done (took 0.163458496 seconds)
loading group "find"... done (took 2.594845895 seconds)
loading group "tuple"... done (took 2.143895114 seconds)
loading group "dates"... done (took 1.415430901 seconds)
loading group "micro"... done (took 0.193706127 seconds)
loading group "io"... done (took 0.507914799 seconds)
loading group "scalar"... done (took 53.708655201 seconds)
loading group "sparse"... done (took 13.956501243 seconds)
loading group "broadcast"... done (took 1.31180243 seconds)
loading group "union"... done (took 10.368895165 seconds)
loading group "simd"... done (took 3.59762013 seconds)
loading group "random"... done (took 13.429162815 seconds)
loading group "problem"... done (took 2.216841401 seconds)
loading group "array"... done (took 23.642526121 seconds)
loading group "misc"... done (took 1.1374855 seconds)
loading group "sort"... done (took 3.784718155 seconds)
loading group "collection"... done (took 20.674179028 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.750725075 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124165021 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.206388675 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.206117203 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.278591572 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.167400198 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.167255556 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.162239835 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.627887667 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.208967774 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141520371 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.382209637 seconds)
done (took 6.143533267 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.290911435 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.065387644 seconds)
    (2/2) benchmarking "String"...
    done (took 0.198658084 seconds)
  done (took 0.930203275 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.081078048 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.165214655 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.111341603 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.098975505 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096940889 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.112179908 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.097629244 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.113391235 seconds)
  done (took 1.461958186 seconds)
done (took 3.43129032 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.498657267 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.883672987 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.5053225 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.192200069 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.309691966 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.310390588 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.277269197 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.233251658 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.094967943 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.090859598 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.264094477 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.422685175 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.431919031 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.957196652 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.074556059 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.097913569 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.162628362 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.787676352 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.086261877 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.114626378 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.521298134 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.222138933 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.119718366 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.111582206 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.190235573 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131235823 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.145615654 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.10587743 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.678114026 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.13882764 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.215193217 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.087411883 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.144668326 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.174188701 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.222741453 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.114932143 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.690430885 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.204856777 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100906198 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.104207037 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.695333115 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.1225857 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.213364423 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.108652015 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.073320358 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.168083246 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.116987223 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.082672035 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.098176241 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.104889805 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.161664133 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.47289554 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.110401749 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.200361722 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.097246794 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.713332471 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.101816509 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.278226162 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.134775589 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.097757473 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095424565 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.093855092 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.160181473 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.098730572 seconds)
  done (took 20.509617809 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.194794045 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.210653184 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099610292 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.148480194 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.145497342 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.084119007 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.092066945 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.100758064 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.119213134 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.200156738 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.130308819 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.21838189 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080072962 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.110590041 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.188460837 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.239975768 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.113848975 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.127271282 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.096074787 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.097801403 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.147646289 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099618115 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.11535608 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.100417518 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.174426371 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205586688 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11220079 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128000914 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093302228 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.102636934 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.147076245 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.155454614 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.099862978 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09274678 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.178302702 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126267803 seconds)
  done (took 5.565873984 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.237486275 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.107362465 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.251575218 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.193048362 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.134079341 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.182029433 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.197498579 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.306261362 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.261261785 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166741315 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129601257 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.106270288 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08328608 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083161413 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.100602388 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.849202053 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.158423986 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.162590927 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.189649955 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099119378 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.101186052 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.373108689 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104387646 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.090064875 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098065473 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.085778296 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.22788708 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0978512 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.476652373 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086647611 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.117971845 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119364201 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.215513649 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126116946 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124613053 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114382771 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.08921777 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.21186982 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10148155 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09812833 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084407312 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.126199078 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119562201 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136051169 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095153232 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.126819129 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.137481868 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.089819592 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112396834 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.091671714 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197265519 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.16658068 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.105794319 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.280212449 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.11044114 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100101417 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.112358283 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086847566 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.837346495 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.126913625 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.102938928 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.08331667 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097300711 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.099336095 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.46073289 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106829716 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.478634329 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085597547 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.161649537 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100216306 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.119194696 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089645967 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087931712 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.126749288 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.200458033 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.088648773 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082766112 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.107265665 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.084576817 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.09225817 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.134778941 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.089415561 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.099396787 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150700589 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.103582376 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.125049073 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114016734 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.107583863 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.089306329 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13084562 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084757985 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.092341211 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.206375196 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.115597032 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.116924646 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118279566 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145637445 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.091300577 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.300859627 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.099467328 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.087344626 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125557307 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.10419237 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130278788 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.101885093 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08375227 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103617506 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.083689134 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.086319217 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162560407 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.090764335 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084622284 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.108930472 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097436831 seconds)
  done (took 27.90612263 seconds)
done (took 54.645291488 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.805302266 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082141242 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102194071 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083979464 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082983458 seconds)
  done (took 1.890366645 seconds)
done (took 2.608049879 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.187594177 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.270255876 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.201328465 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.131433753 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.152925313 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.171882961 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.155636551 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.172499939 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.151520385 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.172045481 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.171634256 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.109660872 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.178296067 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.186933687 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.104345113 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.208543698 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.105648839 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.152016049 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.107946129 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.176612682 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.105976465 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090082545 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091806297 seconds)
  done (took 4.289568388 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10781818 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104235183 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10768164 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.125005771 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09040137 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105946434 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.123929447 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110898041 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105647723 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.117151351 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090833967 seconds)
  done (took 1.914306701 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.104524954 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102481607 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096642387 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120974183 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090725434 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10255117 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120263896 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115055972 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103910699 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.117900957 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091018698 seconds)
  done (took 1.892849294 seconds)
done (took 8.81366129 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.185396132 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.825369414 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.185627866 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.253200494 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.333033481 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.301521653 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.609138495 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.205654993 seconds)
  done (took 15.73036236 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.222362006 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.095835092 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101550623 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.095560545 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.118012423 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.096287524 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.094427022 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.11791737 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099739709 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.094215542 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.114384517 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101738007 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.10088343 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.09674701 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.111089825 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099803683 seconds)
  done (took 2.537909814 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.139505031 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120104449 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.120145027 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.10336468 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.098928432 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.122387979 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10652423 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.10131428 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.11596761 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09959814 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.105651355 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.118420505 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102412813 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.097464909 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.120356646 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.122833288 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.098638241 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.118861274 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.120862576 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.102773474 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.119862379 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.100263937 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.117087585 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104436954 seconds)
  done (took 3.466933889 seconds)
done (took 22.460061996 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.155666653 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.105689906 seconds)
  done (took 0.991398348 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.171923888 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.186214741 seconds)
  done (took 1.092935421 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.117299972 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095320222 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.142489139 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108726047 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.094202691 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.111186066 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120871726 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.111316879 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096654889 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096217612 seconds)
  done (took 1.835246019 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.099698083 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.099619372 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.125081339 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.164539848 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.120538792 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098579575 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.098121346 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.114932841 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.100844249 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.095852063 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.11755182 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113834658 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.0991536 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.132362014 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.100155823 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.116726576 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103860973 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098329893 seconds)
  done (took 2.741544858 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.094878686 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097331022 seconds)
  done (took 0.933553422 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.098000312 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094965359 seconds)
    (3/7) benchmarking "month"...
    done (took 0.096538463 seconds)
    (4/7) benchmarking "year"...
    done (took 0.114483623 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094918425 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094053161 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.111169304 seconds)
  done (took 1.444655497 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.524599532 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.241759863 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.374533102 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.078741926 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.12694212 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.334088993 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.109660035 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.077919336 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.096378248 seconds)
  done (took 2.729499261 seconds)
done (took 12.505070093 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.096629746 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.212499229 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.604721732 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.134391043 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.096106635 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.155968717 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.351875403 seconds)
done (took 2.399055983 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343971744 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.183769039 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089098411 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096800578 seconds)
  done (took 1.45741089 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.087402665 seconds)
    (2/2) benchmarking "read"...
    done (took 0.104410554 seconds)
  done (took 0.943400554 seconds)
done (took 3.153549973 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.115736714 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096444317 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.113475883 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098313759 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.099041855 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.113275508 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.098178895 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096355409 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.115720651 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.097268794 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097764597 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.114589851 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.095305486 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.098234559 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093744184 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.115488429 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.216367318 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095444539 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111785304 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.0997256 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.097140286 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112550555 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.098404413 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096984889 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.115009807 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099791042 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.094395873 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.112788225 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098371587 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097257549 seconds)
  done (took 3.949001616 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.10130101 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.090593992 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.09320885 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.117552029 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.091953034 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095168247 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.107019475 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094831822 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.094819181 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093902653 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.112728441 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094473676 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.093817098 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.112149457 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.095207079 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.096584419 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.119609972 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.094594292 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.093945535 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.094133828 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.113712784 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.097250565 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093546044 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.111467667 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093695364 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.091182266 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.093843079 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.111900333 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094918146 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.094218825 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.113423222 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.097013663 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093862844 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.119578475 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097489004 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093740413 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098394845 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.108212714 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096072623 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.090928183 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.10934931 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094311224 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.093903492 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.116506016 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.095083669 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.095287396 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.093717713 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.112635412 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.096918749 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096161949 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.10819211 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094792152 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.096869371 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093950635 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.113867972 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.092611428 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.093986323 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.108607526 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095988603 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.09370172 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.107302612 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.093282812 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09837068 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.094148844 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.126451555 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.100682915 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09415506 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.112716918 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095757847 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.099175042 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.113602225 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.105459012 seconds)
  done (took 7.984030232 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094704222 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09602953 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.093289308 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.110538218 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094690324 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093863682 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110790974 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095371904 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09423412 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094145561 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11099959 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095874622 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094086056 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11017225 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094569428 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.094141161 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.093720577 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110788948 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.095440488 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09310318 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094962704 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111163997 seconds)
  done (took 2.939764897 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.236977342 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101687163 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143632232 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.125875225 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112645121 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.125579307 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.099736495 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100717347 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11561589 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105998955 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104031106 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116692632 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113390048 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.121029218 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104370744 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105530738 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115887991 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105196059 seconds)
  done (took 2.918720391 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09443645 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094313599 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.093730984 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.111277628 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094224132 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09424739 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093443168 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112418905 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.09549671 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093210596 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.111931482 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095446355 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094856127 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094790336 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111308079 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094737117 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094132571 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111205552 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095345923 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094463968 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.093053313 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111342441 seconds)
  done (took 2.94593265 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110101781 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096095879 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.132051708 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100762045 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096482032 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.113153845 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.101988668 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096684222 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.120052907 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09748593 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096933695 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096025549 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.128801574 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097731702 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.101843886 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114744899 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098294972 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.097130298 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113889134 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.096788705 seconds)
  done (took 2.874634616 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.190865263 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131476565 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113931108 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119173884 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130523651 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.113200708 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.137645437 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113721864 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111621806 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140317634 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112820841 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111447831 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137469995 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117673763 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129523593 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121419071 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118794995 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136818446 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111976949 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129630451 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124463454 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111690599 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.140309183 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112719152 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.130226686 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113799039 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112306041 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.135736395 seconds)
  done (took 4.28196351 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.108039088 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105782166 seconds)
  done (took 0.981431926 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098891975 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098305029 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.096057676 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.113857635 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098413842 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097192248 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115417331 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096951714 seconds)
  done (took 1.585603868 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.188897694 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.213461852 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.11980944 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10741345 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.211600721 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.191014374 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133377995 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103107595 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.114455476 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.090504875 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.203454923 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.086989414 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.113676816 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094269739 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.095630945 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11986203 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097947511 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104015602 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.118895147 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098970197 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101495519 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099440787 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.116595832 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.106323786 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.088923458 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.116894544 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.099478362 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.123812532 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09307252 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.09726593 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.112191921 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.097970978 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.101111391 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101519684 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.115837984 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.212755477 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104102903 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092915446 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.115572308 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101363239 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12708327 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.116208702 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.098272203 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.095601753 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116927858 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101038197 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102463309 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.115465451 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.090118233 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.092225415 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096805397 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110511958 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097311258 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.097037479 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.115200403 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102422312 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.098257188 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.111339368 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.093619866 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.092014913 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.113165298 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.094705619 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098295181 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.119101807 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09838395 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.096033511 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11503041 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.098620641 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097656483 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.115369141 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.096404159 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111400898 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.117105604 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102487753 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102116408 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.117143598 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094953835 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102505703 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113421477 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.097731982 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101079823 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.142570644 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099067137 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093144875 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.110390085 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.103471678 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099511816 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.09940468 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.108795189 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104848598 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098740768 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.116506925 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.090613967 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.095031847 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.111224829 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100540718 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.090225929 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.116050302 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.096626185 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10300444 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102151048 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113641825 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.098200337 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.12045596 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103540681 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.096129892 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.16708249 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094989524 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.093216812 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.117594493 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102192115 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.091458069 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.115508893 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.096648604 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094177898 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.111717768 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102193442 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.097428381 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09886348 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.121116729 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09945308 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.099106737 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.118752461 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097584406 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.092544799 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.120418874 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106651063 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.098044381 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.118421343 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.099201302 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098683359 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.115573007 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101545874 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.094057142 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120846862 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094063149 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.097242394 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098456095 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.122485129 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.097792464 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.092590475 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.114799096 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.097973772 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.095888311 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.118317699 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.097897366 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.092978933 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.108510516 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.098013512 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.091422938 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.118052233 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10712696 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.093705701 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.118691839 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.093042628 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10468496 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.112719502 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102279347 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099515867 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.12129636 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102072547 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.090370221 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093912361 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.118226277 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.098743422 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.093418932 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.118930906 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097888914 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.104867735 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.110454967 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101141354 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.089275878 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.112595952 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103602142 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098773315 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099873594 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.112281876 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133148147 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.128431486 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103033354 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.097267816 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.11686975 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10325049 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.096445295 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100499651 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122000081 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102970846 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094882736 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.114995489 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103583493 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.093739294 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.118930976 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096496559 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098385276 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.109467272 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.099766807 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.089870647 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.122336995 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.099965575 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.103350084 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.1022475 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.119633859 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097831575 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106733056 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.114725133 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.103582864 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.090475612 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.123031009 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.108776822 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.104332681 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122860456 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.099302782 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094825396 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.11994123 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107612497 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100003988 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.11734935 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.100428204 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.090822025 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.092400158 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.124063961 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.101365684 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.093247961 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.117445102 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099719873 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098524331 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.115003591 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.090894659 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101359677 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120794481 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.09405784 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100968706 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.113011787 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.096405555 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105615875 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.111203596 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.093668336 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.099034172 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.121369135 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.098210883 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.097696153 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099764572 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.125194482 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.101244928 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100814705 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115661147 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105551551 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09506572 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.116501896 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.094333504 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100919956 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.110834067 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.100563207 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.097650756 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.113862803 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.093766323 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100595194 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10255096 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.123120964 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096553061 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103016243 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.123031567 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.104554636 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095989511 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.122855148 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.095499295 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.090983567 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.113817267 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.092492768 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.099924369 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.113358689 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.104887221 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.096579251 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.116872125 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.1025643 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100212325 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.114355464 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.106015856 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110155279 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.111166022 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.093011898 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096988102 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117515223 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.095216857 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.095589321 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.101211893 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.120056747 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104730846 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.100196959 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.114786314 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.102096502 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.104889875 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.114525527 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105835316 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104176027 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.125308532 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.093853765 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101482528 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.115279674 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103176807 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.092289529 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.117342715 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09892075 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096967498 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.114170594 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.096995225 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.094916399 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.091934177 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.115003172 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.105280357 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.096920495 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.122578646 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.097497105 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.09684353 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.115252016 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.095366317 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105265761 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.116604493 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105242293 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.100280978 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.111647857 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.093161917 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.103810408 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097427194 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.124691974 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.094383301 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102023797 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.125394437 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102818452 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.100044636 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.128282444 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117285515 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.104090192 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.123284183 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.092902317 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.095969397 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124496278 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.100080115 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.101954585 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.101110553 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.114259921 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100859893 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103234148 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.120401274 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.097125619 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.09226306 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.119373001 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.105312135 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.101833689 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.119988792 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100888458 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09896454 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.114466092 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103387588 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.104785601 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.099313746 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.125764038 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099333092 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.103725132 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.115240563 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.104896719 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.100221823 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.113752593 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.092594456 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.095741504 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.124992012 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.093872133 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.10358915 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.103184979 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.115244892 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.097380121 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.103932351 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.114768296 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102217817 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104234414 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.126719257 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108427965 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.100533594 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.11607761 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.104326604 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.104140408 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.111749755 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.098091943 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096388724 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.125012475 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.097232616 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.104493525 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098178546 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123446005 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.102195607 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.104274503 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.125253568 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104236091 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.092595643 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.126354476 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102671506 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.102224732 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.116252842 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09732348 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.094264921 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.11821224 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.106856046 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.095811416 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.128393422 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104602547 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.098330801 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.096458216 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.125176044 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097763131 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105788942 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.115398055 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.101470236 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.093146552 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.120982004 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.098605207 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106475551 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.115821991 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.095442374 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105431284 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.12303052 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104212973 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.101091905 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.125576095 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.094506152 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.093025377 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.102430973 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.116561611 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108864892 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.101233614 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.116285388 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098245664 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.102257347 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.121509935 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106591558 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.093837841 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.115416702 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.099817372 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101021366 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.115837217 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.095631295 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102675836 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.097399467 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.121708564 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.098211093 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.095296895 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.118635687 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.106356682 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.096998788 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.116023623 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.096739885 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106434624 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.118617598 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.097010032 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.093516501 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.124349402 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.101520731 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106974079 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.115999039 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.100642756 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.096309104 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.122421713 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.107531971 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.097118635 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11876608 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.097665911 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105001551 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122898519 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.093132723 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.097335352 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108539012 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.124163485 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.101227607 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.103384656 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.118416735 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10723284 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106755126 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.122101001 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.094138717 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.094350336 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.118178157 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.093771142 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.102471481 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122941402 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09946188 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.097119543 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103815646 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.124492577 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.103970414 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.101940896 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.113905965 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106851577 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.096815663 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.122683618 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.094998533 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.093684539 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.123364011 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107011374 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098398756 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.119317966 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.102791214 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.103418598 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.094113294 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.11864295 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.103126452 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104625106 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.125803986 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099044927 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.097484953 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.12323264 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111023057 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.102117106 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.118070601 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109144745 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.107259799 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119499205 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.10049574 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104096966 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.124964984 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.103547665 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106796472 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.096884736 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.119126811 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.108497736 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105889932 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.129621231 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099476896 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.094087943 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.124217542 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.098856914 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.095161682 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.123462977 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108281856 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.107115506 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.119683166 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.098573289 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108990047 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.124123955 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10052221 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.097250286 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.118030372 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104983322 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098834007 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.123711961 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.097548159 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106924421 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.106356681 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.126615194 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.108452129 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.093954476 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.125946742 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.102965817 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.108152022 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.122263662 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.096382438 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.094342095 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.122657637 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.109042986 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.105579977 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102870204 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.12563099 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.105250046 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.100229505 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.119838843 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.098463987 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.106810649 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.125985224 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.102193302 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.101072979 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.118790594 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101570039 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101924344 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.126186368 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.107581209 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.100726077 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.131787639 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105878967 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09858586 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.096198406 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.120600811 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.103336814 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.100023195 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.124467434 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.098399734 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.094709321 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.127039479 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108461488 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099655271 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.127546806 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107556834 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.098321232 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.121872551 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108694479 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.104942465 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.101399417 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.121707656 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.105042897 seconds)
  done (took 64.643057125 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14949003 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108329837 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12398483 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102738693 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120006531 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124720609 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103315652 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103052979 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.124541117 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112249609 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103469372 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122064126 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117742138 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143305933 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121555821 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111672581 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123853599 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104067354 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102456534 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122746614 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11781114 seconds)
  done (took 3.289461461 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.102764605 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.10219449 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100591842 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12281911 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101959404 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.102091125 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101031912 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122653866 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102054737 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101878458 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.123805549 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104059113 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.10301743 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.102216071 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123231942 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102448153 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100859404 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122578018 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.102622547 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101297728 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101434407 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.122581859 seconds)
  done (took 3.195397892 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129998585 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106245424 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.100546305 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.123083389 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.106461583 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.102400871 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.127104501 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.104830928 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.110864587 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.118341655 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.094945733 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.098417124 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.100226293 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.123903116 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.097392902 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.102569398 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.132320178 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.106697856 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107290041 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.123013757 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.095619142 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.103063525 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.103797976 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.115411604 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.108117449 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106868548 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.127747251 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106072428 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.093765764 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104023005 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.12529631 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.098433537 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.093636349 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.114453242 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.094378552 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.106480859 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.125771929 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.104139221 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.103134484 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.09349052 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.124839409 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.107865812 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.093716317 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.122855986 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.103520357 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.0971736 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.106106859 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.12413017 seconds)
  done (took 6.048024334 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.132784204 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160536197 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.108112352 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.131884788 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.138353976 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114067229 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.105979469 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.157974488 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105891748 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.104632021 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.142186308 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.11678154 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.130237581 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.110538637 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.108720948 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.129520451 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.109950016 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105689697 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.132145156 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107765799 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.111128168 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.128998317 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11705015 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.114878226 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.131434661 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107542377 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105391684 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.131906089 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.115322765 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.133063709 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110742364 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111569774 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.137709761 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106781595 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106135913 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.129006838 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.119511916 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.106700789 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.129464578 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105420598 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.106193672 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.132278553 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110868079 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.117205477 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.129564451 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108510935 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10675771 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.126733714 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.115104372 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.126435771 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113193165 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118015077 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.130409112 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.108908402 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110048073 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.138606802 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.108322294 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.106170345 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.131680851 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.115930106 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.103972299 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.130688128 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117803179 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.127186006 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.113893464 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.116336652 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.129222508 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110034663 seconds)
  done (took 9.033348235 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.137112617 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11120192 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.140158815 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120022456 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.356642629 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.133022223 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110100034 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.109522516 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.133424369 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115856283 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13180433 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.218095472 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.130514921 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116074537 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.131851683 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110918435 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110582987 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131445626 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110569437 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110745089 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.130835423 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119739388 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109035444 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.139185158 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121945326 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.127629847 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111467457 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111423666 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.138915779 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111410397 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119874671 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.131885137 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111092409 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.140734796 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122744939 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.109166954 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.127068044 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112132066 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.10987759 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.131650679 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.108313494 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115783857 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.133019569 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.108257272 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109289875 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.13263628 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119947237 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.141985583 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116587382 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113880264 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.131609473 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.1186697 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130218794 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.111083679 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117009922 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145481489 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119224309 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.137503519 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111907178 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.118135973 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.139445595 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.125753631 seconds)
  done (took 8.751127501 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.105739285 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106285163 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.104585716 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.126329053 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.106568091 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106800872 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.125288698 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106306465 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1059567 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105889024 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.129383352 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106489659 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105172452 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.125609898 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.106323855 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106532402 seconds)
  done (took 2.620529538 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.123369808 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120996602 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.207529672 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.107687158 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.129976934 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.114076099 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106503069 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.131001016 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.105524662 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.111813451 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.132639283 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.11026046 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.122509573 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.128473181 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106730821 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.108656206 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.125657599 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.111839991 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106755824 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.209421883 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.110554561 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.130805321 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107560465 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.110414181 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.129779003 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.113509197 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.112264276 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.129884673 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.109172193 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107406815 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10826663 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.136142173 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.105837202 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.110864168 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.128338108 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.109019799 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105744593 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.128446571 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110842796 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106258275 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.130207968 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10905465 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.106915202 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.129510463 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.107670605 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108392974 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.105936167 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.133638922 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.107872237 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.107828028 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.128565651 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.112675431 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.110775958 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.135594058 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.114576651 seconds)
  done (took 7.425818954 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.118151687 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108427126 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.14021797 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105111691 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.107948504 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106747234 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.130365112 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110160168 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108018834 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.126980463 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109282472 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.109253977 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.131747899 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108928168 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108785133 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.128844596 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.106092751 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108430479 seconds)
  done (took 2.921014886 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105505037 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105383653 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105321703 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.126945682 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.105928834 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105624954 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103331436 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.127498267 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105396293 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.103975722 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.127583752 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.107141837 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104623849 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.1046147 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126531454 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10542423 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.10512084 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127211568 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.105289716 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105456916 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104937646 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127068324 seconds)
  done (took 3.294809068 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.118051884 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.233367316 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.112317565 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.239869399 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.127130482 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.104204242 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.112963876 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.126662336 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.119794912 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.102011995 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.125476361 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.104247125 seconds)
  done (took 2.473339801 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134616909 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142902111 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128952991 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109876053 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116206328 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133684877 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11206055 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110659603 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142002485 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123086392 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132262909 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120423135 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118785287 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141395145 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11538234 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137702008 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112578981 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112531069 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130725073 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127064342 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111096041 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140850313 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112083597 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110667844 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134334821 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119203147 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141642802 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124741422 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110377304 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140774605 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116462226 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132655556 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120164303 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122630049 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130201892 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120106684 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132793772 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128637238 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116457687 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140373368 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109602415 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115323185 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141422244 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117038766 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141192326 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112591831 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116864582 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133733836 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112537006 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.155057358 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118454589 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120375154 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138797329 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121012386 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140059221 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132817029 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14323253 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122770291 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11598542 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144633825 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119935084 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137386395 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120431585 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122617618 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140356606 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119688544 seconds)
  done (took 9.177100524 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148891489 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107837247 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133302007 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12504139 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14050865 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113787724 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112504321 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133660642 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112975331 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109290644 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175447241 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113099787 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141645386 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122756742 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112745273 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134306325 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112990835 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11935624 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130950731 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134369601 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133320865 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122138785 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120202716 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144251445 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123099453 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138032427 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113129261 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111562302 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135050763 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114809432 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117720347 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133609798 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12072017 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108320688 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14325041 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113128143 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133136973 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119621567 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112480994 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138418231 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123088628 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148763191 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115000379 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1128038 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145361991 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114805311 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112352276 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131103473 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11416794 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109045221 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145129489 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123533237 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145333496 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121314449 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133961378 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114732048 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113572752 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1355011 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114892125 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117222588 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143080485 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113062771 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153169199 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113567165 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112658041 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142542987 seconds)
  done (took 9.162220978 seconds)
done (took 163.245893913 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.179155534 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.219158037 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.202185697 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.16113313 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.098045987 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.156089263 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.132439467 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.204526149 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.097900299 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.098878217 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.120580557 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.101330344 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.168033938 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.121653878 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.099253614 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10027141 seconds)
  done (took 3.114675267 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199449665 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.343581052 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.136989488 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.102539296 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105583189 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.102871321 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.124525054 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.105096814 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.102630579 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.132603245 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.103683296 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.100242286 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.131317188 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100538903 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.103083988 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.124172215 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.110578867 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.103537189 seconds)
  done (took 3.199307677 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.122514882 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.155912285 seconds)
  done (took 1.141120669 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.132856839 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.218173065 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299677982 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.174201831 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.124916513 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.143379127 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.152298836 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.137144815 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.193235955 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.138466631 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.116000436 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.101718871 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.150479331 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.108684072 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.142354346 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.102269359 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.13236767 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.140090649 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11859483 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.104741183 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.150725033 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.108014295 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.10893145 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.141104606 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183701013 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.138783989 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107732555 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106278599 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.130169486 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.118146938 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.109424599 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.14243599 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.115099972 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.182667014 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.106309119 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.179176137 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.131654381 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.105765894 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.118431191 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.102951221 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.130136731 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.106968421 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.138127621 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.103274376 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.10583776 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.131346381 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107170751 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.10613682 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.13453303 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.111455933 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.110179654 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.134141639 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.178346422 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.111938815 seconds)
  done (took 8.091345904 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.913161863 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.153820049 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103539842 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.063803365 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148729738 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11835695 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.907257899 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130352889 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256496584 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.929640005 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118743382 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.132947214 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.247722773 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.28671551 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.260817874 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.365589018 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.767539294 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116817159 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.156989656 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.147854207 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108042231 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14622467 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118956537 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.450336806 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.104492408 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.126523771 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109177012 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111508663 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182120366 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.103805938 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.130167042 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.203771443 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.27552973 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.216242512 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12718859 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.103124566 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102968611 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.190963878 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.276454848 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.224134508 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.196937823 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101053144 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.125793161 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.110683908 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118643579 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.122695212 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16497475 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.19839981 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.198732116 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108816421 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.133792502 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.111549102 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129337117 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.162295289 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.124502704 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.364795342 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.371302105 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.103362376 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132438001 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117201845 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272363685 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127868425 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.243271997 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12709654 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220843726 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.12566591 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.811615709 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169726192 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.125270749 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.109169678 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108108999 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133580813 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107939285 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.185859389 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.405675051 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133199341 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.110528092 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104542135 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.232847348 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126918583 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.1041175 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186243725 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.105762192 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110655482 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135177805 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111267361 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.196884744 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.277684962 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.113188416 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11002726 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.133409493 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113744003 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.104357544 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.238272827 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.235125361 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.183111553 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.235105805 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108682815 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.1883449 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.19525367 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109232257 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194629429 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109317043 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.138586199 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108626523 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230193519 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.164953518 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106081507 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.132114216 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111485057 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.165261518 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109591031 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.110710307 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.194683974 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.491161131 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.191523867 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.103154878 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109875634 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131871867 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162597702 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134460534 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27163992 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112045184 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.195510826 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10996538 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.122943358 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111703101 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.189271206 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112076683 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130862381 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10940239 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11317773 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.2860993 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229187664 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133940845 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254480685 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.178788727 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.129840114 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178207438 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133029487 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170472865 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.137715208 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107647418 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104735735 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.823743368 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117376728 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11037074 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131748737 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.189055187 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125559821 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10769044 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.104899862 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.101902064 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.838715244 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10917359 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102957297 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.107091132 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.131313696 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110378492 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130375098 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111300816 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.187448488 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.253834723 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113775921 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131878781 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.105655056 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.184185503 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.107080936 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.105390776 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.12671367 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.106811837 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111872397 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.130540553 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108979081 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193455676 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.182737484 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.240482885 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.587412897 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.105349779 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.104486122 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.271786448 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104639633 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.332112065 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111101768 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.265442065 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167053715 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.123708399 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.366175266 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.194483321 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.189835593 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.131878222 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.177522924 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.125508628 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111513761 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.187635104 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.105190611 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133136064 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162250381 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.137372846 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.113214327 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.280488182 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.127000299 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230002363 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.125613879 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.174781444 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130168718 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111263521 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.332746364 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.126617708 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118241153 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186369579 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111056371 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.105490509 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.894273706 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.129215105 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113711248 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109930949 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.264372445 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.167411163 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134755544 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111396428 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.135591125 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.165878007 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.23466804 seconds)
  done (took 47.695675687 seconds)
done (took 64.100614263 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.259173182 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174340257 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.357580038 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.152392633 seconds)
  done (took 1.878345353 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.263989855 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.170053398 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.246206378 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.103108853 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.25287643 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.102112286 seconds)
  done (took 2.029724939 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.175379565 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.1685787 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.148465387 seconds)
  done (took 1.386127664 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.213482175 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.211138442 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.350605897 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.239327082 seconds)
  done (took 1.96679906 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.278268137 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.127292514 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.132365645 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.229259042 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.2453914 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.211280289 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126782812 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.178815686 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.134518922 seconds)
  done (took 2.587063271 seconds)
done (took 10.736527948 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.378275268 seconds)
    (2/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.262280838 seconds)
    (3/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.22945774 seconds)
    (4/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.47187523 seconds)
    (5/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.415142456 seconds)
    (6/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.343484881 seconds)
    (7/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.352653574 seconds)
    (8/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.363144084 seconds)
    (9/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.214573865 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.237217526 seconds)
    (11/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.114736308 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.139796339 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.148128264 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116213242 seconds)
    (15/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.168147011 seconds)
    (16/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.223490152 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.107218942 seconds)
    (18/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.141781786 seconds)
    (19/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.105437011 seconds)
    (20/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.286489225 seconds)
    (21/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.311855789 seconds)
    (22/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.256193333 seconds)
    (23/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.285278456 seconds)
    (24/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.271524193 seconds)
    (25/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.115092918 seconds)
    (26/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.110287209 seconds)
    (27/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.152168583 seconds)
    (28/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.135189189 seconds)
    (29/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.131372781 seconds)
    (30/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.205304878 seconds)
    (31/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.176902873 seconds)
    (32/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.217799624 seconds)
    (33/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.309808182 seconds)
    (34/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.220603542 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.148053394 seconds)
    (36/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.247298208 seconds)
    (37/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.11541761 seconds)
    (38/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.153952608 seconds)
    (39/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.148537395 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.115310334 seconds)
    (41/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.174724244 seconds)
    (42/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.197906172 seconds)
    (43/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.216649687 seconds)
    (44/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.114575534 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.125368387 seconds)
    (46/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.145869178 seconds)
    (47/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.223838031 seconds)
    (48/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.139233767 seconds)
    (49/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.108123317 seconds)
    (50/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.090188774 seconds)
    (51/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.149757522 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.107281869 seconds)
    (53/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.110045349 seconds)
    (54/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.11317787 seconds)
    (55/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.205223164 seconds)
    (56/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.290141505 seconds)
    (57/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.139109938 seconds)
    (58/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.287163263 seconds)
    (59/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.083670486 seconds)
    (60/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.085827674 seconds)
    (61/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.172126567 seconds)
    (62/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.122118532 seconds)
    (63/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.152404017 seconds)
    (64/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.140404726 seconds)
    (65/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.16518588 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.12502365 seconds)
    (67/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.113500257 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.131810756 seconds)
    (69/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.094721821 seconds)
    (70/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.094022711 seconds)
    (71/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.08946857 seconds)
    (72/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.108069957 seconds)
    (73/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.151126271 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.107630377 seconds)
    (75/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.088798093 seconds)
    (76/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.198936401 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.108084694 seconds)
    (78/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.192617721 seconds)
    (79/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.136485024 seconds)
    (80/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.090172151 seconds)
    (81/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.212356055 seconds)
    (82/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.111726778 seconds)
    (83/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.232779392 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.152229764 seconds)
    (85/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.0911185 seconds)
    (86/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.083165185 seconds)
    (87/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.133200527 seconds)
    (88/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.111009648 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.112024371 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.1287596 seconds)
    (91/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.218865541 seconds)
    (92/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11439646 seconds)
    (93/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.236064167 seconds)
    (94/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.092576856 seconds)
    (95/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.085685407 seconds)
    (96/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.175193508 seconds)
    (97/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.140651755 seconds)
    (98/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.147391019 seconds)
    (99/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.088450773 seconds)
    (100/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.130647829 seconds)
    (101/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.115617845 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.107198129 seconds)
    (103/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.128295295 seconds)
    (104/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.108192948 seconds)
    (105/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.089224265 seconds)
    (106/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.138800262 seconds)
    (107/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.136238903 seconds)
    (108/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.116670283 seconds)
    (109/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.108160542 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.154330589 seconds)
    (111/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.086265788 seconds)
    (112/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114168848 seconds)
    (113/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.086771928 seconds)
    (114/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.1074527 seconds)
    (115/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.141503539 seconds)
    (116/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113838708 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.132114845 seconds)
    (118/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090227465 seconds)
    (119/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.085684989 seconds)
    (120/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.082688379 seconds)
    (121/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.083749546 seconds)
    (122/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.110404682 seconds)
    (123/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.084280061 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.115816474 seconds)
    (125/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.086498779 seconds)
    (126/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.086871662 seconds)
    (127/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.110725602 seconds)
    (128/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.091629389 seconds)
    (129/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.108008986 seconds)
    (130/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.220814602 seconds)
    (131/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.111584092 seconds)
    (132/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.132572305 seconds)
    (133/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.110323597 seconds)
    (134/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118062569 seconds)
    (135/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.083683826 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.127336375 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.151155185 seconds)
    (138/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.138755215 seconds)
    (139/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.104970332 seconds)
    (140/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.159593829 seconds)
    (141/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.092425441 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116536398 seconds)
    (143/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.085828722 seconds)
    (144/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.115420333 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.11904817 seconds)
    (146/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.084537356 seconds)
    (147/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.114468048 seconds)
    (148/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.128987353 seconds)
    (149/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.120503173 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.107535532 seconds)
    (151/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.11195027 seconds)
    (152/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.08630902 seconds)
    (153/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.087000729 seconds)
    (154/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.084797096 seconds)
    (155/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.086322011 seconds)
    (156/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.111009228 seconds)
    (157/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.09101304 seconds)
    (158/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.084889636 seconds)
    (159/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11485015 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.130277531 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.106688707 seconds)
    (162/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.105087945 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.130169067 seconds)
    (164/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.092355879 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.114764315 seconds)
    (166/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114146359 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.151901858 seconds)
    (168/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.085637706 seconds)
    (169/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.095160495 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.107750992 seconds)
    (171/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.114591737 seconds)
    (172/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.143044098 seconds)
    (173/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.086173877 seconds)
    (174/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.14232138 seconds)
    (175/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.115131051 seconds)
    (176/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.084930912 seconds)
    (177/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.091884869 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.107292345 seconds)
    (179/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.109863133 seconds)
    (180/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.106887545 seconds)
    (181/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.087220938 seconds)
    (182/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.084111814 seconds)
    (183/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.085862594 seconds)
    (184/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.114706905 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.129160908 seconds)
    (186/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.091427897 seconds)
    (187/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.084923578 seconds)
    (188/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.134216021 seconds)
    (189/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.093382476 seconds)
    (190/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.116137115 seconds)
    (191/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.091009548 seconds)
    (192/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.108040205 seconds)
  done (took 28.266749914 seconds)
done (took 29.16244461 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.230579322 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.133628026 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.115763255 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.114750276 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.237169964 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.121870176 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.15867318 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.116997979 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.124428532 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.140730675 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.1055519 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.128235511 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.139424574 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.248599002 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.119773052 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.107586517 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.130938368 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.127489676 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.129967575 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.155529904 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.213778233 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.133264712 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.12580664 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.106183266 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.235810015 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107853311 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.14013423 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.115996454 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.129354508 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.141233952 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.116364169 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.106469894 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.156321695 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.131400369 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105752974 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.14024472 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106424776 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.090452075 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.139152402 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.118243598 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.128807651 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.115458886 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.14054825 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.108030428 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115825762 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.139535482 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.106908427 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.118830195 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.12956026 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.116966689 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107713278 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.154850697 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.115597381 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.104746421 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.128954597 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.108493335 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.12550318 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.128328749 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.131544801 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.106073056 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.130524839 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108090771 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117002937 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105507062 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.140042878 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.10786211 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116307318 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.143052968 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.115292105 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107630796 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.130271524 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.116059032 seconds)
done (took 10.347056704 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.111310104 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.150432957 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.25075989 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.255448197 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.160725886 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.124201338 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119743579 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.156146881 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.120037122 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123393345 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.16738197 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.138173716 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.257820425 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.122363465 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.150039401 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.119726957 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117565509 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.139476535 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.254169123 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131613524 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.155369967 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.123948094 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.131998909 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.149337286 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112863585 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.142193292 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.139584859 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.119156214 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.110368923 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.144308645 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133123074 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.110033685 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.138046326 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.128721886 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.126894279 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.145984486 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.123202958 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.117988398 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.135825792 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.110996937 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141216422 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.128339086 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.110918644 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.146481477 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.12101064 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.12574092 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.141774802 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.125095098 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.110909914 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116823096 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.136035595 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135334388 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.146225787 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12708718 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.122243408 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.146336835 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.125195948 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.122456634 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.137753481 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.124198266 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111904733 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.133635639 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.113680308 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.131190914 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.138527044 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.124432932 seconds)
  done (took 10.044799063 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.130336476 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140545665 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.146763496 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.121356703 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.115120086 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.130350515 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.106527652 seconds)
  done (took 1.839944871 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.108215367 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.270685749 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.261144661 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.261994909 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.251757853 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.273777902 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130394934 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.106480859 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.170027837 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.116867585 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.270449196 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.327374731 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.145488473 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122922056 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.2655939 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.106138847 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.2664871 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.135711043 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.122688367 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.265920338 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123758824 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.16606609 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.120676449 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.106898371 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.265909093 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.13550089 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.314370144 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125620933 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115816334 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.148564772 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121587249 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.210595426 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.266531728 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.1227837 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114820048 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.260737486 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.254695237 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.149507769 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.314318672 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.111596593 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.2499417 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.120871516 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.150384836 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.122579834 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.12056603 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.2493301 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.15433897 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.123525624 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.120848888 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.273999508 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.146631356 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.267754579 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.121558893 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120998907 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.145195838 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.125131834 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.128940069 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.150372474 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.27674413 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.125427263 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.261855994 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.263403468 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.256119581 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.263478966 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132701092 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.268135075 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.244729934 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.120735814 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.142180371 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.123731027 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.263866096 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.121535008 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.146375527 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.225475391 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152492227 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.265991506 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.265654662 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120213541 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.120083637 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.138063297 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.121350138 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.106981691 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.25409146 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.147942347 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121495408 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125143219 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.147408969 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.124541535 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.111774689 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.156805275 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.122796342 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.118975814 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.152031624 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.122842925 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122587307 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.264941234 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.146501102 seconds)
  done (took 18.144741661 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.110368225 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.1102078 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.112495171 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.134824058 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.109228695 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.108522808 seconds)
  done (took 1.659473317 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.14620288 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.122745148 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.155636272 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.124341371 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.169432719 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.25426697 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.264122623 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.142557654 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.142205584 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.134538617 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.257012921 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.258690787 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.259959873 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.125563872 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.261712471 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123088208 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.264631487 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.148296581 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.132348604 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119911408 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.148637058 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.127941479 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119679186 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.246928887 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.122708272 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.154103675 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.115808861 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.156694576 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.131502966 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.11612175 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.153226398 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.124094342 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.114540962 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.142649146 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.263464439 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.11692702 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118473865 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.151653014 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126913835 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.123797796 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.261109741 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121522017 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.156683542 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.126058977 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.143130562 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.11683029 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.125187987 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.141767539 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.237311742 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.154469294 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.126848044 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.123049796 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.149968233 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.125658228 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.140117539 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118734582 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.126847974 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.262080464 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.125461904 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.142940174 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.124371123 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.122636894 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.14394086 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.127042971 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.150014886 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.126411675 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.115093826 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.148617642 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122429605 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.124928108 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.14989043 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.127002044 seconds)
  done (took 12.068596014 seconds)
done (took 44.695977821 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.552532832 seconds)
  done (took 2.527820961 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.087704659 seconds)
  done (took 2.066136902 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.560269152 seconds)
  done (took 18.5664617 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.421110953 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.353388514 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.999715117 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178092061 seconds)
  done (took 2.928891935 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.076424034 seconds)
  done (took 2.067435671 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.415790653 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.278348874 seconds)
  done (took 1.676967022 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.714199481 seconds)
  done (took 1.702494291 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.882558808 seconds)
  done (took 2.866158259 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.273850676 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.247223198 seconds)
  done (took 1.513007764 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.669235662 seconds)
  done (took 1.662840087 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.583250636 seconds)
  done (took 20.582937049 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.260949385 seconds)
  done (took 1.258696933 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.296298642 seconds)
  done (took 1.295434357 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.540935338 seconds)
  done (took 4.542315612 seconds)
done (took 66.245095555 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.124972037 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125725415 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.125715427 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.149766531 seconds)
  done (took 1.517441219 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.128973663 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123022068 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.125533282 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.148356435 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.128174539 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.12180264 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.147712779 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.125361682 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121383383 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.148954766 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.124343186 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120788055 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.15022455 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121567903 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.120194405 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.148129172 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.1270832 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121251173 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.14883408 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.124736253 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.123392787 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.149155001 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.127896572 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.125540336 seconds)
  done (took 4.151507745 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.120010163 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.133348661 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.114095724 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.138371647 seconds)
  done (took 1.509985313 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.130936692 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133799626 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.157990202 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.131653823 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133609169 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.158888362 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.121804944 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118989014 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.148201877 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.132483677 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.138003583 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.160914527 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.134794725 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.123482113 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.15905626 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.117108188 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.122498608 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.159538235 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.129664673 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.130059905 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.150341115 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128820921 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.126952387 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.15912624 seconds)
  done (took 4.30884961 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.201386573 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.134215252 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.176714581 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.167855703 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.17768279 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.121778265 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.148589146 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.153394925 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.128452857 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.128659029 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.147805947 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.16931385 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.126647948 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.151568156 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.123707072 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.153037338 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.133015518 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12569699 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.189139695 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.126767098 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.12636139 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.161270997 seconds)
  done (took 4.278313395 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.12612805 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.114610244 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.135482591 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.13291802 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.124520723 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.140871056 seconds)
  done (took 1.778021353 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.113025127 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.107603627 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.106575982 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.131834642 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.111573755 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.107293742 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.130731428 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.108998637 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.107799742 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.106400471 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.13345035 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.107347031 seconds)
  done (took 2.374908988 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210120085 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149123153 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254558838 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.3919863 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193609187 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191408698 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281895135 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189715536 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.206435329 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141219984 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20999933 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166822681 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181424956 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191770266 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171611837 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.163307709 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201899417 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211717077 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174696587 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241460664 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160211924 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205711285 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192845543 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178027318 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14367679 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19425019 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.124768869 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131361118 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197673671 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196123194 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18062248 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181675267 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145571585 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220040691 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264365113 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181041388 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.32405734 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138244256 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.202116624 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.195828883 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259938083 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17234538 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19569388 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185082265 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132099829 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221777434 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152321186 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.2175021 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137148237 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175347019 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214586576 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184900957 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.201401729 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140524713 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.327765912 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164029099 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.147022328 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180568632 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219146164 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233895735 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209416086 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.127981219 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201359964 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194905931 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245015934 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.170044529 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.169719278 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154448621 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16926489 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.23896314 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185200506 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190410596 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.222269187 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134422052 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203277666 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167369259 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186130024 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236939698 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176310828 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12173203 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181559121 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137975506 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15727405 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194124337 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124364698 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245167629 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162517314 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.187370265 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209834784 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15525424 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191395358 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163499632 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194240693 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150291737 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.134892991 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147073172 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.187228348 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161412146 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130580502 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182169116 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142112555 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.156916742 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155047999 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.152257001 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175945139 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.138553374 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190702952 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200103868 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.136997799 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.208496276 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151451103 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.193374381 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171496459 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225580502 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134732846 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163374826 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226310553 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202409119 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140498383 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202739608 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229900115 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.156833911 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16552482 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170763685 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225071079 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146367426 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234784186 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142073793 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168006699 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.144652054 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206232231 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161746616 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.192029378 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130223194 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.197208877 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218601332 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.13220508 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144367451 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215232049 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137065335 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155813529 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141528751 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140567177 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.174933838 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.15529831 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.171466706 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158454228 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199175188 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169218306 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189400062 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137504636 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204245875 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133681525 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.202360859 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151107763 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.151268537 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.177109534 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229224401 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132223378 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213777674 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.162711264 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211918848 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205057501 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132644242 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.216621541 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132026775 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.124231301 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195054413 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200764427 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167277417 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.220110742 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207200441 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.1688207 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.195874908 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152996411 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201544973 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.2142454 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162472965 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.170574414 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176660803 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202931183 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.125364475 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.126745796 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.159171079 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141670669 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133493861 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169312942 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211790899 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167914369 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205517895 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197762719 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142282759 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.221257186 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129746388 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162350603 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.207600911 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14129632 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.221453371 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222800679 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183161001 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171493036 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167750033 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.153619466 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129501663 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.136105157 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189873866 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139862478 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16732009 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147447171 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.223788235 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171239234 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181967344 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218075985 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169376777 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231097195 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122917587 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.194865702 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16801068 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200676148 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.18756624 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162360591 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.162987975 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225709708 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146534067 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224933143 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198777582 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183848728 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224902831 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.167870789 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162473105 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148327242 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192703206 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142031888 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191581835 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146557045 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133643182 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181460716 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.139334269 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172658269 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217082074 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148314531 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207754073 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.157777397 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200795087 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130772356 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170602002 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178305636 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176322352 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.110939457 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166641442 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223638355 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180025965 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156279929 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201134236 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134658325 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.319312952 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212461724 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203257341 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139724262 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1694763 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177496733 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186488589 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162500064 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216800195 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144665743 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241854289 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199899093 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.143464752 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133221759 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179220486 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152159642 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.17221764 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.15602892 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.194473612 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.147945419 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219808399 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139848091 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204392262 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178658124 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.17695693 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.15205956 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171836865 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256168679 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174148053 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206887412 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.168525969 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.196552998 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184227198 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158655441 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13016341 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135257982 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.2168553 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131198737 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214958061 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.193756064 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210682797 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180530639 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194748439 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14476827 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.129052095 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199685868 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151090861 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214647268 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166630547 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.141100066 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218591414 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.13297473 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133047855 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19176405 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314141414 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150348728 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199747468 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.112168245 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.307655604 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133960331 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135869233 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189777555 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171516853 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.16566583 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.187303497 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206243056 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144143958 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189024177 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140208053 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205301037 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183775325 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198497518 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208360993 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.148022245 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193568958 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159124914 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20290143 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150415916 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.179418277 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162907099 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228128661 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.17710241 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.164265861 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173305208 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203419374 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174420364 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207062923 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141239399 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215534741 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129915752 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200579488 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141008714 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157169009 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164834508 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.196634572 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13417223 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204421805 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174915539 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164046 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131172687 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179987623 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169427551 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170819278 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.134980992 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220055357 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.132500857 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215809776 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215131338 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161992667 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170899246 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17330011 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133914096 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140740662 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176391565 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134790395 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.181101871 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206180758 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133203531 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206264986 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198719195 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167603296 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186669618 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146337045 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.297513112 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132374445 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223874838 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153719897 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230288991 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151268468 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209834435 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171837145 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18424864 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168006979 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181655363 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.224655174 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198931093 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.197156426 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136776122 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146378321 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171205291 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.138254173 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182185109 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176946593 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144500009 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.168970719 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.169687011 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17963269 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.149379331 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175875717 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203370484 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183519566 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220387104 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190817282 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16929604 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178996295 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207655527 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132281207 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.19787237 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174539933 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179957451 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155721618 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.167792846 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.141114873 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249265357 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.129889562 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191662082 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179902696 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201017532 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176394917 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.166696477 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183554417 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172940358 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18066641 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158634279 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.156062862 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200735652 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138767367 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130576032 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204776459 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162945302 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.197558712 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144231959 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.207631291 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200249348 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.154498278 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140132555 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313620399 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16591621 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22778567 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138692288 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170179043 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151675223 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191156082 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.169554033 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204049691 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135810427 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13318209 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.177219114 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.163599855 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.169424757 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173693177 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212920093 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160439257 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217449579 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136420072 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.290471993 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144981775 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205029145 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.122370519 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132912921 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17468667 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138543246 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175494314 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181706278 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249309078 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.197068217 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.151790392 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167191582 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.131701803 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133984078 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192404007 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154382551 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205209126 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151596582 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.108342339 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173411577 seconds)
  done (took 86.94295462 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1766446 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.157809174 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.173664961 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.22885487 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203091608 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.298510236 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.234381691 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251728519 seconds)
  done (took 2.811027924 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.123689402 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.164004585 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.147204194 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.148672537 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.114702505 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.514051333 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.164870686 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.125052495 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.163935512 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.15760852 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.140249469 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.573946798 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.120912792 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.149641096 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.125829479 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.140561171 seconds)
  done (took 4.15602459 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.054007497 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.54388313 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.994868412 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.312221059 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.240883634 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.215751528 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.795630436 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.203805735 seconds)
  done (took 12.451239715 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.175293241 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.171868993 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.977104351 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.340846137 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.217608258 seconds)
  done (took 2.978375812 seconds)
done (took 130.248632668 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.128731803 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127334698 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.127235104 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.157782704 seconds)
  done (took 1.626449425 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.199889036 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.096209302 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.12784405 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.095807994 seconds)
  done (took 1.617439201 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.3958143 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.096313016 seconds)
  done (took 1.608787542 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.148489553 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.138049817 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.167633678 seconds)
  done (took 1.56306818 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.14097973 seconds)
  done (took 1.239582701 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.122294811 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.119416583 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.280602442 seconds)
  done (took 1.626607755 seconds)
done (took 10.38185163 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147039928 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.94043195 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.453032191 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137396103 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.746369632 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.404564016 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.442344869 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.17974702 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186807345 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.142838765 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135358693 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.698157706 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.457156598 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.881277571 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.410363706 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.910265056 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.700607179 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115573705 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.150445738 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115901889 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.420057537 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.141899259 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116626912 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115442753 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.723670797 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425368827 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113911552 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.924206842 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.114704042 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.119190995 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.434378492 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.1155846 seconds)
  done (took 21.211697871 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.155037453 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171329818 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.165016166 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115335756 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117851439 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.14600041 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125454292 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.154504774 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.190955568 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113933064 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.166787271 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.113589375 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.119462049 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.145003285 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140709025 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113250016 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.147713826 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117810302 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121175674 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.145300531 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137683849 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.113290663 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.146470232 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117357243 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.114816207 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.165742934 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115053597 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126070222 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.143446035 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.120072811 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119415884 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.145574657 seconds)
  done (took 5.45802291 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.16420908 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180543559 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.167015163 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.153587897 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.194993441 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.116929255 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.231526579 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.154825485 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.223257441 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.116067343 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136368738 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.144265482 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156452577 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.115089705 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.171038929 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.115530124 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.119516106 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.145673343 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122833637 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.144848028 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139288802 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.114326899 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.144294816 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119535172 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.115133007 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.167063982 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116064689 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126524748 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.143769051 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.121318221 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.122487643 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.143365019 seconds)
  done (took 5.759298721 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.130778991 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.130406458 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.138530955 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.168769227 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.12530539 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.128654908 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.159331784 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126538228 seconds)
  done (took 2.215955744 seconds)
done (took 35.749536657 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.138262485 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131097676 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135436916 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.159052978 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.277138944 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.122593802 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.133390496 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.152163135 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.131029092 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137505544 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.11413274 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.154894627 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13555362 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.125397162 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.275179965 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.164105924 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.282696424 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.24984036 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.157674031 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.130392349 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124686526 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.283584037 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.161055188 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.124899961 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.277085515 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.119352817 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.270709145 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125794558 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.157999492 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.117244099 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.283060506 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.126376476 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.122600018 seconds)
  done (took 6.705318463 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.231100966 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.15634111 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.126589072 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.124736951 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.124708037 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.154182176 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.233566154 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.156369326 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.123560964 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.122510691 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.154709338 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.217474652 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.161079143 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.120618969 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.125793092 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.115627413 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.267060078 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.12444704 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.150649464 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.098981651 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.119555078 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.154024754 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.247886411 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.150606652 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.126257117 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.123330209 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.123639396 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.15973798 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.12679259 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.125117027 seconds)
  done (took 5.671682692 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.129831594 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13749898 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.142513094 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.22239092 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.152290665 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.165787493 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140806523 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134065023 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.176198453 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11864763 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.13259703 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.184790189 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134432528 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128146672 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146760283 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13421581 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132621125 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.148239172 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127213244 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134642611 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.167180477 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133819601 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138947418 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.154505262 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.116586683 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124385301 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.157316304 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.129761264 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.124830888 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130769981 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.15023754 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.119336474 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.119356798 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.183344195 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.118188563 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.159935911 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.138983945 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130332355 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129779003 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.178830841 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.119832557 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.118569268 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.17590107 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.175097476 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.148942124 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129986152 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.118698404 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.131462598 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.146391661 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135514928 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.159616597 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.149286791 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.137342884 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.115482074 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.147568067 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.12622066 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.117165946 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.151817001 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.133664343 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.118449001 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.168483017 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126394494 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128850743 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.14811688 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.130558363 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.117249686 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.116254029 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.151956684 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144274841 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124507243 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.186078831 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.116783217 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.128778597 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.161750248 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129896476 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128682635 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.146878105 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.130925169 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129936985 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.154334919 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.131860483 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.121269611 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.148264176 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.136401284 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.137974389 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.161523892 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.130724934 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128038559 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.147847013 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.121696621 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135425042 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.118135344 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.152012557 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.131636153 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.117723141 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.153209915 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128544558 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126376685 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.144573343 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.144589406 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.121116309 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.147708867 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.14410792 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.121614068 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120181623 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.158507727 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.160118056 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.146362118 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128834121 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129322171 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.117924773 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.157013681 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.119608157 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.116728881 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.164237087 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.135015842 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.125282901 seconds)
  done (took 17.420845347 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.376208944 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.366281634 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.215050043 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.410756703 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.129809943 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.286451231 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.39777244 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.371710676 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.117986023 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.183436595 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.175268168 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.331002776 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.150867788 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.147872157 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.372767515 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.449734495 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.147575052 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.189349428 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.153639928 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.163981467 seconds)
  done (took 6.27676683 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.128185365 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154539205 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.170043272 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.137653608 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.130050127 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.164200559 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120401972 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.141122904 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.160841683 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128822177 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.122331339 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.126865434 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.163277537 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.134789557 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.13354289 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.183151014 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127633968 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.123130462 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.171576777 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.123593371 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.10727684 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.175151812 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.129436642 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.139882941 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.167235163 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.12868955 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.116916893 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.154876329 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.12611045 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.126571472 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.15157116 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.128077809 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.12592572 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110548066 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.161627955 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.134395652 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.124770545 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.152042379 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125046139 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.120201318 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.162599657 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.13200254 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126322697 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.104847621 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.168246186 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.11677295 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.133449232 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.160533053 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.112034917 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.138108763 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.13082788 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.163457797 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.125942901 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.139455024 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.156295224 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.13592329 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12854407 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.16321922 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.12446052 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.117507052 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.146693235 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.122355434 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.127890286 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.161789848 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13244275 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.127542337 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.126327447 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.149308303 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123921554 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.120721147 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.15108283 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.133649188 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.13847117 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.158429295 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.125667586 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.128669365 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.156827695 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.101637087 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.127480876 seconds)
  done (took 11.999953555 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.145555381 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.129078356 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.13570308 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.18329328 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.131843233 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.12476845 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.160592698 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.138907609 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.132470895 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.168282503 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.134712661 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.131164306 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.171882193 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.129330972 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.128339575 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.165606744 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131007302 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.155814297 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.161623276 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.145752194 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.16387014 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.125659416 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.132618191 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.130347023 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.178900962 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.129931956 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.174547476 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.1319672 seconds)
  done (took 5.227584248 seconds)
done (took 54.418164141 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.318039466 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.564306048 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.260847556 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.260787772 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.29336894 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.269159647 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.259719829 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.269106567 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.763626296 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.231614998 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.261724902 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.259216203 seconds)
done (took 29.156208971 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.440142842 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.477382005 seconds)
    (2/2) benchmarking "String"...
    done (took 1.660639457 seconds)
  done (took 4.287524342 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.250139211 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.25013544 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.580324984 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.252606913 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.251300742 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.251265891 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.268554053 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.254931301 seconds)
  done (took 16.248200417 seconds)
done (took 26.3669174 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.312137598 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.452514806 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.503066068 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.235586383 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.252835503 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.251410322 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.255445333 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.292131772 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.266048707 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.232657588 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.754517107 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.525821266 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.26312522 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.649511575 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.234097087 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.264174446 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.267648351 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.500390239 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.258522051 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.289060501 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.234938954 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.233693125 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.278936518 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.256873168 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.266230084 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.266846782 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.293294141 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.253015345 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.470839623 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.279768678 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.29417023 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.257040438 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.299019519 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.265211099 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.263991881 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.259539917 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.532688549 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.270278923 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.235211056 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.26987964 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.502951597 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.264412535 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.26580503 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.267705761 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.232119392 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.246365478 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.241945711 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.440050093 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.278172595 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.257022349 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.313625776 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.640486266 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.269941589 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.267814992 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.261111906 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.519196261 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.277733153 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.336826142 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.282753554 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.268807717 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.255579777 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.285097078 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.294098782 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.263374483 seconds)
  done (took 147.517533973 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.252659573 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.259909937 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.259210896 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.265077493 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.259847708 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.260623714 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.255690057 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.255689219 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.258871258 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.264593983 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.260220032 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.258748057 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.259881163 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.270001024 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.266993729 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.280388449 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.261486046 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.261082712 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.265917614 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.255356565 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.26446736 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.259878788 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.261514052 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.262246407 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.267064338 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.347457452 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.267825189 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.281158658 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.272208498 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.254884856 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.277907547 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.268289495 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.987327788 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.221525307 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.271202434 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.298043138 seconds)
  done (took 82.438854412 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.258916724 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.259242882 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.256243549 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.292097201 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.257354235 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.868982083 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.868323059 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.262750731 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.456659677 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.719159818 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.566152023 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.263104338 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.352305975 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.27066724 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.259269702 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.353941238 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.282898544 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.263686325 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.258819854 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.869487524 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.275530149 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.312457122 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.439979623 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.276372924 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.29384889 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.653689202 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.259593137 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294572725 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.597984213 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.311262905 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.25855739 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.671514304 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.119437814 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.372144391 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.262712458 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.295197665 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.259508279 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.544259644 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.259043905 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.261295868 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.263227677 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.259206216 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.968324324 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.265019665 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.87545616 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.265725341 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.340613286 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.264830954 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.260605556 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.556786796 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.145179425 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.265442903 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.261056871 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.264424059 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.261223721 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.260877378 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.297156154 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.261018946 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.38132433 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.221068196 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.265776395 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.265742452 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.294703397 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.260575385 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.736243974 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.265978097 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.192662489 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.324892293 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.365872504 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.854378549 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.260425505 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.358078845 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.382469796 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.262906268 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.262468223 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.261951049 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.262733411 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.263184026 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.375587567 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.262868693 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.987123643 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.442706367 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.280359116 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.799249891 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.362229094 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.26342896 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.629936391 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.267051139 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.262355219 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.018805464 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.359446966 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.261235525 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.261760452 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.262496299 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.986581953 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.85717248 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.586352846 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.266856211 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.068222643 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.265672751 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.262637099 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.15526318 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.854416892 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.903419702 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.2653255 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.376408969 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.445296431 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.282613662 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.265015963 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.77820315 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.26907884 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.317367872 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.265422369 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.667993256 seconds)
  done (took 386.726655893 seconds)
done (took 617.824747213 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.24231147 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.243725826 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.242289121 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.245030251 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.242478041 seconds)
  done (took 12.366257609 seconds)
done (took 13.51841341 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.557926745 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.548013752 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.549603759 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.362072579 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.559999704 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.565815527 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.47116655 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.367075031 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.539046481 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.567802023 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.55232289 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.33478084 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.560766771 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.529694802 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.314384881 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.446225738 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.487989569 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.483623581 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.382852735 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.450762488 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.577258463 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.336047901 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.333561481 seconds)
  done (took 35.029748686 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.660815876 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.277309426 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.398685824 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.617268229 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.339654086 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.649732274 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.693084225 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.276797909 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.512977244 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.340200594 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.31687612 seconds)
  done (took 19.237045787 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.645679594 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.27741314 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.417817028 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.633630366 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.340758346 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.652533887 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.685628249 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.276103477 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.565308968 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.321738191 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.316307891 seconds)
  done (took 19.286425111 seconds)
done (took 74.70503882 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.32948289 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.403697845 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.328244464 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.307414861 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.30885841 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.307479883 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.310581535 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.308380207 seconds)
  done (took 11.757024829 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.305907546 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.304490815 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.307427781 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.307257019 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.305471177 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.305365158 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.30594533 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.306251934 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.307359407 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.306984429 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.307470314 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.308512765 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.307925331 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.308126333 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.30755566 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.309145528 seconds)
  done (took 22.064918591 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.309874182 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.305935273 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.307597077 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.307050638 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.306355648 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.306363191 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.308470093 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.307448454 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.308214543 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.308347451 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.310161649 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.307994543 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.308694073 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.308804632 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.30847582 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.311431573 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.308013889 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.309358334 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.310228347 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.308982309 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.308357159 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.308834454 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.307026333 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.313154767 seconds)
  done (took 32.561287229 seconds)
done (took 67.536202615 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.277671763 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.273433934 seconds)
  done (took 5.708223162 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.406055687 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.407139972 seconds)
  done (took 3.970762344 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.3113053 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.310247763 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.310494792 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.309471617 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.311362849 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.308221248 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.310362931 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.306380581 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.309875997 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.311130207 seconds)
  done (took 14.25660407 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.312631096 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.312311852 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.313257782 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.312287198 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.314450043 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.31115549 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.311477528 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.310184976 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.308489019 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.31010368 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.309523788 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.310269065 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.310277585 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.309921464 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.311080271 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.310469369 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.314693369 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.311629852 seconds)
  done (took 24.764895872 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.332491583 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.338865578 seconds)
  done (took 3.829198672 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.491303049 seconds)
    (2/7) benchmarking "second"...
    done (took 1.391248287 seconds)
    (3/7) benchmarking "month"...
    done (took 1.47799591 seconds)
    (4/7) benchmarking "year"...
    done (took 1.465317273 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.391037435 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.340407883 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.391352629 seconds)
  done (took 11.106576891 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.304549133 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.681957601 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.87397755 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.508783345 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.299862154 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.325147772 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.266276808 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.327483405 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.337342479 seconds)
  done (took 15.083478493 seconds)
done (took 79.876522079 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.274193946 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.296764274 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.300939246 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.296971913 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.711596706 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.319046647 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.276250981 seconds)
done (took 16.6359433 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.254843301 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.258367632 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.254801955 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.302193177 seconds)
  done (took 10.230021639 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.289566921 seconds)
    (2/2) benchmarking "read"...
    done (took 1.684884929 seconds)
  done (took 5.132647734 seconds)
done (took 16.523131189 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.313037852 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.31262942 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.313691986 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.314832633 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.313735218 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.315064576 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.316583903 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.312402785 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.313323642 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.313426938 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.313350392 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.314047478 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.313307439 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.313420792 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313817281 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.313543712 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.312101351 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314560043 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315474265 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.314914068 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.315437947 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.313833554 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.315177091 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.314668018 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.315939199 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.314501865 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.31466704 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.313648404 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.316067497 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.312775179 seconds)
  done (took 40.584324447 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.320733174 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.321468114 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.313679065 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.315015618 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.315202024 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.315761522 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.315964062 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.31682758 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.316874723 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.315662278 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.315269002 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.316845041 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.317715681 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.316260888 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.315893313 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.315822843 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.315240017 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.315797142 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.315539567 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.314991313 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.315984456 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.316999599 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.316539205 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.318036811 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.317269955 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.318112449 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.316983047 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.316819548 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.317101148 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.317946368 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.316515738 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.31699911 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.317186006 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.316371866 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.3164841 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.317398392 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.321954698 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.323860318 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.317209472 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.317732933 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.317077192 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.318283002 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.318540088 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.319448513 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.317834202 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.317977237 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.318154355 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.318738298 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.319700082 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.317982615 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.319038965 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.319893473 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.316967053 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.317789015 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.317173364 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.319666489 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.318174608 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.317884558 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.31885144 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.319516539 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.319708603 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.319903041 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.320252666 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.320173956 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.319451447 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.319823212 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.319772857 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.318329447 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.319391035 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.318621383 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.320665428 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.319428748 seconds)
  done (took 96.047934241 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.320174793 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.320645593 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.320435091 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.32011466 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.318362691 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.320456044 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.319068437 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.323906832 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321159486 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.321542426 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.321402603 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.320996686 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.319820139 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.320258324 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.318395447 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.319837181 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.320105022 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.320191625 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.320859587 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.32099026 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.321312368 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.321880387 seconds)
  done (took 30.216677834 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.321825003 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.322195861 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.322321785 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.322685937 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.323213517 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.323845511 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.32074379 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.322705143 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.320410856 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.320257345 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.319908419 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.32179113 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.322909918 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.321757047 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.32205478 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.323705759 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.322864661 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.328058547 seconds)
  done (took 24.970458884 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.323057912 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.322066095 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.322462654 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.322036482 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.321027136 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.321558349 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.321801118 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.322415791 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.323283429 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.322267797 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.322256902 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.322356984 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.321293023 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.322187061 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323697098 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.322903213 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.321846095 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.324172089 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.322399447 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.322972635 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.323783702 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.323776997 seconds)
  done (took 30.264188554 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.323614406 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.32363515 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.322447219 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.323053651 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.321565403 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.323788731 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.322326883 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.3218264 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.326988509 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.323794736 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.322991493 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.324623195 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.326147899 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.324617536 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.325042102 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.325097137 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.324619632 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.323107638 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.323099467 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.324639188 seconds)
  done (took 27.646807462 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.325697144 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.325856102 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.32575127 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.326623519 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.327235328 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.327856217 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.325859385 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.327486827 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.333393024 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.326557938 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.327199709 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.326534959 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.327626229 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.326361753 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.328636204 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.325746522 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.329382249 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.326912592 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.32707183 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.325507385 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.326085181 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.330740522 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.327117087 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.32828183 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.328233569 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.328707652 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.32723449 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.329014744 seconds)
  done (took 38.33794542 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.353085193 seconds)
    (2/2) benchmarking "in"...
    done (took 1.354161657 seconds)
  done (took 3.879871805 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.32688661 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.326452756 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.327308592 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.327425226 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.325986356 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.326555981 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.327711855 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.32810108 seconds)
  done (took 11.789244429 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.320629809 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.329100998 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.327494998 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.328523411 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.328217086 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.319659713 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.337024282 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.33448625 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.321750832 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.32130273 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.329032833 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.3264992 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.324934617 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.32380214 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.323289575 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.328106877 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.333333868 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.33004211 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.329837475 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.329523468 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.331010459 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.326870757 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.32941249 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.333499672 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.322189574 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.339821356 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.335475063 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.335762041 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.322356495 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.335514593 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.325159436 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.332415037 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.331466104 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.330060478 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.330568224 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.331470084 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.341609921 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.331132331 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.341890823 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.335040021 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.331504098 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.331337595 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.329497697 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.330292979 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.331179963 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.336606072 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.330503201 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.330519684 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.323195219 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.329579969 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.336521006 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.323755207 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.334041012 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.336477006 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.338247761 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.345665745 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.339751025 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.329909621 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.333525234 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.34592737 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.351021104 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.34031674 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.336041825 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.336047971 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.34260083 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.35060066 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.346341179 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.33899248 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.334778745 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.334201786 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.34181274 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.352539733 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.349288482 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.338953997 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.33353152 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.335011247 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.328697944 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.337438162 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.346749681 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.341624099 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.338419222 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.334805425 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.34222194 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.34665777 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.328788807 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.337248613 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.334049044 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.335767908 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.32764355 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.347933141 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.344367674 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.334717424 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.325892768 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.330627938 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.331544605 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.336161044 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.324314217 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.32999783 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.340148423 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.334617342 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.33445552 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.333728193 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.343283249 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.340690042 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.336116205 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.346041072 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.343283388 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.330992789 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.350691593 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.343427471 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.336746105 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.331340947 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.339572721 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.33984182 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.335090168 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.341505998 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.340180969 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.338927946 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.342978043 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.336825724 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.344318506 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.36167162 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.342836893 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.336703292 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.337939412 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.348014926 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.337895691 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.341287394 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.344322347 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.33763679 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.336296047 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.341282296 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.342553268 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.333140338 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.341919388 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.333186015 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.340652188 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.337972029 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.337147064 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.341379445 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.338292391 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.336264828 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.345680341 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.348430063 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.346256113 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.342105375 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.35243525 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.337082949 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.344331426 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.341709654 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.34340128 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.338876054 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.33428413 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.341458715 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.331596916 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.341235503 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.334715958 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.34294801 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.340696606 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.339650804 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.339400073 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.330721596 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.339533749 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.342775573 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.34718577 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.338311527 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.34337921 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.338772269 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.339212689 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.331267894 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.341793464 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.330272865 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.339399444 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.34616455 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.342306379 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.340572778 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.346087027 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.348008989 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.338986683 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.341401096 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.33650585 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.342956321 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.344956855 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.350795727 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.34826356 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.339917737 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.340373731 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.334601628 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.336934815 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.343656341 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.33888227 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.351296139 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.356247118 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.356357607 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.33707785 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.345123567 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.336791292 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.346357243 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.348977269 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.350410901 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.342602435 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.341013267 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.336250161 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.345875966 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.339545134 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.346507471 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.334065735 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.344947566 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.343410919 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.342898772 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.344736087 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.338516441 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.341922322 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.347088691 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.343311185 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.343519103 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.337035457 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.347873986 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.334422415 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.338479006 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.346901306 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.342973852 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.352574863 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.352366876 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.349060241 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.355541302 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.345190265 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.339502251 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.34814078 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.348611789 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.344493458 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.358400744 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.347816437 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.340506639 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.359475461 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.347135415 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.338137343 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.352001955 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.353032533 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.343760055 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.338443736 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.351474653 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.345944481 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.344969287 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.343527902 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.3400878 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.351163581 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.357145695 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.357827626 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.337999406 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.349433053 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.344119668 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.34760384 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.347564799 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.351640805 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.348389834 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.354851689 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.354435505 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.346202474 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.339992747 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.349281847 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.345431008 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.345531998 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.341202188 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.35350473 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.354050051 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.347970088 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.350109465 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.344510849 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.350163383 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.33983721 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.348335078 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.340506778 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.365836954 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.366017285 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.359437118 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.351891326 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.350882329 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.358234661 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.35072812 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.343457084 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.344900842 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.346879935 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.342849255 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.344003731 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.351132781 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.340653794 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.350941135 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.353348914 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.348207059 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.353901987 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.349897009 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.341134372 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.358336839 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.349333739 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.348465192 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.347153713 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.350813396 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.348927053 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.359071011 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.350186222 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.345507134 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.364525475 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.354859721 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.348488729 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.345708767 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.343821027 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.341123407 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.349980469 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.353991524 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.34634977 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.356238527 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.345981846 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.354843587 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.347222996 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.363225728 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.360524756 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.347393477 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.355114362 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.349035866 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.341030448 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.341981128 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.351182368 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.363125087 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.361463424 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.342849883 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.354126457 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.349886603 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.35162593 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.351034234 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.35053864 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.350642774 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.351020336 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.365800568 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.357228109 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.348697205 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.362773856 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.361409087 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.351097091 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.349705713 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.34138608 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.361829392 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.360277938 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.352287536 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.349706203 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.348556684 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.355280654 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.352182495 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.352239974 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.352327555 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.353209161 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.365959945 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.359760204 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.356522013 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.352517314 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.364937119 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.364141348 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.365690497 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.367575723 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.353323911 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.357798433 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.352961364 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.349422717 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.348787091 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.349776043 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.358222439 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.346099179 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.359276972 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.354467632 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.35713047 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.362069366 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.360320471 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.344928779 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.363651341 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.373282455 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.344894418 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.356550578 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.353444317 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.34695697 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.356931492 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.355448692 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.344956017 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.352154768 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.355910832 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.359212578 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.34862904 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.35902282 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.348865243 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.35844223 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.354372368 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.358008306 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.353103911 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.355201174 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.346425617 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.354096844 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.36287757 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.366062542 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.353598457 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.358602864 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.350905796 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.37174846 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.367003373 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.357454604 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.363102249 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.357243823 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.350021047 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.357103721 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.360769201 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.351608958 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.359290941 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.348507307 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.355979626 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.353606418 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.365476084 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.361522439 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.359418121 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.349742869 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.352358704 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.361654789 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.357133194 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.356965226 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.360264528 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.36676752 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.350342247 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.348715085 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.360992623 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.358111182 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.362817018 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.352094914 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.357516903 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.356538147 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.362707995 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.35909336 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.359371048 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.351326311 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.352774539 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.37489502 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.368258282 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.361484167 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.356824356 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.362153106 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.352393695 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.357955715 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.359500255 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.353283473 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.35735068 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.364438383 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.355974527 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.355459797 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.354836394 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.361493944 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.372425782 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.36391136 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.353495022 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.377827376 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.373746131 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.368068034 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.352317358 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.357923239 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.354521688 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.363611322 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.359609487 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.353634286 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.377149077 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.368411164 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.365146783 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.368291457 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.36255623 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.354456946 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.365265304 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.362399925 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.365553818 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.367615533 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.364532529 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.367767158 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.359803366 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.360718706 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.352618513 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.354750838 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.360016592 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.357929873 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.365211735 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.36897199 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.366061564 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.363208408 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.367887634 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.362778884 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.361875696 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.362337767 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.354440742 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.367192155 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.354741061 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.370813006 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.364192891 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.356141727 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.363947469 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.362811011 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.36082249 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.365220605 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.373073768 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.364238218 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.356065321 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.363525348 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.375582747 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.372473203 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.36221764 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.357411442 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.360886465 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.366633425 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.36281185 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.36310204 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.358595601 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.386940336 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.377621693 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.358774534 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.3634407 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.37566069 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.375540074 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.365176116 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.36390277 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.367705488 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.366022174 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.37136133 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.364143373 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.374781877 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.376068842 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.35966103 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.367346644 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.359814122 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.36190468 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.373643674 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.375481826 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.364914491 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.366990663 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.386069625 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.376608366 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.373654988 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.400396657 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.374280207 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.370134987 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.3711194 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.356853271 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.36465049 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.368050505 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.370464359 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.364773691 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.364986846 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.365978453 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.357198216 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.37578389 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.382176951 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.377786658 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.365190783 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.357524235 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.359890668 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.368441406 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.365559684 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.368622714 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.364285709 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.364062428 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.366793081 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.359269639 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.386370711 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.38960108 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.371583077 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.367043742 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.369126409 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.374047216 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.373437642 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.369692333 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.3736978 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.36751098 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.367424936 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.373181045 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.375347452 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.369287533 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.36128449 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.361868294 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.362712675 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.371124777 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.384370457 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.390563702 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.379120697 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.372207038 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.370323699 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.368949641 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.364187653 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.373817578 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.369859603 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.363760782 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.365401354 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.370016676 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.368182783 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.368569355 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.364416802 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.373678035 seconds)
  done (took 806.370452995 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.367983177 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.368713856 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.370132682 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.369290676 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.37025246 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.36975966 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.370275648 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.369207145 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.37028794 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.370451787 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.369414435 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.368564466 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.369468282 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.368407673 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.36862879 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.369508232 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.368374079 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.369121101 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.370436213 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.370633794 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.371234917 seconds)
  done (took 29.968555081 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.370689247 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.370629115 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.371594949 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.371059407 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.371426353 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.371929909 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.37100528 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.369684511 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.369776003 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.371298543 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.373074118 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.370238073 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.371473844 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.373155343 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.371207469 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.372030061 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.3704154 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.371522873 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.372966213 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.37116333 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.371863489 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.371488441 seconds)
  done (took 31.379239707 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.369550625 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.37128674 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.364706853 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.376223541 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.37220634 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.370631559 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.372627413 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.372626924 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.373204302 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.36791599 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.365206707 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.368616288 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.37489027 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.376741484 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.377655008 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.379617687 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.379425623 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.372980321 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.37200373 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.371840651 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.383730222 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.38662235 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.37284895 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.364387189 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.376701325 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.377304754 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.375768804 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.375459268 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.369472403 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.378854043 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.374462981 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.367682301 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.384892241 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.375500125 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.36783218 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.377922779 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.373549248 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.373802563 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.373302639 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.381940329 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.396158269 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.375734233 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.389109187 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.3898736 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.376396328 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.374068378 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.382536913 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.375130315 seconds)
  done (took 67.232209768 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.373925273 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.374440982 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.373063083 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.374470315 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.374270708 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.374418982 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.376163408 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.376768373 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.375499776 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.376513173 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.376921255 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.376842544 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.377374245 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.374889922 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.374319598 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.375018988 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.375774951 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.375023039 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.375890747 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.3739354 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.376170322 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.374844525 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.377344144 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.377677775 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.377137833 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.378660233 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.379706456 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.378706119 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.377317535 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.376543205 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.375975674 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.376099852 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.376213763 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.377680639 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.376249662 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.376599007 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.375884112 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.376896601 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.376728913 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.380387408 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.379345656 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.381263009 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.380451104 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.379126493 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.379124957 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.37855156 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.377511414 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.378170157 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.376979852 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.377777509 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.385770844 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.377808309 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.379368913 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.378136214 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.37903102 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.379781326 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.38001704 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.381044126 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.379745916 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.378970328 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.379236424 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.377714024 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.378516709 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.379319675 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.379201224 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.379523332 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.378103947 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.378534868 seconds)
  done (took 94.881534868 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.379643389 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.379570405 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.380486443 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.379752272 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.382098799 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.381391028 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.381069548 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.37968243 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.38109497 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.379963751 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.379705129 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.380322037 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.378656323 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.379333573 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.379363744 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.380191992 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.379407255 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.379747802 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.381533364 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.38250332 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.381335294 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.381772151 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.380619351 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.38215593 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.381542933 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.380653224 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.38025492 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.380333351 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.381568285 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.381019193 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.381284729 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.379971433 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.381062075 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.381356805 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.383013371 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.382801333 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.390024388 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.384171409 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.383436679 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.382765295 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.380371904 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.381297022 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.383094596 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.38165363 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.38045257 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.381860082 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.381449764 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.384068603 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.38363859 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.382873688 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.384726787 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.385170908 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.384506158 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.384502875 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.382692799 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.387608648 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.381272926 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.381184157 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.383237002 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.382453873 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.382463441 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.382076938 seconds)
  done (took 86.888263586 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.382439136 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.382357491 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.38459339 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.385744444 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.384856272 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.385692901 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.384968228 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.383976622 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.38360758 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.383128329 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.383794825 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.383097599 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.383918794 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.384083618 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.383542698 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.384231961 seconds)
  done (took 23.362730764 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.384257732 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.385038419 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.387183803 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.386571854 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.385757924 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.385615657 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.386146032 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.384218202 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.38408313 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.384070838 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.384728603 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.384956704 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.385955434 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.384849847 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.383354196 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.386326571 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.384791879 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.386063689 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.387751334 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.387727448 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.387793308 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.387037905 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.386495448 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.386687999 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.384499244 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.387572609 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.385929034 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.384366615 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.386446418 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.385785721 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.385353822 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.386042806 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.387122692 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.386066064 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.389159473 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.388917683 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.387933759 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.388277937 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.388099353 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.386018571 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.387065073 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.38726873 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.386807359 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.387912178 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.387732476 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.388163327 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.387310985 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.388113461 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.388557302 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.391531912 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.389674064 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.390952019 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.390167703 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.390013074 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.389207873 seconds)
  done (took 77.497822385 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.388023993 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.387310356 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.387226825 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.387505353 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.38718059 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.387919441 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.387905683 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.389812141 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.388522102 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.391346553 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.390010071 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.392112153 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.391344458 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.39061762 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.388964617 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.388677359 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.38843948 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.389244052 seconds)
  done (took 26.226808941 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.388148032 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.389259906 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.389591512 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.38623012 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.389393791 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.390732649 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.392306522 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.390858293 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.391031848 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.390971156 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.390615664 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.390864788 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.389454343 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.389839168 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.389648153 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.390680198 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.38973315 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.390667067 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.388689651 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.389184337 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.391430223 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.391918973 seconds)
  done (took 31.803720711 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.379593173 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.382725206 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.38162744 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.405901617 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.398635329 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.386443975 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.378022443 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.382816138 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.41181005 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.436646238 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.431534205 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.396298161 seconds)
  done (took 18.000575492 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39184089 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.393557868 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.393056897 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.393626103 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393519735 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393821099 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.392581277 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393505696 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398414631 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.392176128 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392291157 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.392452141 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.392412192 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391705956 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.392780535 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.392719703 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.392508642 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394381506 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393301131 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395052332 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.393267468 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.393917272 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39344724 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39481578 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393026306 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393965532 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.392432027 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391857163 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393735963 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394358598 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.393410014 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39294976 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39514117 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396146116 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395958173 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394764725 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395071259 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394606395 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394508548 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393768509 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.392440617 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.393757544 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394033487 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393650478 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393880046 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394544796 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395306135 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396068173 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.396818408 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.396899006 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397426167 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398415888 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395265487 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.395402656 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395901462 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395941482 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.395445538 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395412154 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394730014 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3941291 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394271018 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.395367456 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396385113 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.396104002 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397372948 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398293596 seconds)
  done (took 93.259160124 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398052574 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.397250586 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395715335 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.396832237 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396815405 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39603912 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396239005 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402330701 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.396353266 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.395897132 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.396338319 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396649951 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.397906117 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398786186 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399995208 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399177298 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.398370142 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397874269 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397798002 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397654129 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398812866 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397458294 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.396572846 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397865887 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397429799 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397360517 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398021983 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398995431 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400357965 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400223869 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400745933 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.4006902 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399782612 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.398800224 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.39920719 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398800294 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397850243 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398209786 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400594726 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397356954 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399506948 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397514795 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399297076 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400857679 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40091439 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400599545 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398804835 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400563088 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402146041 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398703216 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399434523 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399020434 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39918966 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400953082 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399553672 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399013171 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.399289951 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399942478 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40186947 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401195361 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403519958 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402783273 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402484422 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402385946 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400668339 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400282676 seconds)
  done (took 93.572902604 seconds)
done (took 1785.341618627 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.618237348 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.571029179 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.390697239 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.385206107 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.391428337 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.383605136 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.370355825 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.392843322 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.391107696 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.390660642 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.391998732 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.692300537 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.388426979 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.392399341 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.393352814 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.545337644 seconds)
  done (took 28.322973404 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.430052593 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.407248924 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.537066201 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.396035347 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.428154796 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.651705151 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.469943769 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.39892985 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.598724461 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.425243811 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.377030278 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.427868377 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.395466071 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.370407158 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.419152952 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.64850174 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.751679456 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.385535758 seconds)
  done (took 30.753232168 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.968891225 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.415974546 seconds)
  done (took 5.621265386 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.423903836 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.398049361 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.400672181 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.397692821 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.367561545 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.366514694 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.396699049 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.375600696 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.369476244 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.552493582 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.406737686 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.419121035 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.4173588 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.399567641 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.407487782 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.454332776 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.607627898 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.407141369 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.407476328 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.410679459 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.39738992 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.554592731 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.451186355 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.40717203 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.54711252 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.381408488 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.407835452 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.414557675 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.588940186 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.409039725 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.399141609 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.400253831 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.401892377 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.370137781 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.022073407 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.387634629 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.433686854 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.416101307 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.40525761 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.61158692 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.400591933 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.414806869 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.369868473 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.039412205 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.564745559 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.560478466 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.387612908 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.40118251 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.403164955 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.475599096 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.400991495 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.402386016 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.500152917 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.316946519 seconds)
  done (took 89.679616174 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.401536117 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.370958485 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.638004176 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.396997831 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.37008093 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.371808874 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.371272352 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.764451262 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.387209994 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.37376876 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.801475872 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.121011478 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.379438265 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.452885385 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.396215818 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.438895826 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.372128537 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.370678631 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.389913411 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.374083464 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.04623954 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.383027339 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.37239547 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.529111628 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.444670792 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.047585241 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.388726737 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.371668631 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.390641855 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.373220156 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.099878413 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.383547866 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.415803924 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.374238232 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.761370493 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.888858842 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.852225552 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.378325623 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.401434638 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.375651261 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.376016112 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.046662637 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.868968324 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.374932524 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.373450702 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.049058404 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.373736772 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.386315537 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.374994404 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.730732448 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.374944677 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.375503128 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.387775848 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.374599312 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.373641927 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.411024894 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.431039589 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.050490708 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.375652938 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.373886861 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.423986179 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.375662226 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.38799522 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.377466087 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.378219604 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.874252236 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.556154243 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.381382717 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.871603156 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.082750468 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.375945712 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.160828692 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.380055103 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.381241218 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.450691251 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.383188812 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.376416582 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.044929387 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.396573126 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.37564309 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.855908562 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.377823185 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.782223704 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.394553455 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.377203972 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.066638991 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.384415365 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.429911444 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.377903852 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.388209423 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.381307568 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.380670754 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.764956354 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.434160587 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.377340023 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.37764523 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.389053454 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.376635464 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.37919417 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.379203529 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.160478648 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.382127015 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.376875509 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.377826957 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.376586297 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.379322398 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.37881549 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.379494208 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.74605835 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.378320526 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.379776995 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.380512564 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.379755624 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.386804286 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.532081978 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.383949593 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.806468965 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.380857021 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.396933158 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.38206297 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.378199141 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.388721219 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.390459499 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.380779916 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.396456351 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.783157621 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.409104048 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.379481427 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.381274532 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.379037167 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.378537801 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.380348856 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.428675392 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.381249669 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.286050342 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.394714789 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.396057348 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.379904456 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.391265189 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.380822799 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.386858273 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.38287732 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.774862501 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.771977358 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.556492694 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.382131136 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.381162996 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.30913575 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.389652203 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.648801848 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.399328504 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.380440767 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.770086545 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.624840142 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.384748159 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.381052786 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.382877878 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.747793347 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.380917085 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.796825001 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.116721267 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.385721885 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.387072965 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.285889777 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.217197103 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.383201453 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.384563637 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.784899113 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.400610301 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.381470088 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.381555993 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.381634005 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.382503739 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.384057638 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.39233823 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.381868044 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.382503878 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.498233679 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.663598283 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.400925006 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.384430101 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.066417385 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.405452187 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.382059618 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.382456107 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.385441263 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.382113606 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.443238208 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.381966938 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.434170994 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.384964945 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.383705009 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.100222312 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.39433618 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.382795047 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.664526194 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.248395833 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.388536559 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.385355009 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.38341398 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.433329406 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.087566792 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.395420675 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.829177509 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.390548267 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.457215474 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.383574126 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.390326242 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.084022067 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.387857283 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.383927243 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.244559311 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.38429384 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.077062314 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.383415866 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.384881346 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.165813264 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.384677829 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.385897257 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.384794393 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.385251784 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.775374718 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.385566838 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.420827048 seconds)
  done (took 514.235410046 seconds)
done (took 669.84559805 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.384412152 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.389986115 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.39231581 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.390123842 seconds)
  done (took 10.806921536 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.424066497 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.413932317 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.424469271 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.41521537 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.424441125 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.414022482 seconds)
  done (took 9.7700716 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.386194082 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.390523893 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.391966395 seconds)
  done (took 8.421775074 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.697109388 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.410726183 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.875771982 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.39231162 seconds)
  done (took 9.629455394 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.426509753 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.431044618 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.424736624 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.425927278 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.427746503 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.426343672 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.426481608 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.425728928 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.432210129 seconds)
  done (took 14.099297753 seconds)
done (took 53.979585743 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.36543893 seconds)
    (2/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.595012676 seconds)
    (3/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.736258291 seconds)
    (4/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.979659075 seconds)
    (5/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.366114713 seconds)
    (6/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.607872202 seconds)
    (7/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.366873748 seconds)
    (8/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.396828326 seconds)
    (9/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.566794772 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.528449672 seconds)
    (11/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.525885799 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.570515916 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.623123653 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.454358826 seconds)
    (15/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.782090237 seconds)
    (16/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.370808677 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.653504402 seconds)
    (18/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.460585944 seconds)
    (19/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.483267949 seconds)
    (20/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.396077323 seconds)
    (21/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.908109613 seconds)
    (22/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.394530548 seconds)
    (23/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.627527215 seconds)
    (24/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.643138 seconds)
    (25/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.371861813 seconds)
    (26/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.676565505 seconds)
    (27/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.744945499 seconds)
    (28/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.397092046 seconds)
    (29/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.571263357 seconds)
    (30/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.371087203 seconds)
    (31/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.527256574 seconds)
    (32/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.368418009 seconds)
    (33/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.366399177 seconds)
    (34/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.525532542 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.568524531 seconds)
    (36/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.923177801 seconds)
    (37/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.557675177 seconds)
    (38/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.549024076 seconds)
    (39/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.484824781 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.529715755 seconds)
    (41/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.736873453 seconds)
    (42/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.037945328 seconds)
    (43/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.858644944 seconds)
    (44/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.463361018 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.737295644 seconds)
    (46/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.407045896 seconds)
    (47/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.88172616 seconds)
    (48/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.458069214 seconds)
    (49/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.420779276 seconds)
    (50/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.841358388 seconds)
    (51/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.392381042 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.678064439 seconds)
    (53/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.587901436 seconds)
    (54/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.461110592 seconds)
    (55/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.689693012 seconds)
    (56/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.582528546 seconds)
    (57/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.804923237 seconds)
    (58/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.564068238 seconds)
    (59/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.608283917 seconds)
    (60/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.912680097 seconds)
    (61/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.686267716 seconds)
    (62/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.396716021 seconds)
    (63/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.402858562 seconds)
    (64/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.490913753 seconds)
    (65/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.632295629 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.638536786 seconds)
    (67/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.460011919 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.578784565 seconds)
    (69/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.370826486 seconds)
    (70/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.627779412 seconds)
    (71/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.813419989 seconds)
    (72/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.540815211 seconds)
    (73/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.481817695 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.562797545 seconds)
    (75/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.794666556 seconds)
    (76/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.36946493 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.741246774 seconds)
    (78/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.370286822 seconds)
    (79/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.567585934 seconds)
    (80/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.036640414 seconds)
    (81/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.369822797 seconds)
    (82/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.376206569 seconds)
    (83/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.324636045 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.555553189 seconds)
    (85/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.08580735 seconds)
    (86/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.52331515 seconds)
    (87/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.560280117 seconds)
    (88/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.652042204 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.582212235 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.552990293 seconds)
    (91/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.876960471 seconds)
    (92/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.465129959 seconds)
    (93/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.690742307 seconds)
    (94/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.372066309 seconds)
    (95/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.760057267 seconds)
    (96/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.80112038 seconds)
    (97/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.047952746 seconds)
    (98/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.548856318 seconds)
    (99/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.741925841 seconds)
    (100/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.588761113 seconds)
    (101/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.459175011 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.639292958 seconds)
    (103/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.598338238 seconds)
    (104/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.414075002 seconds)
    (105/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.661758035 seconds)
    (106/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.40701789 seconds)
    (107/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.60516683 seconds)
    (108/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.540202564 seconds)
    (109/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.396633818 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.564007197 seconds)
    (111/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.58735856 seconds)
    (112/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.458864078 seconds)
    (113/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.37654097 seconds)
    (114/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.576160558 seconds)
    (115/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.927479815 seconds)
    (116/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.45939124 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.57977666 seconds)
    (118/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.093814653 seconds)
    (119/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.374468988 seconds)
    (120/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.394416776 seconds)
    (121/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.55350195 seconds)
    (122/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.712811175 seconds)
    (123/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.542632551 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.466513095 seconds)
    (125/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.87011854 seconds)
    (126/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.390933791 seconds)
    (127/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.628974118 seconds)
    (128/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.984847724 seconds)
    (129/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.397972815 seconds)
    (130/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.792603165 seconds)
    (131/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.547347536 seconds)
    (132/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.552485411 seconds)
    (133/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.697999585 seconds)
    (134/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.46184651 seconds)
    (135/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.373930022 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.645712629 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.557876878 seconds)
    (138/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.877821545 seconds)
    (139/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.590301532 seconds)
    (140/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.599075413 seconds)
    (141/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.375834385 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.537227743 seconds)
    (143/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.770105822 seconds)
    (144/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.108105368 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.600021204 seconds)
    (146/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.373489534 seconds)
    (147/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.480316457 seconds)
    (148/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.553982877 seconds)
    (149/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.652070071 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.634616595 seconds)
    (151/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.630511394 seconds)
    (152/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.39461764 seconds)
    (153/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.759354385 seconds)
    (154/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.376031686 seconds)
    (155/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.836514895 seconds)
    (156/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.656908885 seconds)
    (157/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.69819528 seconds)
    (158/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.376935573 seconds)
    (159/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.471273756 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.609275454 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.533798886 seconds)
    (162/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.683679119 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.607171206 seconds)
    (164/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.111749476 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.467634537 seconds)
    (166/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.460108091 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.589012192 seconds)
    (168/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.377168563 seconds)
    (169/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.422427321 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.761858195 seconds)
    (171/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.994831187 seconds)
    (172/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.875507982 seconds)
    (173/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.649864413 seconds)
    (174/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.46061444 seconds)
    (175/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.793704353 seconds)
    (176/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.378284696 seconds)
    (177/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.377326265 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.59746655 seconds)
    (179/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.378686005 seconds)
    (180/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.607550862 seconds)
    (181/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.376909103 seconds)
    (182/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.384215688 seconds)
    (183/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.570405217 seconds)
    (184/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.630143121 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.700121293 seconds)
    (186/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.283938132 seconds)
    (187/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.391374001 seconds)
    (188/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.401716308 seconds)
    (189/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.388623721 seconds)
    (190/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.609967231 seconds)
    (191/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.795684004 seconds)
    (192/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.379168398 seconds)
  done (took 355.665660984 seconds)
done (took 356.920417613 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.459768522 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.584307055 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.433391774 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.433026504 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.442887255 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.401167006 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.478975364 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.43147917 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.454135124 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.454751823 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.403121305 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.461236586 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.455498007 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.443705725 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.476455421 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.433245666 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.433385279 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.445068678 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.456930592 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.45891555 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.434049888 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.442184372 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.468284898 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.434169946 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.450211022 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.449404006 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.448219078 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.405656404 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.442115858 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.458301645 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.412008398 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.44916047 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.460997729 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.445883377 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.436775096 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.444981027 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.44479469 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.585948814 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.463491412 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.445564272 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.443161173 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.461240497 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.447668799 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.449845123 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.447731517 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.471268169 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.45336261 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.459127729 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.410164449 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.412568246 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.464208263 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.455612547 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.443254831 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.413255625 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.409792684 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.4583791 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.446548126 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.464285926 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.444156412 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.446506151 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.478571541 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.465172142 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.456454344 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.452865969 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.443747979 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.459587424 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.445533891 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.460058992 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.443711872 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.445225821 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.444818507 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.44578532 seconds)
done (took 113.679042568 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.614359899 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.407445318 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.652885608 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.445579357 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.664216238 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.617235334 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.444414055 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.444453027 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.445938481 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.305128676 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.445879745 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.445323878 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.409442919 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.446696679 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.619172592 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.44699958 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.447351719 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.204706619 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.448522888 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.626633317 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.413144158 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.44699511 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.446804164 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.307712385 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.410800703 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.416889257 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.628963222 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.447448589 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.210939044 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.415605643 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.40847429 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.207739336 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.625298022 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.464930491 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.455897289 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.456282465 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.668326608 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.450315295 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.6152656 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.615300102 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.655418263 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.486371207 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.414780609 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.411135872 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.448737859 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.44849998 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.446901313 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.475231382 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.408635204 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.447902628 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.207203584 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.459110338 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.457530807 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.447488958 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.449167035 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.468682575 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.448566678 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.448505498 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.628470492 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.452203245 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.618140966 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.31093542 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.308230886 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.449566177 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.413942933 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.450545283 seconds)
  done (took 116.630442463 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.561912377 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.578929904 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.615290184 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.440739566 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.532550753 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.609764761 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.440370874 seconds)
  done (took 12.053083148 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.453751137 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.450995479 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.532738346 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.531883768 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.45085901 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.672929428 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.451407682 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.460752306 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.45015459 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.535432264 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.450176241 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.451400558 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.465328448 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.413287332 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.531785432 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.459652796 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.616509265 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.444299097 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.451364661 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.655122345 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.450844553 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.460575539 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.535405795 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.46147684 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.45164633 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.456690757 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.26373228 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.449737848 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.450603949 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.450403365 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.450709061 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.563117419 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.45341087 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.41652231 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.45164193 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.614324349 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.451784825 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.452183549 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.453177531 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.419185498 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.451998121 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.450346584 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.45110527 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.450465803 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.453299613 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.476167185 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.454730172 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.45430428 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.456060578 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.455027487 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.536609718 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.453028419 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.452616285 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.453249397 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.536741858 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.464070466 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.452073898 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.452156661 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.45339795 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.453574089 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.656316491 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.53592248 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.455273816 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.538608576 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.454600686 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.45534275 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.454866363 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.45545303 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.594298828 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.454771308 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.536158614 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.453703017 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.686571525 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.47645137 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.453731232 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.451609174 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.450543886 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.455076724 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.417478787 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.460066535 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.455716261 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.449172133 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.461179735 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.456503023 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.457178389 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.663895108 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.616209994 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.453326642 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.467909223 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.462609875 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.454915042 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.538703979 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.456802014 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.456420681 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.539587331 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.622327812 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.539683643 seconds)
  done (took 150.076525796 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.467873394 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.467960975 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.459660199 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.485038286 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.447185497 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.445743554 seconds)
  done (took 10.053117928 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.448035466 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.460172904 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.457627538 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.456824712 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.459667671 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.456335754 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.458532401 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.449856228 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.461931856 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.457893983 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.458211132 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.457169309 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.4570459 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.458579474 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.45623183 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.457617341 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.457382186 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.456491988 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.45850663 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.459391449 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.421409944 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.459800719 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.460588878 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.45141313 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.463955367 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.459071087 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.4805132 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.459205881 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.458096382 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.464175438 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.460478878 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.458204217 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.457490998 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.457181811 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.464034708 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.452421778 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.465972663 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.463630187 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.459221036 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.459298909 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.46191712 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.461471113 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.459618922 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.4597959 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.451990508 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.456100807 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.463921495 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.483186305 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.460273265 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.461059678 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.460582802 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.460929005 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.46035889 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.461251882 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.45604263 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.455518052 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.46611458 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.461135525 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.460459043 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.452027315 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.463730618 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.461570288 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.454048242 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.466313209 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.46185943 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.46282764 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.455176249 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.464615438 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.462142078 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.462566574 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.463259609 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.461359297 seconds)
  done (took 107.356162054 seconds)
done (took 397.440912224 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.946084066 seconds)
  done (took 4.22989795 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.541277071 seconds)
  done (took 3.827361427 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.705326007 seconds)
  done (took 25.99472412 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.439741395 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.432471336 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.436308556 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.429857805 seconds)
  done (took 11.023505503 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.945572408 seconds)
  done (took 4.232853983 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.433435983 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.455715912 seconds)
  done (took 6.177472149 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.711434324 seconds)
  done (took 3.996471898 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.259418045 seconds)
  done (took 4.551526979 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.453376368 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.439534595 seconds)
  done (took 6.186740786 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.401108828 seconds)
  done (took 3.68567637 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.76034648 seconds)
  done (took 23.046536365 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.451911658 seconds)
  done (took 3.741046679 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.465967844 seconds)
  done (took 3.752012319 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.495759132 seconds)
  done (took 6.782447195 seconds)
done (took 112.515165234 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.425806452 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.424991823 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.425601957 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.424067963 seconds)
  done (took 10.986925712 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.581147784 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.583543968 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.587171595 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.571045243 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.573776596 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.586595404 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.497087584 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.498538676 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.560736041 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.557365919 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.588302884 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.569877357 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.58499143 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.498173196 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.557492192 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.588370001 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.560823552 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.586739697 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.499994238 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.5723181 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.468811083 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.576195409 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.559017875 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.465110961 seconds)
  done (took 38.561377114 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.011924003 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.582968616 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.667905186 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.551419073 seconds)
  done (took 8.101522408 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.633480696 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.633508912 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.650846033 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.679291689 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.715127671 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.642750799 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.500686645 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.494934028 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.480631999 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.631591629 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.709553568 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.627420638 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.852549825 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.465862873 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.850029393 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.466971672 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.465744073 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.633728912 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.681510477 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.713078737 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.468532067 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.632019197 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.636173427 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.628509253 seconds)
  done (took 40.183917174 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.481068787 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.490656179 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.467880098 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.491546865 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.4711977 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.468291185 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.470625559 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.482264749 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.469002657 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.469113286 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.470715585 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.49063851 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.468914937 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.467634257 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.483013797 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.471000956 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.469601058 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.481596647 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.486595607 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.469464378 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.469919952 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.484254247 seconds)
  done (took 33.764725529 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.43245653 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.431221316 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.869492762 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.773275568 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.430045678 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.436397534 seconds)
  done (took 14.663965719 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.553264071 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.744934884 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.460797774 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.889221109 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.015235667 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.461655564 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.461712415 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.790122543 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.145732079 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.123489237 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.543789263 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.551740483 seconds)
  done (took 22.032821214 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59942455 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.442334182 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.450672114 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500899032 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443326558 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.444564075 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.49831686 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.059915301 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.475550767 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.803710723 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458205893 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602117351 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.781514675 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460109487 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.45074873 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.410148036 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.758005331 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069597678 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44648066 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460758732 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505379001 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.4523372 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.461770243 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.726226638 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.449803079 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.445367948 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.790048861 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.44389304 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849025006 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802900564 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806599987 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.445413415 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.798017262 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011906193 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.627260282 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.724537526 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443311052 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.446466482 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.420796039 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.479477244 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.445074335 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.447881955 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801475034 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447266304 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.445385129 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.449705511 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069088464 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.480298368 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.445588088 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.445704653 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.811357576 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.611130368 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.472224576 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.444054583 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443218792 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446772456 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.473536754 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.649736324 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175089234 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461634402 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447689332 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.470386353 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.440202137 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467073292 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252774812 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.47748998 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.475405008 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.476123954 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447210431 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.447212876 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.498904784 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447380075 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.496312555 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444899662 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439293991 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.470280404 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448908272 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131303499 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463082072 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.452587442 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.761491458 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449937733 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447307091 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.445880024 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.446744659 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.363374979 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478943307 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.415519599 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510694482 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.068996134 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.735005339 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505105223 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509210564 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.753671888 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.414088482 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448140716 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.448122069 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448116622 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501794467 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.075777164 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453950324 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.477509465 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788631082 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.74873383 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449095727 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.443412951 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078039672 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462117844 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.509676894 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.466510092 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.736502456 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.245209464 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823842683 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452062236 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520857646 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.450380177 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.425589595 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459340185 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.483574413 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.467193558 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.83672379 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.419650082 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452053086 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60251754 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454975804 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.45311181 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.449156489 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450800552 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.449677155 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.72218632 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457121398 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.822033933 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.458817564 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450698374 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.468013146 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452085074 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.453085968 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.756227939 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462120288 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.811104681 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45264974 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452032553 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45255287 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.759212956 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.451525016 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.479991625 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.88223705 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452182222 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.476598316 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.822595597 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51900755 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.652503227 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515078629 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.468395946 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.798152964 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.481909396 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.483445485 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.453610407 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.455552903 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457640807 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.485039893 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445102342 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248424398 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456767093 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.464379514 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.455070369 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.501804873 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608838876 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.483323124 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.735634049 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.472505756 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44973212 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.502207089 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.46900608 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.759805 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.816918828 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.457966058 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.721557888 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.082720784 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.249561973 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.500563235 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.453381886 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.455164236 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.454723397 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456495481 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456009874 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.454877397 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.737634932 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.841825487 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.45632423 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.268565857 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456972078 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.455030001 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.484886102 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825055407 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.494705158 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457634173 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.459273976 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457134598 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.469497274 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.827767693 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.763191744 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.501715058 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.456413975 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.061052526 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.486518502 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.458258554 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.456866757 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513355713 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.457340001 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181754468 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889932022 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.463384415 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825863959 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.464176345 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.524589754 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.455457569 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458135075 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471149718 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.489179944 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489459379 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.741653739 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.463673907 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460838002 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186811465 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458287678 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.190983644 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.459340674 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.47562382 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.463959488 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.09257532 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464322523 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.459299888 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.816598745 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.089907243 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462611551 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088071814 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.463340834 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.431839622 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.834813841 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.777989785 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.460689869 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.466642441 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.836085371 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.76506824 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517230857 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.458721951 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466736517 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.428102694 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181495007 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477314189 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.718357481 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093966698 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464797374 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.461346376 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.47926765 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.46466258 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010906345 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.466480549 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463318974 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.467486054 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.467819197 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184941185 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.478060374 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.462311304 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270870897 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.468322683 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.103877246 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468723293 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.748224757 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.839616966 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.816367361 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.46861434 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.49020235 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.801310279 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.830333453 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46314898 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.467255718 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.195795848 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.415218304 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.494161164 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464369527 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.444379275 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477069186 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879679672 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.484197676 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.471431667 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462631177 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.462633691 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462573069 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.46498427 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.464983711 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465176613 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093100107 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.46552973 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463078301 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.478307332 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46914262 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.800241777 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.510401707 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.257922044 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.780150604 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.462673849 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527842751 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.492211125 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471304905 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.432354701 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.464387196 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.463526822 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.553138147 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.772124025 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.48802002 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.436784943 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.520020807 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.761775852 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.464807152 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.464656364 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.791389325 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.469624804 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.473417884 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467139502 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533255381 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.467007082 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468767152 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.460012758 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527173742 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617775976 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.747543385 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.840539499 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.837954184 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016513902 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472943731 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468926391 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.511927949 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.627405622 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466204257 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.473128811 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.470196524 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259708864 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468548969 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.270761317 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.843807512 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.474181179 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47145688 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466680505 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.796483128 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.466359025 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.82782203 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467494714 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.476021288 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.518795791 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473773445 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485227416 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.769524183 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.822216569 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.469126696 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481364774 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474813242 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.469000213 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842445747 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.764378906 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104655627 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161315625 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47106088 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.484368508 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.111236003 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.826854448 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468743616 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468031305 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467605902 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.481009003 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.477452056 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.503709724 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477122475 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790984175 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.835565403 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056785783 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.839379295 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.498529736 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.414174596 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480599453 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.807816552 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401054562 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.755871121 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283499948 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409162366 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81286091 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622585456 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.757405393 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.475322106 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.792708835 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.485082635 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.475028075 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472883179 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472514976 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.47151841 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.833869866 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272451546 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.808330305 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.498699172 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.484937435 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.53465989 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.7550882 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.781248859 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.396192072 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.774145302 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848704433 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.483803283 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.47225782 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.27630427 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.846877037 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472599833 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.497344111 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.798380297 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.477513098 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.536729357 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.430350466 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.471682956 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161528083 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.772047689 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522492071 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471208874 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391756662 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270433691 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.473889383 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.126059187 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474122582 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490922973 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.833999981 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.502223782 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.473395883 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.85126698 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.499582105 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.474082633 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.766070183 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.27042559 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.442099656 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.492704555 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476544329 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.476131497 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475163148 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532606136 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475008309 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.485550712 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.006328668 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.500900359 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4757737 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.519480235 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.492343545 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475418767 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.480619219 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475689681 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.504562626 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.465457025 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.451676712 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.475598748 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.675365841 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.206361997 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484744813 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.17735747 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.899238024 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.813321303 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.475637439 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.44690306 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.502835451 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477240298 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475680742 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475349694 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.467420054 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170233519 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.48024892 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.848991132 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.504956392 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.774136851 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.775005118 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.481210774 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.762135534 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482641473 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.529598142 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.444493186 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477955192 seconds)
  done (took 1042.018510481 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.476020519 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.517535994 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.484250406 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.546130902 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.487085195 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.60628492 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.568779871 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.5784656 seconds)
  done (took 21.587047766 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.466329133 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.505325083 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.485003994 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.500871235 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.467016232 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.090309668 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.482266355 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.501201934 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.524304732 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.469314359 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.470319445 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.25642772 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.50233434 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.474779021 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.487898706 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.507354741 seconds)
  done (took 34.519886014 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.688584351 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.642870856 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.003908528 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.534137267 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.484624476 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.468854245 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.84817811 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.49358176 seconds)
  done (took 28.48939792 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.513018031 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.514423727 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.515438661 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.513217708 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.513895307 seconds)
  done (took 8.89320702 seconds)
done (took 1305.091311226 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.508090519 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.509300938 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.507997072 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.507947694 seconds)
  done (took 7.356696197 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.447394114 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.450265708 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.451951886 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.488172553 seconds)
  done (took 10.161119651 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.968134845 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.186097897 seconds)
  done (took 5.479563148 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.480212324 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.328551767 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.315374532 seconds)
  done (took 8.450101581 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.864912919 seconds)
  done (took 3.188935339 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.010410891 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.083363115 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.47397829 seconds)
  done (took 7.892765484 seconds)
done (took 43.853966766 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.479534583 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.246849267 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.630026975 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.471900512 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.637726278 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.630785451 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.765320785 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.474592334 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.471285699 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.471769839 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.47263168 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.638421268 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.751631475 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.246085064 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.740690349 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.246517102 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.640760393 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.47662311 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.472858944 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.478399802 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.764233426 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.472278702 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.485610007 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.489192096 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.641738171 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.62122851 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.473104855 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.247709224 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.472907414 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.488345969 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.618681747 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.477829688 seconds)
  done (took 86.023784661 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.473827224 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.482699371 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.473372626 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.494445138 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.480114755 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.474662665 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.495221634 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.473660163 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.480650019 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.489526846 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.475046792 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.512749282 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.475653433 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.475054824 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.473886868 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.473840982 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.472259775 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.472040544 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.487546077 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.474639337 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.477876691 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.479113161 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.485282381 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.474331268 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.472379483 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.475156792 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.491239704 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.474926036 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.47748097 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.505057242 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.476868252 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.475519757 seconds)
  done (took 80.704548115 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.47384615 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.475409757 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.477316284 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.502458657 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.476211325 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.482397517 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.497054967 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.477095866 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.490259691 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.480331193 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.475319731 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.515109638 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.476289129 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.476717535 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.47762652 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.478418799 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.477434735 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.498843603 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.491275602 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.475831808 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.476005643 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.475821891 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.47606438 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.491688643 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.493820408 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.47995405 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.478060164 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.483956584 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.475495941 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.476883897 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.479113999 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.496382606 seconds)
  done (took 80.788363173 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.806166133 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.516932635 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.517345746 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.487471138 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.517540813 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.513777765 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.488099011 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.806984883 seconds)
  done (took 15.984856245 seconds)
done (took 264.828248417 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.500779743 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.486949982 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.545353917 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.487670953 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.536134238 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.546316469 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.792276797 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.544863841 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.78030684 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.488088534 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.552575716 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.507190125 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.492022624 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.710615784 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.487644553 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.499141965 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.480871276 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.50017387 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.4901675 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.82194279 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.547693181 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.493625202 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.49609898 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.503033242 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.461306078 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.593397037 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.591898313 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.732228659 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.692757019 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.589740287 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.482847715 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.490047023 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.495361316 seconds)
  done (took 70.752267172 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.50928704 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.516909448 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.518317238 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.520110833 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.519906058 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.519582832 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.513554691 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.520055937 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.520220204 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.519895721 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.518407334 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.518751791 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.518744667 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.517431581 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.517341417 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.490116376 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.509268532 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.519790051 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.511224857 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.493092104 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.51867741 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.521222286 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.52126042 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.521411278 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.519643385 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.521508567 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.518640953 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.52155075 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.519357664 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.520908979 seconds)
  done (took 46.83003579 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.521321601 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.502839851 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.484362851 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.525142338 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.513099536 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.517471531 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.900717682 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.52329762 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.517570216 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.515430838 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.484694108 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.523269056 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.579267028 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.489901614 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.516144476 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.523220795 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.524137742 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.515427206 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.484690197 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.535941826 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.923196379 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.528824301 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.90683522 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.542991186 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.517430185 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.514759803 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.526742122 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.487067734 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.539969922 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.487630375 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.469158823 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.896776957 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.486922464 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.485113365 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.488501924 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.528391355 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.524266947 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.496240269 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.516461835 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.516469518 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.907033569 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.521226547 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.487489715 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.487410096 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.536244379 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.523774427 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.489734833 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.490926535 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.810623753 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.529857673 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.487672141 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.522245183 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.530575501 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.521749029 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.816830688 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.520628986 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.518300406 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.48679242 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.530504962 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.8917597 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.526609285 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.519034369 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.490592134 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.539366982 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.507336303 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.519586953 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.539286316 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.520721316 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.490745297 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.519917582 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.488853156 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.518499734 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.526244714 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.489609747 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.509627796 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.493274669 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.519515435 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.489659334 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.489427322 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.889760074 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.524391754 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.49359524 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.918678905 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.528135805 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.531576677 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.529056174 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.529581032 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.657371863 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.890476156 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.491554269 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.491558249 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.49025976 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.912881519 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.541186767 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.519931759 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.490301944 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.531148829 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.527997939 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.489948198 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.49047103 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.523044934 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.542706793 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.493390605 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.543048176 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.904167353 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.536898581 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.49119738 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.523977525 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.658867513 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.533729953 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.543057884 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.527471057 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.9243753 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.53052312 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.530776085 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.491238027 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.528322631 seconds)
  done (took 222.030239465 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.493013532 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.512184057 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.512290564 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.492623469 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.492929303 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.523962998 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.493574846 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.496794879 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.519655746 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.492395646 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.492965132 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.52481178 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.521749589 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.493312453 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.495427735 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.495000796 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.493338644 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.501115889 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.494672821 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.492814904 seconds)
  done (took 47.377248812 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.53024166 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.239382536 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.212496994 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.532141552 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.532804206 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.524271907 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.597449717 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.537643299 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.531819933 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.922994258 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.747956637 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.538160265 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.532231019 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.5312406 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.212600011 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.50346535 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.924941293 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.242978175 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.533160467 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.243080982 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.502753667 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.532255463 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.521116826 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.243227159 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.933854717 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.897068405 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.59827168 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.243590194 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.535395877 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.532711597 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.244412296 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.535080474 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.525178237 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.226656546 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.533749508 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.554890744 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.533398277 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.598831946 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.600927045 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.925492131 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.248020576 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.909598281 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.553554541 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.753466765 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.535574741 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.503647216 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.254902596 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.535103521 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.505556328 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.535911166 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.546698152 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.237587475 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.531500619 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.224968692 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.534384366 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.534827439 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.247062912 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.238247126 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.223232507 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.751219132 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.532646155 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.904927016 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.54018203 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.256273022 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.535937077 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.533939337 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.535256683 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.75282625 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.25448753 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.901754895 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.928230608 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.927858843 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.535584937 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.613666654 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.542246538 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.929958481 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.611571695 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.004769392 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.930197408 seconds)
  done (took 141.514081997 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.905697366 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.672867688 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.053950296 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.265205303 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.194795163 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.731386652 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.666700633 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.851491729 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.524284617 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.691729723 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.388102775 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.64556652 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.434381286 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.61916442 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.658176714 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.724666245 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.080667241 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.51340565 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.351797599 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.364306662 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.525677672 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.702810043 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.408590716 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.999890279 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.502269877 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.379650932 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.503233896 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.213881319 seconds)
  done (took 59.924927955 seconds)
done (took 589.759532565 seconds)
SAVING RESULT...
DONE!
