cset: moving following pidspec: 28123
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.213460525 seconds)
loading group "string"... done (took 0.54716567 seconds)
loading group "linalg"... done (took 8.838624521 seconds)
loading group "parallel"... done (took 0.169796662 seconds)
loading group "find"... done (took 2.495800129 seconds)
loading group "tuple"... done (took 2.086390944 seconds)
loading group "dates"... done (took 1.416493676 seconds)
loading group "micro"... done (took 0.202908624 seconds)
loading group "io"... done (took 0.517097321 seconds)
loading group "scalar"... done (took 46.31350565 seconds)
loading group "sparse"... done (took 13.576045111 seconds)
loading group "broadcast"... done (took 1.14947236 seconds)
loading group "union"... done (took 9.039054478 seconds)
loading group "simd"... done (took 3.012901501 seconds)
loading group "random"... done (took 11.398354288 seconds)
loading group "problem"... done (took 2.212937134 seconds)
loading group "array"... done (took 23.351385397 seconds)
loading group "misc"... done (took 1.098680217 seconds)
loading group "sort"... done (took 3.749284598 seconds)
loading group "collection"... done (took 18.032481296 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.746943518 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125899878 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.207243602 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.210110797 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.281531472 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.168198623 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.166909144 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.16273089 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.618247195 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.210168347 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143388834 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.381069687 seconds)
done (took 6.122591706 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.301383926 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.065245937 seconds)
    (2/2) benchmarking "String"...
    done (took 0.194965645 seconds)
  done (took 0.912244427 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.08066361 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.164531049 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.112298079 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.099151436 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097311676 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.116930652 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.098883245 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.114644397 seconds)
  done (took 1.450341835 seconds)
done (took 3.388523778 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.500784352 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.945333132 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.54501833 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.192472311 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.307354867 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.30670234 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.277333242 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.232853144 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.097205728 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.090415687 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.261898318 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.464899831 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.429649259 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.98378893 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.07625425 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.100356896 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.16262941 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.835619041 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083977928 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.133847258 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.510549351 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.222222323 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.120572246 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.112036105 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.191343117 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131084617 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.146151756 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.107314903 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.737308075 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.138268071 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.213865744 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.087869484 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.144141235 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.174643786 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.223763092 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.114527971 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.761042378 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.206376663 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103133157 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.107649303 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.740375993 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.127950628 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.211303406 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.109780161 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.073058872 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.177735451 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.120911465 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.085385299 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.100382737 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.106120338 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.174769222 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.507251446 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.110679787 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.200710719 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.097794489 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.765053573 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.10202722 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.282141954 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.131378648 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.099146686 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.097174927 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.093356495 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.171856072 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.099262134 seconds)
  done (took 21.036771366 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.194151365 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.22753487 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.083428347 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.150211071 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.145757571 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085736462 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.093554634 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09946635 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.118465554 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.200945735 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.129601396 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.217647579 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081001712 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.112497755 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.188276875 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.238762136 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.133508458 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.109193913 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.09417287 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.115698232 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.132584667 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099885677 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.11741961 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.100691156 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17646846 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.209738892 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.116578581 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129707486 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095106786 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.10247623 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.148063242 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.15309384 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096197847 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09474452 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.178181457 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126835473 seconds)
  done (took 5.564016556 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.23683284 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.108264326 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.248721712 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.193849092 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.135797018 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.184485751 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.19818917 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.308214474 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.286046501 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.171272967 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132582991 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107498377 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084020112 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083613495 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.216808157 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083870722 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.858722957 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.163027505 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.166486604 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.189804234 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10117809 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.103088318 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.729052626 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106658326 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.090545313 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113776479 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.070926547 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.229317569 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098924172 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.478794476 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088756538 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.118814061 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118960379 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.215284011 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128639403 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125157256 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.11522834 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.090672703 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.214539433 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103358884 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.099578236 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084612017 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136751468 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11982236 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.110563501 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110301038 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.137550732 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.093223866 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113148746 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.105065246 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.073868262 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.200066503 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.089654558 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.182323744 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.089781319 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.281104881 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.109945825 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.121650804 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.09567725 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.812672757 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.127466838 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.102721093 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.08505935 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099115606 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.103005766 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.8265769 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111935533 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.322282254 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085968474 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.162489029 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101147289 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.12005968 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090353669 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089677396 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.128402082 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.089748843 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100534991 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.091240024 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.085740512 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.110223444 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.118207979 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.089732501 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.099902858 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.153259223 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.100842083 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.125924323 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114104524 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.10960891 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.089115872 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132718833 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086861884 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.092621974 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.206873933 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.117982811 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.117982392 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117420379 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146936841 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.092169961 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.294485354 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.090654196 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.130153563 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.107442364 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131283035 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.101036102 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084880208 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10625597 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.085153496 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.085257769 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.104682167 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.091231504 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.152128982 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.106280554 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086818303 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096695536 seconds)
  done (took 28.541980933 seconds)
done (took 55.788150785 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.8148759 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083055744 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102714318 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084010893 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083182854 seconds)
  done (took 1.880112967 seconds)
done (took 2.575101136 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.188989256 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.269049018 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.201768116 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.133506013 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.15594993 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.174426929 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.156509637 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.172255424 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.153176602 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.175233596 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.173465425 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.109821647 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.179070537 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.187918729 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.124161599 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.192342546 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.107262732 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.153051446 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.109514904 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.177326042 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.106832161 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09194144 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092784774 seconds)
  done (took 4.300550231 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.108383964 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105190681 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.110200606 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.129179416 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09249591 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107960935 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.125251262 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113475743 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108512123 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.122397129 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094114761 seconds)
  done (took 1.921140041 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.106083951 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102389975 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09773694 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.123606291 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092773738 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106346694 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.123462349 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116109947 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10626051 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.120785262 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093170926 seconds)
  done (took 1.892580684 seconds)
done (took 8.810437347 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.215265084 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.973318116 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.189078514 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.259815162 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.34487535 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.307042537 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.618835538 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.208992778 seconds)
  done (took 15.931392114 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.127154577 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.097645028 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.211243413 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.098297696 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.121621471 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.102855468 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.097834927 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.11734495 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098262566 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098726521 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.115307191 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.096859873 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102780738 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104756897 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.120928158 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.104079297 seconds)
  done (took 2.570877065 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.14461839 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.124454514 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.125322012 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107112014 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.103248814 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.124758742 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.110908936 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.10609324 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.121206265 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.101139188 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.108274104 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.120501777 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104450364 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.101735633 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.121065116 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.125015408 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.100207994 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.12087431 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.123816024 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.119506119 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105185792 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.104216534 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.120398201 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10613717 seconds)
  done (took 3.519190744 seconds)
done (took 22.725023622 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.156452367 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10579851 seconds)
  done (took 0.971811988 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.173147787 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.189738304 seconds)
  done (took 1.07558091 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.118116767 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096772083 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.146541121 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.1111978 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.101258058 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.117750239 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.125337936 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.117055528 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.100689899 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.102217468 seconds)
  done (took 1.856168163 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.100713715 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100688782 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12834621 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.164476153 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.123832577 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.099173296 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.101415341 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.116386099 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.101628846 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.096651607 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.11991888 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11348126 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.100030877 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.132077131 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.101205817 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.117278042 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105895519 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098965797 seconds)
  done (took 2.742297118 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.09700193 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097888077 seconds)
  done (took 0.914805926 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.099257664 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095443562 seconds)
    (3/7) benchmarking "month"...
    done (took 0.09784233 seconds)
    (4/7) benchmarking "year"...
    done (took 0.115392258 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095576889 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.096675632 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.114250213 seconds)
  done (took 1.433905457 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.53060651 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.243177502 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.384343708 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.078226218 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.127905442 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.343991789 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.109549895 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.077907114 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.09685247 seconds)
  done (took 2.735847625 seconds)
done (took 12.445439047 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.097038038 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.212844246 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.609148202 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.135568915 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.097185264 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.156698837 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.350588437 seconds)
done (took 2.385335593 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348458348 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.183719242 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089753871 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097539708 seconds)
  done (took 1.441053293 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.088556652 seconds)
    (2/2) benchmarking "read"...
    done (took 0.104978922 seconds)
  done (took 0.924394226 seconds)
done (took 3.094466413 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.117469547 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096908133 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.115904753 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.101734655 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100679214 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.11859923 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.099994001 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097665213 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.117738296 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.097348064 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09925075 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.116982753 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09853334 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.099152134 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115133426 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.224461435 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.098787213 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113828512 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096612635 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099547855 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.117211693 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098750128 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099837207 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11722601 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102100972 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102007246 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.099897201 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.119724163 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103546268 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.102604877 seconds)
  done (took 4.014214937 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.101864211 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093833929 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.097973213 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.124907364 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.096983632 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097881302 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.113686105 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.100635912 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.099285112 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096747568 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.118363096 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.099615112 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.098589283 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.118598531 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.1004208 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099615671 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.124874958 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.099205841 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.098246921 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.099008051 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.120789522 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.102161944 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096269714 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.118052512 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.098618896 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.094733346 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098257188 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.116824563 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098172749 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.096176267 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.118853172 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.098529079 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096641339 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.127095142 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101050629 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096947803 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.123075567 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095574165 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.100045823 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094057911 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.114166683 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097199302 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.096149657 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.119415185 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.09663254 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097160609 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.097387105 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.118654753 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.100409975 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098489689 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.114605985 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.100288731 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.103002065 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.100739626 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.119753567 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096174032 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098968032 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.114281711 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.10108555 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.096215099 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.114125616 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.09675113 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.103986618 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.099271283 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.132787976 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.105222878 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.099842934 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.119881026 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100791099 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.102941442 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.119375446 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109743843 seconds)
  done (took 8.293018267 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.096425669 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094937282 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.096474978 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.11786869 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097031753 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095797447 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098029714 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118389636 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09746414 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.097288978 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119123529 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099950629 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098354127 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11708095 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100028013 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09877499 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.098017353 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.116285178 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.097932286 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095924838 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112961641 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096858477 seconds)
  done (took 3.000995447 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.243322981 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103163049 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14723695 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.127379815 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.115562461 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.131926274 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104903424 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104152141 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123097916 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111073552 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108532098 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123864843 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119148671 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.126443174 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111680263 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109231279 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12250196 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110270308 seconds)
  done (took 2.983434695 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09620574 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096201688 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.097703207 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.116635154 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098107238 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09849821 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100140387 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117677395 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.098833378 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098952179 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.118478405 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098269061 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.097812438 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099209613 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115856982 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.096556343 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098307194 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116467115 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098350775 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09745967 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099794534 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117307655 seconds)
  done (took 3.014804536 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112735426 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09805409 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.132883727 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10200564 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098607372 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.116479127 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.103052071 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.097793232 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.123273217 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099518311 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098860965 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09842313 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.13064741 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09932548 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103460014 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115716181 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099245581 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.099536121 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116519147 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.098685943 seconds)
  done (took 2.888836423 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.19344548 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131713258 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.115188321 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121312913 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132173233 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.114666327 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.140004605 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114048092 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113896397 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141677583 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114306574 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113719279 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.141522815 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118651611 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.133244947 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122171961 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121430176 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.138709958 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11452895 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130652508 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125144405 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113500886 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.140836695 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115163667 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.131956725 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114059267 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115263331 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.137433748 seconds)
  done (took 4.304049349 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.109561139 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106434066 seconds)
  done (took 0.95860102 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099049467 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099346083 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.098147676 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.116080404 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099854737 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100016629 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118056144 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098908947 seconds)
  done (took 1.575056856 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.190530304 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.213131712 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.121937363 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.109127006 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.212832582 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.191752247 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134147017 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.104670294 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.117529122 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.090385097 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.20459117 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.090852196 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.117690036 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094997206 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.096697562 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.122354246 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099512166 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.106807856 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.121840633 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100782927 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103132738 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100661055 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117738994 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107555367 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.090820418 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.118714258 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.100447829 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.126100743 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095022978 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.098189581 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.113394657 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.098845181 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.1017151 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102573658 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.116747877 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.212605039 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.105168262 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094926387 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.117784321 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103337302 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.130472179 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.118796391 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.099068883 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.096485454 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.119951985 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.103511348 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101951931 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.116138861 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.090645116 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.093425218 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.099021949 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111109729 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09923748 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.097317822 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.115836169 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.104582853 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.099721201 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.112650358 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.094855428 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.09289205 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.116783705 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.093471942 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099217505 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.122102678 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098989124 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.098030482 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115181547 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.099527671 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.10000727 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.117959484 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.097483136 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11231959 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.117885871 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103671284 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104090332 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.117779363 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095632971 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103740916 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115540112 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.098975575 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.102170534 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.145299832 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099934356 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093847898 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.111829863 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.105682783 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099331067 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.100356058 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.110530396 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.106998383 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09985362 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.118829776 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.091315802 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.096046711 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.11364434 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101862535 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.089896907 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.118536372 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.098482007 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103855944 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.122047014 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098188674 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.099038222 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122927364 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104652623 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.096546775 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.169277881 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094926806 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.093322551 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.12045582 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103839461 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.092801186 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.117100366 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.098433816 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095539873 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.112144289 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103240782 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.097841283 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.119522532 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.103520706 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099647379 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.119427058 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101370782 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097908051 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.094849073 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.122268831 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107155317 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.099204794 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.120474119 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.100664267 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.099512515 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.118073883 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102212718 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.094268692 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.124145326 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.096241848 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.100655956 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.119095032 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10359369 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.099561753 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.113077857 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.097474267 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.099692426 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.117441261 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101819372 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.098787213 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.094438126 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.111534085 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.098800274 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.093514057 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.119216837 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108817749 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.092394012 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.122069154 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.094688996 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106115659 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.113929781 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103723804 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101171594 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.123220069 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104016439 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.092325777 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.115495832 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.101799119 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.098718699 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.114583565 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.100859754 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.099036407 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.105051836 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.110377583 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.102611722 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.091844431 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.115179451 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103964407 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.102622268 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.121802849 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.094676006 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.135861271 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.129772997 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104507074 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.097304902 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.117154004 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10403369 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.098651302 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.121163313 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10632239 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.10430677 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094706526 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.117241166 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105539399 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.094347473 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.12111589 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098011347 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098726382 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.11160665 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.102243588 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.091725771 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.12378236 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.101013614 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.103782821 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.123746811 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102236046 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097601867 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.126277231 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.095341523 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.103034821 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.090741567 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.123359053 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.110540034 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.104926122 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.126251599 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.100843899 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096652934 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.119858747 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108031406 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100225455 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.119157052 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.100666921 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.092794552 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.111720702 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105545754 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102054737 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.093941485 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.118842208 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101294306 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.099823378 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.116590665 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.092541097 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103005347 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121325624 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.096815175 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099547925 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.114679667 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.097743644 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103962662 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.110726092 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.095539803 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09942689 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.123805059 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.098844832 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.099115188 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.122297605 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.105962637 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102047404 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100187042 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.117066214 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107158459 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.096502705 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.120161789 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.09628026 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101530788 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.11163319 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.102587138 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.099868147 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.116661274 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.09606501 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101731442 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125212152 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.1047687 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096057536 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.123908774 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104743767 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.104980249 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115665128 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.105505595 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.096440546 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.090769783 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.116048486 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.092136018 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.100395867 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.114790156 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.104602339 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.097021835 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.116686417 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104369417 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101274052 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.115804391 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105722662 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109735952 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.113338016 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.093313752 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097472521 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118343751 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.096370076 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.094902013 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.121111491 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101189264 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104586973 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.120039707 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.096699936 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.104663379 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.105080123 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.116342378 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106938739 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.105981145 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.125049981 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.09667612 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104353703 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.115510779 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10300409 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.094054209 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.117370792 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099329252 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099335188 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.116105198 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.097634413 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.09545774 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.111123838 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.096706083 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.107019545 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.116313184 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104998967 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.099417671 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.115862429 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.09675134 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096610959 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10528818 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.118330969 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106464097 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.100445176 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.113148537 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.09343793 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104881075 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118444042 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.107304218 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.094000222 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.122294741 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107016193 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104234554 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.100681868 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.128282723 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108441094 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.115672111 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.125412736 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.09239492 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.096001035 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123098894 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.100063633 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.103143423 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.122206532 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.095867358 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100739975 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.125677434 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.101642394 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.098913206 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.113064168 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100952502 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.106953685 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103373062 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.122551339 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.102422242 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099486813 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.114908048 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105399367 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.107353177 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.119200214 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106531284 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100118597 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.126107587 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.096618432 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.105275539 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.12002951 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.094649117 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.09383791 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.096037003 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.125581263 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.095015923 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.104801665 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.125506113 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.097427333 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.098538159 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.125149365 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.096545308 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.103183373 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.123275941 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.097696152 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121337427 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.100524026 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.11848043 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.104996522 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.104303696 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.114005838 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.099737055 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098034114 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.12610626 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.098705289 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.104914598 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.119486493 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10566183 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.103874382 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.125052215 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.106795215 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.106534218 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.093234203 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.12630873 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104128884 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101676687 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.116758493 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098446877 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.093760946 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.118581909 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.107899964 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.096774527 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.1272152 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104957202 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.097484674 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.118122214 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106136332 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099443232 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.126069034 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.096553829 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.101361981 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.11329213 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.102815728 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.098814311 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.125788901 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.097122546 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.095770419 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105312065 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.126033694 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104953779 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.102217258 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.126562044 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.094412425 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.093544368 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.123579542 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.097496057 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110953564 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.122108056 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.098662895 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099141867 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.122232234 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.102386623 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10821879 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.094704781 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.116838182 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.101372388 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10050475 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.118813083 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.097126248 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104018954 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.119291287 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102957995 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.097758101 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.114958194 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.099088229 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.107067246 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.117876652 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.096365607 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.09728793 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.12681012 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.100170419 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.097582172 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.11326594 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106433506 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.103619043 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.126707244 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.098047105 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.100989728 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.116289788 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.103940382 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.110359774 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.097133581 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.120830519 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.099254102 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105625233 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12521725 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.093031244 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.097819493 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.130351702 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105544567 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.102446198 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.123065859 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.099892801 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107266085 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.12838134 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.103881226 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.095068445 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.114432359 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.099696198 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.094347961 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.103123867 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125643911 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09924174 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.097926839 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.125772139 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105171265 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.103398973 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.123303669 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.094892932 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108525253 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.116851102 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.103355602 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.095236482 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.094243968 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.123841028 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107004738 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09939162 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.120540817 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.103361398 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.104471874 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.115232461 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.098503728 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.103360839 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.125950514 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10637037 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.100738508 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.118286131 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.104622871 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112331673 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.102552845 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.119315452 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107637361 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10660385 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120553389 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.100913741 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103987106 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.128393003 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.104839798 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.107073043 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.117617471 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.09973482 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.108160752 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.128521371 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111781882 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09807106 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.115386251 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.106384757 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.099974445 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.114591737 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.105947761 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108310002 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.128263448 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.101069068 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.098114571 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.129409124 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106343132 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102025684 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.117910525 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.098071829 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.105496935 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098644458 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.125214456 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.098297486 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.108116263 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.128135568 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106925259 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.10910731 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.115866759 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.107000967 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.104989049 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.130635188 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.103048928 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.096638615 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.11525055 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.103894986 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.109645228 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.107147983 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.125282203 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.105386446 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.105192497 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.121738455 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102723398 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.098526076 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.128501956 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107532738 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.102944306 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.121896157 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.1006547 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101071582 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.123368062 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.108167386 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.108815653 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.103116675 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.135271531 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104928707 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.101546153 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.119491452 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101781868 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.104268637 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.12182918 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108102084 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.099135093 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.115991985 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108629526 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10923484 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.121509446 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109715837 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108852669 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.118808055 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.104116522 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110322339 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.105179995 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.123402843 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.102833887 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10354117 seconds)
  done (took 65.310066386 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152528125 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112949489 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.131528388 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105924573 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120316418 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126072946 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105058681 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104740135 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.126397917 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114433965 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103872497 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124839967 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118813433 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.146405559 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121406151 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113698466 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124641548 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106653786 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.103300985 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124362952 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11835737 seconds)
  done (took 3.309679465 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104655418 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.104495342 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10340491 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124074018 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104110865 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.10534063 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101847518 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124375174 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104958599 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103104103 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.124666272 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104135309 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.102676115 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.103178693 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.12504111 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103943665 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102328026 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124360507 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.104487868 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102087563 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102565696 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.125281364 seconds)
  done (took 3.208440193 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.131398204 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106074104 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.100618731 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.125426076 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10852225 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.103345474 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.127260736 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.104796357 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.112125222 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.119536081 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.095273638 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.099012102 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103277868 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.124920774 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.097914686 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.102734782 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.133496096 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.106959481 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108387387 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.123859675 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.095462489 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.103673728 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.104153258 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.115891972 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.109862783 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107449138 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.128741372 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10902371 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.094445669 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.126697326 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.104338268 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.098014698 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.093251663 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.115068893 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.095515289 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.106435043 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.126925009 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.104259208 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.104685169 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.093000723 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.126155428 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.108299945 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.094979606 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.12517353 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.104986674 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.097383403 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.127041993 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.104327862 seconds)
  done (took 6.064210191 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.133094369 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159785683 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.107532529 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.13193689 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.139400548 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114450588 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.105698916 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.156044564 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105700593 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.105829729 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.142876968 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.117465077 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.1297936 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.111658682 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.108027215 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.129482387 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.109774783 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105941545 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.131794134 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.108168853 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110916549 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.129804076 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.117631369 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.137297627 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110918225 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106969748 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105912071 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.132799011 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.116409147 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.133361652 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.11259707 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110595977 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.137544236 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.111463755 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105013424 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.130857213 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120846792 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.107943964 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.131829822 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105335672 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.108298129 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.131331855 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110937781 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.138794605 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110187825 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108917831 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.129179975 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.106890967 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116329877 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.129428749 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114937381 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.117659795 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.131194896 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.108682466 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110485907 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.138988135 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.108667938 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.106406408 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.129999143 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117716855 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.125637206 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111556923 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118512348 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.1297496 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.114652708 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.11759561 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.132122737 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110786295 seconds)
  done (took 9.053679033 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.139064822 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111412632 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13978719 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119399262 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.369265952 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.135935931 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.1112858 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.10964425 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.135036236 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115980112 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13168993 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.219588748 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.132594096 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116516563 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.133796413 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114044391 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11016806 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132689708 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.11318653 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11160225 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.13220948 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120665065 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111393704 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.141204689 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122694024 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.129016127 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113608371 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.109787914 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.139405018 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11339794 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121316475 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.133090598 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111283774 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.140907932 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123414647 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.110249634 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.128462984 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112308625 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.11020745 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.13400503 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.109071692 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117799337 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.13253543 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.109230161 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109907831 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133314299 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119588113 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.144585984 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11795662 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116864163 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.133285176 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12079036 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131535302 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112883419 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118516259 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149229311 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119248335 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.141218028 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112432663 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.118506271 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.142066879 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.126891206 seconds)
  done (took 8.814728186 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.10798978 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.108665145 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.106085069 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.12895341 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107870281 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.10604477 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.12684518 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108210548 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106461094 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106420936 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.129610406 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107501939 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105789151 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.127638857 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10855277 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106573818 seconds)
  done (took 2.619089621 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.126608139 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.123112094 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.206883012 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.108819075 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.129716496 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.114611013 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107583932 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.133054141 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.108355189 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.111297114 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.133783563 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110796631 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.122626907 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.129548317 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.108867964 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.109946244 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.127281968 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.111790263 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107787519 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.210790562 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.109593545 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.131459524 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.109496815 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.110209336 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.130974686 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.115920886 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.113215375 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.129055936 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.109105355 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.108078758 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.107755812 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.136933614 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.107341443 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.109990244 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.131460991 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.110798377 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106353189 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.130921886 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.11047599 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106562644 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.130840102 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.109381926 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.107051881 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.131473144 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.106804783 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108066466 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.105033608 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.134965976 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.109500866 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.108613532 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.129998026 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.113089241 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111024244 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.137594802 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.114709419 seconds)
  done (took 7.449312724 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.119151325 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108758173 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.141000961 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105700941 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.108850504 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107679964 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.130578825 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110231475 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107838085 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.127725879 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109814314 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108039646 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.130914204 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110669939 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108868942 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.129135695 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.106534009 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109172402 seconds)
  done (took 2.906666274 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106469196 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106231944 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105294116 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.126747821 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.106386713 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104905239 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104555754 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.127759473 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107053418 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10433296 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.127683555 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.106166993 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105209469 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.105308224 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12690713 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107048599 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.105546732 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1290544 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107969806 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106680047 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105324078 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.12786172 seconds)
  done (took 3.28851539 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.120499122 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.232682732 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.112638765 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.240133888 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.127420044 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.103530135 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.113271597 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.126519301 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.120924455 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.102991169 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.124716768 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.103885697 seconds)
  done (took 2.456590324 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135025131 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143728403 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.129660552 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109330873 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115272619 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135102236 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113476791 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112089603 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141892206 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123027028 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133238102 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12112057 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120286945 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142243437 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115374378 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137735812 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11296695 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111256746 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129282013 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12783099 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110983248 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142119958 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11217914 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132356495 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114768645 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120236938 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141678421 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123712379 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111797527 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143143552 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116007071 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132371511 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121660024 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122838386 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130662356 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122087034 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133448883 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128220286 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116430239 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141594193 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109032859 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115981509 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14203992 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117798011 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142327037 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113198823 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117250176 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133790337 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113395216 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.156258069 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117286353 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119795611 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139647297 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120811871 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141369444 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134244934 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14596053 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121673294 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11698401 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145172441 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120559465 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139165323 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121695713 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145914016 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118522683 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121118126 seconds)
  done (took 9.193511828 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14719707 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10797204 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133995113 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124971269 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140213012 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114336187 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112715311 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135112293 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113458283 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109548568 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176571057 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113701749 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142045926 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122609306 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112530441 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134621728 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113934461 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11927264 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131603817 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133946852 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13541757 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121726303 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120238545 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143362226 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123251987 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138583824 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115164016 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112509838 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135306382 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114677711 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117910594 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136682675 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121565459 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.130275784 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123218043 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113041959 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134116007 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119013179 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112646098 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139007761 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121259764 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148725198 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114209007 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112881534 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145741718 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113379502 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112653012 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132779804 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114693006 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108674016 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147392416 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123334259 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145271267 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12165758 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133575157 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114078892 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113345909 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134151347 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114342892 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117734804 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141653139 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114343381 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.155660297 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114089229 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11366627 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143083698 seconds)
  done (took 9.159640203 seconds)
done (took 164.596594027 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.179644772 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.220875504 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.202914072 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.160422565 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.099346013 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.166081245 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.131867118 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.204452535 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.098055905 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.098509384 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.121853624 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.101636179 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.165435144 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.12004683 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.099856622 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10186414 seconds)
  done (took 3.105325684 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199460839 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.343504575 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.137838548 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.102657538 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105652751 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.102948427 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.125483205 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.104968516 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.103045156 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.132268147 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.104172535 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.099238877 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.132027264 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.1018031 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.103984452 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.125770882 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109429698 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.103332833 seconds)
  done (took 3.181654245 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.122851726 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.155165402 seconds)
  done (took 1.121829249 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.133779582 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.218812671 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299513298 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.175301063 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.124264685 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.142958403 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.154046265 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.139229646 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.195838033 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.138304249 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.116414175 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.100692414 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.151896062 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.109944079 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.141854282 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.103124356 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.131339677 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.141379291 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.118078004 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.105292859 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.150887763 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.108927818 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.108035736 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.141580923 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183846214 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.13818985 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.108154396 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106658186 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.13152755 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.118836271 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.109209767 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.143414885 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.115805159 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.185078633 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.106550142 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17968528 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.132218629 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.105344122 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.119176957 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.125322152 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.108464002 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.107538884 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.139669996 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.102371677 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.10683663 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.132805785 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.108116402 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.107615501 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.134654065 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.1109294 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.133347753 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.111457399 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.177522016 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.111251787 seconds)
  done (took 8.097814673 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.916187946 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154991218 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.104106115 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.063761669 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149864798 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119249941 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.935687283 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131403232 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256224761 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.934666762 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121708284 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.133416966 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.247343465 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.28510099 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.259188197 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.361813538 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.762878296 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116340703 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.158838425 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.14839848 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132094033 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124080513 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118311973 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.461093971 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.104846084 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.127163936 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.110693057 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11255286 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.181605007 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.104268427 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.131777162 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.20541446 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.275480213 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.239418714 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106045678 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.103432845 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103740148 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.191649022 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273678238 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.224825308 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.19521421 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100521303 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.126293086 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109333387 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119864195 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.123073471 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.185932443 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.17513121 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.197656699 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108484186 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.136213062 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112100429 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128553219 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163357575 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.125031822 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.363434345 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.367451545 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10395491 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132508681 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117383084 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271563234 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129115861 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.244852016 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126793638 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219821738 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.125844983 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.815341532 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.168323709 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.12658146 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.109769895 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109095996 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13254416 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107527012 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.188348672 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.415467777 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133191658 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.109039075 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10325957 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.234215049 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.127198228 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.104481163 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185264481 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.105472072 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10969279 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134579544 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.112374975 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.19465513 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.278683554 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.113580854 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131303009 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.110204797 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11434422 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.126059117 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214607528 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.256913815 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162323296 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.233608477 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109714021 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.189478075 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.192756216 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109494092 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.195258489 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.132889245 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119168367 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109047805 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230486991 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.165943798 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106622287 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.131946598 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111268479 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.166355513 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.11000519 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109850351 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.195732991 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.498847653 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.193981581 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.102238071 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109883596 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134529957 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18412069 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113060327 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273221406 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112296264 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192706908 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108597888 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.125187568 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110611902 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.189132431 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11317333 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133529829 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109262079 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114450099 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.285416044 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227711359 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.136219836 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254829892 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.178133336 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.132417188 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176980327 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134338033 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193108704 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114494378 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108864332 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128341739 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.804221613 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116816392 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.130736667 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111680753 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187851402 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127376672 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10856192 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.105044154 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.124446971 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.801822564 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109399666 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103199017 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.128914857 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110983108 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110642072 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133326522 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11135187 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.188579846 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.252746945 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.133904737 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.110588644 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.105330503 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.18481156 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.106917157 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.127993721 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.106979107 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.105864091 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.13280334 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.112158676 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109567285 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.195103791 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.1841605 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.239366891 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.573992964 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.104937855 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.128904241 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.250728951 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106077735 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.332508275 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134789766 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.244781617 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188647034 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.102891157 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.367200955 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.192068279 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.210107235 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.109535438 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.197409671 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103647049 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110986949 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.187022037 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.104988002 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.136011081 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.183468862 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.115306003 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.111907248 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.260895188 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.129817486 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252582608 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.103715144 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.197940465 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106768745 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111101418 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.355635308 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.106624453 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11802276 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.187476424 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.1092266 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.129724387 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.978791367 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.107019475 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114197553 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.13277729 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.244131743 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.189663295 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112735356 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.112380003 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.137425646 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.186701047 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.212921629 seconds)
  done (took 47.829216202 seconds)
done (took 64.174710486 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.261623423 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.17347192 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.356827639 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.152707478 seconds)
  done (took 1.865051694 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.26365364 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.170617786 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.248521199 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.103112414 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.252325732 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.102525398 seconds)
  done (took 2.01432773 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.17546966 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.170800212 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147717039 seconds)
  done (took 1.367525368 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.214187502 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.210719883 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.351099326 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.238554497 seconds)
  done (took 1.947437171 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.277490664 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.12136704 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.135613195 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.231294077 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.245482125 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.212057273 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128044635 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.179827267 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.134791303 seconds)
  done (took 2.570897319 seconds)
done (took 10.639874876 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.393804827 seconds)
    (2/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.235635132 seconds)
    (3/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.262329239 seconds)
    (4/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.439427039 seconds)
    (5/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.224428539 seconds)
    (6/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.139890555 seconds)
    (7/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11473135 seconds)
    (8/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.289323244 seconds)
    (9/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.311198721 seconds)
    (10/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090607821 seconds)
    (11/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.339034035 seconds)
    (12/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.271300981 seconds)
    (13/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.115679235 seconds)
    (14/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.183691306 seconds)
    (15/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.288191536 seconds)
    (16/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.15905633 seconds)
    (17/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.409915395 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.131187493 seconds)
    (19/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.23681063 seconds)
    (20/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.191458844 seconds)
    (21/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.383111777 seconds)
    (22/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.363037507 seconds)
    (23/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.149950703 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.256145772 seconds)
    (25/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.164009054 seconds)
    (26/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.325927969 seconds)
    (27/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.159104171 seconds)
    (28/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.197865036 seconds)
    (29/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083318207 seconds)
    (30/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.209641324 seconds)
    (31/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.11625808 seconds)
    (32/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.153415947 seconds)
    (33/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.166619722 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.122848862 seconds)
    (35/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.083671604 seconds)
    (36/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.198056122 seconds)
    (37/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.09520659 seconds)
    (38/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.259507162 seconds)
    (39/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.142853641 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.128617543 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.149848874 seconds)
    (42/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.089707916 seconds)
    (43/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.244162963 seconds)
    (44/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110431571 seconds)
    (45/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.114108086 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.151303528 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.108748466 seconds)
    (48/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.19943835 seconds)
    (49/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.230793524 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.106763227 seconds)
    (51/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.083695769 seconds)
    (52/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.184034925 seconds)
    (53/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.221692158 seconds)
    (54/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.082406359 seconds)
    (55/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.164215855 seconds)
    (56/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.094455797 seconds)
    (57/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.128624527 seconds)
    (58/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.112557051 seconds)
    (59/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.152421268 seconds)
    (60/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.247579458 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.137337088 seconds)
    (62/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.091034342 seconds)
    (63/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.08347514 seconds)
    (64/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.195182921 seconds)
    (65/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.094594711 seconds)
    (66/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.24672055 seconds)
    (67/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.112277895 seconds)
    (68/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.090933421 seconds)
    (69/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.177745997 seconds)
    (70/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.127638019 seconds)
    (71/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.142743082 seconds)
    (72/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.140880415 seconds)
    (73/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.110369552 seconds)
    (74/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.152693649 seconds)
    (75/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.112967088 seconds)
    (76/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.148047318 seconds)
    (77/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.201171532 seconds)
    (78/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.111495463 seconds)
    (79/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.10425362 seconds)
    (80/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.178978276 seconds)
    (81/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.086170036 seconds)
    (82/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.108298549 seconds)
    (83/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.226727854 seconds)
    (84/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.114491236 seconds)
    (85/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.196677594 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.130863917 seconds)
    (87/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.116776163 seconds)
    (88/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11452441 seconds)
    (89/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.109632796 seconds)
    (90/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.099561822 seconds)
    (91/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.131326197 seconds)
    (92/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.203884167 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109558555 seconds)
    (94/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.115782321 seconds)
    (95/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.113817406 seconds)
    (96/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.11315147 seconds)
    (97/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.122580881 seconds)
    (98/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.089502932 seconds)
    (99/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.16423995 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.124961561 seconds)
    (101/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114807616 seconds)
    (102/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.137694884 seconds)
    (103/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.153837301 seconds)
    (104/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.089840056 seconds)
    (105/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.083575642 seconds)
    (106/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.140710771 seconds)
    (107/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.116103661 seconds)
    (108/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.087214443 seconds)
    (109/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.111475628 seconds)
    (110/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.109779533 seconds)
    (111/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.0884785 seconds)
    (112/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.11500373 seconds)
    (113/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.224501733 seconds)
    (114/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.08514735 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.108047399 seconds)
    (116/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.132553728 seconds)
    (117/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.109606676 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.108271729 seconds)
    (119/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.08413088 seconds)
    (120/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.141981882 seconds)
    (121/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.108906936 seconds)
    (122/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.177425565 seconds)
    (123/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.111508174 seconds)
    (124/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.139410466 seconds)
    (125/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.141202523 seconds)
    (126/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.127119098 seconds)
    (127/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.152613961 seconds)
    (128/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.108870549 seconds)
    (129/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.084292074 seconds)
    (130/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.162248006 seconds)
    (131/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.08742257 seconds)
    (132/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117012296 seconds)
    (133/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.142661019 seconds)
    (134/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.113033019 seconds)
    (135/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.093681536 seconds)
    (136/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.091475879 seconds)
    (137/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.089040303 seconds)
    (138/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.143937438 seconds)
    (139/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.136416718 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.109083704 seconds)
    (141/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.135894167 seconds)
    (142/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.107062497 seconds)
    (143/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.08841257 seconds)
    (144/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.091076176 seconds)
    (145/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.087090545 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.133104287 seconds)
    (147/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.117474296 seconds)
    (148/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.084794093 seconds)
    (149/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.090632824 seconds)
    (150/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.084997471 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.13385529 seconds)
    (152/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.08755443 seconds)
    (153/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.090437757 seconds)
    (154/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.091286818 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.131462108 seconds)
    (156/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.093036203 seconds)
    (157/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.0877657 seconds)
    (158/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115337921 seconds)
    (159/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.133491696 seconds)
    (160/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.087231344 seconds)
    (161/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.086386614 seconds)
    (162/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.153434805 seconds)
    (163/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.146758257 seconds)
    (164/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.105546871 seconds)
    (165/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.086542499 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.133683759 seconds)
    (167/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.115691318 seconds)
    (168/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.091853231 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.108269076 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.131569245 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.108738478 seconds)
    (172/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.121744811 seconds)
    (173/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.144295584 seconds)
    (174/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.113175076 seconds)
    (175/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.084159165 seconds)
    (176/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.140575139 seconds)
    (177/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.087767585 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.108839818 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.128057835 seconds)
    (180/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.116977725 seconds)
    (181/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.085605578 seconds)
    (182/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.092511555 seconds)
    (183/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.087274017 seconds)
    (184/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.140172155 seconds)
    (185/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.107350453 seconds)
    (186/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.108353444 seconds)
    (187/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.08938043 seconds)
    (188/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.115788257 seconds)
    (189/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.088584309 seconds)
    (190/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.107325938 seconds)
    (191/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.090555859 seconds)
    (192/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.131394851 seconds)
  done (took 28.360394574 seconds)
done (took 29.23784072 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.230762935 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.134691639 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.116472423 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.115047452 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.236628135 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.12452205 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.158508983 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.11730521 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.126356292 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.142093279 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.106896485 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.128678514 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.14119093 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.250156601 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.119723535 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.106404103 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.132364038 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.128269664 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.131025251 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.157900666 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.213043852 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.134421074 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.126734552 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.106713081 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.238685729 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107444389 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.142126942 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.117518505 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.128167067 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.142323546 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.117017674 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.106854719 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.158820196 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.131911817 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.106746046 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.141197285 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107722427 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.091257904 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.140166776 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.119379077 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.129123193 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.116397553 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.140113697 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.107655869 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.116555534 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.142454149 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10718011 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.119051312 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.129829499 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.118715515 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108548231 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.157305828 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.116154855 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.1058643 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.130125555 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.108866707 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.126966914 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.130785696 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.130046845 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.107310713 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.13256567 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.107992015 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118227394 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10611524 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.140318123 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.107456682 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116225045 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.143736854 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.116542265 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108530421 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.130778083 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.118069693 seconds)
done (took 10.39312562 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.112044276 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.15070862 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.251364647 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.255044025 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.161466343 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.124669974 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121554913 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.156722374 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.120335973 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.124092177 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.1695819 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.138765272 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.257808273 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.121897694 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.150143954 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.119387039 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.118238848 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.141668504 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.253594609 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132769258 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.129913867 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.152052995 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.130987747 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.149657019 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.111866041 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.142811946 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.139956904 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.120214309 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.110906422 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.145207013 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133355994 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.110751165 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.14014764 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.128527448 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.127855505 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.146708949 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.124345841 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.1184365 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.135823208 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111249901 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141915742 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.129033099 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.111745984 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.14739528 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.121629713 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.126078812 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.142280244 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.125743574 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.11226686 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118564309 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.13717338 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.136255316 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.14840281 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.1268192 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.123036107 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.147942347 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.124777669 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.124213701 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.138975913 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.125085459 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110679228 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.135167957 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112833692 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.130492222 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.139437075 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.124115084 seconds)
  done (took 10.066739143 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.13164181 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139373729 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.145984137 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.122213656 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.116443998 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.129621232 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.105430795 seconds)
  done (took 1.821591488 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.10757213 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.270631761 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.260738464 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.263994465 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.251712526 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.271686155 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130196165 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.105610706 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.170594179 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.117882658 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.27013065 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.32663155 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.144576345 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122417103 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.264477487 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.106372885 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.265142586 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.136349671 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.123336494 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.263939919 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124017516 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.165302445 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.121702697 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.107225367 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.265859087 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.13619155 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.314828024 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.126276462 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116942106 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.149095496 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123862189 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.212381407 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.266709614 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.122007694 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115031737 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.260369702 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.255217371 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.148494791 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.314868112 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.111682917 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.251775174 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.121306488 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.149664702 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.123709587 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.121307185 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.248022112 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.155218411 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.123855834 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.12073337 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.273170561 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.14667808 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.268539806 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.12033688 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.12232617 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.145656092 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12424932 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.128776991 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.150351033 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.276965806 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126801669 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.261141379 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.264649856 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.256622019 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.263068369 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13414129 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.268048821 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.244826804 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.120694469 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.142996047 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.125298615 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.266059881 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.121165408 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.146035539 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.227570908 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152200221 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.267230979 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.267351944 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120650608 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.119623453 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.139189697 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.122464596 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.10811738 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.254422089 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.14745255 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122121466 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126452393 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.148126309 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.124935091 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.112991394 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.157397809 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.12278384 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.119709147 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.154508545 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.123525275 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148698518 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.269419596 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.121157586 seconds)
  done (took 18.159502686 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.11029573 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.109705711 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.113065914 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.136623589 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.109940097 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.108676599 seconds)
  done (took 1.645119886 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.14682733 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.124188627 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.157578977 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12413513 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.171076504 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.255117497 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.263906255 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.144060708 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.142852313 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.134256877 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.255945885 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.259438718 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.259026864 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.127042622 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.260966216 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.124751618 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.265241481 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.148242664 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.132813956 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119473852 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.149069375 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.127622305 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12017862 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.247716836 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.122829795 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.152541186 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.116879528 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.157164608 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.132487378 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.116447908 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.154022589 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.124872304 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.113910854 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.143541997 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.262568515 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.115897629 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120044176 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.152528614 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126909993 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.124514857 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.260884013 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120897636 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.159587053 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.126110101 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.142371387 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.116197807 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.126426133 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.141615914 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.236461564 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.155026208 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.126983257 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.123165593 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.152286335 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.127093746 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.141029735 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118007045 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.125563453 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.263577023 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.126481656 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.14312211 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.125264253 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.123220138 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.145764207 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.127314583 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.149113026 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.128036114 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.115482004 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.149527254 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122084379 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.124670882 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.149748512 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.125884514 seconds)
  done (took 12.075947158 seconds)
done (took 44.692192353 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.668635306 seconds)
  done (took 2.62459877 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.091256926 seconds)
  done (took 2.048683146 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.963841422 seconds)
  done (took 18.952289115 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.42013995 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.352962552 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.99563478 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.177019228 seconds)
  done (took 2.902906438 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.090703154 seconds)
  done (took 2.059139224 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.414785637 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.279995173 seconds)
  done (took 1.654860091 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.714915283 seconds)
  done (took 1.681066846 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.902505828 seconds)
  done (took 2.865881549 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.275758879 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.248661369 seconds)
  done (took 1.500905457 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.671161046 seconds)
  done (took 1.645956375 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.040772294 seconds)
  done (took 20.022536386 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.261943994 seconds)
  done (took 1.245003153 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.296650712 seconds)
  done (took 1.280366937 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.620273081 seconds)
  done (took 4.600232754 seconds)
done (took 66.052265377 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.124738907 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12581558 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.150461242 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126586628 seconds)
  done (took 1.498520098 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.128610698 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122258634 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.125809713 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.149411947 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.129367847 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.121892177 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.147856232 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.126896514 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120771434 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.149973122 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123375186 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121418932 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.151404588 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123194297 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.120269414 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.152066474 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127504691 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.1233557 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.149057153 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.125178558 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.122834126 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.149249077 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.147875718 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.125983199 seconds)
  done (took 4.171550167 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.120657243 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.113813565 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.115037184 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.138256128 seconds)
  done (took 1.474880081 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.131252864 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.135456192 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.157314069 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.132630972 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.134766649 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.159063383 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.123737872 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.12044702 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.148428162 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.132428851 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.136830389 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.16265574 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.134543157 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124318393 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.161008254 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.117418074 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.123697014 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.161315346 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.130697486 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.15727824 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.125690704 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128868133 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.153346665 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.133464179 seconds)
  done (took 4.310410842 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.201059577 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.1334595 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.177192365 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.169465614 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.17908227 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.122007136 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.150447972 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.15461198 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.129119911 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.131275003 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.149233782 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.169906452 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.127585707 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.153464138 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.12515991 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.152666411 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.133985334 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127873105 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.190975891 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.128043657 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128208762 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.160489054 seconds)
  done (took 4.285061319 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.126584323 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116094511 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.135828027 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.134190458 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.124690297 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.140522898 seconds)
  done (took 1.765557757 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.113400105 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.109471602 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.108370275 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.133368286 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.112813996 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.107567799 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.132558267 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.10889164 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.108367062 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.107202669 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.133326382 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.108336403 seconds)
  done (took 2.368382879 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210524816 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151013547 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254942336 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.392876287 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196001252 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163043359 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.311692989 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192678622 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.181884233 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169656001 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210938695 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169241005 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157318609 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219202526 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146264829 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.193780787 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205244605 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215333807 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1755402 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215360697 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189244875 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206858987 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194656387 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179820213 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145598124 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195189975 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.125209638 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131621626 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199396306 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194174762 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179862467 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18271688 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146646511 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21849629 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268789558 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181460715 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.324133328 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140136326 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.202020173 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.197450249 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263229423 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171901399 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19616007 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185213986 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13413256 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224331879 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153930049 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.219522609 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.138210103 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178235864 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214014156 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186553402 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.202069062 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14205738 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.329889366 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138835113 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.172270231 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180555014 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218470589 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234289011 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184335173 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.155254659 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201789278 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195757016 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246252125 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.145202124 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.196866795 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128776781 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196844306 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.239027672 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187598646 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191313085 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.224801143 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135374687 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203795329 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169724446 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186844291 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237094256 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177268283 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123031707 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182779807 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13818957 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158363993 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195310661 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125598723 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246203725 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164876274 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.187606538 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207770625 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154873326 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193135873 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162626058 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194773861 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150965985 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.134191506 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148791966 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.187894075 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162842915 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132172185 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182856423 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143948892 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.158097478 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156096037 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.153046418 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175467355 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.164809994 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164243512 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201482116 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.136624497 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209489838 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15195815 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.191884387 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172057564 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227515454 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133775461 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164265512 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224740451 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204483056 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140074586 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202089945 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228763099 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.15569019 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167052389 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1692959 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226608566 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147136308 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235972605 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143961393 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168590852 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.143279533 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206444619 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163045454 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.192521549 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131746293 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.198104522 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217374011 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.132968584 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143062746 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215640899 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138211291 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156375542 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140387545 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167964585 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.148628257 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.155058475 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.17169851 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158391929 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201651202 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168364218 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190283485 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138763386 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205881977 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136088604 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.203659697 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15210349 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.152920843 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.179354582 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231062694 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13328755 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213984334 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.191790451 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185110271 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205102548 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13425569 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217147237 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131697404 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.152500538 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16727581 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202161741 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167463544 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.222495752 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20753512 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.168821329 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.195271829 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151958709 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201296268 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.216486188 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161712463 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.171712478 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175915317 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206055323 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124453116 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.12754967 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.161642413 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141860567 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163108311 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142938289 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214150835 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167289639 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207116981 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199146274 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143545628 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.224968272 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.130213207 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190531352 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17988754 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172560771 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.193578527 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224958006 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209657807 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146412892 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193665759 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.127603168 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131916845 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.16504501 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164339893 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167480655 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141081488 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147336822 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.224612153 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200683481 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152784303 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218534354 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195996014 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203908472 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.152944589 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.166270515 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195985467 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173213158 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.190471707 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162724743 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.161997276 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225377543 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145565927 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22373292 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201589252 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183036684 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223709872 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.195781531 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135939353 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147301063 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195063842 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142235686 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194347899 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14598246 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162381054 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152876074 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.140752885 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172386307 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218212945 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149086347 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207923228 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.15764365 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202306662 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128085491 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174894866 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177697318 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177917108 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.111708899 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196373226 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194231334 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182334569 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154160106 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201597633 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134513195 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.350177002 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182806836 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201670408 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13983496 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173836072 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175508631 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189782933 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160185314 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215927388 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143887361 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241162092 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202346821 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.142861603 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161672654 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152002011 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15342796 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.173163361 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.155224139 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.197468896 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.145494829 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220605777 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168961291 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175102784 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208914206 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150240125 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.180476093 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145301159 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259970559 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173372396 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207151552 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.195175867 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.167384693 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216879395 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128567117 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130512477 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.165390166 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188934361 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161755067 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185448373 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.196599582 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210364111 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179989439 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193233372 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144777628 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.161214774 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171034459 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181338284 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185432449 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166208217 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.142467209 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218037713 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131622604 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164942972 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162861004 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319541612 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152250087 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200143188 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.111454257 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.313458506 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133790617 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163587982 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163378178 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202964009 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137503449 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.188281555 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205111419 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143789723 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19302259 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138359983 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209509883 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214372233 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171974244 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20728879 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.14783528 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196510534 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159023085 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206220917 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177823171 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.152723332 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16271727 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228836712 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.208998155 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.137163881 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201072566 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173396212 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20493905 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176392822 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171976059 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186771447 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158938507 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170207119 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170437456 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130762998 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164542014 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.197311544 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1619252 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17656512 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204869488 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135256865 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13134268 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179454664 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168819512 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172406002 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.134267982 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217061122 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.133577322 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21738302 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243731692 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135819925 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195663988 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146568778 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133177899 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172009094 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148056816 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162088629 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.178379178 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181007026 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.162074381 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176564422 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197681144 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193875423 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157371129 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173970028 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.268862193 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130469455 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22474527 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152488176 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230578064 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180643991 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180112848 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202114599 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154147465 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198736445 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150425693 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.25410899 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170541799 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.201799754 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134944325 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176412657 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142510371 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.1374151 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183697592 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174290879 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17516159 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.139266313 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.203356167 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149127134 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.179356817 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146742682 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233074261 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154291478 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221332685 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219186951 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143999945 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208466454 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177807178 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161206673 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.169705938 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20494331 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149375489 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187919148 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.139436656 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.139660148 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248382563 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.128932527 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195263517 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177515032 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204676866 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205289164 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.140608174 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211335604 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145876441 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20856018 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132602547 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.154260398 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202495024 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138406497 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.16098339 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175983761 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193763886 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.168878179 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17700959 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.179782988 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229372673 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.128281397 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137540325 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316823599 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194791321 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197670737 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.168161607 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142508206 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149152696 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193618336 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.166465232 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208568841 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134327557 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163586514 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.150501471 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.19012732 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.144977514 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202564446 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184654837 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190003631 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18840713 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.169385855 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.258373848 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174061031 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1763982 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.121456087 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.163364699 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145507051 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167726147 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147788067 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208971825 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251924424 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.16896136 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.178147515 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1409842 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.129692679 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162938807 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164842052 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182572588 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177253476 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180522118 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109894142 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144315139 seconds)
  done (took 87.235717268 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177430105 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.178953343 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.191593848 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.242714385 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.217031161 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.311540735 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.255720089 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.273120625 seconds)
  done (took 2.923946544 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.124376152 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.164666959 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.146631984 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.148946595 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.115272689 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.513431073 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.165004572 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.126723237 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.164813137 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.157578069 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.142258593 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.577506469 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.126935695 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.149518175 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.128118597 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.139947895 seconds)
  done (took 4.1599188 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.142593133 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.550089226 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.216700392 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.312656728 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.240406409 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.216566576 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.822232631 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.204994992 seconds)
  done (took 12.778059836 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.176822485 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.17382399 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.998398818 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.34157493 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.218716151 seconds)
  done (took 2.990283681 seconds)
done (took 130.935978524 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.129737867 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129416457 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.12798499 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.160289378 seconds)
  done (took 1.616395074 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.201188223 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.09708972 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.130556826 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.096911416 seconds)
  done (took 1.606838621 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.396985887 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.09753461 seconds)
  done (took 1.59456653 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.150490855 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.138819049 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.168228725 seconds)
  done (took 1.547604622 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.142527691 seconds)
  done (took 1.224807498 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.122534088 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.1206233 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.281673948 seconds)
  done (took 1.612103047 seconds)
done (took 10.287384101 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147594746 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.93995689 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.453654826 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.1378419 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.747963202 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.40692982 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.433764168 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.182298321 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187353644 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.144408866 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137440453 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.701140278 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.448597619 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.888835724 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.402996219 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.917465203 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.70456313 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116665254 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.151058805 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.117088633 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.412485973 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.143754174 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116340214 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117401941 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.727235775 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.427126522 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114820747 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.928577998 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11486789 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.119486074 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.435836149 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117187388 seconds)
  done (took 21.216627408 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.156560272 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171490522 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.16627296 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118044969 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11908302 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.147548232 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12716198 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155723783 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.192363638 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114954004 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.168299056 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.114543896 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.120494582 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.145787184 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141599431 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.115915509 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.150689763 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118578207 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12313556 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.147017299 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138643259 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.114828918 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.146508575 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12009083 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.115405248 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.167077532 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116603166 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.15405758 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117454741 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.122041986 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.121656392 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.146011444 seconds)
  done (took 5.485909137 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.166095912 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182985909 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.168322522 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.154809351 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.195411791 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.118771178 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.232730503 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155194037 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.225174375 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.116566569 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137596478 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.145566207 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157678571 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.117583458 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.171149697 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11588422 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.147595934 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120759071 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12397645 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.145812955 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141042796 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115115547 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.146609076 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122008462 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.117580665 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.16741263 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117027032 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.127441905 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.144949508 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123086183 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.122741377 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.145330981 seconds)
  done (took 5.782152814 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.13136433 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.132153118 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.139765679 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.169980764 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.126778063 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.130342483 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.162623613 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.127078591 seconds)
  done (took 2.212303953 seconds)
done (took 35.785711299 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.139485126 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.133970039 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.137523982 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.162396908 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.279226569 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.124615777 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.134919532 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.154471668 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.133723359 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138345525 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.116116162 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.156811421 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13818056 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.128238514 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.277728334 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.164408756 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.283490031 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.283678462 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.128567886 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.132837773 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.125352254 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.283650735 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.162762876 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.126879124 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.277361877 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.120333319 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.274220486 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127459853 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.160126158 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.121486468 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.284531573 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.129083384 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.12451318 seconds)
  done (took 6.750277043 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.232542281 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.159836945 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.128617892 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.124928945 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.126837708 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.156471992 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.234415145 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.160545067 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.125373974 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.125307554 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.156773288 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.216762341 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.164405124 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.122361231 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.12660353 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.116179998 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.26854651 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.125729256 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.153551439 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.099666934 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.121651364 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.156754221 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.248562125 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.154300488 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.126118133 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.125120101 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.125201675 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.162990838 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.12924814 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.126175542 seconds)
  done (took 5.710841302 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.131943944 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.137863691 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.144954886 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.224522406 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.15554017 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.168957309 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.143328422 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135827747 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.177987508 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119889059 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.133176782 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.186283675 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136786458 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129304991 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.14864034 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135098395 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133992039 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.149588925 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128175029 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136042859 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.169146928 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.136368249 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139642268 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.15674612 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.119271103 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125099358 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.159246159 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.130960159 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.126411256 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.133272534 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.153701598 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.121271078 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121022582 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.186179751 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.119713757 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.162360172 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139800319 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131405397 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.161457753 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.153875782 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.120884297 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.151025769 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.147589229 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.176026505 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.150950201 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.1321388 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.120810055 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133794249 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.14867107 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136387735 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.191070387 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.120323751 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.139457818 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.117356125 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.149022652 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.129101683 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.118025623 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.153110392 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.134005728 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.119367903 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.171700954 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.128140527 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130151258 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.151518639 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.131849239 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.117130677 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.116626842 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.153161516 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.147120524 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126183714 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.187164094 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.119246169 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.129881111 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.161641016 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130065352 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13093306 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.148671699 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131369918 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129091626 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.157235497 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.132494014 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.121325693 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.150072226 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.13657903 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.139620479 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.163670464 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.130718439 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128236768 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.150584163 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.121923325 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136049354 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.119277179 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.152722703 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.131688673 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.118362886 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.15424657 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129175016 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126930736 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.146344518 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.145771958 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.121957059 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.148008487 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.145887267 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.121803059 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.121065465 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.161022432 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.160444705 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.14916827 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.130722768 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129829289 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.118043293 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.157289904 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.119996055 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.117645966 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.164113188 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.136287303 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.125639092 seconds)
  done (took 17.57582993 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.376223331 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.367795513 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.214163687 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.413423453 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.130778432 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.285854158 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.398612072 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.371998632 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.119270055 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.183859135 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174772993 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.332277519 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.152739185 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.147527978 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.372464124 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.447750723 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.147908474 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.190851923 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.153686373 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.165001569 seconds)
  done (took 6.267019152 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.128587022 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155087739 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.172809335 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.137587957 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.129526807 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.165385905 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120743426 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.140843399 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.1618416 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129520311 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.122474443 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.126266965 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.162988603 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.13579164 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132915785 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.183539541 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128118597 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.12278852 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.173538548 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.125206634 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.107230954 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.176771292 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.128219378 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.139621945 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.168546224 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.12914205 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.117700023 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.154709339 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.127490164 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.128432114 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.154014277 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.129288368 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.126267243 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109885272 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.161856546 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.134334261 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.127163797 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.153240227 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12608887 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.12097111 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.162731588 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.132255924 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.127436736 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.104547862 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.170411056 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117093312 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.133941544 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.160925912 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11322606 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.139941748 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.130206502 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.165491017 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.127613225 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.140080383 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.156250945 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.136588738 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129076819 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.165255442 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.125609548 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.118020524 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.147950099 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.122500214 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.128555594 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.162298921 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13257461 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.127380514 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.126851396 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.149805223 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.124243243 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.121920672 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.152659776 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.132797055 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139860802 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.160053384 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.127132717 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.128928337 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.158508006 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.100954179 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.128468711 seconds)
  done (took 12.03515929 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.144929533 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.128989796 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.135202179 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.185782564 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.131566032 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.124844507 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.161192565 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.138087742 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.133225671 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.168531068 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.134067397 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.132950426 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.172394409 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.12967054 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.129244927 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.166557004 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131678616 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.156963256 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.1618504 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.146051045 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.162511239 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.125657739 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.133276934 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.13051073 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.180183109 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.131738331 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.175551863 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.133613429 seconds)
  done (took 5.224139188 seconds)
done (took 54.660328735 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.276004791 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.56135267 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.249331636 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.247023033 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.257346761 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.293139442 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.247253579 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.246413039 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.76501523 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.215570569 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.245481985 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.25693833 seconds)
done (took 28.992988494 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.365589157 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.466557025 seconds)
    (2/2) benchmarking "String"...
    done (took 1.648866591 seconds)
  done (took 4.249066659 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.237047044 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.235687583 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.567656334 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.236814123 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.236050269 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.240414861 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.237554999 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.255915155 seconds)
  done (took 16.133203112 seconds)
done (took 26.111242289 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.25201864 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.554486363 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.503612505 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.213949972 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.240840403 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.237476498 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.2555436 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.29049595 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.238717088 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.233883304 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.766539516 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.550504921 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.240772237 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.667381865 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.225563181 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.251188856 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.252561866 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.574041993 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.239533114 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.275828512 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.233455875 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.220889682 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.245689064 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.263657411 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.249752361 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.253536571 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.279787814 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.240963324 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.528506384 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.264051525 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.275694137 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.241695051 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.289721759 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.241017241 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.268213646 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.24435335 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.529877438 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.251245079 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.222247885 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.244167502 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.542011104 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.258410724 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.244815559 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.241209723 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.231576027 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.256615663 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.221240425 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.426970916 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.274555375 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.242889057 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.31053509 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.651006248 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.242896879 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.248154601 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.251708615 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.556962237 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.268003563 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.333526352 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.271538999 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.250143821 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.242178143 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.242254479 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.279360176 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.25188203 seconds)
  done (took 147.121222542 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.240325464 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.244884353 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.247005852 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.250415224 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.245240194 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.246027096 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.240015787 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.241297235 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.247076811 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.275493064 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.241898568 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.243083006 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.244818004 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.251874418 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.2507029 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.265995627 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.247189675 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.241804561 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.252518843 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.242416022 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.267751647 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.242741762 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.242686238 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.241266295 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.28925054 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.329251017 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.263670122 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.260208229 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.256587517 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.243670442 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.253007453 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.249473415 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.99707379 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.203053265 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.253751333 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.288024825 seconds)
  done (took 81.970509311 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.241205743 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.244015038 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.243735255 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.279682563 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.243519724 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.878074649 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.879388503 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.310774785 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.601587744 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.797094099 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.516413924 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.244587807 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.340002314 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.258259448 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.243667718 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.245469623 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.341774188 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.271068619 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.249403643 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.244927096 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.879660046 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.262788865 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.290547074 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.432834022 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.261341613 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.280693026 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.638219706 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.244745788 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.278762404 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.585636763 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.298692732 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.246420512 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.622401983 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.763746703 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.359287309 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.247489154 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.282485782 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.24564262 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.536097921 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.246641908 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.247388722 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.250152201 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.952569667 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.250010704 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.882832377 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.250743059 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.24412455 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.246381331 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.247692881 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.245692346 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.310879478 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.976129576 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.245567541 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.246814766 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.248086157 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.249402805 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.246667401 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.246796538 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.28204683 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.304744689 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.152346887 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.249903916 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.252077517 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.28390845 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.248338074 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.303269153 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.252614316 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.591532695 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.308852333 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.412226024 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.886398263 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.253710895 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.344570353 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.372061699 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.2471741 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.247754271 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.247526868 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.24744641 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.36333936 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.248297077 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.988843204 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.433770384 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.267759678 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.815734598 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.352705187 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.250317167 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.650943811 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.254134971 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.247815521 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.014148307 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.348163408 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.248933332 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.250119725 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.248599979 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.987717223 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.884033019 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.575586462 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.256605257 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.87572023 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.253801339 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.165233512 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.854803743 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.954928556 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.253969866 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.36285103 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.434649685 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.268521088 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.25000302 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.25077323 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.251375821 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.823825851 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.255997637 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.309879699 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.653999786 seconds)
  done (took 383.800876295 seconds)
done (took 614.017323447 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.225876 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.227564902 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.229028147 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.230621436 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.229495734 seconds)
  done (took 12.277207458 seconds)
done (took 13.412598907 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.553973798 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.543255465 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.542025002 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.349503453 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.556034465 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.564209388 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.459267132 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.360091532 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.529007844 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.560349678 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.545071619 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.319015149 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.559676618 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.52356609 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.302872663 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.443242329 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.479811365 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.481806869 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.37350853 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.443550748 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.580040241 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.318804437 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.316004151 seconds)
  done (took 34.840526649 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.635436113 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.264331519 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.383655771 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.612338273 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.325077092 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.636499515 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.680783919 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.264779271 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.497504955 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.325904503 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.299415729 seconds)
  done (took 19.064371524 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.633834931 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.263540916 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.403941451 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.605966862 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.328394623 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.636689903 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.678004445 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.263993068 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.513299841 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.311437439 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.300886517 seconds)
  done (took 19.077673774 seconds)
done (took 74.119688127 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.316900844 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.390919334 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.316221497 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.292131702 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.293270883 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.294160661 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.295134598 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.29180722 seconds)
  done (took 11.628341355 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.289735797 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.288685174 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.291299962 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.290523188 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.290369118 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.288896933 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.291359397 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.288210463 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.290414933 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.287985434 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.289030679 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.291998306 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.288183085 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.287365383 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.292537689 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.291359677 seconds)
  done (took 21.777440624 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.296548535 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.292547118 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.292243238 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.290178869 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.29234388 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.292878655 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.293452959 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.289302501 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.291433988 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.290605041 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.294594585 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.290713016 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.291207352 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.290705962 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.293335905 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.296931265 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.292336128 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.293760121 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.295781957 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.292243867 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.294956433 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.294865081 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.291893752 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.291921619 seconds)
  done (took 32.168063132 seconds)
done (took 66.711590491 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.257335029 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.272712961 seconds)
  done (took 5.670696672 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.410235408 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.391534566 seconds)
  done (took 3.94279482 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.291693657 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.294050871 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.294274363 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.294146623 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.293179251 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.294147252 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.29460562 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.293685461 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.292189251 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.290473111 seconds)
  done (took 14.07409364 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.293099073 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.293715493 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.291985105 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.295573689 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.294810813 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.295150661 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.296888522 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.293686998 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.292723746 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.293719893 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.295513557 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.292012553 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.292376635 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.29245346 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.292665289 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.292265239 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.292216141 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.291881112 seconds)
  done (took 24.424155754 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.315210754 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.321087968 seconds)
  done (took 3.778028756 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.47568996 seconds)
    (2/7) benchmarking "second"...
    done (took 1.379145421 seconds)
    (3/7) benchmarking "month"...
    done (took 1.464589248 seconds)
    (4/7) benchmarking "year"...
    done (took 1.450619245 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.378205357 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.324608458 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.376744068 seconds)
  done (took 10.99255925 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.28938212 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.654192897 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.837848095 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.500901476 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.28519779 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.307299064 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.256195708 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.313546437 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.316905243 seconds)
  done (took 14.904127613 seconds)
done (took 78.927591563 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.262758483 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.275007736 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.295336648 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.284254444 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.698902703 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.31253716 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.264694204 seconds)
done (took 16.539730926 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.244472499 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.247032392 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.261046534 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.277159756 seconds)
  done (took 10.172844675 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.279735782 seconds)
    (2/2) benchmarking "read"...
    done (took 1.674308164 seconds)
  done (took 5.100035207 seconds)
done (took 16.418798997 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.294791537 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.294431645 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.29370369 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.299104796 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.294524674 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.298897436 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.296289843 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.294912781 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.299076161 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.297397246 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296234808 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.297099792 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.295820369 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.293706064 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296466611 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.297383487 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.296849132 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29578929 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297086313 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.296053779 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.298608852 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299750129 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.298879767 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295924922 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.29925202 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.298320059 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.296761481 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.300777006 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.296756103 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.298564224 seconds)
  done (took 40.054642215 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.305692994 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.306205978 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.299222339 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.299820459 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.300686072 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.296178515 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.303863152 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.300906142 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.297346262 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.301613634 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.301084866 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.299704732 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.301163577 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.298797563 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.299194611 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.302515914 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.302530301 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.299907062 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.301763932 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.301439449 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.299171074 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.301574453 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.299995691 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.299144047 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.302128364 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.302355558 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.303681146 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.302918269 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.300963691 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.299270878 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.302159583 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.304810968 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.301125863 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.303386765 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.302058244 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.300417602 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.309352258 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.308618715 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.299602205 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.302450332 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.301130193 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.300230428 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.30285611 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.304121774 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.300023068 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.303248199 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.301337411 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.300612739 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.305942746 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.304835482 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.300853202 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.304070301 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.302310999 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.301402713 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.304081336 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.300824078 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.301781602 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.30153625 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.301726288 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.300630898 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.301242218 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.301104002 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.301847044 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.305079857 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.304492492 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.303179476 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.303721095 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.302536657 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.302363869 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.304597882 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.304102917 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.303511641 seconds)
  done (took 94.8956771 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.305928847 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.303816289 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.301651698 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.305801317 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.303772359 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.301826161 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.304823679 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307664264 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302344942 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.304914054 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303970847 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.305649342 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304194759 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.306637247 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.305080346 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.304571063 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.307264632 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.304314675 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.302607685 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.305070149 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.303633584 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.301860104 seconds)
  done (took 29.849340898 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.306127546 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.307909057 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.303724029 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.308571153 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.311865077 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.310351477 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.307585134 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.308979096 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305930105 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.307777547 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307742765 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305403501 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.310780442 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305010924 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304156764 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.309478111 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.305855095 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.309447103 seconds)
  done (took 24.690232396 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.307090588 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.30670681 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.306851032 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.305417539 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.306527317 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.30711587 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.307297318 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.307050149 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.306206885 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.30749867 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.308238778 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307330493 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.306410124 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304991159 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303819361 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.306549667 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.30702787 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303966307 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.306233635 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.305773381 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.306170777 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.306428353 seconds)
  done (took 29.894977567 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.305983953 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.305634885 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.308261756 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.308988804 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.306984848 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.306007489 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.306554137 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.305820104 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.314458703 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.306349921 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.30584399 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.307867292 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.31271742 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.305424943 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.30671561 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.308291089 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.308134925 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.306954327 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.309101597 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.30658375 seconds)
  done (took 27.307209946 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.311875274 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.310610449 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.310573502 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.311219954 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.310204181 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.310214169 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.309502068 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.310128823 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.316596615 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.311453433 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.3113889 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.312125935 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.312272462 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.311579986 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.31020928 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.313244931 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.310458474 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.310507573 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.31080768 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.310930321 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.310643833 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.309872715 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.311461115 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.310634544 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.313750024 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.311359217 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.312425205 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.31096643 seconds)
  done (took 37.874809989 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.338259634 seconds)
    (2/2) benchmarking "in"...
    done (took 1.338520912 seconds)
  done (took 3.834279904 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.309768861 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.310995413 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.310348684 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.310137204 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.311048772 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.310486061 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.310706619 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.312225528 seconds)
  done (took 11.642717695 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.299197125 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.310804747 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.31388391 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.310178201 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.312386652 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.301154567 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.321723454 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.318130469 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.303809723 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.307640518 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.316067986 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.310217172 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.305573635 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.305132028 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.303919793 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.306562797 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.313645611 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.315853643 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.316628323 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.312164208 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.316364462 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.306068321 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.310058283 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.321498915 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.308552086 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.321183441 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.321831359 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.321347569 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.305987374 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.316828627 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.309306233 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.318022704 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.315797212 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.314046779 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.313358075 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.315662488 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.321844139 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.312920589 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.32646847 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.319561517 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.315967554 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.315350436 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.312185579 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.314307706 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.314143579 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.32759082 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.315549065 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.316234348 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.306938543 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.321221854 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.325829144 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.305966841 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.31556024 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.31601316 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.314083166 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.3231332 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.323259333 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.314634634 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.319405073 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.32586609 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.336595667 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.326875715 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.318215396 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.322937226 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.329610909 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.33965667 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.325891302 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.325277816 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.32040485 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.316759206 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.320648806 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.339803616 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.33266891 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.320571212 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.320559689 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.318692551 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.311532703 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.321435847 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.325692534 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.326462534 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.32671934 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.319117606 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.329213163 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.333800339 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.314288011 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.323096604 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.320148882 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.3194064 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.311566855 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.326141404 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.327166255 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.318711758 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.310030975 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.314169421 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.315523643 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.320535105 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.310067013 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.315670799 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.322739155 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.323028229 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.319629891 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.320800292 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.326823963 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.324482184 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.319046437 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.324086185 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.326171086 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.312015585 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.328548763 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.329617334 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.319857365 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.31465356 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.32481882 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.321871587 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.321079378 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.327354268 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.324896064 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.32477894 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.326592858 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.318827625 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.331976224 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.345626913 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.325092876 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.32490647 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.326545366 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.329103373 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.322539829 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.323527663 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.327479074 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.320156006 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.320447384 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.324986369 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.326833321 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.316090126 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.324932033 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.317949859 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.323610985 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.319856247 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.321899105 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.32640743 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.321763822 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.319444183 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.331204059 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.331951989 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.33005035 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.325730109 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.334902504 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.321456101 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.328026699 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.326887727 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.328277709 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.321770806 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.3191512 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.326003188 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.316625668 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.324743461 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.314829281 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.325027506 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.321310203 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.321105358 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.320797288 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.31596923 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.321082451 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.326275849 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.32973376 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.323933721 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.328544713 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.323870235 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.324140102 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.31673099 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.324948514 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.316206063 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.325989778 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.330661741 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.322817168 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.322918787 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.328573277 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.330373436 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.323120908 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.323057981 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.323363816 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.331892205 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.330197995 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.332780796 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.334817019 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.325339206 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.32734882 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.319374901 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.320474133 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.330562078 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.325301353 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.336686529 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.343932703 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.339836441 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.323364095 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.330103291 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.319336698 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.334020478 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.333416701 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.337417489 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.33027517 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.327651652 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.320649644 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.333991774 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.324719156 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.333988002 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.319008583 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.329651976 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.331080998 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.328793417 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.328613366 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.321942336 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.327356852 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.33052604 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.328650941 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.330287811 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.32190986 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.335478416 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.319554393 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.325301214 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.335230897 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.335895717 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.337470429 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.340121255 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.337408199 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.3415794 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.330529043 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.323964731 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.330014522 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.334408028 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.327385138 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.338542003 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.33033202 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.326091817 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.340120417 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.332225138 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.322969562 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.336330619 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.340828747 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.332137487 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.327100954 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.339213457 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.333951126 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.330256103 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.331391722 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.323381416 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.333127697 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.338341698 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.341286138 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.324466819 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.335820568 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.328298452 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.334259754 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.33472832 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.336892282 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.334904879 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.341232499 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.343407705 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.33071922 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.326750978 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.336210911 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.330292281 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.331809723 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.328346433 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.337219419 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.341172994 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.331934459 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.336701196 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.330372878 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.335662168 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.326301829 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.335680745 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.326296661 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.353324819 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.355990311 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.345936868 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.337022048 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.338146143 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.340345585 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.337346111 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.328218065 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.327868369 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.329663849 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.327528173 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.327630071 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.335842778 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.327239239 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.339352232 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.33936194 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.337178492 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.338601158 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.333581596 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.326384173 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.33902293 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.333647526 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.335305488 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.325064032 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.336535253 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.332841907 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.343620302 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.333828554 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.328766738 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.350150602 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.338919076 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.333769958 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.332089437 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.328045068 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.326604661 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.336046086 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.339810461 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.334198853 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.344597312 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.33362804 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.337552002 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.331833469 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.347533161 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.347409052 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.333084815 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.342645178 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.336159298 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.327527893 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.329085563 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.336458149 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.346027871 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.345174969 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.331113056 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.338383953 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.334431634 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.33736413 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.336380695 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.333351818 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.337857279 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.335054339 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.346454601 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.343047185 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.333251875 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.346784462 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.34506916 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.335565717 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.334299355 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.332751252 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.348522672 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.349498564 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.338240778 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.334927717 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.333548351 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.338306638 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.334563355 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.336199387 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.339303134 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.335047285 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.347007605 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.344402944 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.339946512 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.334623139 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.350268844 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.347668862 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.347930278 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.352945231 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.337354422 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.340552524 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.342160829 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.334680479 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.333569444 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.336177108 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.341997051 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.33204837 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.344056391 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.333961044 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.3402814 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.347107058 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.343342055 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.328386522 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.350558336 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.360660179 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.33328044 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.341771185 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.337733869 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.331331798 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.341411432 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.338550664 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.329912135 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.338319 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.343147337 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.346853116 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.332372573 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.342772569 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.336135203 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.339913686 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.339782874 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.337674155 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.336345355 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.339694664 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.334560073 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.337083299 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.349546336 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.353945149 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.340125026 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.345880507 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.338399597 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.355551708 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.350809206 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.341538194 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.344572658 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.34352881 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.336911978 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.343494518 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.345316188 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.338064707 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.34168968 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.334825329 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.342673674 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.340060563 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.354875644 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.346518716 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.343027909 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.334205139 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.336653076 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.341355279 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.33867114 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.341970721 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.345805078 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.348142386 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.334388472 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.336163838 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.343635668 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.341894105 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.353151472 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.340572429 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.346405364 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.340529826 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.347313649 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.345476824 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.341583241 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.333174072 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.337120105 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.354902254 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.354690006 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.347386564 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.342397451 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.3479205 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.336186257 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.3445765 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.346054062 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.3378878 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.340324702 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.349983751 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.340481146 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.340832867 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.338195381 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.345518798 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.356050934 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.347862043 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.337833743 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.361184199 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.362149544 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.349268158 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.336586587 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.342837312 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.337439628 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.344075807 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.346488335 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.339068048 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.358719569 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.352472336 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.349233866 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.353909809 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.345519497 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.339078733 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.345818976 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.346759808 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.349272069 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.351924361 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.34759511 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.348254971 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.343799446 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.341377559 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.338070016 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.33856533 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.346613979 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.344763744 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.347869656 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.356779518 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.352366247 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.349315999 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.348577916 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.348712291 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.345300544 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.344103744 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.338005831 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.34738363 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.337321317 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.357425201 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.348644545 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.341540289 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.35077652 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.347124659 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.347747155 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.351722659 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.354600749 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.34575989 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.341013546 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.35079824 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.362616782 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.359464147 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.345417249 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.341075356 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.346894602 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.350161079 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.342643083 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.348687916 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.344951547 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.372464543 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.363043233 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.343360214 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.353026387 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.362517678 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.35995129 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.347804633 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.347866163 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.354085809 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.352991326 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.353563816 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.345720989 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.358726274 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.355248946 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.344764652 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.34983059 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.347447744 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.347597065 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.360812502 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.358375182 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.346663776 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.35427501 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.373476054 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.361045563 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.360855874 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.386017523 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.361492617 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.356006794 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.353781232 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.340787819 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.348209923 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.353800438 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.352317428 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.347686043 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.35016932 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.345007839 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.342059909 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.363281811 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.367260879 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.364765589 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.348597192 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.344257255 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.34528029 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.353396545 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.34709337 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.354513936 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.351601765 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.347692119 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.349366634 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.344655351 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.373921641 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.376057319 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.356897619 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.350882749 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.351047365 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.360947646 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.360984033 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.357149607 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.357959067 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.348414139 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.349048297 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.356926534 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.362301588 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.353948781 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.344698442 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.347253376 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.347103637 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.352256596 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.370549076 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.375301776 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.364881736 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.357642966 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.3553704 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.351610285 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.348855815 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.355930737 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.352133047 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.349780444 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.351136063 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.353800717 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.356859067 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.352382171 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.350748723 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.360554509 seconds)
  done (took 797.189504845 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.352810508 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.34977304 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.352001536 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.35224626 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.351380507 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.356358864 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.352555587 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.353845625 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.354068209 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.351988336 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.352580032 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.356482902 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.353809029 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.353017936 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.354128204 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.351774342 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.352073542 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.35405026 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.353683593 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.353115365 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.354967905 seconds)
  done (took 29.610571429 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.35573581 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.354194972 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.352455994 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.354342546 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.35431887 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.357175378 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.355047524 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.355879334 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.355343651 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.355891137 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.357599105 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.359983556 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.352930495 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.356933029 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.356992115 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.35549793 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.356474521 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.356302013 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.357921562 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.354625124 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.35856089 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.35775101 seconds)
  done (took 31.026685867 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.356310603 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.358834458 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.350509587 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.361933036 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.357479048 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.358180954 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.355692019 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.358304851 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.355906502 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.349620577 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.352010057 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.352517803 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.364772992 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.366548078 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.36221289 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.363198351 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.359117664 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.357653861 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.360902948 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.358237804 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.367041297 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.369237247 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.358845284 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.351551828 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.356498267 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.358325385 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.360596693 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.359226407 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.351227205 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.364370358 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.35909727 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.354056616 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.372454906 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.363884192 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.353675981 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.363539525 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.358638484 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.357331613 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.358122845 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.369914917 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.381076043 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.361107582 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.372550308 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.375002645 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.360281569 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.360656268 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.366280586 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.362021455 seconds)
  done (took 66.505024907 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.359857214 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.359013531 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.359793448 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.361546326 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.35726694 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.360330598 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.358545245 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.357669435 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.357392305 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.359776826 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.358245417 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.361348604 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.360607798 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.359847575 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.361819754 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.360428376 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.359605785 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.364090294 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.361159474 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.360737493 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.360075887 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.358946064 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.35853861 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.357275111 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.359032319 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.357749055 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.360199646 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.360815995 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.363600357 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.360829195 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.360783309 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.360423208 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.36278531 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.359688407 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.360368801 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.361565182 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.3638279 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.361492128 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.362274071 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.357508172 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.360306084 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.364063335 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.361640611 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.360242528 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.368632212 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.360382002 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.360196712 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.362391055 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.364156154 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.36164075 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.363347462 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.361052826 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.36398602 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.362357741 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.361537735 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.361266681 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.359345137 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.363566833 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.36213823 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.36146056 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.360921176 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.361526211 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.362669862 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.362602395 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.363141709 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.361316687 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.36362585 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.362010142 seconds)
  done (took 93.751409941 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.365384523 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.366825628 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.366871514 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.366008973 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.367113024 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.366942263 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.366647672 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.367259482 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.367778962 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.365722136 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.367169805 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.363221817 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.362668046 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.366245456 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.36814926 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.369300664 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.368095622 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.368120275 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.36837806 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.368688225 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.368444618 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.368694161 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.367896993 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.366534809 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.367623564 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.363536243 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.368803463 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.367769952 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.369890054 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.36968912 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.370353101 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.369776142 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.370119133 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.370090708 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.370585115 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.368836917 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.364549361 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.369523876 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.369938523 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.367981711 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.364924338 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.371182048 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.369776212 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.365419164 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.370368886 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.371677362 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.370009063 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.36976406 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.371413991 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.370204549 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.371620301 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.371646981 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.372200264 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.372109121 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.371270187 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.369294168 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.370183806 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.369950257 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.36990053 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.369379444 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.369924556 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.368130263 seconds)
  done (took 86.053208445 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.367892244 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.366805723 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.36782359 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.370067521 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.368575082 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.36831171 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.367692358 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.367798167 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.371371946 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.367157095 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.367278339 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.36785013 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.365680021 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.365871596 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.366708225 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.36807439 seconds)
  done (took 23.091907358 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.367442117 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.370804206 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.36772246 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.36721625 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.368564466 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.368702402 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.369137933 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.370244149 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.368583044 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.36979507 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.367742225 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.367729584 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.367975844 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.36696566 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.368974853 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.368656866 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.371604099 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.369919667 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.368047989 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.368232022 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.3713746 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.368877425 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.370774104 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.369234593 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.369633107 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.372700327 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.37001032 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.369631431 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.370367978 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.370207762 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.369898994 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.36930192 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.368706175 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.369528555 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.370567444 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.37155961 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.372529705 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.371749439 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.374064257 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.370756714 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.372717509 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.374473388 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.37188514 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.370055158 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.37051667 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.370799318 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.369732422 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.372927312 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.370796664 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.371159 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.371429496 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.37004999 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.371576162 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.371855736 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.371857203 seconds)
  done (took 76.566232202 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.371219832 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.372082581 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.372728893 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.372972009 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.372863337 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.3713086 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.371636784 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.377637618 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.371782055 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.372143343 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.375423229 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.374532544 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.372353007 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.373806264 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.373198365 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.372788467 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.373224905 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.373002531 seconds)
  done (took 25.924930539 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.371985781 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.373671261 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.372866201 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.371815788 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.372150956 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.372162549 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.371358466 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.374258696 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.373301382 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.372627623 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.372562461 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.37416874 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.374336709 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.371487394 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.373283572 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.373655826 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.381044894 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.374142201 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.374913318 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.373069508 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.372885058 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.372500442 seconds)
  done (took 31.426238003 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.363053779 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.364275373 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.364154059 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.393600541 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.384627193 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.364181367 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.365184846 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.364544682 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.400930175 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.429110154 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.422107308 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.383244965 seconds)
  done (took 17.81042722 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377485433 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.37560328 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.374827902 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.376694061 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.37712128 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.375214684 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377889255 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.375954094 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374598683 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377606537 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375657617 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.376365737 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.377126798 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.377327732 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375988106 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.378717433 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.376268659 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.375903598 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.377534391 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.378790487 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.376250151 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.377417687 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.378411599 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.376770678 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.377048436 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379500564 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379254722 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.377708926 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379819739 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382959733 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.378684119 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381128983 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380517453 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378316475 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380253173 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37900497 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377205789 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380913732 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380383288 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379710716 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.380357796 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379991199 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.377964894 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381376012 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380035128 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380328741 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378458322 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380778379 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381985167 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381094482 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379217776 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379450417 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381480913 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379706735 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380123618 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381602437 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38189186 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379749897 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382923066 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381918609 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382368037 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382036152 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381841295 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381668646 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.384362145 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379718399 seconds)
  done (took 92.232743706 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381688482 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.383254462 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.384517892 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383529009 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382861256 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383504355 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382313771 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382985853 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384274355 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382966996 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.386347943 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.387234997 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.385244101 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391761131 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.386634292 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381857917 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.38626993 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.384846844 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382918247 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385642336 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.383702494 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384166521 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385135498 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383679308 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38533266 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.386129968 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.385660076 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.386680806 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.386659714 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384708488 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.387362038 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.386055727 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.386042806 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.385698558 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385918558 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.388314604 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384086831 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.385113009 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385993429 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.38370878 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.384996584 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384514609 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.384677479 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385478768 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.387658095 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.386525409 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.387285981 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.386122425 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.388618762 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.387058578 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.387769702 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385019981 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.385463473 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.387161524 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.386556698 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384101219 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.386326641 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.385107143 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384818977 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.387769492 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.386393688 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385617822 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.38777047 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.38693873 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385556641 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.387897651 seconds)
  done (took 92.664618806 seconds)
done (took 1765.042603787 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.645902457 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.555318941 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.373098353 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.366382415 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.373038708 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.388624 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.373792016 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.374346486 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.375360443 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.376428734 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.37435843 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.682160769 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.398285704 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.375599369 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.374361642 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.531606708 seconds)
  done (took 28.160104718 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.412329669 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.391694153 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.527771862 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.38262666 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.415141479 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.644732197 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.457189493 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.381794151 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.598644632 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.410754469 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.357241308 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.418822114 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.380700996 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.353748057 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.430210084 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.640772685 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.746154312 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.358255963 seconds)
  done (took 30.53040034 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.974008706 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.374679769 seconds)
  done (took 5.572153833 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.409590983 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.379973668 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.384772184 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.379995669 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.356097098 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.355107937 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.378565459 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.356504274 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.361995335 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.543947942 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.388281848 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.406352093 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.401309412 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.383652768 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.388750204 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.444107872 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.597703032 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.393590135 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.389239022 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.391276503 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.378978709 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.53685989 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.43735394 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.39509724 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.538667941 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.369327762 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.392352967 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.395213805 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.578821301 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.396244802 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.381963447 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.387116965 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.387714038 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.358200439 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.043311653 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.37909283 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.415857701 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.395990439 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.391584851 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.595769965 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.384828057 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.395744948 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.35856941 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.015835254 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.547349003 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.552287131 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.384074539 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.383185739 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.38571993 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.464957381 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.387927404 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.38534146 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.490864236 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.324908077 seconds)
  done (took 88.939983642 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.393459252 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.358449493 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.627074504 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.377782119 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.359845969 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.35946289 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.358222439 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.751446046 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.402150162 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.360280522 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.78727225 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.114070581 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.368525844 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.404372442 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.382811181 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.416006882 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.361230363 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.35916795 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.358175156 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.36162336 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.055569916 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.384346641 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.361626364 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.560046357 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.4336622 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.05201695 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.360190356 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.372474251 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.36174237 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.360690979 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.090866095 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.370920841 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.397943621 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.362844745 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.753834269 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.887551483 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.851178492 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.367142708 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.394365792 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.364421691 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.361377239 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.052868525 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.866028843 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.363045329 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.365732053 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.048927241 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.360870192 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.36794665 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.373293141 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.715599868 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.362263107 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.363201703 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.362009023 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.362399227 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.363143596 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.421184496 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.396132427 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.051080169 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.361995754 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.362504757 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.395961875 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.365560173 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.368400759 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.366197056 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.364319583 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.872576673 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.564877279 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.371094048 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.869830515 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.084803173 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.364757418 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.164671638 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.368701355 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.392568775 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.482715505 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.363205685 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.366153825 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.044207437 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.366944009 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.363437068 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.853681673 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.365614719 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.77401414 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.38447913 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.366486479 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.071355722 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.376489916 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.423337423 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.365180447 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.374408925 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.364599437 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.367792162 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.776239772 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.444984868 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.36586538 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.366057793 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.373784613 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.365361755 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.367011196 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.36654305 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.166878135 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.377860341 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.364904364 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.368619431 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.366860549 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.369045044 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.369326365 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.366062751 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.732241859 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.365719831 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.365965253 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.36661813 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.366917819 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.384811086 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.569595617 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.376542087 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.831355719 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.373895312 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.367948047 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.393337379 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.366341488 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.418298165 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.37526469 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.369963177 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.368891533 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.833334323 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.388251257 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.391843613 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.366527056 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.37450328 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.368350891 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.368931901 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.399563031 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.371727928 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.295927576 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.398739603 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.399374459 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.368420942 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.381388862 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.367400282 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.378195579 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.367865076 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.766987268 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.764960963 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.588045659 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.372709826 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.36936827 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.311284347 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.416686577 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.636239985 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.38953082 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.369744295 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.758848733 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.558295786 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.368857031 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.369589527 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.36990919 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.737452996 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.372333241 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.788776422 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.129312603 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.376162081 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.377729388 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.290879168 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.238874091 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.377423205 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.371712702 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.774956368 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.390237613 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.371132461 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.369547203 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.371720035 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.372067845 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.37488175 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.382107459 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.371007515 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.371787921 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.446813314 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.655588884 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.391435112 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.37719636 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.07007155 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.378874227 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.371175273 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.375809522 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.372737692 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.371918524 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.41074057 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.373234823 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.404762225 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.375083801 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.38093259 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.125465676 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.38249424 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.376650551 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.654840325 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.255822615 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.378672176 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.373549178 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.374312892 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.412978703 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.100949779 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.377378786 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.832998665 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.379304589 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.442164119 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.376700487 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.380243535 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.087850627 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.378622799 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.373940429 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.254748108 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.379171332 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.154049199 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.373305572 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.376246449 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.185666418 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.379165884 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.375352341 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.375829427 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.37335935 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.767423846 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.376178213 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.411539275 seconds)
  done (took 512.527886485 seconds)
done (took 666.950988687 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.374540226 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.37543189 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.379109104 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.380395579 seconds)
  done (took 10.750452834 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.411573287 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.400305863 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.41431791 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.398767539 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.408835509 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.401967247 seconds)
  done (took 9.679308312 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.372422498 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.375453262 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.37942297 seconds)
  done (took 8.367980454 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.698906265 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.40644128 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.880958605 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.390890419 seconds)
  done (took 9.620380916 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.409758322 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.408867985 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.407501261 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.409578201 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.415333612 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.413626062 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.410412665 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.412026417 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.414875732 seconds)
  done (took 13.941971043 seconds)
done (took 53.6009693 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.352494546 seconds)
    (2/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.361064351 seconds)
    (3/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.523005823 seconds)
    (4/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.089249128 seconds)
    (5/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.517475162 seconds)
    (6/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.439130073 seconds)
    (7/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.446921078 seconds)
    (8/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.846388985 seconds)
    (9/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.770641644 seconds)
    (10/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.080078409 seconds)
    (11/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.675645416 seconds)
    (12/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.41861706 seconds)
    (13/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.534815495 seconds)
    (14/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.732384405 seconds)
    (15/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.783623253 seconds)
    (16/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.519067823 seconds)
    (17/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.797990304 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.539663808 seconds)
    (19/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.747102267 seconds)
    (20/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.35374233 seconds)
    (21/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.381013326 seconds)
    (22/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.36043941 seconds)
    (23/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.539931999 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.727775369 seconds)
    (25/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.787496581 seconds)
    (26/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.476190094 seconds)
    (27/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.535389451 seconds)
    (28/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.357137315 seconds)
    (29/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.357485473 seconds)
    (30/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.375291089 seconds)
    (31/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.513452723 seconds)
    (32/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.600318029 seconds)
    (33/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.466108574 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.566324321 seconds)
    (35/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.356648216 seconds)
    (36/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.637821123 seconds)
    (37/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.360454427 seconds)
    (38/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.405052137 seconds)
    (39/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.52535263 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.632049648 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.582171169 seconds)
    (42/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.08108105 seconds)
    (43/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.979124161 seconds)
    (44/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.583564363 seconds)
    (45/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.356098216 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.555298618 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.587386357 seconds)
    (48/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.819785044 seconds)
    (49/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.378252011 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.563073838 seconds)
    (51/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.357304515 seconds)
    (52/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.793046029 seconds)
    (53/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.701766404 seconds)
    (54/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.362542402 seconds)
    (55/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.619079214 seconds)
    (56/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.356012731 seconds)
    (57/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.565481966 seconds)
    (58/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.615275937 seconds)
    (59/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.357721467 seconds)
    (60/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.399926206 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.73670723 seconds)
    (62/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.361034668 seconds)
    (63/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.619609868 seconds)
    (64/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.3572756 seconds)
    (65/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.372888131 seconds)
    (66/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.367851108 seconds)
    (67/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.800461637 seconds)
    (68/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.094050437 seconds)
    (69/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.566530841 seconds)
    (70/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.543069618 seconds)
    (71/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.363257646 seconds)
    (72/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.689659208 seconds)
    (73/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.582477073 seconds)
    (74/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.545916139 seconds)
    (75/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.575868831 seconds)
    (76/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.523868433 seconds)
    (77/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.766920011 seconds)
    (78/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.53872535 seconds)
    (79/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.539564843 seconds)
    (80/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.613478083 seconds)
    (81/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.359978389 seconds)
    (82/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.384874571 seconds)
    (83/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.38528426 seconds)
    (84/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.448127307 seconds)
    (85/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.287097892 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.596525927 seconds)
    (87/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.447600704 seconds)
    (88/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.446446088 seconds)
    (89/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.359419519 seconds)
    (90/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.919155501 seconds)
    (91/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.545429834 seconds)
    (92/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.758538848 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.568119312 seconds)
    (94/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.445820729 seconds)
    (95/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.452451251 seconds)
    (96/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.73568636 seconds)
    (97/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.406717153 seconds)
    (98/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.645685949 seconds)
    (99/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.59471606 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.640546679 seconds)
    (101/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.450000171 seconds)
    (102/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.454923144 seconds)
    (103/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.918495222 seconds)
    (104/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.69103627 seconds)
    (105/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.528665971 seconds)
    (106/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.551758084 seconds)
    (107/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.462588713 seconds)
    (108/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.389262978 seconds)
    (109/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.684792319 seconds)
    (110/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.609490843 seconds)
    (111/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.758695921 seconds)
    (112/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.455296515 seconds)
    (113/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.360082173 seconds)
    (114/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.542386291 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.597874212 seconds)
    (116/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.528769476 seconds)
    (117/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.367205355 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.638255186 seconds)
    (119/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.368589958 seconds)
    (120/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.929784856 seconds)
    (121/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.36679867 seconds)
    (122/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.649547613 seconds)
    (123/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.510816005 seconds)
    (124/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.45127233 seconds)
    (125/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.551260744 seconds)
    (126/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.599736391 seconds)
    (127/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.545187764 seconds)
    (128/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.411266544 seconds)
    (129/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.583106693 seconds)
    (130/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.652694592 seconds)
    (131/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.579306349 seconds)
    (132/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.520837741 seconds)
    (133/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.470328454 seconds)
    (134/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.741782457 seconds)
    (135/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.386201905 seconds)
    (136/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.861557256 seconds)
    (137/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.629844479 seconds)
    (138/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.573753198 seconds)
    (139/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.601773522 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.577371047 seconds)
    (141/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.644893251 seconds)
    (142/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.36895879 seconds)
    (143/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.696350772 seconds)
    (144/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.780680141 seconds)
    (145/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.91640592 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.577253784 seconds)
    (147/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.553533659 seconds)
    (148/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.446170075 seconds)
    (149/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.361763461 seconds)
    (150/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.3893456 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.432565622 seconds)
    (152/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.86390057 seconds)
    (153/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.03131746 seconds)
    (154/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.309973775 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.515360229 seconds)
    (156/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.026354469 seconds)
    (157/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.605549351 seconds)
    (158/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.461177221 seconds)
    (159/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.416253422 seconds)
    (160/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.86570911 seconds)
    (161/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.38513466 seconds)
    (162/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.572507021 seconds)
    (163/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.538323903 seconds)
    (164/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.591461037 seconds)
    (165/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.876240826 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.743685422 seconds)
    (167/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.447089606 seconds)
    (168/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.983416117 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.644820616 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.638074228 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.432784015 seconds)
    (172/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.400605762 seconds)
    (173/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.647221061 seconds)
    (174/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.528259006 seconds)
    (175/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.68914357 seconds)
    (176/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.458356401 seconds)
    (177/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.863675192 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.650005773 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.680997981 seconds)
    (180/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.365384383 seconds)
    (181/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.375389636 seconds)
    (182/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.995215523 seconds)
    (183/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.560110961 seconds)
    (184/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.454517016 seconds)
    (185/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.590287075 seconds)
    (186/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.394602903 seconds)
    (187/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.771443072 seconds)
    (188/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.384482622 seconds)
    (189/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.065038019 seconds)
    (190/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.599356035 seconds)
    (191/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.8206362 seconds)
    (192/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.689144897 seconds)
  done (took 354.004712829 seconds)
done (took 355.246572077 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.449619536 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.567148937 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.420569334 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.415621777 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.428076154 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.390903411 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.47343688 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.414635898 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.440925275 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.44180688 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.390356344 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.436672569 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.445446449 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.432009196 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.463369679 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.417395396 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.422694674 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.431755951 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.444309712 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.446385466 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.422081118 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.432718224 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.455983404 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.417617422 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.438415667 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.440519287 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.434708771 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.392172566 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.454770121 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.445392323 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.391744229 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.460805875 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.447108462 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.434747463 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.424474928 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.431360789 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.428432974 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.565597902 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.450783791 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.430409412 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.430552866 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.44621219 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.433672536 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.435793128 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.43779834 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.45881456 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.439742163 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.445331491 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.410569878 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.409151122 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.459587144 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.443112075 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.431125984 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.404096918 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.397441462 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.451361936 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.433339044 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.453645328 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.428629786 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.432404707 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.466562403 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.452751429 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.443981598 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.439383388 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.431932231 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.448441593 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.432088535 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.448885644 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.432032384 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.428339037 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.424755131 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.433027412 seconds)
done (took 112.797716459 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.602561122 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.396674815 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.639746926 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.429237405 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.654828523 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.606221853 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.429382256 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.428424313 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.428408878 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.286873142 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.429055189 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.427406656 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.396210439 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.434782873 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.603694786 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.431492929 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.429422694 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.190178235 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.430980295 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.618283722 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.400290079 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.429248021 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.433812218 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.295895379 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.396033742 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.402359965 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.614726425 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.432319501 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.195869041 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.404259159 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.398091964 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.198487601 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.615528553 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.449734844 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.439781274 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.444630774 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.657735806 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.433030066 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.604958633 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.602984081 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.640771148 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.468313324 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.404094543 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.400863406 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.4337546 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.432643355 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.433699495 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.459489088 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.398764326 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.431104891 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.193263613 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.44275323 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.440947204 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.433368656 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.43258832 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.452582692 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.433348263 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.432701742 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.617741614 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.432048517 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.608187047 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.301398034 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.292208039 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.436373019 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.396655748 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.436251007 seconds)
  done (took 115.691762342 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.548767759 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.561625819 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.609053428 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.431540072 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.522658991 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.610553689 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.4306123 seconds)
  done (took 11.976769602 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.439872347 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.438338074 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.521079391 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.519536667 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.439178613 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.660221946 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.43768422 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.445314729 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.437322651 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.520915055 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.438338632 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.438996537 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.448215028 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.403608168 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.520553137 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.446453421 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.604701129 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.430686961 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.443208316 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.642585276 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.438020645 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.448103002 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.520948439 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.446376526 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.439445058 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.439521883 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.267202833 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.439043051 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.439730989 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.439377452 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.438265299 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.552296001 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.439781763 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.402288866 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.438974188 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.600870474 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.439001007 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.438224931 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.439085375 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.407968639 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.440789503 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.439772753 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.441063769 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.440080404 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.440058474 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.462680764 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.440425699 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.440036404 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.439582576 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.44071149 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.523081043 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.440688442 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.439979064 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.439822411 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.527091678 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.45037005 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.441798151 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.441012785 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.44068055 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.441781459 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.644099714 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.523361945 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.442019548 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.523694319 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.442012982 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.441684239 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.441260442 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.440635573 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.579322412 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.442667395 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.522162072 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.440169033 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.675710927 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.467123019 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.449653968 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.434888123 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.437185483 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.443670176 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.406984925 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.446330571 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.442586449 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.432559616 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.443729681 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.442692189 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.440786221 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.650672338 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.605162011 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.442302474 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.454682541 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.450904826 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.444622811 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.527815374 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.444198106 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.443450106 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.527000605 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.610035257 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.529015317 seconds)
  done (took 148.848051631 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.451980241 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.452627601 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.443047402 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.47326549 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.43300625 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.432244771 seconds)
  done (took 9.955584366 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.438094397 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.448351428 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.444939263 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.445270869 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.443530913 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.444376621 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.446088291 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.437528474 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.445953986 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.445201306 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.445966487 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.445160589 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.447608596 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.44617692 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.445669662 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.446712742 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.44689852 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.443167808 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.445611135 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.445858793 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.416703269 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.445999592 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.444818996 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.438040061 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.449764107 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.443457649 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.465338156 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.448526869 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.445469218 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.454455417 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.449517708 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.447188151 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.439556943 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.445673783 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.450600177 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.440659388 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.45196781 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.446007694 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.442135065 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.449211244 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.447031288 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.446247948 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.448347168 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.448394869 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.441091427 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.444797904 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.453448095 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.470039032 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.44987271 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.450214933 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.447414228 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.447358773 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.445775052 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.448149308 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.437892766 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.443688335 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.450729943 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.449675968 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.450704521 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.440173293 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.45132974 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.447245491 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.441267706 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.453863302 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.449475803 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.447578704 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.44294222 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.455111156 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.452032063 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.449148108 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.449601237 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.445353979 seconds)
  done (took 106.431960589 seconds)
done (took 394.161122105 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.928975396 seconds)
  done (took 4.201280833 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.530130892 seconds)
  done (took 3.805051676 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.811638269 seconds)
  done (took 27.088602329 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.456579499 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.420434889 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.445792793 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.417569022 seconds)
  done (took 11.012848702 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.980863698 seconds)
  done (took 4.254024412 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.433515672 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.425037918 seconds)
  done (took 6.133201575 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.705237517 seconds)
  done (took 3.980254891 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.32571188 seconds)
  done (took 4.603912621 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.428458954 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.427249023 seconds)
  done (took 6.135945011 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.389139708 seconds)
  done (took 3.662709972 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.674281276 seconds)
  done (took 22.949923451 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.438797071 seconds)
  done (took 3.716350242 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.449329904 seconds)
  done (took 3.722413584 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.719667355 seconds)
  done (took 6.995813783 seconds)
done (took 113.536018864 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.411808792 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.419201213 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.418464388 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.420534204 seconds)
  done (took 10.944563272 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.568990931 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.568697528 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.576921479 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.562280231 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.559715938 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.573103744 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.484771422 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.484554146 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.547409485 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.546229797 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.576319936 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.555335004 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.572439833 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.485517956 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.545677142 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.57812205 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.548392292 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.574513352 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.487616057 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.557995468 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.453789201 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.56123366 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.544724857 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.456974941 seconds)
  done (took 38.249346234 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.025892189 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.571957579 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.657046333 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.536936506 seconds)
  done (took 8.068141207 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.61874649 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.620778104 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.632347102 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.675599181 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.718786935 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.628696149 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.488460788 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.48358447 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.469987908 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.620662377 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.696190835 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.61441675 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.841663385 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.454558223 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.839949619 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.45314701 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.45239007 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.62062131 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.670363738 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.700272011 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.455173245 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.616844293 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.624447424 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.617146147 seconds)
  done (took 39.892618679 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.467850415 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.480613701 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.460527278 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.475444538 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.456466845 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.455749715 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.456800268 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.469962206 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.454493829 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.45299727 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.456080832 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.475173763 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.454414 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.455119537 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.467674346 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.456226591 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.458240116 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.470687439 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.474292296 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.458207011 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.458997056 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.470639178 seconds)
  done (took 33.464275242 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.419671943 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.419360731 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.855273565 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.757945057 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.419324831 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.425224046 seconds)
  done (took 14.576655523 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.540524742 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.755363863 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.457003016 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.893875052 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.025740494 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.45056365 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.448048735 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.804510406 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.162750515 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.136804408 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.531421978 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.543776342 seconds)
  done (took 22.0310096 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584854401 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.430569418 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.45007986 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501734893 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435576968 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.432140986 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.504183668 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.074445849 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.462191665 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.784368879 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446149752 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590495202 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.764455452 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439260397 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.438028188 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.408577515 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.755870002 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104995125 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43718248 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431555089 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498277609 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.435418079 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.440126639 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.729594455 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.439950989 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433739933 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.780523557 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.431615012 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859842931 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810989652 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817755526 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437382156 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.793655255 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014443247 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616745468 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.72318477 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448043916 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.438188334 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.42236202 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.441048614 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.44083008 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.441417376 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808887987 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438875712 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.432866637 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433122885 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084549439 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.468818067 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.435493997 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.434763178 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.821772796 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600905534 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.45803157 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.433784003 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439575941 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440187052 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.459859665 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.627307914 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161355854 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435586677 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441819382 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.441438398 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.424265055 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439162341 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.317486392 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.46614552 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.457431563 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.460528396 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435501959 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.442005649 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.491635424 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435411305 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.48826223 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4356862 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434403006 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.460258249 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441246125 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166711982 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440637877 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.441906404 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.751399253 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436484975 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437121578 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.43512705 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.43643448 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.396965285 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475317916 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.403436219 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500795178 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.079990409 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.735797688 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492650218 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495040885 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.741183149 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.403809591 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436197089 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.451749766 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443941091 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486711334 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.08408716 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442805401 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.4651294 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77257066 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.73570864 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446301935 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.410204887 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110479342 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442371338 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.494743431 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.448981047 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.73321817 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.2737346 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.839624089 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444768011 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509448583 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.438648798 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.437397382 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443881656 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.471937109 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.443030431 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.834045307 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.407117483 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446533599 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590516573 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.4419305 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.442089947 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439665686 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446746545 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.438788131 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.723832688 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457060915 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.823480696 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.447691707 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44062789 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.443025402 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453335372 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.448410444 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.743700857 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43969474 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.798772735 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44054457 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440194175 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440302919 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.745493614 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.455292604 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.467172746 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870740895 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449018133 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.453403467 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.823776124 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506919351 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635288956 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503884258 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.445226589 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.780206687 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.467661006 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.468825609 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.442807916 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.448498374 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450823949 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.471404639 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466206282 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274835229 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448935511 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.451745505 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.441659236 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.486013131 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596521457 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.472598716 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.733813357 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.459054815 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448381948 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.471776962 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.442006068 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.751317538 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820599324 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.454023448 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.699764195 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.087116804 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.276363985 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495253552 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.442763147 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.442538188 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.443019605 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443756221 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442261757 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.442651052 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.73469252 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840974121 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.439052271 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.278653033 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451356699 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.458745697 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.478244056 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.830736995 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.479498196 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445010012 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.443129046 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449755936 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.460662002 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.830124208 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.749943271 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.490062388 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.445529771 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.051953395 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.473435344 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.44395471 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.442764404 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500617292 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.457724967 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19755934 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.880589354 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.445276526 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840353441 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.462335259 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.496714422 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.445253408 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453966737 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453483575 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.451129295 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497685844 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.737091987 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.462750186 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453942641 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169544116 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449165707 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.215199503 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.469179635 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.454584413 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.451494426 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.097099778 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450406508 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.447135142 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.815886643 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.095661885 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45100407 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096301073 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.46408178 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.466551788 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.830358944 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.760902975 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.462503367 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.457894541 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.832833491 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.747468935 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504554315 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.458953475 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452391257 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.414888025 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20020423 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457265131 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.702652272 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096965333 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458570185 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.454216769 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.475406405 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.463018237 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01129599 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.453056216 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448731364 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.448459613 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.468013077 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207267628 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.464552999 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.44976285 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.313541059 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.475657135 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.108960713 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457184534 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.74351501 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.833192755 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.805817067 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.46684966 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.457414522 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.788230473 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833000133 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452182153 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.451573835 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.22427014 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.401406142 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.480271967 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450535015 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.43257966 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457933373 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874307131 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.455854267 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.45971244 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459453398 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.453932166 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451714006 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.452455441 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.461199361 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451171969 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09599866 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.461060795 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44870287 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.463314084 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457607843 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.788153508 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.497509425 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.289414945 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.775259201 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.441467103 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5119364 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.476377408 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460470986 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.423681461 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.451565804 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.454114801 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46414792 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.762189103 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.452067473 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.423607709 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.51833826 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.754945095 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.451883651 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.461823392 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790841 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.459101747 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.455756001 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459279633 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51587887 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.460199443 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457654985 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.444866907 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515193518 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604907161 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.746444712 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.839999136 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.834216977 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016268549 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459294859 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477707535 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.495824853 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613163797 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460619958 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.460448985 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.456476344 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289565314 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462333234 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.301542396 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.844506763 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.456266611 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459772643 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457874217 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.7820975 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.453878039 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.815335526 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455143912 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.448456539 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504116969 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465366022 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462206123 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.757855102 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.808851251 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.455586985 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466849311 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460529722 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.457736909 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846748598 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.757544936 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108350929 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171715621 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459535741 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.468365565 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.115819337 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.812857417 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455208446 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.456458325 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456758852 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.464747018 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.475052309 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.490317309 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457609519 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.775821282 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.834234577 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050800943 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.833664463 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.484738947 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.407080816 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457716376 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.797697109 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381102024 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.753053514 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307949495 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.429888256 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.798820157 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.610840666 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.752489964 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.46361992 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.782498878 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.46021816 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.464301082 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.459509132 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460681139 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.456924725 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.832379941 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303643641 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803409707 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.482953034 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.466740638 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521059696 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.752406923 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.771370158 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.434622099 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.770693955 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847875837 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.462521457 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.459696655 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304162562 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.848230421 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459521843 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.48249292 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797308233 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.466308599 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.523224566 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.412064411 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.460462605 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167713995 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.760197997 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506356151 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470701128 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.430497901 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31293288 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.475139401 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116653102 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.462749208 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469834327 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.820143889 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.488457366 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.473497014 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.833983986 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.48435922 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.477290024 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.761953877 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.304805869 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.470575273 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.480795498 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471827598 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.469374771 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461918796 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542495243 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466198669 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.463176218 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.009556313 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.469264912 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464172784 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.505809852 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.463042821 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487771315 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.468534372 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463890346 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.496808149 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.442090227 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.452837404 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.471431458 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.679960629 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221544513 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476721656 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.162858978 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.889410029 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.799986088 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.478226526 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.434752073 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.488776121 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466699223 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464945647 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464054543 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.477440183 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178362626 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.465267616 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.845938509 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.488543271 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.762889541 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.761182201 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.464694497 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.792325826 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472818157 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.52137489 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.430985532 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463935114 seconds)
  done (took 1038.577075505 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.513883923 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.514688285 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.467996524 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.491179919 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.528344841 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.472229115 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.519245011 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.473009941 seconds)
  done (took 21.290684172 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.461748662 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.493867761 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.460471754 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.489418801 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.466005698 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.125375441 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.471474689 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.485350407 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.511763682 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.468369337 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.476284869 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.286650488 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.492743595 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.469586111 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.481957028 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.491987913 seconds)
  done (took 34.456290148 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.819585578 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.665432595 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.347136601 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.460410294 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.522429144 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.476793523 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.904300191 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.481620254 seconds)
  done (took 28.989679205 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.494243925 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.5002706 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.49738427 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.499826689 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.500320397 seconds)
  done (took 8.804960254 seconds)
done (took 1300.621773305 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.493875932 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.494467139 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.494076167 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.492509347 seconds)
  done (took 7.289185517 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.434364244 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.443149789 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.444692304 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.477719409 seconds)
  done (took 10.113929991 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.9840354 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.20107571 seconds)
  done (took 5.49853728 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.470082613 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.320738901 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.304777235 seconds)
  done (took 8.410893104 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.861100633 seconds)
  done (took 3.17399566 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.998881492 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.05087281 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.461533132 seconds)
  done (took 7.826750735 seconds)
done (took 43.62995029 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.473646544 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.232204529 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.627882358 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.465125558 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.626867356 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.62301058 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.74183868 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.462995329 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.464437481 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.467994569 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.481184305 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.623513018 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.729656613 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.238617285 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.728429991 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.239527597 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.628957845 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.46589947 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.462959849 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.481822374 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.743418419 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.46542853 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.483319632 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.467968587 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.651403855 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.616975944 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.465030923 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.235549158 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.465899539 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.503617883 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.663721622 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.464691425 seconds)
  done (took 85.804107005 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.468144867 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.470262454 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.465018422 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.483412311 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.473155839 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.473700671 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.476417777 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.473323947 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.491773988 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.495028314 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.47660544 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.465177939 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.473285115 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.478842945 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.472004157 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.475114538 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.467645292 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.489754668 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.468114486 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.473990512 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.469112029 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.487028972 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.470175362 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.475072214 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.475452151 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.469507959 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.476516323 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.472460988 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.471054874 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.484004076 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.468391616 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.470432239 seconds)
  done (took 80.517060237 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.472889185 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.470564309 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.472142861 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.493004243 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.470281521 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.478272831 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.49155783 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.477315865 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.487682687 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.47980459 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.469640937 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.477101452 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.474354176 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.488392553 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.470376296 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.484674413 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.469430854 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.478215491 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.473147807 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.473514963 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.470988385 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.476565212 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.49332258 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.485927784 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.475349694 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.474854938 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.484092425 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.472114226 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.49252136 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.470376575 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.476759161 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.492146732 seconds)
  done (took 80.640109614 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.823905679 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.511846653 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.514898787 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.486577728 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.517624692 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.510038741 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.488141963 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.829954912 seconds)
  done (took 16.005224897 seconds)
done (took 264.27748243 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.499029381 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.49423324 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.543699237 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.482347091 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.526396129 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.543823275 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.803794882 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.544584615 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.792114486 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.49268004 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.53270119 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.493092593 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.489763537 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.71544517 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.480771752 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.488285976 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.496756187 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.496174828 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.486485397 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.831564475 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.546628451 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.477478176 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.491870929 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.492752675 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.45849769 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.5963442 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.598706162 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.731335109 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.694142111 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.591849006 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.495714783 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.503961154 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.504410582 seconds)
  done (took 70.741521462 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.500264594 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.513743403 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.518967879 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.517422013 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.515140717 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.520898851 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.504867064 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.519013486 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.521736528 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.516792603 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.520326782 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.517296648 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.516613949 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.515290527 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.52320103 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.494776815 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.507486183 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.521173119 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.508388951 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.496304872 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.519022566 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.519152819 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.518833086 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.516177441 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.518768692 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.518568178 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.520123823 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.519857448 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.519383366 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.521704052 seconds)
  done (took 46.789896537 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.520508299 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.483653822 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.518499664 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.524621672 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.505033915 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.51552673 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.908693487 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.525061951 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.5154872 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.507913331 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.482298063 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.525916599 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.584470832 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.501534378 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.509697288 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.521313569 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.520796604 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.509611941 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.485205836 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.531589876 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.922717057 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.519600084 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.911966319 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.532205317 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.51298367 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.506539484 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.515335086 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.481814063 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.508358081 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.489120789 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.487876845 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.905660629 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.48285861 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.488186661 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.488632667 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.526463526 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.523333449 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.50378222 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.503763293 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.510877256 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.910362065 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.510014297 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.485319607 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.520222649 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.506921795 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.517890997 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.488050121 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.517652349 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.818276752 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.523441284 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.497252199 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.509682202 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.524646535 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.513813384 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.827405566 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.514816863 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.507970462 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.490087671 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.519994338 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.91101571 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.522129595 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.510475738 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.485896914 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.508791027 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.48864475 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.513754927 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.537679128 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.51453652 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.487868464 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.516724369 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.489267455 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.508478766 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.527287373 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.500802721 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.486326229 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.485748362 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.529448124 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.487123328 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.491559855 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.903166178 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.515040006 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.489193842 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.952609686 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.513362838 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.522863069 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.526415056 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.519203245 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.641822679 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.907787995 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.486346552 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.48199181 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.506049687 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.919987451 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.526080586 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.515557041 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.49455011 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.523925284 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.525824758 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.51179078 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.48446433 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.510113192 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.539273604 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.491138713 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.534865363 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.91174143 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.522089646 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.511565332 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.513167562 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.695182816 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.52499169 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.540895878 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.521312871 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.934444527 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.51476546 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.523583411 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.489359715 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.514662304 seconds)
  done (took 221.822924066 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.511668139 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.489868928 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.495727355 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.508392793 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.493739113 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.519430998 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.489092154 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.498036238 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.516791974 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.493193373 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.496942803 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.523246776 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.51687781 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.48626428 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.498188492 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.512069308 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.493460306 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.491272878 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.511610869 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.49511785 seconds)
  done (took 47.375077725 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.529900486 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.266521881 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.231088185 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.518917664 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.527039506 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.515936139 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.592903539 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.52877625 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.529296428 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.938142763 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.748518998 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.529381914 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.5315002 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.530097577 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.235967577 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.49932041 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.939908281 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.264924471 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.527310771 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.268462421 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.499739387 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.530436727 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.514345435 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.268605666 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.945458358 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.91211976 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.594298828 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.265530973 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.526917774 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.531312048 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.268501462 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.527693082 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.52026155 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.248944157 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.531084924 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.551655556 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.532880543 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.601150677 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.600175833 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.93771282 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.269151056 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.921636054 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.54574845 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.755594478 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.526494116 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.50131773 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.281622614 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.525548116 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.501978987 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.53024613 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.542904933 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.246339985 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.513864438 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.246564874 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.526592733 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.52676538 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.275283609 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.244638233 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.239961171 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.750688338 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.517190559 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.916944676 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.525235506 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.282919916 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.525940205 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.534315293 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.530894885 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.751381723 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.269546987 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.914965024 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.938380083 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.940215163 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.528317043 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.611929492 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.52974446 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.946522948 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.605713199 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.011002446 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.939054541 seconds)
  done (took 141.796685182 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.896198183 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.657379545 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.063204336 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.27280173 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.192437111 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.722113406 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.659461863 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.847429272 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.505046487 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.687243748 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.408541896 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.648449429 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.423558541 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.611642583 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.648870223 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.708934006 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.086697407 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.492619138 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.358887258 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.383957415 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.521290591 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.678198254 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.404570442 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.006363937 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.496496377 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.39001461 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.514866101 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.219443198 seconds)
  done (took 59.848971928 seconds)
done (took 589.698591994 seconds)
SAVING RESULT...
DONE!
