cset: moving following pidspec: 7748
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.625083124 seconds)
loading group "shootout"... done (took 1.206993484 seconds)
loading group "string"... done (took 0.413469632 seconds)
loading group "linalg"... done (took 7.94098415 seconds)
loading group "parallel"... done (took 0.154075634 seconds)
loading group "find"... done (took 1.300568976 seconds)
loading group "tuple"... done (took 2.000058209 seconds)
loading group "union"... done (took 12.650889775 seconds)
loading group "dates"... done (took 1.349282129 seconds)
loading group "micro"... done (took 0.202144094 seconds)
loading group "simd"... done (took 4.396795107 seconds)
loading group "io"... done (took 1.015149455 seconds)
loading group "random"... done (took 8.778904346 seconds)
loading group "problem"... done (took 1.58359164 seconds)
loading group "array"... done (took 19.476615846 seconds)
loading group "misc"... done (took 1.584903037 seconds)
loading group "scalar"... done (took 39.900883101 seconds)
loading group "sort"... done (took 3.049731832 seconds)
loading group "sparse"... done (took 11.88072231 seconds)
loading group "collection"... done (took 17.100626694 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.497127713 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124220067 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.126697024 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117800874 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.14699408 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.121179556 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124878476 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084189467 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.911208088 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.143206505 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11325604 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.418157293 seconds)
done (took 5.286723533 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.164033131 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086552121 seconds)
    (2/2) benchmarking "String"...
    done (took 0.077746707 seconds)
  done (took 1.307460488 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.063950805 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.13378444 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065220835 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065833084 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065511252 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064826385 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.064974552 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065256002 seconds)
  done (took 1.668563147 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.070911252 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066227565 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.064107158 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066069855 seconds)
  done (took 1.412516258 seconds)
done (took 5.778003671 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.237590263 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.100733008 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.281844257 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.389816935 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.458117603 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.090690139 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.072685535 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.068661906 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.126865628 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.328799101 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106138119 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.181945228 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089122694 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.175132188 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.990629757 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.119612711 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.0843097 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.122145458 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091531157 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132541881 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.392994975 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.076653745 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.072757976 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.068989246 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.066718751 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.642167206 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.662546951 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.131374292 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082062229 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.100057144 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.114669249 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.642116904 seconds)
  done (took 10.480109665 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.092014447 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.090684365 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067484932 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122457644 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.092020869 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.067900308 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07351651 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066105631 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086784735 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.123300741 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088462649 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.098426897 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064609921 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067287702 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.073347802 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.195645322 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078796968 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079636483 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066219905 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079361425 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104939986 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077279826 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077227963 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076742325 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12716353 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.16708768 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097466346 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096325349 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.064398333 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078210108 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113763022 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124651757 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064858184 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067602719 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.119374002 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09355782 seconds)
  done (took 4.519135875 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.9692183 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.091722121 seconds)
    (2/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.111272948 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.100204602 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.627305036 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064319631 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.150682732 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.240019979 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.070886054 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.399786235 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.147032711 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.110170281 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.146380027 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.115211949 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067817386 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.206640102 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.112373436 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.506176799 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.065858355 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.065110778 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.063461813 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.066721982 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065661037 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.061554806 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067856878 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.092739803 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.08548692 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.167134455 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061892422 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.92581689 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.24086521 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065781564 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.157073134 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.086221664 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.356106605 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.070057038 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.082259537 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.411739984 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.122198644 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064101359 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.163760774 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.115246646 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063137307 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.11611542 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.077331529 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.067941062 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.067305923 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.066621856 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070204204 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.077373889 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.099671503 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065978069 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06362099 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162827794 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063324667 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065076418 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.066020245 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.147619217 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064014991 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.139464864 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.062837277 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067066687 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.099283842 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066827777 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.087987342 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.101543196 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.344277997 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.038963084 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.06614739 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.00972574 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077348076 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.064626541 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069539441 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064881118 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.066124704 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065956988 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.071795218 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068692332 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066871089 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.107276837 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06683899 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063007117 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068146213 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065059765 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070218374 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.096220614 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063771831 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063453554 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.479149987 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096011844 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.064586547 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.075323983 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103694531 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065400898 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.070862737 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.065925022 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065260246 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064786358 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.17675464 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069213618 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.093968822 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069299233 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111272509 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.025756903 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067323907 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065127483 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070779008 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068400271 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067916467 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065726894 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068223282 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067227701 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063503139 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.108517692 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065380989 seconds)
  done (took 21.573573488 seconds)
done (took 38.686639063 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.254100953 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078841667 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079340814 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079803336 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079594587 seconds)
  done (took 1.810567209 seconds)
done (took 3.038340199 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.107951743 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.06251469 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.098392692 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.097552514 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.062447013 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.062365248 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.096112717 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.06272719 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.096348273 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.097908396 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.099734444 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.098910735 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.062432711 seconds)
  done (took 2.343450488 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.068823897 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079293169 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081653846 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060720833 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070783737 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080794929 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060451353 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.078981176 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.088487412 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.082743167 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.079431783 seconds)
  done (took 2.053675641 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.06821722 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079831875 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081729792 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060488674 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071877342 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080122591 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060558701 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.079481749 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.082896835 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.079765778 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.079936812 seconds)
  done (took 2.036870742 seconds)
done (took 7.65054462 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.066137918 seconds)
  done (took 1.264112251 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.525668455 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.59635988 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.067392071 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.085960672 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.187614073 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.096604144 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.221464554 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.071530485 seconds)
  done (took 8.232943399 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.099911773 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.066787348 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.068560832 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.066443826 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.066584389 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.067617946 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.067402843 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068608249 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.066683691 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.066527407 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068151046 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.067596643 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067526007 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068345357 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067541738 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.067098735 seconds)
  done (took 2.412592411 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096928528 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095689649 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071704825 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.072468241 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070557915 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.069848605 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.072405515 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07170412 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.068805791 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070379166 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.072094628 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.070707197 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07058249 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.061783531 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072286322 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.072928499 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.068529788 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.071663733 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.072623534 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073105714 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.072338693 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.061832501 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070409458 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.071488348 seconds)
  done (took 3.067003368 seconds)
done (took 16.188705004 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113640204 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074553081 seconds)
  done (took 1.395270569 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.06858485 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069387475 seconds)
  done (took 1.357887422 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.074673462 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.059823073 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.081158067 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07091588 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.060347451 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.060172479 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.078872263 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.060432399 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.060303726 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.060505499 seconds)
  done (took 1.887844203 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.062920596 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.069386143 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.067063575 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.069469801 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.066990859 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.061429898 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.064823333 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.062144556 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.069406751 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.060777972 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.065831318 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080740392 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.065339906 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082751186 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.0648586 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065667689 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.06797468 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065337868 seconds)
  done (took 2.437223229 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.060302222 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.060889814 seconds)
  done (took 1.353059626 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065308456 seconds)
    (2/7) benchmarking "second"...
    done (took 0.061397224 seconds)
    (3/7) benchmarking "month"...
    done (took 0.064020932 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064438379 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.061149067 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06023809 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.061178441 seconds)
  done (took 1.661333963 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.413741545 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119811504 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.339954614 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.067840282 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.076405171 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.248646173 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.062094676 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.066570774 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.067136594 seconds)
  done (took 2.729750886 seconds)
done (took 14.056192602 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079561614 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.082468232 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.088249493 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.416304922 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090535945 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065369118 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.1117443 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.175455729 seconds)
done (took 2.356354321 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211977642 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.305447128 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.782726448 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.065119248 seconds)
  done (took 3.387820019 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.451892343 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.078146843 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076002385 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065410511 seconds)
  done (took 1.915703315 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064042285 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070160051 seconds)
  done (took 1.372587503 seconds)
done (took 8.133785541 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063110148 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088959046 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062704005 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.062466215 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.062754025 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.062146957 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.062534176 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06212325 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.061734068 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.061921161 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.062033205 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.062035559 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062030701 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062323055 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061948643 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062081985 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062194088 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062030838 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062342674 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062584668 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.061706827 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061729865 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062312749 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062354918 seconds)
  done (took 2.786574715 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.078954345 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065006586 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.066309041 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.066163782 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.066384361 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.065652758 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.065511734 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064374194 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.065646137 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063801194 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066213152 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.066062115 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.064114132 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06632817 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063938715 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.066106698 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.065672083 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064504471 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063920458 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.066243172 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.06587867 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064671433 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.066073286 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06580474 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06609968 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065883988 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.064099606 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064445904 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066090665 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.066337342 seconds)
  done (took 3.225623177 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.064980437 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.058901142 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.059910041 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.067898417 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.058843461 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.059232414 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.059750799 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.058539066 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.059138231 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.060805202 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.059503783 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.058995432 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.059864544 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.059048159 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.05865521 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.059481566 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.062877975 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.076678928 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.058913005 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.058591311 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.062656469 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.06004082 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.058908805 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.058842877 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.059360869 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.058650956 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.058752101 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.059563709 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.058760359 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.059805751 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.058886768 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.062838306 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.072918207 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.058935434 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.067996565 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.063160528 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.058814721 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.062819796 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.060019777 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.058547749 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.058341521 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.05849755 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.05861659 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.058462164 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.067885837 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.059050011 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.059834497 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.05947397 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.059073722 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.058708715 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.058717115 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.061079543 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.064218991 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.060528874 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.058494266 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.060231888 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.05844653 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.059730285 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.058904402 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.058558465 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.058478141 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06227408 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.060419722 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.059679963 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076447665 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.060874018 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.067695132 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.058638868 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.05963214 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.061970477 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.059535843 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.074751534 seconds)
  done (took 5.650596391 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086731185 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086183347 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064073737 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064141148 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059516005 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.059393198 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067085656 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059744314 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063717584 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078662962 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.05951262 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063347477 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06370721 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063062752 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059386163 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064249287 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067759193 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059751746 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.059552128 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063473206 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059543413 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067319043 seconds)
  done (took 2.706805577 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.140114289 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064950572 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.101959156 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075280057 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067768012 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075723329 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065110327 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065051177 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065079227 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065533006 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065485997 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065249131 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067559874 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065787384 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065711798 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065684255 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064967404 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06561741 seconds)
  done (took 2.570310088 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076422634 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065281225 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087056396 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064697028 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064726017 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064515005 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068493787 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069620571 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.064126534 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064558465 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.069260654 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064231979 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.064627057 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065112602 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064410246 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06455497 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.064417922 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064929346 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06930447 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068958915 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068932499 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069467683 seconds)
  done (took 2.746215337 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074132732 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064072927 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077083625 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065212312 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059435863 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059666674 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.064671118 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.063755904 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.064632025 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.063414401 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063973024 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.05922002 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.065812907 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063839235 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066053788 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063882626 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063475618 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063993529 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063507172 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059559399 seconds)
  done (took 2.550117027 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085724057 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06272602 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062217813 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08120663 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062524426 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.062135859 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080761864 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.062104265 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.062625375 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083079147 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062107127 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062375627 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080569661 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080490586 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.062318829 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081032102 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080423267 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081077678 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062102365 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062055761 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083165534 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.062130175 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081233757 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062479962 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062252993 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.062278364 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062360816 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081005353 seconds)
  done (took 3.23850063 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062422436 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062113279 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062461949 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062515906 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062358953 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062656931 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062644179 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062359335 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062270158 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062500132 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.062002786 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.061873982 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062068811 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.061989145 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061873018 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.062201708 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06210443 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062277743 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062368432 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062541855 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.062246043 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062349471 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062513565 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062584171 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062751183 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.062161011 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06237166 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062652053 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061713223 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062195736 seconds)
  done (took 3.13436299 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073012001 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071136854 seconds)
  done (took 1.410090404 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061956938 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075718499 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059119951 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069668859 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067870881 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06272243 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068440085 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067915983 seconds)
  done (took 1.794713345 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.066282325 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.089220292 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.061587609 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.061903072 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.064735991 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.118604734 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.075707186 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.071159214 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073472098 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.062572668 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.061504826 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.073045513 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.063109775 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072595268 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062586664 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068952383 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067262975 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072091422 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072373143 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.059406219 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072036713 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061556545 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059952899 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06188727 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.061052293 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066877957 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075387687 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071946869 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068526328 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058530205 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.079055927 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.059500659 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.060613469 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068805382 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.064565746 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.059603019 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094784135 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.059973377 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.065334511 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.05919402 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071404291 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079094368 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072700956 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.076764692 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.061933109 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.061763979 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059242762 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.061610166 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062932837 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068386312 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.059533831 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066598068 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.05881672 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.061692201 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069726481 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.059812656 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.06582848 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068600026 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072224035 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069297476 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068060121 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074390096 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068110891 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.068880528 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.060783699 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078263941 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.06183393 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072321893 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.073870133 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.061178938 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073388844 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.059420792 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058436241 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.059713275 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091567508 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.061692709 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.060942579 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.059876383 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060043882 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.061244305 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069240552 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065486388 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066201876 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063325885 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074739678 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068520339 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.059290325 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.067097375 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.076774347 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.062833007 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.059482312 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.0751745 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062908163 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.058996833 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076273112 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068237292 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.061229556 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.060092852 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062487716 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07313619 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.060571729 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058047317 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066977451 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.06069501 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.062186074 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.064060457 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066317312 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.058753578 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068025664 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064077903 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.060736744 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.057590317 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06266344 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.060200828 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.057728326 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067626678 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058722958 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072960508 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064489385 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.071732915 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072195319 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.068841453 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073604551 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.058418018 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.057650753 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.07526731 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.200669007 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.063502202 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078002191 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060193085 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070330673 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060160485 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.062052967 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.069217437 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059051237 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062510208 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.059897568 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.066348642 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.06163272 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062411562 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064234103 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068436247 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072195509 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.061259963 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069191628 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.060604485 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075073692 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069305196 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064788506 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064005029 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.061179902 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071674368 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066313806 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069224735 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.05956907 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.061020183 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.05994479 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07012296 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.06903335 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.062014331 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.068675456 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064106548 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.060442692 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06028401 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.061563634 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063540149 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064001828 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.061006105 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067163158 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068549927 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.074042016 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067920421 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067981482 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.058957777 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.059777269 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.064283462 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059325003 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.063732832 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068327268 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074080885 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071009643 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079120162 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.059971658 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068825573 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.061598094 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076078017 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072043658 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060640711 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064969879 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.058713592 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061376271 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068508154 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070881628 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.073142422 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073494523 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064074944 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.063836392 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.059765497 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073702822 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.060201962 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067533658 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.068604338 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.0651838 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.059594433 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06167107 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068357176 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064201696 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.059777052 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.074619685 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.06697966 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059472563 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072856708 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.060014949 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.070012466 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.059427407 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063597448 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064096555 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.061781983 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068551827 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074021211 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058571935 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.060408926 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074355754 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.061756321 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061380319 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066860239 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.073503361 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063476734 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066440751 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069368432 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068435005 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.062977037 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068023374 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.060173503 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.06785192 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.063044256 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070241495 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.058783133 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07611546 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058118347 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.072839997 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.059902446 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.069860704 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.05960963 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068129555 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.060059893 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.075027067 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.060684232 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.060053612 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.069754617 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.057518714 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067250542 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.058268652 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.063101562 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.064740509 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.067189915 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.060602921 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06721112 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.199914165 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068901926 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065283571 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068798052 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.069552686 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06424556 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.059903095 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067889432 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070798481 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067776633 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.061891717 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.062312096 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.060856858 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069052736 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06172935 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.061426742 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06786448 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.063851297 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065098007 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061799318 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.062333709 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.061826274 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068475165 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069111821 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077476044 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06811404 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067472342 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068534151 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.059812574 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075243454 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.060029497 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066850895 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.05887593 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.06720757 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068345827 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.059855183 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078283724 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.061616341 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067471043 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072046612 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068229041 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063503873 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07726898 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.063861966 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067903717 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067620992 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064094352 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.065887115 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.061815942 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067237173 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068551964 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070123624 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06122743 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066621104 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067982305 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061346062 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.069017872 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.061688469 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067063083 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.061434759 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059041824 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064028599 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071007963 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064388887 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064742751 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.059996683 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.058884516 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.060196293 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.067611191 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.063999272 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067884832 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074420966 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.058647006 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.061301384 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.059514496 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063027012 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077289715 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069136828 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066960132 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06414229 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061910628 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.061819772 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.061925165 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.060367034 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.063747388 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058992917 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.059573698 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070334445 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.061598348 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063895323 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060156116 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.060738491 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068785189 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.06508593 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.060136602 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065909807 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.05930401 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06472736 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.058902388 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06158169 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063834462 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.058993296 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062925287 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.069494944 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.074600622 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065417061 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06731753 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.060387069 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066574169 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073811057 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.067644084 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060173912 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067737082 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.058421328 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076511477 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.067609518 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066571285 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068410886 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.060343574 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074885813 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.063283669 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068397484 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073995828 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06048301 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.066574148 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.058406667 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.073602976 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063196557 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.058666733 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.067194564 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066224121 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.064140159 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.211977255 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.061782397 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06920239 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06652997 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063980538 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.062559205 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.06263511 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068723279 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075872892 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.061329435 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.064996862 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067720198 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067721775 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06456191 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071710732 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067540853 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061257853 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.061555371 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063804676 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.061336043 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07175297 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06098439 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064352125 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064641862 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.059770045 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066531498 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075653324 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069364325 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069497076 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059911411 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.059191189 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.077052881 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.062912748 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.064205787 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067791676 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069775451 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072695207 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069107775 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07648378 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.061044051 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066135684 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072864579 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.06092959 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.059734775 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064055821 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06220682 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068821631 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069450884 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066779059 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062645846 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06623318 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072181803 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.061160365 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064134563 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.0652024 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.060643102 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069774595 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067464818 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067642313 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.061274732 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.059853399 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063083284 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068692211 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06684403 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068567747 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060688032 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.067630142 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.073771322 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066900252 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064020234 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.059981543 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063859051 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06846564 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.065419191 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059843425 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06431438 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063974894 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06815445 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06868037 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064197878 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.0599439 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076068511 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067917932 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.068756334 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.06198886 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.062594186 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060679386 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059793084 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071132577 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060081243 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.061939685 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064543619 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.061696627 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.076667028 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06748556 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074828553 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060734906 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064210047 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059469752 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06922867 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064084516 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.060007564 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070217698 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.059335164 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074658492 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.071475999 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.065936403 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059276245 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064322718 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067774042 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073471429 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071770416 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068160042 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.063475384 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.068548263 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.061433924 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.06980356 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.059294752 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.058765549 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.068900892 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067157579 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07133149 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059204742 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.069528342 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.061525011 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066688334 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.066862627 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.061052474 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061377112 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.060783688 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06815468 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.202626178 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070907122 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06609419 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077763962 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.061996413 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071408793 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069229031 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.071330995 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073497503 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072833245 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068372984 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.061091429 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067278535 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068473626 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.062194936 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064930412 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.064387745 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.082159199 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.062161382 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.062258121 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074366624 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.0679304 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.060760261 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.0681455 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065193036 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.070754733 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.06175106 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.070512659 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.065068417 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.061167805 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064476226 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064334195 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059020389 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059980423 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.060352108 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.07001252 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.064427062 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.060772964 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079282488 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.062138565 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068808834 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071031434 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066415288 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.062345235 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.05936911 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.061503908 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072400782 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07506353 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063241286 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067976744 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.061829437 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068841057 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.059045465 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068117439 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067391921 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08505133 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059826634 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060438125 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074233724 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074499792 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064297946 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.06878486 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.06861381 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061414944 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.082377116 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068491879 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06106476 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.070432448 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062503467 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.059282821 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.059386452 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.061950774 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071174057 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060239284 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.063066804 seconds)
  done (took 41.138311955 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099235581 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061540942 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059820088 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060794263 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072105476 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061112574 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059863069 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060893853 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061554836 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062824024 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.059955647 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060382507 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0715592 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074376245 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071093024 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06419738 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059881708 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060766195 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060047273 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061164458 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070771022 seconds)
  done (took 2.747399337 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.068206918 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075289162 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071835203 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07699516 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068432038 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065039603 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071686926 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064975897 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072919401 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070054003 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072606232 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06480596 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070052258 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070051461 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069799369 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065095139 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072285024 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068173122 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.06481064 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071893502 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064950384 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072062166 seconds)
  done (took 2.880770819 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.061419707 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.061162756 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068157668 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060214431 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.059471649 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06357958 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.059311888 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.063234425 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.063532223 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.063398138 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068248697 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.061023785 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.059334439 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.064718236 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.059063832 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.060272718 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.102593182 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.060342137 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.060413125 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.059216452 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.062462746 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068315215 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059349252 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.05977256 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066304145 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.063628881 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.059899456 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.062846904 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.060344827 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063550353 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.060649521 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.059292222 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068398665 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067869294 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063785283 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064000199 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.061347866 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.060648953 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059385641 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.059757134 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067324138 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.061423265 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.060145128 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.060904148 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067849386 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.059546794 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.059472567 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067936466 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.05904714 seconds)
  done (took 4.446147763 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.072514891 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110070418 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.065283942 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090629992 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07345795 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.066694157 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.065443939 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091735057 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.060806357 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061987115 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.074507398 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.074723479 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063143029 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.064632507 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.067082072 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062747416 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064026819 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062038104 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.065818591 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062414634 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06597638 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.066620402 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.073284331 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.073888158 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063845656 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062013616 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062343563 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.064328819 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.073726891 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066927831 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.064858432 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06537378 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.074129662 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065978929 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062395503 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.062700203 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.07468031 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.063312148 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.063045972 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061224885 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.062767743 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.064407441 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.067002958 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077032184 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063498549 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.067245804 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063085373 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060568818 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074255938 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.062941033 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067724963 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.074996459 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064092246 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06379017 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064985325 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.07423382 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06324132 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.061936638 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.063287477 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.073731026 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061050086 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063890293 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.074591419 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06236301 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.066891957 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.074738976 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.067551263 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064273673 seconds)
  done (took 6.117053084 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070868978 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.091966461 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072337048 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071586575 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070932185 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071030319 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071004479 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071092035 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070847875 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071640408 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071014117 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110045989 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066212754 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076074996 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070880955 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07072724 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070647752 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070524358 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070592141 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070603939 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070760783 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071247249 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070608477 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071701239 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073541705 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066390562 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070645957 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070890298 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071591673 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070440145 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07353627 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07074943 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070629064 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071267666 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07362056 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070441374 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060457076 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070637635 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070992752 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070645936 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06674344 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070984228 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070556059 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066403864 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070462336 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07066001 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071200243 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.073681108 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079010253 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071643074 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070979502 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071788751 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071136448 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070899374 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071721665 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.079079932 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071705551 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071465804 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071359853 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071745149 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071859142 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.079409273 seconds)
  done (took 5.865481597 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07564856 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068878467 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080232527 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.059969415 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059537676 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069624073 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059798976 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.060111913 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070930599 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.067957442 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070142483 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069558642 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071873812 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069681532 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069630185 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072526386 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069854023 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069436913 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067811534 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069519177 seconds)
  done (took 2.756161865 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.072554366 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.078041711 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066228059 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069403743 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.065201947 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069454053 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.064756554 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06578405 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065791009 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065494765 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071293408 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070904984 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065734959 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069679729 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070874187 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069492234 seconds)
  done (took 2.471703409 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.066498035 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.067920881 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.068144259 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.061692718 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064670809 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.060374464 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.060727566 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.059178156 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.060348304 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073768819 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.061053129 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072615168 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.060815104 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.059810334 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.060377566 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.066329195 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059936145 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.060992123 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.060751887 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.066313315 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.067523351 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061958702 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.064741781 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060983514 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066250353 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.068276835 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.062612243 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064439795 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061239872 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.061739002 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066408881 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067744898 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.060668488 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.061845515 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.059917558 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061128194 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060906061 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.061466496 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.066491499 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060799197 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.059415175 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066246614 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.061227575 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.061930864 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060334233 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.061415405 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.060320277 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066754412 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.061409808 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066249938 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.061006524 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.063049373 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.061697803 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.068354164 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.063922703 seconds)
  done (took 4.854110223 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075511355 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065091526 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060047633 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059723027 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.064760591 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.065611999 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064898181 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.065146811 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065669431 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059526074 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065328792 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.064649283 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065577956 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065180155 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065412162 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065195396 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059383536 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065051374 seconds)
  done (took 2.546653819 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07107569 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066206769 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.070271752 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065556043 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064887761 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064234478 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060555275 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.05986868 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060007584 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064582016 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064298791 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.063920959 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060301333 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064333014 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064326291 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064479719 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.063972776 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060669114 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064868834 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060415321 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064128547 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059941912 seconds)
  done (took 2.78011373 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.088255043 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083515228 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.123697767 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078577018 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08648797 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070073241 seconds)
  done (took 1.909968345 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090252683 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102850824 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064769494 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064942076 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074468807 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068365056 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068167845 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068733413 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074955783 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072786393 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068454652 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074855833 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075032362 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070236897 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074523082 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077841052 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068236421 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068507328 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064730001 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077867745 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068450282 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074826597 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068149367 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068212047 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068413865 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070084731 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077681938 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073320438 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068379497 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07469745 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0782564 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068604935 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074960824 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076005888 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06543215 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075396379 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068471149 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077911893 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074838307 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070588121 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064822349 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074902787 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075062843 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070226238 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07777432 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068449993 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070571461 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06856027 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068426931 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080363753 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074993272 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070670452 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074995551 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078129761 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077865762 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080532622 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07300965 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070151165 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074813949 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072891348 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070325658 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075029512 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070215355 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072572277 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077427953 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069861873 seconds)
  done (took 6.196456801 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097470304 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065420397 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068724159 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073533952 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070661678 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068508689 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068768311 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068323104 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068145814 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065118508 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103386698 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068679886 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070432947 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070572575 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068831753 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068693277 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068821006 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070769591 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065301622 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080542221 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068411174 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0704336 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070408343 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070524256 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072842846 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077844472 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068563574 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06827032 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068308178 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068418849 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070428144 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068349136 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070357571 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065253901 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070291324 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068798231 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068667543 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07018472 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06848392 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074925113 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070717582 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077796866 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068326773 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068670556 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073094218 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068532153 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068258885 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06511668 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068442174 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065753233 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072971035 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073219504 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073101574 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070596917 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068546829 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069005901 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068334144 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068316286 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068755403 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077781799 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070629793 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068470912 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080612997 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068301276 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068181061 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070232282 seconds)
  done (took 6.085344294 seconds)
done (took 125.852166844 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209057389 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183762121 seconds)
  done (took 1.758225808 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073024602 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096149525 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.073956459 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132850969 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069877398 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104339655 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103191556 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.074471809 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069935266 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069352638 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069471244 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07263344 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135048267 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069746374 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069762828 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072418982 seconds)
  done (took 2.741594418 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104430686 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.181463812 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111160385 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067651293 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104457663 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074957581 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067712446 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078339936 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071588793 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070912915 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075244353 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073475628 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070888968 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073098667 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071375209 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074841315 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070694676 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074686045 seconds)
  done (took 2.905571682 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.093079004 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.084541523 seconds)
  done (took 1.570401137 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153700451 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103098587 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.143187184 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.322386337 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.133129089 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.127620544 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.131550528 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126514575 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.109211943 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123193821 seconds)
  done (took 2.860903253 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101769376 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.177366771 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.305875618 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118025842 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.0740758 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.100695114 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120924758 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.079702561 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078349344 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078644013 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078284685 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075745003 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.096010825 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074854103 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074549627 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077835214 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.099593222 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074073439 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074200997 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074838665 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099336462 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068485399 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074969633 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074041502 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076597273 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076667358 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069924306 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068707261 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07445542 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073979134 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076924454 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.098170994 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076960881 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.101542464 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073273292 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.102319888 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.0737829 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072150569 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074054012 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072443203 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075829836 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076288208 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077024629 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075343216 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069243442 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.073310214 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069688042 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068259548 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077771431 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069297498 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077524185 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076628619 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10084852 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069181754 seconds)
  done (took 6.086290123 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107244063 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105589806 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069258222 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112636916 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103189221 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068964087 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103599032 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098045436 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107660149 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068054128 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067297647 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067590062 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075767361 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.078884132 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115049698 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107151839 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070563647 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068103721 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106473929 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106042544 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067150425 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099591624 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098023559 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105856138 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066899375 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068590385 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066678097 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067624368 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073672581 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075178193 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067371891 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075738407 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.080967194 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075157739 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066396715 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066720136 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066984544 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07509989 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076272248 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076421142 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074503618 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066444368 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066999253 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067711864 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068068468 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066424852 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074052181 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.075509632 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.074326689 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067320427 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067823521 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067094318 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067590466 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074981275 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.073757436 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.076080445 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075436676 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066654249 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066979476 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068761237 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076586814 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076043435 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075718572 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068403601 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076394027 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066593337 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076689359 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080419752 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066965442 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067236192 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066994629 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066678635 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067822313 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074373181 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07409605 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067531976 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066888361 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066639348 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.075989486 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074570258 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067357349 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073568655 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066294443 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066658576 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067457773 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067227705 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.073355453 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.074935035 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067722491 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066591029 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066769723 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066660204 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065798257 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.073213138 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074369038 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.074825967 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.073878744 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067076367 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.073632451 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073982815 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067020829 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.073316696 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066111275 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066749567 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066430698 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073327329 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.072325417 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.074432571 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065879501 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065222629 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.0720321 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.211075584 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068544484 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074918029 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07785045 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075682202 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067221191 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077858329 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067580886 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076857453 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067804347 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077045098 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070835605 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075101694 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067690709 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067006239 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067528888 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.075391275 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067445488 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067623302 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068396034 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067288028 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07547676 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078627216 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068259513 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074682722 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.074757698 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067738854 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074741498 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067259236 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075653584 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067852981 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067973539 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066830288 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077659954 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067469124 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066996892 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068033327 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077101049 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0675232 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076348661 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073813092 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066671459 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078233228 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076930288 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073955553 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.077084174 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068086855 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067688045 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067245264 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067147152 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073980935 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075320074 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067659956 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067146266 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.073924268 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.076894066 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06631873 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.074672388 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074160164 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.074507394 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067529821 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067419714 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077482215 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076764687 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.074590552 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.074451921 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074597106 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066953291 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074147141 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07445511 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067334615 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081058569 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067449447 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.078263092 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074702993 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073688426 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07501414 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.076176892 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.076690845 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.077165418 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.079189588 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066814222 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067157809 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.074351782 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06707378 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067063539 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074229939 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067583855 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067572583 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.079077908 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067449275 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07688332 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066516307 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075147292 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066284318 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0673662 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078936384 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067204292 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067909786 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074336672 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067046027 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073568955 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076230537 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.073639244 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066086713 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066976819 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073878816 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.074025581 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065988409 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065731671 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066462856 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.072587199 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.071520598 seconds)
  done (took 17.998203298 seconds)
done (took 37.325854264 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.205493273 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157225968 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.191735584 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.11314459 seconds)
  done (took 2.16620704 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.096706944 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.096928889 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.07703746 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.063929778 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.082576853 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.063921717 seconds)
  done (took 1.915550828 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276960796 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.1942955 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.174205008 seconds)
  done (took 2.078303201 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.216839659 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.196895476 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.475663639 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.292453333 seconds)
  done (took 2.714123584 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.13221681 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.080421628 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.062368713 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.073250645 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.110585242 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.14290434 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.08837009 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.112678368 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073776879 seconds)
  done (took 2.369957024 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.130946551 seconds)
done (took 12.839304654 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.151200916 seconds)
    (2/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.227519647 seconds)
    (3/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.096352011 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070108114 seconds)
    (5/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.215534145 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.066650787 seconds)
    (7/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.10862668 seconds)
    (8/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.176166229 seconds)
    (9/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.19774523 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.204085861 seconds)
    (11/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.075608311 seconds)
    (12/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.218600443 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074830217 seconds)
    (14/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.064144095 seconds)
    (15/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070210742 seconds)
    (16/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.083844346 seconds)
    (17/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.218868597 seconds)
    (18/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074354138 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071777091 seconds)
    (20/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.232668937 seconds)
    (21/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.180298784 seconds)
    (22/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072640498 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.137201903 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072440272 seconds)
    (25/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.23318862 seconds)
    (26/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.459555512 seconds)
    (27/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.200627815 seconds)
    (28/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.075056434 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.11657606 seconds)
    (30/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085391877 seconds)
    (31/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.171032739 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.071167203 seconds)
    (33/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.065391045 seconds)
    (34/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.198905016 seconds)
    (35/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.249725065 seconds)
    (36/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.072361457 seconds)
    (37/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.18914937 seconds)
    (38/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078629791 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071397439 seconds)
    (40/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074555873 seconds)
    (41/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.06260892 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.084441619 seconds)
    (43/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074870734 seconds)
    (44/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.065410568 seconds)
    (45/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.233141985 seconds)
    (46/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.195300291 seconds)
    (47/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.077832081 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 0.144758149 seconds)
    (49/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.158190207 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.084315563 seconds)
    (51/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.171644615 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 0.06525425 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.083892629 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075587367 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.115032984 seconds)
    (56/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.150960461 seconds)
    (57/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.063579944 seconds)
    (58/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072931548 seconds)
    (59/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.063996757 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089622276 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088922404 seconds)
    (62/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.147588488 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06244609 seconds)
    (64/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.197647095 seconds)
    (65/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.117266292 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070196068 seconds)
    (67/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078357321 seconds)
    (68/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.208920254 seconds)
    (69/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.063170333 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.079415679 seconds)
    (71/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.062554184 seconds)
    (72/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.071129035 seconds)
    (73/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.178686731 seconds)
    (74/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.074046693 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.085048074 seconds)
    (76/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071448487 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.062752826 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.083869542 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.085631313 seconds)
    (80/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.0743828 seconds)
    (81/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.06198227 seconds)
    (82/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.233929499 seconds)
    (83/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.144452613 seconds)
    (84/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076165033 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064700829 seconds)
    (86/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.082908677 seconds)
    (87/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.066462147 seconds)
    (88/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174316774 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.152770234 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.171671305 seconds)
    (91/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.076862369 seconds)
    (92/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089560207 seconds)
    (93/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.162779595 seconds)
    (94/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075568153 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.167762798 seconds)
    (96/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072700151 seconds)
    (97/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071237547 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.078927421 seconds)
    (99/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093071645 seconds)
    (100/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071929294 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.063960602 seconds)
    (102/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.064133892 seconds)
    (103/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.064829368 seconds)
    (104/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074769423 seconds)
    (105/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.169124602 seconds)
    (106/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.066408884 seconds)
    (107/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07560251 seconds)
    (108/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.163615755 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.150243275 seconds)
    (110/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.064796179 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075580349 seconds)
    (112/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072337697 seconds)
    (113/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.072834013 seconds)
    (114/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.148673984 seconds)
    (115/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.065293424 seconds)
    (116/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.155648295 seconds)
    (117/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.064898917 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064205128 seconds)
    (119/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.064570937 seconds)
    (120/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077724957 seconds)
    (121/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.146262201 seconds)
    (122/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.200027759 seconds)
    (123/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.065063834 seconds)
    (124/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.146083714 seconds)
    (125/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071536872 seconds)
    (126/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.064253098 seconds)
    (127/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07447281 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064151018 seconds)
    (129/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.075907759 seconds)
    (130/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072496425 seconds)
    (131/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.156695312 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076471338 seconds)
    (133/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063284332 seconds)
    (134/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.066638345 seconds)
    (135/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.210131762 seconds)
    (136/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.063578573 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.143160236 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074679515 seconds)
    (139/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.076094189 seconds)
    (140/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.145707651 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065015442 seconds)
    (142/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175768218 seconds)
    (143/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.071339908 seconds)
    (144/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.062971083 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.090926966 seconds)
    (146/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123970071 seconds)
    (147/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.067956021 seconds)
    (148/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.062678857 seconds)
    (149/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.063463436 seconds)
    (150/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.062431196 seconds)
    (151/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082223663 seconds)
    (152/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.205202988 seconds)
    (153/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073218383 seconds)
    (154/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.140608293 seconds)
    (155/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089458709 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.082309787 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.063787765 seconds)
    (158/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.062940481 seconds)
    (159/309) benchmarking ("sort", Float32, false)...
    done (took 0.132612079 seconds)
    (160/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.064518623 seconds)
    (161/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.063158635 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.146714465 seconds)
    (163/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.159302777 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065047756 seconds)
    (165/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.064567481 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148996732 seconds)
    (167/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.138874056 seconds)
    (168/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076694051 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.086424843 seconds)
    (170/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.064839178 seconds)
    (171/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07047456 seconds)
    (172/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.066560943 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.063712575 seconds)
    (174/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06448325 seconds)
    (175/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.063408502 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.121978811 seconds)
    (177/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.159986255 seconds)
    (178/309) benchmarking ("sort", BigInt, false)...
    done (took 0.244815418 seconds)
    (179/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.064488205 seconds)
    (180/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.063060012 seconds)
    (181/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.062921576 seconds)
    (182/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.170354446 seconds)
    (183/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.065703348 seconds)
    (184/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.066595118 seconds)
    (185/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.195888462 seconds)
    (186/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.065250113 seconds)
    (187/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072402107 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06435824 seconds)
    (189/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.062946304 seconds)
    (190/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.090984237 seconds)
    (191/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070746697 seconds)
    (192/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069789009 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.261046766 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.128126634 seconds)
    (195/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.066284188 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088974049 seconds)
    (197/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065579638 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.073338639 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065513721 seconds)
    (200/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067628168 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.121112433 seconds)
    (202/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066175648 seconds)
    (203/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072882784 seconds)
    (204/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065234467 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06507397 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07230918 seconds)
    (207/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.141431985 seconds)
    (208/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136969495 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075893164 seconds)
    (210/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066006404 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075933786 seconds)
    (212/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071452948 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142782711 seconds)
    (214/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.162535263 seconds)
    (215/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.065063915 seconds)
    (216/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.064689789 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.115176573 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08701303 seconds)
    (219/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.063461071 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122526171 seconds)
    (221/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071792736 seconds)
    (222/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.063828761 seconds)
    (223/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.063630191 seconds)
    (224/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.14055951 seconds)
    (225/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.065585437 seconds)
    (226/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.065311194 seconds)
    (227/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.169412273 seconds)
    (228/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073026382 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.168172319 seconds)
    (230/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071207732 seconds)
    (231/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.065183823 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065297172 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089778984 seconds)
    (234/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.065048068 seconds)
    (235/309) benchmarking ("sort", Int8, false)...
    done (took 0.169002208 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06467373 seconds)
    (237/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.07293091 seconds)
    (238/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065179723 seconds)
    (239/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.190539556 seconds)
    (240/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.065111505 seconds)
    (241/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.063503392 seconds)
    (242/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.071781754 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135642884 seconds)
    (244/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067528267 seconds)
    (245/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.06273614 seconds)
    (246/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.063696846 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064267603 seconds)
    (248/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.066506271 seconds)
    (249/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.063366682 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064364044 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.144582144 seconds)
    (252/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.065217282 seconds)
    (253/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.063767703 seconds)
    (254/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.064526043 seconds)
    (255/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.062695294 seconds)
    (256/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073669425 seconds)
    (257/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.071463192 seconds)
    (258/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071908822 seconds)
    (259/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.063934362 seconds)
    (260/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071012211 seconds)
    (261/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.063009777 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088296516 seconds)
    (263/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.063859202 seconds)
    (264/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071758253 seconds)
    (265/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.064634047 seconds)
    (266/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06540242 seconds)
    (267/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092556285 seconds)
    (268/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.063810661 seconds)
    (269/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064697384 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088395883 seconds)
    (271/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068753226 seconds)
    (272/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.063929848 seconds)
    (273/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.063267756 seconds)
    (274/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.064611957 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071051559 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064557466 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.11236853 seconds)
    (278/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064810235 seconds)
    (279/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066690643 seconds)
    (280/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.065281585 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.142627144 seconds)
    (282/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.062706349 seconds)
    (283/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.063996751 seconds)
    (284/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.063265766 seconds)
    (285/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.064591276 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129674783 seconds)
    (287/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.070489124 seconds)
    (288/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.068014386 seconds)
    (289/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.06482889 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.122490758 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085940572 seconds)
    (292/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.16945414 seconds)
    (293/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.065035079 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.118947269 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.063718617 seconds)
    (296/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.063372288 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.087092447 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074771619 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086107058 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127614331 seconds)
    (301/309) benchmarking ("sort", Float64, false)...
    done (took 0.131854747 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064176485 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071826843 seconds)
    (304/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.065685709 seconds)
    (305/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.063981451 seconds)
    (306/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.064489941 seconds)
    (307/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.065946197 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063447125 seconds)
    (309/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.062957598 seconds)
  done (took 32.531385414 seconds)
done (took 33.984685456 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083830518 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089539735 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.071888584 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.084610561 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079981121 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.094299365 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071944493 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077053013 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078989861 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.077679879 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077723771 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071038153 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073858994 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073756432 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.071361429 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087516515 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079157505 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073147201 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073141671 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063222655 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073306119 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064349168 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.063248413 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070807794 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076191794 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071282767 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073595325 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073539038 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064305622 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064635613 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069089742 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073204103 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064143369 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076668923 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073021579 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072986546 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077167128 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07741297 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.063577509 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064790836 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074871563 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065107086 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072738306 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.070699625 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.069659974 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071303586 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072831254 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076203 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087397471 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068540273 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075274793 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075567731 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075889341 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.069880169 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069429372 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072621382 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07061172 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087314792 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072952285 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068592921 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074606723 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073599846 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071303119 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073419845 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072949007 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075777369 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076149552 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071339822 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075189913 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071620452 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064502231 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073421453 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068580778 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064098322 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075917675 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07792693 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.062914585 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.068930563 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072435155 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072754625 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063563369 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068436176 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06329811 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069285573 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067942898 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070709252 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06916027 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071575987 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06312474 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072994779 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071694031 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072323234 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.063187638 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076446735 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063323996 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070920022 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064629314 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064159958 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.063189838 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069542202 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06384465 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067907766 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072059839 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06303993 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069074652 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077726101 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063697513 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071602725 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063102792 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063322568 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.075134901 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075525102 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064620521 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068558587 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063087205 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.069640128 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.062958181 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064219454 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064019245 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.063950064 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.068709164 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064307664 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06788003 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.06963274 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076159311 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063863535 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068239162 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068233285 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063806452 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070303925 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064351443 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063599014 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.062881442 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077184303 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067531788 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063421015 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.068733588 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067360302 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071064335 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.061665833 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071456123 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068560915 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.209690567 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072161373 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063577117 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076294205 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069120453 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068899414 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06391495 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064354286 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063468466 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064142598 seconds)
done (took 12.461381612 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065324087 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.093665008 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.072695434 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.081281541 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.077077111 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065349871 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.069006673 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.082800443 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067915297 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.084230444 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086801544 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085299669 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.091939658 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063332976 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064933459 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.065222528 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062808227 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.071420226 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.080581973 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086102929 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.094877978 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.063978025 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.073719003 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08077024 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.075665536 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.081441996 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065640954 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.065553056 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.067684714 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.082819171 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089134925 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.064512709 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065360218 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.079352582 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.078747793 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.071885494 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065436996 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068577833 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065770587 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.0645505 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066317836 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.079596076 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068701525 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.06860716 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.065278561 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.065453537 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065671638 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.070548 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.077994699 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.068534737 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.072945514 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.077268767 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066649101 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064752177 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063185383 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.069118622 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064478075 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06541866 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06516788 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.064177584 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064846672 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067250407 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.065901387 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.064993379 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068481963 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067661632 seconds)
  done (took 6.255824749 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083336164 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092589494 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081421766 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08269098 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064091759 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065010934 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.064990146 seconds)
  done (took 2.082152679 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065214149 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.078011105 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080840754 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08170069 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.07360363 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.082966954 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065109128 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095164979 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064457929 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.077040343 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.111467048 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082307624 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067961065 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076943927 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065159577 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.072827096 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065590589 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073096446 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073828483 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08135706 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069160448 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.092502098 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078840546 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065558375 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.086047017 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.069493917 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.06446627 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06517044 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066069912 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.066228858 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066353715 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104278888 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.069257793 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077102335 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066365949 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.064583678 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.070791091 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068679594 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.06791696 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073969878 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.070862372 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066210673 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.063751849 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066303404 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.06788691 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.069027862 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.064095737 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066495262 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.066406999 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.077195862 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064283282 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.069030267 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068346406 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069822079 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.0713302 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069375832 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073217352 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06683936 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.077058235 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.072972688 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066396229 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.074073176 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.107332346 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.070589924 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.073457861 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.069177298 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.069163698 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.070666142 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.066158789 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.067064353 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066186488 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.073500089 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.064483044 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.067752904 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068607445 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066895985 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.069889525 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.082815917 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.081998953 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.077938418 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067252216 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066450784 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069729974 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.082181359 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069865918 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066359931 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068604869 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064293338 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069724901 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066651478 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071362189 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.066612108 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.073506253 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.067786641 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068891776 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074210402 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06524855 seconds)
  done (took 8.533778313 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068181116 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066820335 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067736688 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066658698 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066816591 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06635159 seconds)
  done (took 1.985636888 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090074111 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06596152 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080390799 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.066006386 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101920386 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.073345043 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.073973077 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074604847 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.079285821 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078644852 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.07373497 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.076290099 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.073076716 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.067719782 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.0725924 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066922086 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.072904421 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069501753 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078089394 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067539983 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.07933512 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.067328502 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067883804 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.077676939 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.06904034 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.066303085 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066570062 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077757838 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077992087 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.074458124 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.067194068 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.068561214 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073878468 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076849408 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.072887744 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07400629 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065536661 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071321765 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068373419 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068848227 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.075013663 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067369425 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.068058443 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.0713368 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.074163005 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073491768 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071650465 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.070027887 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.072475953 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.071422265 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071683386 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.066683419 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.068723829 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071851335 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073723771 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074284021 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071713481 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.073187343 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.067517249 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074054706 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.066044486 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.06905403 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074225447 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.068583616 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.070102466 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071637189 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074068329 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.06779283 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067850933 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.065657359 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071811785 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.065790025 seconds)
  done (took 6.741093255 seconds)
done (took 27.134482222 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.981607446 seconds)
  done (took 2.512506607 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.567945441 seconds)
  done (took 2.137242409 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.671968086 seconds)
  done (took 8.234087568 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.29997747 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.342430382 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.730523368 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132078772 seconds)
  done (took 3.098599707 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.723513679 seconds)
  done (took 2.297054858 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234467194 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224777473 seconds)
  done (took 2.045774015 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.349750513 seconds)
  done (took 1.914640256 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.139210892 seconds)
  done (took 2.703062256 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.22785739 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.159009739 seconds)
  done (took 1.959580923 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.470684198 seconds)
  done (took 2.036348866 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.492273575 seconds)
  done (took 6.063454716 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23264224 seconds)
  done (took 1.847113384 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237833125 seconds)
  done (took 1.811912568 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.738269588 seconds)
  done (took 3.306704556 seconds)
done (took 43.543493502 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081884949 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084590154 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084592749 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079893985 seconds)
  done (took 1.880716933 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.072722546 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.068172282 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.072188376 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.072832733 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.0708417 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.071612026 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.071252148 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.067897256 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.070306976 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.068475171 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.066577501 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.068196741 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.070939831 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.068007705 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.070923643 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.072454436 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.068405273 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.068076467 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.071313435 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067740525 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.071204177 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.068261688 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.066559163 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068263457 seconds)
  done (took 3.248582027 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07717393 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.070674286 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073695843 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069949505 seconds)
  done (took 1.873053124 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.074058484 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.082806457 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.084747979 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.092131725 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.073830677 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074371062 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.08148267 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.082277995 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.063976033 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.085223211 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.066926302 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.065180635 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.06558088 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.085594492 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.081384065 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.061601014 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.063233201 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.074397759 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.073240413 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.075736617 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.066613343 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.063970945 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07388302 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.073583036 seconds)
  done (took 3.368844832 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078146058 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.064745432 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077645285 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091446343 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09335189 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064320221 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.078071453 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092505524 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126338464 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064447199 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070222245 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064117574 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.106126743 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064645878 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079613943 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106809415 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109058591 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068089392 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097469361 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064422693 seconds)
  done (took 3.251304977 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076537175 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068499679 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06913139 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064468862 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076669294 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071979216 seconds)
  done (took 2.016919218 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06722183 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066703717 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066887722 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065931942 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070632446 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066615054 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065163939 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066712102 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.0664052 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066125682 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065428673 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064687845 seconds)
  done (took 2.381143326 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.162319382 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06798764 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069161907 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064994541 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070211885 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065177579 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080104242 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067207492 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.08614843 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065605715 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.0654495 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067426895 seconds)
  done (took 2.516996007 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099183326 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129356605 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096133675 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071904673 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184108971 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092973991 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.089744084 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.121482994 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09197301 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.068065926 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090199104 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135110539 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098127027 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.097188453 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080776142 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132005208 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109552231 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088704389 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112665687 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081944416 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.069804547 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131426154 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069465429 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091027179 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099922324 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.096800888 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11072394 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133833592 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083918147 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.088746998 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080359812 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.073579801 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105500369 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.08413361 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.097205481 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092907198 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097429149 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084056166 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085912808 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124517932 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153582766 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099692902 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099567392 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134381786 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078930506 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.11508261 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081748121 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097983389 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103302215 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092208636 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075049005 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094137251 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.104823968 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101390811 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.081395497 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08123766 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116873767 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.097563457 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095004769 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080585509 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106717163 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.08539082 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10684303 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269118532 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140506955 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102908649 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13659109 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126678219 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096158263 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.08959707 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.091742265 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076891907 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110461941 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098080925 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13552859 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110123976 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099753866 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.097319075 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082808511 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10679492 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122387556 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092705133 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098128241 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146087755 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108344536 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089902039 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090558763 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.146461607 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071733968 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146153352 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089012086 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122152881 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095909251 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137778598 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094336361 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.085321947 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106392588 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10218707 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08877977 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102120353 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085595401 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113249296 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09176073 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100074294 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080902129 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093274291 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086165419 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.097210785 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074661125 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103497385 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115000198 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113723085 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.073913647 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107759983 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087017095 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.0769892 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09192203 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138797888 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083195895 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075249101 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151377848 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.091401559 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.115335251 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108492261 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.083185022 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275574813 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137599998 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092102328 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089562015 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076829984 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156558634 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07584805 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120125047 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082696498 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104907824 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106940765 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131896465 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139411888 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094787577 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07844383 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094672889 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.106516471 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090234042 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085949307 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077750396 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.108526219 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133168408 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.105611976 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082712635 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.093173107 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.069388471 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114669868 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07611995 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082193791 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095922504 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.086654835 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.089352208 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142317452 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.086706554 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108030799 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098930982 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.066814838 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091562381 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153723939 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08281762 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.111501084 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124489649 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085234535 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067976112 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.09545895 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.073310146 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108873739 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.092674 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107772754 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078238608 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106884605 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068161914 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073744617 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128525453 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101036872 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091855496 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.132416634 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106402277 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.088562904 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.102174353 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.096306555 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094243556 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100167535 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.111658305 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263618803 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.07515408 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132714701 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090501893 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078124975 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088121906 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080771925 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.078450628 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100299533 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115193356 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088789092 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10237056 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103616866 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09028245 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.11134162 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089897653 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079386966 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133197715 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076731536 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075199073 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088105564 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.105120995 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08845625 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.133998098 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.080341437 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136084938 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096684723 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081718839 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114893652 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068544855 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0700716 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.080887121 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091748235 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116160179 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079518994 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078324829 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125886497 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133801914 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100480071 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102611911 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068091223 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09037523 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136542625 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.117093749 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08137833 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110574301 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084931213 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129419483 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096263339 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121482314 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10549568 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110265307 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.090901631 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.083548277 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.073848547 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08998572 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111318813 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088810791 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082260409 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.068193699 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074633669 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093068768 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089719703 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111038288 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087036621 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133453976 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073009916 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099071522 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104434225 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261465248 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091566945 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099367638 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.093172201 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092032731 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095150441 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097106511 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074250573 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136030672 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10699797 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079334019 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09242184 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095106139 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109606039 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109411781 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119490979 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097297844 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107875384 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126039688 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100732008 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083406424 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086462904 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.092498952 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.086033626 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082364151 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.103564034 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112140082 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101498086 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108548145 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.09632796 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.092570625 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107081721 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09326814 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088423677 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.12882965 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154379799 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.102486218 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107001853 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085732621 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107446579 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10523835 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114328237 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.111437462 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109171708 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070856732 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.075222444 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.070638188 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107092555 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079180585 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117212803 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077352115 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108435329 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097478687 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081275323 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.066916769 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102621086 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091130498 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.082951234 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130863647 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.11604265 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.073688373 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088815792 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10812822 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085488663 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137506662 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.101363705 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100932328 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072134561 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090734114 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.073145652 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.273340402 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.103468293 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079192769 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.076644197 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070980281 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108424988 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085461077 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119068374 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089079842 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103101069 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122894138 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133432782 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087220334 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100899666 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126643905 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115787208 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.083760029 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113800665 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135919963 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.120221721 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084162689 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.085194878 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106032031 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105889236 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100980336 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076359411 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080227559 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110034896 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113606346 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.068454643 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084943368 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070636292 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.087250045 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112850227 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095076512 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082679453 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125505068 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075180434 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108245782 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095834175 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122183362 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123142631 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14575718 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099061143 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088744133 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077315954 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133360075 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.07095502 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125747418 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112137807 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088496497 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.071154918 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085264638 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100559562 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.625172939 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108807541 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076281965 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136199446 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087975178 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116771248 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086097396 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.118638009 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088942718 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102325285 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089529928 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125288971 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239947022 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111771954 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.182826198 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111306736 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.109081789 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074468249 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.087089932 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074711986 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.079492349 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.081375565 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088466352 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108213904 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085403118 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105874323 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.080168987 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.107839921 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091475032 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08944871 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.100967098 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083510443 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139055097 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088904622 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121896813 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108121524 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079689205 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074492698 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.087456935 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.103319296 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080743347 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096070194 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.07927451 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.076250325 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153566482 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101472193 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088664865 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103875569 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.092808105 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.086866449 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097093756 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117623274 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111220169 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073240708 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.088847832 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106097308 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079584646 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075555947 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09701598 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.069745253 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087977506 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09860948 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097047347 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089971897 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.102156258 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079710025 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08803395 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110339568 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08609769 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077588271 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077123957 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.076752618 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.079844012 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105353441 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109620068 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114611738 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109316471 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094134222 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092568959 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.079058591 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.23136094 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080390702 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09474561 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.264076255 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077313323 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.133357807 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088798503 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089408942 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097429585 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103212999 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15408663 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075242657 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110493048 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092341741 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118734721 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088229644 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10736785 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098673153 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092555509 seconds)
  done (took 50.984405385 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.092936235 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.157876128 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.160101689 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.081091433 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.09347097 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.119449716 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.209626036 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192061903 seconds)
  done (took 2.812583014 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.066647929 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.081155669 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101889752 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082822928 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065736569 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.066332244 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.20039622 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081327082 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065013011 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.105797146 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.074972791 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067285516 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.366335068 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.064840348 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.065620366 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.073611348 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.065902563 seconds)
  done (took 3.390316481 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.359752515 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.600126357 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.328028371 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07317268 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.969633894 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089441471 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.27418343 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137946008 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080582289 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.559056318 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.36807096 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130292302 seconds)
  done (took 18.673898892 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.073983781 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073407658 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.077559479 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.076931245 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07296723 seconds)
  done (took 2.069131489 seconds)
done (took 100.063122582 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080949492 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.169548511 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.066418589 seconds)
  done (took 1.967292819 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.082256894 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.080682459 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.080888582 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.078194575 seconds)
  done (took 2.02531588 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07300669 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075324769 seconds)
  done (took 1.844703793 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.245146083 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163964573 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.0907891 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082352691 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079059499 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079001406 seconds)
  done (took 1.948837846 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07068418 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.070296255 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070903626 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.071787753 seconds)
  done (took 1.9799286 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.067083395 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065614981 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.067853094 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071385452 seconds)
  done (took 1.969273507 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.082529902 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083369191 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.076982681 seconds)
  done (took 1.94082639 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101945281 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094868352 seconds)
  done (took 1.894707196 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.078896593 seconds)
  done (took 1.777630339 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.087577371 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.093462771 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.151857293 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111227496 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.150721731 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.133790455 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.077264487 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.078517463 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.073139315 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.071777582 seconds)
  done (took 2.728155335 seconds)
done (took 22.353496526 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.0770904 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36816011 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.358192619 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084972772 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670224245 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355220694 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.983941128 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089579763 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.098054016 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067195068 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083097211 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648446643 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.97526464 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323654662 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.961064775 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.327952612 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649216595 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067140366 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066250136 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067110188 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.967780749 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066478739 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066607091 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067026634 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648455287 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372411292 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068151754 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327911665 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066704901 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069511899 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355421939 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06873098 seconds)
  done (took 16.143511761 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069145804 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120237667 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071611426 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082677942 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069276059 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068690546 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07032209 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067419307 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108365516 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067253675 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083785752 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066658163 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071321643 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068917669 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087431631 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067523424 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069089957 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06814428 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067644822 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068708645 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085891518 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067315251 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069032516 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070674565 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068085337 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080701299 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068861565 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067312025 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067461213 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070360044 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071073487 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0689392 seconds)
  done (took 4.08620494 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121495092 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125968263 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072516586 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106545984 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118523886 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069065754 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150720353 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090203891 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113052651 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067630973 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084278305 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06758733 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10287301 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069286238 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088125676 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068468407 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069269515 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068316201 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067598696 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068463876 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086165021 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06737287 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068453163 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068230594 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068259736 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082119042 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068802397 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067948469 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067616359 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070127812 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071450048 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068965074 seconds)
  done (took 4.36190839 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.068526758 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.070777871 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.078589926 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.079410429 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.065718563 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.067748338 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.068839693 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.065531586 seconds)
  done (took 2.285338652 seconds)
done (took 28.591543058 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077452986 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067072268 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.069931642 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08645143 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072457476 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.070122895 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064119214 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.072937253 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.070196937 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069745703 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.071433453 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06593118 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.068504551 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.063596626 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070972709 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.065749252 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.072551451 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.069680557 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.070502137 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07146556 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068040009 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.070563794 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073405642 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.070561079 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.070498452 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.070615434 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.074612368 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.070893949 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.066000063 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.068423492 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.067677272 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.075630859 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07261292 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.072540646 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.065654862 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.065654834 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069733478 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067996132 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.072409341 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.074421128 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.06737896 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074655015 seconds)
  done (took 4.647099683 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.083097337 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.088782569 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08117477 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081361444 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099841974 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082142169 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.085549816 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078152056 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.076377982 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.084916626 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.072766588 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080531828 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078149255 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.07081284 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076695382 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073497733 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.078458885 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.072694405 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077754073 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077525355 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085551926 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071145308 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078657548 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079038201 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07305316 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.079029547 seconds)
  done (took 3.794634084 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.071453524 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086228533 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090761892 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.146948647 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110007236 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080869361 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080996531 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094722852 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098783632 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066833534 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071102226 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09204418 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093971358 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073634073 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106766125 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084357857 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.077784611 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068360725 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07376266 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09944467 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088599078 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085225529 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098317916 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086132219 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066291601 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.06857338 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073095669 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081089009 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073823765 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078781527 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07092265 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07029815 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.067088809 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077900127 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070637284 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.065081167 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.087686697 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078383917 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079557503 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105665951 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075642968 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067609617 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.095293073 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131049311 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065710762 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.069117707 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.069767185 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078488569 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067578821 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09406961 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081914713 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.065886436 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.066602771 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067488806 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067536791 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081994175 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.067668723 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068143896 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078150608 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.072488969 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08570808 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070981377 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085995532 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066139971 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077363649 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067333817 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067622716 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.064851373 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099602197 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072926852 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116694221 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067266383 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.064397534 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078870938 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077076277 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072954841 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06573771 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084305406 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077199056 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.069892265 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077631012 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069028346 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069658997 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099834248 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.066231879 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.065291941 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.064174836 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.068734246 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069604497 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.066959737 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079812958 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.065734476 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069596365 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.080711688 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066049443 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.066734498 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.068920361 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.067867498 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.065698717 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078741838 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070175827 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067551588 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077756612 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066769635 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069477625 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080317645 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073620608 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065618571 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.067355506 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.068822253 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067757515 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07032177 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069281891 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068054174 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.071889667 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07379688 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071947485 seconds)
  done (took 10.764004724 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16160003 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15192671 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.068512168 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14509357 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.074903452 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.071776258 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146153832 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.086241036 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067070558 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068152887 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.066402239 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.094993112 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.091387776 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.10173832 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.071805671 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067436963 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.090059593 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.099186938 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148384045 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143386312 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.089724444 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.073565516 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069081501 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068338103 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.068100628 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.075157387 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.082864274 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.074819904 seconds)
  done (took 4.380633247 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.075822877 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.093041984 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07099255 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.078806656 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086768257 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067040068 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068977407 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068638444 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080749647 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.075575116 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066893906 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.071406334 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.070301532 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.06932648 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067410295 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073279578 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073644403 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.065881212 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070484573 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072003775 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077522196 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092420969 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071329189 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066923862 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.068818225 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066681169 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.075865466 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.078012061 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066857124 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.082196704 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.063734604 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.070963199 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081618737 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067383647 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066928526 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06742345 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066730011 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066973972 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.067195289 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065201877 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.064884858 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.071602693 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065613986 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.074460137 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.080178511 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073896625 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.068268339 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.069498679 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.068679348 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.063643164 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069692155 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069605661 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069280543 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074339572 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07013889 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.069415521 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068187338 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091400848 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.073407366 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066277247 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066131645 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06781305 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.067948627 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.076455468 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083300734 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.067901533 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065409583 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066579917 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072325789 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.080299501 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066351334 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071627887 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.063961132 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067024087 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.069235448 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069385703 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068081651 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065200854 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066318731 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066693896 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.067236493 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066368517 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.066565324 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069346503 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064553287 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065468115 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067506519 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.067796214 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.074912117 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.065570521 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.070394746 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067833902 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06578342 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069549406 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072207534 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069582968 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080690716 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.077218623 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067168962 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065054864 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080681666 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069288011 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066181586 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.0727981 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.071039316 seconds)
  done (took 9.207563916 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090451295 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068487036 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085551495 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092355843 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.077013909 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.072741452 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078096755 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.067723023 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083210602 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.066029308 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075549553 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.065350515 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077819484 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075835296 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06832135 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076788601 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.069683223 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086095305 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081439928 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.065466633 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075476805 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078861008 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.079255957 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083680819 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083034013 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084162106 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.079020045 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.069618957 seconds)
  done (took 3.929068701 seconds)
done (took 38.435680859 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.796864471 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.968964586 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.804713929 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.963123495 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.944601858 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.01001762 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.839580231 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.789827092 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.047714915 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.859798546 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.064255559 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.177040568 seconds)
done (took 66.057690016 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.830353609 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.955492141 seconds)
    (2/2) benchmarking "String"...
    done (took 2.022171077 seconds)
  done (took 5.704863707 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.997210945 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.424057944 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.054571104 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.790706329 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.797133549 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.227530147 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.588456121 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.24317911 seconds)
  done (took 30.85249161 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.894331871 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.019976626 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.464792253 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.503625894 seconds)
  done (took 15.648842127 seconds)
done (took 63.853523153 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.823238511 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.805976593 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.816902805 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.822393808 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.799337581 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.794932469 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.798647577 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.796027141 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.841387094 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.813350468 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.793806439 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.800960498 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.795587111 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.804860206 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.485610349 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.854298948 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.816793113 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.803077351 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.79814252 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.802194245 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.798706276 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.793773204 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.259432265 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.979598138 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.408294945 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.995364878 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.215654766 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.205161615 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.796724702 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.7940737 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.869931791 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.982492512 seconds)
  done (took 204.693927501 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.792341645 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.932926093 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.97476292 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.806889612 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.410921173 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.96796425 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.887742178 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.433624218 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.794789608 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.80928629 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.081885498 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.792922386 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.101528462 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.738379194 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.827737409 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.837308029 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.050420616 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.099054182 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.833021079 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.94302741 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.81204199 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.952720727 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.912887582 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.044985649 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.812969436 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.885017908 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.802083676 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.820016974 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.980711105 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.024472998 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.833423361 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.825367528 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.962024123 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.663883889 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.812752401 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.800408751 seconds)
  done (took 171.792479878 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.992307792 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.801092007 seconds)
    (2/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.794308138 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.794540492 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.851452336 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.917075785 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.795864325 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.439458438 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.805942889 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.797020123 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.799226648 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.793992898 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.794068938 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.795896165 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.807291098 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.876672518 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.797635592 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.809089268 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.796258564 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.820780624 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.796381986 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.79491799 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.794933606 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.794748913 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.794339993 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.794890231 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.79580728 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.35253351 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.79588733 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.034709244 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.797268774 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.795211855 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.360484249 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.808782598 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.921165902 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.799842004 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.88721782 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.851837388 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.907157522 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.796559164 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.015058003 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.870339509 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.796518639 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.796255574 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.860040871 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.808171959 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.797540944 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.799129022 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.801434712 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.861153878 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.035228408 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.796752164 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.918352442 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.274665798 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.797099331 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.795995231 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.796172282 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.384659397 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.798415597 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.796492648 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.803155705 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.802495707 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.796297443 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.797803989 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.183269602 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.867359369 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.285146333 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.48080618 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.799211447 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.926027925 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.990634212 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.796768747 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.797141548 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.797284173 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.799619302 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.79750377 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.800982523 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.919842359 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.805609661 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.921341175 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.880452662 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.798961874 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.921825019 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.800359752 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.808653882 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.609758239 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.799354806 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.866156178 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.835570142 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.619337714 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.80054913 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.171466428 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.577350841 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.799961733 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.799661284 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.811115499 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.7985501 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.798396518 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.799279015 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.878091294 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.799127005 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.921963501 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.50993048 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.213221164 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.982094453 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.79807693 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.808193565 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.892011466 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.971121233 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.798691442 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.865528576 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.805819403 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.803110371 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.94929875 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.800665411 seconds)
  done (took 404.57207699 seconds)
done (took 784.839731441 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.361776847 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.342065838 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.449599678 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.354848 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.328379093 seconds)
  done (took 13.571940376 seconds)
done (took 15.309880608 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.815098878 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.80598252 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.863864841 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.883936666 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.817303236 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.820428364 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.880831124 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.821072818 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.850959788 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.854775902 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.884406274 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.885718105 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.824657941 seconds)
  done (took 25.744741066 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.808680954 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.955767242 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.034609568 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.842067186 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.809847724 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.040278153 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.866339009 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.946015441 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.953740788 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.050152172 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.053216467 seconds)
  done (took 23.097813362 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.808901955 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.954887493 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.044149529 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.84590451 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.810391892 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.036880816 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.872882329 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.949282304 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.956721121 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.037141969 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.067046012 seconds)
  done (took 23.129454502 seconds)
done (took 73.70919736 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.805876947 seconds)
  done (took 3.543475817 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.826110772 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.969252928 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.805825636 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.803244296 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.805843076 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.80612215 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.803687584 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.806237467 seconds)
  done (took 16.363767355 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.805460319 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.805206776 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.80571029 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.806308291 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.805407975 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.804107801 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.805324357 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.805111218 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.805100928 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.805734127 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.804914114 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.805794355 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.804655306 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.805417879 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.805711938 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.806080399 seconds)
  done (took 30.624795363 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.807571437 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.805392359 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.80559211 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.805411018 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.80613991 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.806443916 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.808204796 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.806067435 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.804930957 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.806026546 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.807127716 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.806989994 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.807214202 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.805800688 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.806419777 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.806040256 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.806659456 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.806790684 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.812160768 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.806644407 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.805833858 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.80778297 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.807554999 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.807437442 seconds)
  done (took 45.101885635 seconds)
done (took 97.382922684 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.566943455 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.566250059 seconds)
  done (took 9.87258776 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.807042922 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.807382454 seconds)
  done (took 5.357675204 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.80749664 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.808389655 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.807759026 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.808039273 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.807895148 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.808286328 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.808070174 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.809007774 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.808241241 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.808768222 seconds)
  done (took 19.820943907 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.808659654 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.809068787 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.809591342 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.808556227 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.80893598 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.809133167 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.808241262 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.807932241 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.808283254 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.808129111 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.809858999 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.808834337 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.809223131 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.807595816 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.809590031 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.808054221 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.808722155 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.809050731 seconds)
  done (took 34.29807937 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.808638874 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.809555392 seconds)
  done (took 5.359548762 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.808563966 seconds)
    (2/7) benchmarking "second"...
    done (took 1.809663616 seconds)
    (3/7) benchmarking "month"...
    done (took 1.809482908 seconds)
    (4/7) benchmarking "year"...
    done (took 1.807883426 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.809892231 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.808641234 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.809546816 seconds)
  done (took 14.404943586 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.809879261 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.956028817 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.008366627 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.686335721 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.810635632 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.813715174 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.133091373 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.814744424 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.815816278 seconds)
  done (took 20.59071349 seconds)
done (took 111.446200792 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.645751515 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.812424774 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.044581869 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.872558903 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.845244486 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.114747941 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.82888202 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.465562398 seconds)
done (took 42.373379296 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.831707259 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.807448236 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.840665448 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.840917054 seconds)
  done (took 22.231724588 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.809924937 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.169528647 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.844163901 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.673140432 seconds)
  done (took 22.260172716 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.189675586 seconds)
    (2/2) benchmarking "read"...
    done (took 2.152416012 seconds)
  done (took 6.089658511 seconds)
done (took 59.159757056 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.811720433 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.81142259 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.811178365 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.812148347 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.811910819 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.811347641 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.811836938 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.811671899 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.812196354 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.812630668 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.812208323 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.812063829 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.812416994 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.812392619 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.812358935 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.812080515 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.813505631 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.813259632 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.811760098 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.812501508 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.811834674 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.812423712 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.81242197 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.812540046 seconds)
  done (took 45.236584228 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.81300734 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.813011509 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.813293403 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.811631667 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.813324927 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.812918697 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.814095466 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.813216715 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.813481212 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.813899522 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.813356451 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.814111585 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.813681947 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.814192835 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.813448849 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.813573909 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.813799148 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.813482233 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813702926 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.814316939 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.813896188 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.8132774 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.813369577 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.815002062 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.81336271 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.813309578 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.814311043 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.813672239 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.814605629 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.813981359 seconds)
  done (took 56.15386326 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.815203233 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.814496169 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.815038175 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.814546294 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.81492802 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.814750148 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.814718548 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.814807337 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.815409252 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.814590126 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.815044653 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.815586143 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.814081877 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.815070505 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.815715211 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.815228544 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.814676026 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.816591298 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.814685074 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.815079137 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.815416082 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.815697017 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.814399895 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.81453582 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.816198744 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.815089106 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.815920563 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.814924906 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.815043064 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.815935853 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.815785804 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.815652606 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.815966756 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.815404288 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.81638908 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.815820984 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.81604551 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.816030711 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.816041377 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.814857516 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.816465549 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.817378271 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.816388056 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.817434054 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.815975746 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.817225653 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.816606697 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.816680998 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.817317007 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.817188974 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.816470643 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.817148783 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.81758594 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.817342564 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.817217695 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.816392014 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.817724119 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.817287393 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.816992051 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.817970567 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.81737307 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.817726615 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.817052068 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.818815294 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.818053862 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.81807981 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.817243344 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.817521236 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.818359745 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.816926334 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.817247623 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.817749235 seconds)
  done (took 132.513753652 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.818048483 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.818656023 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.819025045 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.818201167 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.819571813 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.818729749 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.818317465 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819013492 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.817962885 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.818955359 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.819328233 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.819053057 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.817856532 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.819301578 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.819162448 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.817481615 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.819106122 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.819275111 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.820318952 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.81905565 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.819202787 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.818645481 seconds)
  done (took 41.764648366 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.817962593 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.819336299 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.819142094 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.818876041 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.818317091 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.819869329 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.81925321 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.820537429 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819283074 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.818887311 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.819599262 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.819311596 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.819158028 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.819615524 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.819776116 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.819402213 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.819770529 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.820071712 seconds)
  done (took 34.4995584 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.820325337 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.821193373 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.820463183 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.820480033 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.820089136 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.820479712 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.820554592 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.821306174 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.820426386 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.820963534 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.820702635 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819874373 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.821335616 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.820359728 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820502081 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.819418663 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.820649762 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82038683 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.820669875 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.821433905 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.82076295 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.820417761 seconds)
  done (took 41.805027489 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.82073088 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.821385839 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.822579879 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.821106477 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.821466833 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.821804625 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.820627123 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.820890353 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.821077246 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.821568104 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.82057656 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.822848151 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.821572499 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.822119092 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.820885663 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.821742498 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.822051904 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.821639662 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.822088427 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.822098614 seconds)
  done (took 38.184054403 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.823285951 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.822592492 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.823063074 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.823370251 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.8226884 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.823897208 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.822525079 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.822703121 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.825506156 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.823034888 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.82216467 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.823740003 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.824497184 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.823988469 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.824379711 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.824873295 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.824666515 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.823792722 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.824095316 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.82429392 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.826364919 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.825519769 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.824812933 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.824066891 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.823815719 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.823759149 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.82313231 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.824745586 seconds)
  done (took 52.823926139 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.822550699 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.823155144 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.823534755 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.823663388 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.823943777 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.823927049 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.823344726 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.823270563 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.823053416 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.824227027 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.824295539 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.822830192 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.823905455 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.823767703 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.824398204 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.824187245 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.824473803 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.82482882 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.824711249 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.825187911 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.824654314 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.825283945 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.824846222 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.824456365 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.823829552 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.825739248 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.825052206 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.826287749 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.82544741 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.826075524 seconds)
  done (took 56.484951843 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.847115039 seconds)
    (2/2) benchmarking "in"...
    done (took 1.847544839 seconds)
  done (took 5.451281067 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.825503706 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.826959383 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.825928325 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.825755771 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.825687148 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.826335159 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.825598833 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.825226473 seconds)
  done (took 16.363501573 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.825418692 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.830648252 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.826167611 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.826424366 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.827185542 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.834766064 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.827762356 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.828507317 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.827575217 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.826423612 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.83076666 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.829761071 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.83393799 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.831710078 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.827588313 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.827032036 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.828566651 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.830448661 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.82822856 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.827287951 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.831280681 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.828051381 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.827065825 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.826885004 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.826553867 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.83067668 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.837822022 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.829474415 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.828803453 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.827418418 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.835803225 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.828629922 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.828045712 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.829778667 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.826521791 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.828809177 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.835719452 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.829463474 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.828365379 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.827871704 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.831211801 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.830747772 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.832960305 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.837061629 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.828903743 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.829006456 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.828156478 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.828979808 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.830466596 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.83341 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.836726304 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.830170406 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.829354947 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.829416568 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.832157438 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.828707456 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.829637103 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.831927965 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.837329722 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.837634718 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.833521166 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.850757268 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.838588791 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.829757502 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.829966211 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.839421102 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.853709916 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.831928148 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.831957134 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.830125402 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.839528552 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.830319946 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.830103065 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.829762324 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.843316618 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.838237686 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.829808298 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.830166554 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.829986083 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.830558377 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.831659391 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.830122717 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.831261003 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.830619165 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.840932824 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.85644002 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.831847108 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.829706328 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.833675348 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.832617218 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.835623806 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.834498051 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.830564812 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.831302105 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.833809413 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.83400551 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.83180114 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.831418372 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.831297038 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.840900147 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.832816018 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.832003459 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.836061559 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.839851909 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.8333767 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.832616114 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.833457306 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.832196343 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.841059181 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.832551941 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.831751713 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.832044603 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.833416507 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.837368063 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.830992548 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.837019307 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.84081696 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.841230085 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.833957876 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.836931478 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.836656702 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.835257608 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.842602846 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.856339168 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.833907435 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.837791477 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.838205611 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.843837952 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.837483442 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.833512417 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.836096616 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.833920968 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.832924297 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.834788509 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.833330977 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.834593231 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.833709537 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.833681756 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.83312879 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.833426156 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.836833251 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.836034004 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.837745641 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.835012008 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.838391611 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.834149078 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.83790018 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.843293202 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.834829574 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.83521033 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.834616383 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.836046029 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.835539205 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.836771508 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.835370191 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.835157122 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.834723393 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.835848373 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.83843603 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.835997338 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.835519718 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.836913162 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.839939939 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.83471257 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.835724806 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.836088738 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.836444224 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.836290231 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.8377421 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.836770758 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.838699722 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.83634748 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.841790009 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.835752496 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.83578246 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.835895262 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.83629235 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.836308436 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.840231716 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.847909961 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.840924155 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.845535619 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.835751937 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.844919541 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.836866405 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.837971982 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.83749435 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.836954521 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.836076069 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.837479923 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.838380633 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.84043648 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.858365806 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.847887277 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.839632292 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.838761684 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.842259813 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.842011606 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.843917492 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.837526527 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.839308607 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.839973307 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.837856586 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.837499071 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.837448402 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.84253084 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.837617108 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.836900048 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.84203729 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.839421516 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.838407718 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.84008658 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.839258999 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.840976052 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.837803391 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.837610262 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.839633216 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.837668323 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.846706582 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.841751978 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.839401787 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.839864524 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.841889808 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.83968355 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.838833099 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.840232492 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.843377583 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.838407166 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.841297133 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.847922271 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.839895201 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.839076035 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.839197392 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.839790548 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.841608611 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.839551282 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.842968914 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.846701987 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.843095241 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.840061639 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.846208809 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.839517832 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.841014185 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.839902683 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.840836793 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.839676538 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.841076883 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.840638733 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.840180581 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.848768891 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.840069669 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.840903103 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.840076501 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.843341493 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.840108681 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.842877627 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.840505225 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.844048227 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.84948365 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.846709334 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.842637185 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.844346032 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.842711335 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.842491714 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.845220084 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.841542815 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.854049052 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.851488311 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.842115221 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.841484944 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.841033571 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.844540074 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.841948749 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.842017831 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.850485226 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.843498445 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.842331202 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.844383439 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.842678736 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.84194894 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.850012336 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.84464229 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.845720894 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.843793474 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.844110136 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.844274587 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.840480904 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.845203946 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.842710494 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.844111785 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.846890438 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.842169257 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.843852442 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.842155225 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.852164209 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.842950417 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.84390328 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.850650852 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.845388009 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.842517203 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.844771648 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.843462817 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.844712089 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.844620557 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.842769524 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.845115504 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.843248558 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.846895898 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.855028444 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.847682743 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.851134098 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.846286977 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.855918252 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.844183466 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.842974737 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.842813562 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.848295808 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.85124543 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.84474898 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.843802008 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.853004342 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.847564939 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.845823382 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.848843552 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.844071195 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.845718635 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.845126695 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.845487574 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.850523358 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.848598421 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.845319545 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.844493514 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.846235588 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.845379951 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.848080745 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.847022308 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.846814505 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.845357395 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.844697817 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.845089391 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.844517509 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.845926125 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.845341993 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.845414987 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.845178919 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.854735498 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.845461724 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.845973795 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.84985806 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.845948099 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.855451322 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.846215348 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.845926773 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.846890704 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.84491638 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.848941119 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.846014086 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.846742824 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.845956064 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.845151982 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.847471222 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.857600161 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.853904797 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.849948461 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.848507645 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.845570391 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.847942733 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.856574558 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.87020128 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.846362802 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.84930168 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.852068903 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.855028693 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.85046279 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.852719287 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.851581723 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.856002852 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.848893724 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.847584738 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.850927264 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.860345347 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.847130043 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.847160693 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.847121168 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.852726707 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.849640345 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.846263148 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.849462623 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.850845467 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.850358184 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.8601097 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.847852583 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.850076187 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.847267501 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.847531534 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.84725239 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.848228256 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.850206148 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.849240044 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.848102987 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.848364835 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.851012459 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.854488207 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.84758751 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.852290792 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.858276294 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.848752623 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.84810502 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.850842783 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.848999948 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.851426503 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.849217517 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.848237353 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.851338736 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.848116248 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.850664116 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.853370133 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.858210217 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.852121747 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.849324191 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.849441781 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.853920214 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.84976778 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.850251204 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.852385379 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.858835258 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.854425877 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.862050382 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.859758421 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.850530684 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.851249821 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.858495733 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.858494288 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.850737581 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.849931684 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.850097692 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.853868518 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.852539704 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.852746081 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.850772321 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.852142072 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.856479347 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.850710455 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.852933847 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.851551691 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.85125009 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.853896028 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.853115834 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.856013381 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.851214264 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.850841505 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.850307216 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.852141002 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.852436045 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.853914707 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.852783024 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.850333096 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.854037957 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.852759512 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.855541181 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.851252828 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.852560072 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.853041649 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.851803772 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.851315513 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.85173743 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.851513088 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.852366291 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.85534581 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.860367285 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.851773825 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.854341037 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.852670524 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.856364459 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.852593962 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.853164106 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.853149448 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.852388974 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.861317461 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.853884772 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.85279917 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.853963999 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.852393883 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.859770624 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.855499315 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.85788421 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.852536796 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.852878129 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.854036768 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.857049429 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.862258419 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.858973962 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.857980209 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.861840653 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.858737205 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.855849493 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.853931431 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.853579578 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.853693918 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.854760185 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.857773719 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.855726216 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.856715002 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.854748417 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.856006633 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.854357783 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.856049223 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.854212058 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.85425109 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.85848173 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.863348084 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.863844555 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.854864543 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.855498677 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.852623574 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.858591458 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.865428015 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.854534241 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.85508518 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.855925647 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.856695945 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.856312769 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.86258773 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.863512244 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.85977437 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.856067907 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.860971865 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.873151376 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.857953943 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.865194975 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.887937387 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.85715156 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.85564206 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.856765082 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.85702562 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.855942279 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.858845823 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.856536483 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.863363927 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.856777157 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.856183922 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.864687224 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.856680977 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.856592581 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.857379743 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.857923233 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.862883868 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.857818779 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.865288003 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.857919661 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.856940521 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.857062173 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.860437318 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.856355718 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.857112147 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.856489608 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.859698751 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.856129493 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.857540402 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.866758503 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.857782473 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.85906094 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.870404537 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.869553868 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.858433687 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.857341577 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.857904927 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.863121563 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.860769575 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.857111927 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.861718603 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.866051318 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.861677082 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.866533847 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.859418472 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.858808585 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.859059771 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.858253024 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.858191704 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.870581151 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.86955462 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.859927263 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.858494706 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.864630206 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.858937934 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.866799624 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.865846209 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.859300253 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.86096864 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.858697838 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.85945685 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.859124199 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.859485001 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.863991877 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.8678985 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.860301864 seconds)
  done (took 1101.680597227 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.859361089 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.859321042 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.859651383 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.860729425 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.859701617 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.860001328 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.859208947 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.860449954 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.860082793 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.860743684 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.859755069 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.859270057 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.859700803 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.859847389 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.857983654 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.859603396 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.859658034 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.860024693 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.861646329 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.859036227 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.858820235 seconds)
  done (took 40.845576458 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.858233697 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.858513938 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.859010525 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.857010642 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.85701609 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.857024427 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.857960723 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.859655549 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.856210622 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.857349931 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.856345856 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.856671169 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.856920647 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.857162486 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.857180565 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.857509292 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.857415733 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.857015472 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.857955224 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.8574214 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.858549678 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.85772997 seconds)
  done (took 42.655707055 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.860299269 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.856755071 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.856233117 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.856916335 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.856529848 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.857501569 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.857446338 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.857279804 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.855253413 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.855709446 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.862813403 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.864360661 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.854737016 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.857516866 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.854785547 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.853942962 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.001471026 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.852151506 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.851785088 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.851055005 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.851207139 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.858699037 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.85161124 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.846207057 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.847181737 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.846739175 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.846613529 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.847032628 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.847159999 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.849602413 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.851464199 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.847165055 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.848005148 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.850399656 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.84570202 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.846763831 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.850285956 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.846214905 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.848051572 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.844972523 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.854774235 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.86810775 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.843763742 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.844522323 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.853386155 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.843652752 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.844338773 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.848663898 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.851576355 seconds)
  done (took 92.687879797 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.844360346 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.844669814 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.844570821 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.845449974 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.844693783 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.845422119 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.845716591 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.845583804 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.844866177 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.846002222 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.845564083 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.845725249 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.844766325 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.848100004 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.845632914 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.845672593 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.845165663 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.844996643 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.844906483 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.845025736 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.845602119 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.845276603 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.845147532 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.843795156 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.843116366 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.842943765 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.844066825 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.843812686 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.843926048 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.843968591 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.843052882 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.843736633 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.844940462 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.842275202 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.84303396 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.843509599 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.843784755 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.844071174 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.844182178 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.843856857 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.843647354 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.84409119 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.842592931 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.84415157 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.844554532 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.844173522 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.844040735 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.844551099 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.84468872 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.844788221 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.844224857 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.843707959 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.843041352 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.84416754 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.845032749 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.845016588 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.845011801 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.844346286 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.844404948 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.844608745 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.844452378 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.844419122 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.844843755 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.845309217 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.845166105 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.845334042 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.845806818 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.845366563 seconds)
  done (took 127.208304847 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.846349255 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.844622033 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.846412935 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.846318926 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.846190046 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.845381203 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.846050793 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.845081753 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.845981342 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.844692072 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.844767046 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.846117083 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.845919457 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.844917426 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.845399943 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.844944293 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.846567306 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.846208518 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.84534251 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.845542435 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.84472702 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.846148593 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.846037495 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.84592958 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.846628304 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.846487725 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.845644176 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.846476104 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.84692086 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.846950928 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.846378791 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.846920045 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.846166483 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.847501998 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.846557683 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.845941713 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.845711194 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.845927731 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.846951474 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.845758427 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.845860875 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.845658858 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.846216052 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.84676335 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.847359114 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.845555487 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.846072682 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.84619375 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.846213488 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.847436604 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.843889434 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.84528203 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.844565235 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.844258781 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.844101196 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.843257871 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.842776012 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.842455648 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.842240716 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.842202367 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.842304883 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.840800168 seconds)
  done (took 116.197880916 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.840225738 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.840800464 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.841401007 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.840198675 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.840751472 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.839508781 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.840269404 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.841546176 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.841366535 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.838758819 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839562586 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.839820174 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.841563739 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840675099 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.839528385 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.839389349 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.838805758 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.838885541 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.838642701 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.839918708 seconds)
  done (took 38.575572173 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.837429516 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.838330717 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.838795069 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.839385607 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.83840907 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.838189156 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.83797268 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838761057 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.837543609 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840202294 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.838134699 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.837628402 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.837546018 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.83877054 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.838098764 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.836792489 seconds)
  done (took 31.182077045 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.837008174 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.838613325 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.837650916 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.838190133 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.838098248 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.837911425 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.838762165 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.838636066 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.838390011 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.837432006 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.83789309 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.837890497 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.837787456 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.838794861 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.839477917 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.838272075 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.838274102 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.837863759 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.838801353 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.837768682 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.838991854 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.837203235 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.837879507 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.837842837 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.840735611 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.837431523 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.837457633 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.837905217 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.83668672 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.837245737 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.837946684 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.838335017 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.837559081 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.83711623 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.83781156 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.838750639 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.837288643 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.837651034 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.836654408 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.837461088 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.837101761 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.837653755 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.836217673 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.837151174 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.837217995 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.837500206 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.837195598 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.837546293 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.837042789 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.836637297 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.836827903 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.836703996 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.837443576 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.837763767 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.837896954 seconds)
  done (took 102.848284459 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.838101506 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.838102705 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.837092593 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.836732643 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.836571207 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.836458532 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.837561256 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.836516428 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.837072035 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.837068717 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.836264214 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.836985011 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.837875199 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.837468385 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.83641806 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.837121964 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.837656225 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.835474878 seconds)
  done (took 34.834744744 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.837181318 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.835995697 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.836889172 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.836677655 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.83702445 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.837204465 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.83698682 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.836180858 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83694147 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.838527932 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836668363 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.836291569 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.837181813 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.837324197 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.836731236 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.837799885 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.837001331 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.836316357 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.837506839 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.836771128 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.836881015 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.836556749 seconds)
  done (took 42.181423823 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.838651415 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.836541105 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.851692771 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.856793167 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.854702779 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.867455567 seconds)
  done (took 12.872961106 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837175287 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839020645 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.836663816 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836342169 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836615296 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836334523 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836303488 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836911302 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837409791 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837549645 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837260421 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836833727 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838015036 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837187319 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83696603 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837231933 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836898456 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836269514 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83895269 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836530491 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837832997 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836988678 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837245199 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838545225 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836781651 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835875233 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837227848 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836735562 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837919056 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836292886 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836969583 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836367731 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836624951 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836479383 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838277742 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836304636 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836021908 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837364264 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837827866 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837349234 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.836707342 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835730795 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836968683 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835445321 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836860868 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838390302 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835851908 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836551881 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836837703 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835723361 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838157693 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835894306 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836239684 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836154079 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836717896 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835966646 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837829854 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837549862 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835764471 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837063825 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837504651 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837418297 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837061652 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837562901 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837432723 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837390435 seconds)
  done (took 123.009722564 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838778408 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.836792319 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837846749 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837030177 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837680431 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838362837 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837352191 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836679031 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837195928 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836766538 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835972415 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839868982 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838084148 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837652118 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837558676 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837788759 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837161512 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837421823 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837448263 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838290412 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838582436 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838612132 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837735119 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837925827 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83838616 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837270357 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837249818 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839413979 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838055961 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839092092 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838906176 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837526965 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839707389 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.838366703 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837982309 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837272856 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838550838 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839575925 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839746665 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839384059 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838352282 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838278584 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840054001 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839078619 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838794055 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838706138 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838761796 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838563254 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838089248 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839801487 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838801728 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839802722 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839435454 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839626377 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840419859 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839897404 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839478756 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839735103 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840123023 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840723991 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839355564 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841953689 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840487074 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840685727 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840795993 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841355356 seconds)
  done (took 123.12217991 seconds)
done (took 2552.937407562 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.86452483 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.845034973 seconds)
  done (took 15.479312607 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.005590031 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.958470796 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.843009118 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.862499966 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.843466835 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.872196234 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.85096555 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.843371569 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.844096133 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.843639203 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.84276893 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.02819771 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.89844184 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.8426766 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.844158107 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.936526164 seconds)
  done (took 51.934867798 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.849188408 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.848826333 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.859770083 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.849391097 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.849117777 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.861230856 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.87762747 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.85313725 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.883627705 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.862162368 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.917773052 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.858503804 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.850176253 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.900672162 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.863002428 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.866106975 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.943234897 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.925298677 seconds)
  done (took 35.491416436 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.926766879 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.851786435 seconds)
  done (took 10.557210706 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.854868337 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.856524422 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.854650135 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.84506032 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.85244424 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.876401697 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.851704448 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.851831389 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.855563129 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.85086676 seconds)
  done (took 70.325029272 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.852436549 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.849664666 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.850122058 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.846386908 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.843209526 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.847504299 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.847571514 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.845363339 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.538010616 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.886305648 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.854846451 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.855178945 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.847065088 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.848760498 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.842777485 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.873359271 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.978627463 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.843163034 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.843638314 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.854239593 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.847012812 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.900126808 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.859632647 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.847249804 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.881948081 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.53263003 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.860599012 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.852614354 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.958576395 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.84429099 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.848481126 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.033477141 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.852227202 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.321202465 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.162007795 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.85157284 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.859784003 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.855542023 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.84406344 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.969393531 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.849554371 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.853053535 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.749760823 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.137256044 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.950909152 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.893844543 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.180947466 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.850983078 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.847918234 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.882854157 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.850038898 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.848697216 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.865587069 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.361243482 seconds)
  done (took 131.729564335 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.845938166 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.199165265 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.01033213 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.846880491 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.129473728 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.049155276 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.847255696 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.890621609 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.846574524 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.075463906 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.098659104 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.947971066 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.847096837 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.847517292 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.846661588 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.843426716 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.98175548 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.91470392 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.848481257 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.845963315 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.874185494 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.084240889 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.965930054 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.847497488 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.872364819 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.052400837 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.965711836 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.94831302 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.614272697 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.845597593 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.906434334 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.848615547 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.847397317 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.846629091 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.999393202 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.938421873 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.928516978 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.848542744 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.846900752 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.845610039 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.502641198 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.044737055 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.940863865 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.964621482 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.097678093 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.051983167 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.623260008 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.8460147 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.581160078 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.008183541 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.072160656 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.077696848 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.964808653 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.850389687 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.096391003 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.846564879 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.845757742 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.092634726 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.066296338 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.943803353 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.849215552 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.847856956 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.847829345 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.082938235 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.850609974 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.941794877 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.850132734 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.847593709 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.942740999 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.944577882 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.076584661 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.059024741 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.877068537 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.18266111 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.35777782 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.092946078 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.911528636 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.09438693 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.850054501 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.847804425 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.924728201 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.680184789 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.099937102 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.087516694 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.092366345 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.882068071 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.565367283 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.848128163 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.072572837 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.068414949 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.098685305 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.096867298 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.088775884 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.17612299 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.850637353 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.848998768 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.083126526 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.962010813 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.855897957 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.194919855 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078889728 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.394132845 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.875448837 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.151660117 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.976458505 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.854137505 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.478169676 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.851439457 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.070593536 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.887643039 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.851081444 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.850613726 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.06606056 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.83275074 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.850921632 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.809273795 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.909755719 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.854154834 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.079928254 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.852598432 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.111121824 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.85414106 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.0783521 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.902085511 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.880516957 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.022069045 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.095743882 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.854716293 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.093235489 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.087136623 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.962978118 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.121134292 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.727632321 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.853233121 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.134439484 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.852434754 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.852501318 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.018509265 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.852651233 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.993013793 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.856301656 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.131691229 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.871833298 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.087924584 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.857254439 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.107113176 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.884180591 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.899609756 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.855691395 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.976114251 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.852599103 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.684150541 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.00710804 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.856606094 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.851794637 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.405964844 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.852389473 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.999915099 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.07465517 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872413024 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.921487073 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.513547267 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.852776466 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.929622226 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.874757955 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.237033082 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.854609035 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.102748323 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.855815579 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.852964089 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.851718823 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.085345442 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.085963316 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.856169101 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.853004516 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.747249349 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.853791207 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.853506601 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.032991188 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.159502942 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.853031442 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.053746995 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.855022584 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.978969264 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.855519748 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.916421076 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.182694856 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.852374942 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.854327299 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.853968551 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.854181741 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.856123359 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.059145594 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.878545886 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.369127159 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.988332608 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.118216402 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.162015687 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.091487548 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.895712921 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.857591752 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.105920263 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.856913809 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.915305476 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.85637761 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.873732752 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.08201568 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.859342525 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.062226747 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.124845977 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.696383813 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.900877278 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.858066671 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.856240423 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.854930117 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.998710681 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.939192131 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.859380312 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.857106249 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.969857211 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.975134253 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.062635207 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.856793515 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.963781237 seconds)
  done (took 898.983299432 seconds)
done (took 1216.274355881 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.855645619 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.858480528 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.858745066 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.857324707 seconds)
  done (took 29.21770728 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.857542998 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.857702302 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.858561713 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.856782974 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.85880007 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.8581268 seconds)
  done (took 12.933052671 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.874789705 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.859549547 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.857768355 seconds)
  done (took 21.379714528 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.933258686 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.266915138 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.005470552 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.28515522 seconds)
  done (took 10.278789145 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.859364422 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.858848768 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.859093413 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.860034629 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.85974846 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.860137475 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.858694449 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.859596044 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.860614123 seconds)
  done (took 18.524562726 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.950515452 seconds)
done (took 98.07312825 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.549093275 seconds)
    (2/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.344389951 seconds)
    (3/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.955800071 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.922675238 seconds)
    (5/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.09911407 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.957163034 seconds)
    (7/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.327169997 seconds)
    (8/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.941668274 seconds)
    (9/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.262971513 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.858960961 seconds)
    (11/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 1.989337322 seconds)
    (12/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.152039619 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.878342558 seconds)
    (14/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.147592683 seconds)
    (15/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.941566491 seconds)
    (16/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.705986323 seconds)
    (17/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.859976652 seconds)
    (18/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.421204597 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.099532152 seconds)
    (20/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.857883904 seconds)
    (21/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.015686619 seconds)
    (22/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.886947987 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 1.984191492 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.880241787 seconds)
    (25/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.631717792 seconds)
    (26/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.937939233 seconds)
    (27/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.173510568 seconds)
    (28/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.2533377 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.784218986 seconds)
    (30/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.658681906 seconds)
    (31/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.183935118 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.947492819 seconds)
    (33/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.277968908 seconds)
    (34/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.174006146 seconds)
    (35/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.625619816 seconds)
    (36/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.938668297 seconds)
    (37/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.709473235 seconds)
    (38/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.940684577 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.093728829 seconds)
    (40/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.859035711 seconds)
    (41/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.041788519 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.189365269 seconds)
    (43/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.175651644 seconds)
    (44/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.176512661 seconds)
    (45/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.236966367 seconds)
    (46/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.156576384 seconds)
    (47/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.286674118 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 2.075809147 seconds)
    (49/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.042083664 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.86430229 seconds)
    (51/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.07196053 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 5.52850537 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.152040979 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.114392625 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.981977866 seconds)
    (56/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.324274093 seconds)
    (57/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.016883214 seconds)
    (58/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.879852577 seconds)
    (59/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.935456697 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.510211946 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.625874118 seconds)
    (62/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.978076754 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.953907181 seconds)
    (64/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.226115763 seconds)
    (65/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.510770892 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.092245742 seconds)
    (67/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.641495228 seconds)
    (68/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.189346433 seconds)
    (69/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.862793704 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.191699566 seconds)
    (71/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.960309437 seconds)
    (72/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.018557159 seconds)
    (73/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.947644138 seconds)
    (74/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.884947383 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.860697656 seconds)
    (76/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 9.161982615 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.263073713 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.72190946 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.879507771 seconds)
    (80/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.954987001 seconds)
    (81/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.004934225 seconds)
    (82/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.55892338 seconds)
    (83/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.016723864 seconds)
    (84/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.54616115 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.155425199 seconds)
    (86/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.869443259 seconds)
    (87/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.861791771 seconds)
    (88/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.301302983 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.863531581 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.862891457 seconds)
    (91/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.498650948 seconds)
    (92/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.882630457 seconds)
    (93/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.936540188 seconds)
    (94/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.86675221 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.95209127 seconds)
    (96/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.944330595 seconds)
    (97/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.878756489 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.120488596 seconds)
    (99/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.865119589 seconds)
    (100/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.053000007 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.029736957 seconds)
    (102/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.623518964 seconds)
    (103/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.012637552 seconds)
    (104/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.873575812 seconds)
    (105/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.314576606 seconds)
    (106/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.670946323 seconds)
    (107/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.485118751 seconds)
    (108/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.101790213 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.893832663 seconds)
    (110/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.513051815 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.27711672 seconds)
    (112/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.885277503 seconds)
    (113/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.885352248 seconds)
    (114/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.958445171 seconds)
    (115/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.112244624 seconds)
    (116/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.00741046 seconds)
    (117/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.868331962 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.219757495 seconds)
    (119/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.866119563 seconds)
    (120/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.04914509 seconds)
    (121/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.868427115 seconds)
    (122/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.269150953 seconds)
    (123/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.820414934 seconds)
    (124/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.072043644 seconds)
    (125/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.946479921 seconds)
    (126/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.553377216 seconds)
    (127/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.89444239 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.182690547 seconds)
    (129/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.027578909 seconds)
    (130/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.887335384 seconds)
    (131/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.117956719 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.120075518 seconds)
    (133/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.976917824 seconds)
    (134/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.398089487 seconds)
    (135/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.472685715 seconds)
    (136/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.333037177 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 1.995793393 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.11405408 seconds)
    (139/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.406005658 seconds)
    (140/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.979590075 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.876479182 seconds)
    (142/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.869947828 seconds)
    (143/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.889580732 seconds)
    (144/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.965320645 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.829496718 seconds)
    (146/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.867967786 seconds)
    (147/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.951806911 seconds)
    (148/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.96124543 seconds)
    (149/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.164374339 seconds)
    (150/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.886618637 seconds)
    (151/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.331518494 seconds)
    (152/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.868834199 seconds)
    (153/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 3.74805665 seconds)
    (154/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.049812123 seconds)
    (155/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.886793966 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.261682054 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.259382661 seconds)
    (158/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.965179379 seconds)
    (159/309) benchmarking ("sort", Float32, false)...
    done (took 5.538715095 seconds)
    (160/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.509090187 seconds)
    (161/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.350892791 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.866887155 seconds)
    (163/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.131778439 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.86708853 seconds)
    (165/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 3.935097967 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.869209883 seconds)
    (167/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.362339649 seconds)
    (168/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.524333622 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.034763555 seconds)
    (170/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.092793542 seconds)
    (171/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.098705218 seconds)
    (172/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.929752625 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.18381614 seconds)
    (174/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.055000874 seconds)
    (175/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.065394884 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.991911778 seconds)
    (177/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.965426025 seconds)
    (178/309) benchmarking ("sort", BigInt, false)...
    done (took 6.873181593 seconds)
    (179/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.08410662 seconds)
    (180/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.326169133 seconds)
    (181/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.022833698 seconds)
    (182/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.076151223 seconds)
    (183/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.964697579 seconds)
    (184/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.11689369 seconds)
    (185/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.182962804 seconds)
    (186/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.940166405 seconds)
    (187/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.877302292 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.86619906 seconds)
    (189/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 8.7360778 seconds)
    (190/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.007991639 seconds)
    (191/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.948891324 seconds)
    (192/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.118113078 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.011192356 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.999294003 seconds)
    (195/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 1.999943088 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.75476294 seconds)
    (197/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.147914569 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.940227749 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.208090596 seconds)
    (200/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.873396134 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.88973237 seconds)
    (202/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.335265149 seconds)
    (203/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.896119666 seconds)
    (204/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.176007364 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.19221111 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.102955086 seconds)
    (207/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.029203376 seconds)
    (208/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.877953636 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.586555247 seconds)
    (210/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.175546943 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.190386798 seconds)
    (212/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.874047046 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.871840037 seconds)
    (214/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.97680175 seconds)
    (215/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.973639423 seconds)
    (216/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.870769878 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.012467642 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.797554162 seconds)
    (219/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.02264701 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.877656943 seconds)
    (221/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.962071054 seconds)
    (222/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.120748747 seconds)
    (223/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.208631597 seconds)
    (224/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.343931166 seconds)
    (225/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.111360781 seconds)
    (226/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.872448526 seconds)
    (227/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 3.96521719 seconds)
    (228/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.897371649 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.216611456 seconds)
    (230/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.897789415 seconds)
    (231/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.175066635 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.932315478 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.470459211 seconds)
    (234/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.077104844 seconds)
    (235/309) benchmarking ("sort", Int8, false)...
    done (took 4.824814769 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.211419922 seconds)
    (237/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.900277903 seconds)
    (238/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.873637619 seconds)
    (239/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.34585053 seconds)
    (240/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.952679062 seconds)
    (241/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.879525817 seconds)
    (242/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.952956671 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.873586479 seconds)
    (244/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.937801817 seconds)
    (245/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.008381717 seconds)
    (246/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.054959704 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.283060658 seconds)
    (248/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.876620496 seconds)
    (249/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 3.62898744 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.190073765 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.917595007 seconds)
    (252/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.073382138 seconds)
    (253/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.621676085 seconds)
    (254/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.501501817 seconds)
    (255/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.979803295 seconds)
    (256/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.876959389 seconds)
    (257/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.877882383 seconds)
    (258/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.895416334 seconds)
    (259/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.136508382 seconds)
    (260/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.889161196 seconds)
    (261/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.98261391 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.617312612 seconds)
    (263/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.01661877 seconds)
    (264/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.897443734 seconds)
    (265/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.61185383 seconds)
    (266/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.986849021 seconds)
    (267/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.968427173 seconds)
    (268/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.028404032 seconds)
    (269/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.15915966 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.467116987 seconds)
    (271/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.902043631 seconds)
    (272/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.266689534 seconds)
    (273/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.067351977 seconds)
    (274/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.98729496 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.896914804 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.877617087 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.061699305 seconds)
    (278/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.05320208 seconds)
    (279/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.94940113 seconds)
    (280/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.655685919 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.878781506 seconds)
    (282/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.964375792 seconds)
    (283/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.877284119 seconds)
    (284/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.20408216 seconds)
    (285/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.129704969 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.979782898 seconds)
    (287/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.888130212 seconds)
    (288/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.005849294 seconds)
    (289/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.361700718 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.984191133 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.749992727 seconds)
    (292/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.882526331 seconds)
    (293/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.36586933 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.731419101 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.39042098 seconds)
    (296/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.089602043 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.204083024 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.803641511 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.741698312 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.990818271 seconds)
    (301/309) benchmarking ("sort", Float64, false)...
    done (took 5.579328887 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.276099677 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.911808022 seconds)
    (304/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.877065243 seconds)
    (305/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 4.030966675 seconds)
    (306/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.219909081 seconds)
    (307/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.961617166 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.08823923 seconds)
    (309/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.991692058 seconds)
  done (took 1010.182670063 seconds)
done (took 1012.047901776 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.918802019 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.900176076 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.893897855 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.915875854 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.007497099 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.929018899 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.908904231 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.899715228 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.94468896 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.944445272 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.894434462 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.923531066 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.895796396 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.894393063 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.896037675 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.900316247 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.193581507 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.922148054 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.913501791 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.907371183 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.912649743 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.893604139 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.945212034 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.924939017 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.899673332 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.900680087 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.900175277 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.915065867 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.008055739 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.89946659 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.900764031 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.911073398 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.193942348 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.918928877 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.894238367 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.915370583 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.907370437 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.908489105 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.900806803 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.928223178 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.328286587 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.901131145 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.897719012 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.897212667 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.895867401 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.904168795 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.89936086 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.905307943 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.900445077 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.901149074 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.326760726 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.917799923 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.89905952 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.896847285 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.909989758 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.897536614 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.900964006 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.902615853 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.916021249 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.902498147 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.183745017 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.930046406 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.901528325 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.915942848 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.90640562 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.361321963 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.90110815 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.905158712 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.331292872 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.909449072 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.36211404 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.911881552 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.901938887 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.914151973 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.931017505 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.197710873 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.920526174 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.898021281 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.907649358 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.897129434 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.909904786 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.901963134 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.904303424 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.8992848 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.903546204 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.93112451 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.912840337 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.90020524 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.913520927 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.918861009 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.908669964 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.910621284 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.903874809 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.898305468 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.914610594 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.904135612 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.903060618 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.902736713 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.904782909 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.913173046 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.330371101 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.90942251 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.896790829 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.898301956 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.900858506 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.914801716 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.32832186 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.904643525 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.923561858 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.950793559 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.902282898 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.186306015 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.928398539 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.907518613 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.910852674 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.902415195 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.89866211 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.186473238 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.355767498 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.920773454 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.899224768 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.897998865 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.905121829 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.903485079 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.897556987 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.198629937 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.92898023 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.905036577 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.024099896 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.915243292 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.934718763 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.89984537 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.90477955 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.93678045 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.907066003 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.934614979 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.905491168 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.907390869 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.920132729 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.900347317 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.915336058 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.915466701 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.901681096 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.908852326 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.900425906 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.936508187 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.905961038 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.90601779 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.924494845 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.0251877 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.899182676 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.188984396 seconds)
done (took 298.1626125 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.970037298 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.888294932 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.009517072 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.888513506 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.977520416 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.9595496 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.88820535 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.887942118 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.889473101 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.383706941 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.889005897 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.893852674 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.888094791 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.887821252 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.960059856 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.888784635 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.887563737 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.327987362 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.890636908 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.969343106 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.888924266 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.888967271 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.889539023 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.390724933 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.887934959 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.891645221 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.969135513 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.890731102 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.337660592 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.88940953 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.892540254 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.336680923 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.967901947 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.918720895 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.897772808 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.894292282 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.976700853 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.90035906 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.956127889 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.958698449 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.006031314 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.922116323 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.890429499 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.890647271 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.891479659 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.890896551 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.890838036 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.922368751 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.889481591 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.899110355 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.331082391 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.896553 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.899081308 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.892257967 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.890774828 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.919665152 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.892445592 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.893402571 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.972888659 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.892307819 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.961064625 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.393189106 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.384794594 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.892371774 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.892001564 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.892601744 seconds)
  done (took 186.658359303 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.957669509 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.964817474 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.957708728 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.895845248 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.941261632 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.95825749 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.895841116 seconds)
  done (took 15.391697305 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.898824974 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.892485379 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.942464382 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.942124619 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.892499447 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.06981954 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.904396792 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.898042569 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.918656193 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.894626274 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.541300667 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.942326326 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.900038652 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.892482238 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.904612703 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.948065498 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.895751354 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.894923368 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.002452388 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.042055353 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.898316984 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.900293481 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.920552536 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.905535673 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.89401455 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.894332885 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.895026597 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.902277647 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.894245825 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.89381997 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.894274129 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.946488186 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.893508558 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.89312765 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.894284683 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.896807852 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.894910941 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.894809488 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.895104995 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.894103639 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.894115756 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.896697024 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.894763323 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.89762472 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.894436549 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.91731371 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.893494896 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.893597028 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.896224269 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.893974229 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.919933743 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.893803471 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.894552063 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.899403577 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.937269826 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.902506857 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.895551164 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.894137553 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.895206629 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.895076129 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.893703327 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.043037515 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.943395205 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.894786596 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.944560351 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.046730065 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.894650355 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.89528911 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.895047674 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.984138897 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.89538204 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.944355625 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.895697091 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.0084399 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.894550098 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.080688062 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.918487041 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.899649699 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.900449356 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.896419061 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.90432819 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.896510559 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.899685917 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.904230177 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.902360518 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.896127017 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.89695252 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.898406851 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.904452971 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.897142454 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.948095594 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.895296061 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.896499478 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.03101576 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.895752447 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.006970623 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.924361402 seconds)
  done (took 208.405441964 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.905493882 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.905374587 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.899662464 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.91345036 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.8982823 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.898601961 seconds)
  done (took 13.245655867 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.898090888 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.899697239 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.896416688 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.898321185 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.896444736 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.89755271 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.897821908 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.89827264 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.899808941 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.896697425 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.898421925 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.898586468 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.898936454 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.89654639 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.897204794 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.897054357 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.896604195 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.896704932 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.898450627 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.900402333 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.10390674 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.898314329 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.899114255 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.902782157 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.90284984 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.898015289 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.910889171 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.898743066 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.899290733 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.905336955 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.903675884 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.899586356 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.901888146 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.904094337 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.90182175 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.903705231 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.901235845 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.900285833 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.897938342 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.899981111 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.900174498 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.900238218 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.899442387 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.899798936 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.901067354 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.904589228 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.903456406 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.912759059 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.900081321 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.900496544 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.901498119 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.898900435 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.900524199 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.900516492 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.904102497 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.905272719 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.903873848 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.899454141 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.900372329 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.904293324 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.903182453 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.900091424 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.902202225 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.903302095 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.907598568 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.901390983 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.904304771 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.903071801 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.901150567 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.899907259 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.902309118 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.901085271 seconds)
  done (took 139.889836364 seconds)
done (took 565.421500748 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.956132457 seconds)
  done (took 8.785476506 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.038763566 seconds)
  done (took 8.964504317 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.422494429 seconds)
  done (took 10.252297515 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.952174424 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.90239446 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.910106702 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.899830618 seconds)
  done (took 29.501195265 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.214963985 seconds)
  done (took 9.042946089 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.910641872 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.901362258 seconds)
  done (took 15.716865024 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.951515917 seconds)
  done (took 8.779524547 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.12213139 seconds)
  done (took 8.962113902 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.903006833 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.926108782 seconds)
  done (took 15.680016997 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.903163855 seconds)
  done (took 8.734302134 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.41648379 seconds)
  done (took 10.333574231 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.919715421 seconds)
  done (took 8.793749072 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.933700942 seconds)
  done (took 8.762858846 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.087645475 seconds)
  done (took 9.916473833 seconds)
done (took 164.05711526 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.905115384 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.903342547 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.903725057 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.901381227 seconds)
  done (took 29.443877952 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.939882883 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.938011129 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.947800203 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.937308039 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.929381697 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.927760568 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.937952035 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.937474443 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.927656351 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.936505474 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.938077293 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.935382856 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.937318743 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.945540131 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.947913499 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.936476733 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.938006506 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.939263082 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.929111314 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.946481463 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.934647979 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.93635059 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.903597094 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.903025113 seconds)
  done (took 48.261606316 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.089256598 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.969317099 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.057778998 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.94898336 seconds)
  done (took 9.896363093 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.903599644 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.966336558 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.95501699 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.951397695 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.955010223 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.005500295 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.955926731 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.051645078 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.031383083 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.033602113 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.911869119 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.925406495 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.927065632 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.950199945 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.007227251 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.903543626 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.903921466 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.019814873 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.966010266 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.081035178 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.903597347 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.958637254 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.955200504 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.957814047 seconds)
  done (took 49.012950804 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.908366709 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.913179632 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.913231233 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.906288688 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.906228507 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.905074418 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.912470833 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.90763033 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.927341177 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.908404553 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.905140582 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.906810597 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.91272411 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.906927981 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.906411692 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.91923051 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.920741983 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.906890721 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.91085971 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.913616379 seconds)
  done (took 40.051114972 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.904347443 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.750751577 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.249949558 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.15751351 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.903776522 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.907579241 seconds)
  done (took 31.707789158 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.917776247 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.910727334 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.905881887 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.960244942 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.040581782 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.913248364 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.90714197 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.916478226 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.94843106 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.968353932 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.92288019 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.93190829 seconds)
  done (took 25.077726534 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.906593098 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.907980916 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.908401141 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.918443837 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.9165591 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.913612425 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.915562411 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.904654428 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.92021052 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.922261897 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.914369914 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.917320242 seconds)
  done (took 44.802198363 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.61120239 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980301305 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.905491344 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.781496282 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.363987718 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.460378319 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.800481795 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.677209748 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.373345231 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.832351453 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.109335498 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.906633793 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.989988991 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.908827106 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178100919 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.29583928 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098043569 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.148331554 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.235620255 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.938963714 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.110290448 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132550179 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.199681829 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908124923 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910194592 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.055281457 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.226979393 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.710527246 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.94099996 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 4.866005612 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.148063717 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.855571178 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965885636 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.910102362 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.920456415 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90973719 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913301203 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178765475 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.909563468 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190447694 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982724109 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150232095 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913410175 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.32603508 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.612323327 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.227222349 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.02153594 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.908939568 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911512797 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90943199 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.836221177 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99085835 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.910446763 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914021164 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.608343175 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.908573965 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982333482 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.909641487 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113076726 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.718642245 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.596105788 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.911020519 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912119539 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.465436828 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.020044835 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.017992769 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.635372384 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.280127876 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.326209718 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.008193667 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.911514647 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.910534594 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.86719383 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.873508564 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.633595785 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949341748 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.046868968 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.927298853 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.550506104 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.212657143 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.36057461 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.467246509 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.829448641 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189966591 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.281322692 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.893554145 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123714069 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.777282889 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.837654068 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130651594 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946679148 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914821838 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.172950504 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.684210268 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.020340539 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.9230436 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344534142 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923604888 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.915630453 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912733938 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.124446893 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.875437465 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940832074 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.029563856 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928243272 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.992866287 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838971149 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.925092508 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.91238363 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.816027501 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.912729865 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.781358362 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.956393582 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.183930128 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.95031741 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.851274276 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915070242 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.009390846 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952798389 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.855484442 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165389147 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.217627217 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.590905632 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.826521579 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.044216277 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.314266927 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135695869 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.9175167 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.126826334 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.450216727 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.326882892 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.95775774 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.20358844 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.975077205 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.20493591 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342684132 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989752398 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.693195048 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.53805717 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.128969519 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927538002 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.915773062 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.916596359 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918345284 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849698399 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.552826275 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.293513117 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.079078459 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.128007434 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.232589481 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.890576528 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.794292865 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.220930656 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.050995372 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.906829857 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.572290715 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 4.967572714 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.732563707 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.941300976 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.877403855 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.91161332 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.874441036 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929549306 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990892608 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931188363 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.929313074 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.293280437 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.273351566 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.916095672 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.916715772 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.86277936 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923913527 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.917807549 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.449562816 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.882113717 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.925326986 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.927274483 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.789000696 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988745686 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.918141531 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.918147608 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.446200802 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.421322777 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.920714173 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.501528632 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.071273983 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999042857 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.191682248 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.296361539 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.041962187 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.617516076 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.329620037 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.027362147 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.61628462 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.843250011 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.916009793 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.855301347 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918811836 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.920586231 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921123773 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.104883387 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.192858923 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.212510255 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.367800384 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.983471878 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120097035 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.698985896 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869873118 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.918745847 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922584733 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.919944955 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918344701 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.425934341 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.158715931 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.024224177 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945982223 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.923056342 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046362127 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.929706459 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.846488357 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.920413263 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.920349531 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.194326536 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.945236148 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.86272154 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.255281471 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.78097918 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034891 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96609959 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.929138275 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924730506 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.64761676 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.958197106 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843842698 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.192423407 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951037294 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.655898947 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406245641 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.47804785 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.219343584 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.237288842 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.248610477 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.984869262 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.134525186 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.001309954 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.973807784 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.007420718 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856081901 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.844492021 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.578253487 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.251034591 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188005852 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928786576 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132850734 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.702836345 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.147548578 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94797406 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.242084588 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.225313848 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.896916282 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937210045 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.255224246 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.024715309 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001978562 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924690426 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.871131894 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.258714221 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963951754 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.62116636 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933240022 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.272328892 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.18857546 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.987369421 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.311549043 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134911458 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.930603277 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.264245861 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.952756398 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.956876872 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.926321165 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.90787507 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.136314189 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.499500955 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.789637386 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926745647 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.891289519 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.212981829 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.828888007 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.923099146 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.88912691 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178320929 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922176387 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.284102633 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287493871 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.028140525 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981963634 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147938885 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.26359058 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226302045 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.484741441 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.404332797 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928832429 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.84959114 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.625643281 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.127293216 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.932094915 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.889021821 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.134644261 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161663419 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.610327479 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140282418 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.166959108 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.936311368 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.20000905 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997900335 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.023349589 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.253673581 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.360456758 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.174338482 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.150935724 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.466113877 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.142231385 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.385851836 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.094419525 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.92687924 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.129523383 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140182008 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.140267051 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.320971693 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094328384 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.638475093 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.931694828 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.134121571 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224692438 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985453806 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.315337835 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.091910405 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.007566557 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93251835 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991205519 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.933213496 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934866692 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.321984931 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.453793603 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.940850773 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004548364 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.032261858 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.429374106 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.929970206 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.932384324 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201864902 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28690225 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.258140238 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.910293609 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.926198859 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927843619 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056905795 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.853322481 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931855604 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.198503581 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.931386541 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.899574681 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.069891609 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944276851 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.25301696 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.312629414 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.269076269 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.886500067 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933421234 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153798818 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243265729 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.938066617 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.037908102 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200075204 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.264592443 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.966048776 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.316540269 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168253014 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931361931 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.12902884 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.930972246 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054035733 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.13023802 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.20567335 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.499469783 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.701322954 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.194799196 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.777018479 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.93028754 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.700635157 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.193328208 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.201878801 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.980902914 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992442395 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933419239 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.210901582 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.649324671 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061746687 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.827844206 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856188962 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.93155486 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.265196406 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.168503562 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.638497215 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.932287078 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.205129 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22481748 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199988901 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.98094982 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.809617193 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141930628 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930760222 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.935106953 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.18781377 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151576646 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.176309409 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931983592 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.935638546 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.735307107 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85442932 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.930353165 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982656269 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.155253415 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948950135 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.44407029 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.629138669 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214784274 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981142135 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933240854 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.20162645 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.440344673 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.478941187 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.934932637 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141515508 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.859916427 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229621718 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.932636258 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.204484674 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233023563 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.930747828 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.900599982 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.173328353 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188401307 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862728192 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939132589 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144275306 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.793899346 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.930220127 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.930942103 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.200000461 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160675832 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.664102127 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.487442829 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.933049655 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.933493564 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.200349254 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960725106 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.264277404 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.962194443 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946225606 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.451524359 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.631593863 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.217626283 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.173798772 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.902303381 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.516486163 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.932828714 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.92995621 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932824007 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.850127695 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.114000502 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.120941847 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219948391 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.96713123 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.207405353 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964295111 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.316297285 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046122442 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.910071741 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969699613 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.45297165 seconds)
  done (took 1658.702551412 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.938385895 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.961469593 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.947442294 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.950701175 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.975942923 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.963717787 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.996779518 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.964430061 seconds)
  done (took 57.559417482 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.945698177 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.948264858 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.939257536 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.933403187 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.937107531 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.93410886 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.087560889 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.942381023 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.946366038 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.939547579 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.935327764 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.934484334 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.202970338 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.951724344 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.935450897 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.934750956 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.93765264 seconds)
  done (took 75.253181493 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.93827095 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.112919255 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.985851983 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.934630599 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.823045866 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.93043566 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.823474638 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.949829805 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.930960504 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.111951066 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.219189748 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.942530647 seconds)
  done (took 90.565881712 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.921066882 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.914632352 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.915183621 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.916048234 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.915716163 seconds)
  done (took 11.429652127 seconds)
done (took 2173.62967803 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.158540324 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.969881592 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.00961737 seconds)
  done (took 5.819968167 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.060591011 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.105111974 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.216226205 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.976673515 seconds)
  done (took 10.206294037 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.167884322 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.284881027 seconds)
  done (took 6.293610095 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.268685606 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.917006379 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.289790748 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.910157425 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.907207722 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.907550409 seconds)
  done (took 22.566553505 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.903375436 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.90403693 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.902077027 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.902399734 seconds)
  done (took 9.444522487 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.898639128 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.622193946 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.898781946 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.909351401 seconds)
  done (took 21.163132173 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.043854082 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.011824654 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.040968801 seconds)
  done (took 7.926098206 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.049204311 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.102173374 seconds)
  done (took 6.978254068 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.044109771 seconds)
  done (took 3.86878256 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.920833828 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.16363315 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.374326547 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.841041132 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.611899439 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.998299317 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.298723587 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.17898667 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.342447763 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.384073586 seconds)
  done (took 25.939748942 seconds)
done (took 135.684642467 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.468390101 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.955042392 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.128233317 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.351045592 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.151685671 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.126120456 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.127456574 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.331021886 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.983855036 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.985326714 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.317944496 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.149227468 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.072185356 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.946566221 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.079677971 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.947438691 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.144982085 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.314426715 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.984766403 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.241623436 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.139498625 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.955020315 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.158168893 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.952634163 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.148785107 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.076384874 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.508014265 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.949689047 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.136292615 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.498439465 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.078718005 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.395992337 seconds)
  done (took 170.655313502 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.92199381 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.921478743 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.923918968 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.921277701 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.238920853 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.923439108 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.924019691 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.923572258 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.13215879 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.166000826 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.922504802 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.260173298 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.922334032 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.925733392 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.92257933 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.925913767 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.279535787 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.921467429 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.923235444 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.922387307 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.923346653 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.09057528 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.922518141 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.072783857 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.279672756 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.922718984 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.924113112 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.923220064 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.924387345 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.92432843 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.924811682 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.92364302 seconds)
  done (took 209.529552356 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.923955129 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.924146006 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.92456008 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.924670567 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.925465771 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.926548016 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.922445388 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.924610133 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.698704416 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.690454277 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.923084649 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.923763449 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.927115137 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.92115615 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.930687697 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.917469404 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.930186445 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.925371639 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.916576805 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.919395111 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.916103106 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.667948666 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.910900778 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.691097479 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.910232677 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.912707894 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.912236545 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.910745775 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.912951347 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.911048084 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.910972725 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.91183175 seconds)
  done (took 222.350902332 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.151102608 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.912693526 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.914464174 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.921218463 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.913808102 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.910909376 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.91356767 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.159477693 seconds)
  done (took 19.637764864 seconds)
done (took 624.040718436 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.481630892 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.320419761 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.095554811 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.933607227 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.187880771 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.979096241 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.927463054 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.998073482 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.78201734 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.010695473 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.589693159 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.958048911 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.690025433 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.964921348 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.056483293 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.990355609 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.524537984 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.620009853 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.078941248 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.998795358 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.113421665 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.892414017 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.013598888 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.827889321 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.625265366 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.932818076 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.033708214 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.532148155 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.942469921 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.095916232 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.920404668 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.279670832 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.951883039 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.932943831 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.98293222 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.963193977 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.215959332 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.945811675 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.058246643 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.678807286 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.019260823 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.682449504 seconds)
  done (took 105.670396553 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.920700226 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.916915281 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.918174407 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.918707054 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.927399675 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.919770155 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.9205679 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.918156105 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.917642828 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.918476213 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.920271186 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.928289625 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.917681302 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.926859561 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.91906061 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.918481661 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.918714014 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.930313403 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.920833033 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.921753627 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.918792183 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.920576455 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.915381755 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.919176182 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.921068287 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.918762373 seconds)
  done (took 51.788187544 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.914475629 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.085876493 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.162244816 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.937379152 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.915894678 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.918131705 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.934808687 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.921704009 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.918738734 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.918245909 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.020709044 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.923006942 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.935414214 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.163790572 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.934205537 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.91878148 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.915265723 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.918899218 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.09692963 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.933294112 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.935680558 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.922075407 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.934619666 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.929250222 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.919276704 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.917343949 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.923475551 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.414204156 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.926541439 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.025392858 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.988903791 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.942009386 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.357508718 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.170754498 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.974855927 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.929637559 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.917746191 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.027612672 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.924732653 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.917255094 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.935960341 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.927506063 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.163914466 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.453081796 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.935690392 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.917002875 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.422539913 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.037515282 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.959952415 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.927376422 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.16756473 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.933674495 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.91762065 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.918164214 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.954081105 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.931862787 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.917785534 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.286334397 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.931189819 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.93642243 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.922837247 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.923364648 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.101604612 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.930237293 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.090933792 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.927224918 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.92444848 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.921493879 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.166863243 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.935454425 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.474271316 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.936292089 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.91841037 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.025743024 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.097230665 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.447387779 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.931497316 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.104404833 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.371684502 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.944326032 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.927847738 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.404444065 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.9487716 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.93006099 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.920409959 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.922553362 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.920381133 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.972203041 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.936798057 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.378159972 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.467552023 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.302953174 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.946796168 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.932065478 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.921907203 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.288659416 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.929077343 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.920064142 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.158250347 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.480586171 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.935555787 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.927818996 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.451095752 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.936375354 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.940801711 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.928926529 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.174923215 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.937108495 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.97194622 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.920861561 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.926474896 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.924065176 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.938199569 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.926759671 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.920459984 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.440043416 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.043254082 seconds)
  done (took 238.7570404 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.920475952 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.922187508 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.92120025 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.920804441 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.921681533 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.922842531 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.920168384 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.922046017 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.921430809 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.919405797 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.920722146 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.921903194 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.921488567 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.926799593 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.967902218 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.921579556 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.410222167 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.919122011 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.9216435 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.921559128 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.479755551 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.927040966 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.921394253 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.920832404 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.923728271 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.922984421 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.923440768 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.968176838 seconds)
  done (took 168.80405399 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.921622798 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.034613466 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.945626039 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.951382395 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.929489755 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.92188523 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.017738204 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.940115179 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.927723505 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.923364718 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.922129298 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.982175751 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.933760756 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.019458172 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.953928265 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.027750904 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.024319575 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.929450849 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.922657159 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.924003951 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.953016822 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.930112175 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.983609106 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.046066295 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.942544431 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.034020749 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.944002586 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.923849949 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.923837742 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.035631028 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.946324583 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.983741112 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.955283276 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.941245248 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.0409526 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.041884023 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.026810614 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.026680377 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.928688933 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.924144772 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.924316767 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.923972386 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.035282405 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.948372035 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.924601455 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.037424286 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.944308983 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.925193513 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.924243673 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.925331569 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.938263934 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.940492319 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.988059507 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.056726364 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.961974611 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.947032237 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.022709662 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.05108514 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.924972103 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.02090506 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.931398994 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.038086125 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.946651271 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.924850155 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.926981755 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.92905649 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.955261449 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.029974711 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.028253301 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.929782915 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.02131643 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.961205995 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.933074007 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.925943694 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.925762854 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.036178014 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.045717338 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.959626183 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.961668736 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.955110126 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.934965841 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.926313203 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.927012021 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.942764189 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.931765241 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.03798992 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.044217278 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.932487167 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.926741771 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.927121765 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.927798003 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.952795212 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.04758773 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.966275196 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.031004137 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.991352991 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.001043348 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.94253042 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.940710182 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.931391989 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.989671567 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.94274999 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.938212705 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.223480689 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.985140701 seconds)
  done (took 208.614444774 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.328613957 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.968733362 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.983988282 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.247260016 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.297566795 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.960705707 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.975419755 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.978708132 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.008552914 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.195864323 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.050801382 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.990316886 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.960494779 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.949455662 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.969453672 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.009030654 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.983353298 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.322963147 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.18421904 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.479926183 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.967340092 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.241817607 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.317227467 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.577696075 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.026557656 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.383434347 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.598948937 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.141338952 seconds)
  done (took 64.959972359 seconds)
done (took 840.435184438 seconds)
SAVING RESULT...
DONE!
