cset: moving following pidspec: 16723
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.58324393 seconds)
loading group "shootout"... done (took 1.184931235 seconds)
loading group "string"... done (took 0.399899362 seconds)
loading group "linalg"... done (took 7.488626368 seconds)
loading group "parallel"... done (took 0.148641903 seconds)
loading group "find"... done (took 1.318176799 seconds)
loading group "tuple"... done (took 1.84808517 seconds)
loading group "union"... done (took 11.963813467 seconds)
loading group "dates"... done (took 1.25829811 seconds)
loading group "micro"... done (took 0.189550531 seconds)
loading group "simd"... done (took 4.094556539 seconds)
loading group "io"... done (took 0.974342099 seconds)
loading group "random"... done (took 8.227437305 seconds)
loading group "problem"... done (took 1.561586204 seconds)
loading group "array"... done (took 18.450423076 seconds)
loading group "misc"... done (took 1.508672854 seconds)
loading group "scalar"... done (took 37.339201306 seconds)
loading group "sort"... done (took 2.855559001 seconds)
loading group "sparse"... done (took 11.229221778 seconds)
loading group "collection"... done (took 16.483914716 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.476489133 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121318967 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.125503696 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.114188814 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.143788592 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116973165 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121359929 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082995104 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.870883856 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.136573712 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.107660149 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.418107426 seconds)
done (took 5.179503462 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.161401027 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082845018 seconds)
    (2/2) benchmarking "String"...
    done (took 0.073822949 seconds)
  done (took 1.293660757 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06060231 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126605573 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.061206444 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.061976993 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.063141637 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.062276701 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.062051012 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.062175406 seconds)
  done (took 1.636500443 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.067204495 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.063123097 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06187326 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.063579598 seconds)
  done (took 1.401055372 seconds)
done (took 5.707889818 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.227563643 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.095742863 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.275725119 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.388525637 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.442628097 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.087277942 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.070555857 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.066238399 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.123829837 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.315413085 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101096368 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.176357279 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.085927331 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.173668224 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.999499107 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.113005912 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081495027 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.117998962 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.087989167 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.126390607 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.398090406 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.074645256 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.070644333 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.066398936 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.063571641 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.640688452 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663180909 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.125445664 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079436993 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.096433236 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.112398925 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.636562868 seconds)
  done (took 10.358493388 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.087945091 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.086103188 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.063289908 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.11888377 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.087225714 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.063858325 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070525608 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.063356448 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087514379 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.1203374 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.085753437 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.09560418 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.062369614 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.065128081 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.072126058 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.194314587 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.076607364 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.07655588 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.064063394 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076002184 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103269002 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.074054791 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.073423943 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.073104214 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.122516748 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.162769082 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.091088064 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.092396621 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.060793812 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.074690682 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.109379469 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.120783743 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06102376 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.060320807 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.114534904 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.090260994 seconds)
  done (took 4.392569263 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.912171757 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086098481 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.098602009 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.596927009 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.060484838 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.143059695 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.23081364 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068409228 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.373349926 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.13757656 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.135956161 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.1391854 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.109567814 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.06549821 seconds)
    (14/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.060967316 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.190738979 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.110861439 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.343244203 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.064020344 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.062622788 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.061616623 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.06478426 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.063974433 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.059584874 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066072552 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.087860592 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.082615538 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.15986405 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.906038614 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.242149133 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.063406242 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161844393 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.079524324 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.352839225 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.065382758 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.078932313 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.384586703 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.117747348 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06247224 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161772486 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.112190507 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066498184 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.111203492 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.074600457 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.065721188 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.064759443 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.064218134 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069991151 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.074254527 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.097997803 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.06232267 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.060494975 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.157347213 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.061639651 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.062611483 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.063820824 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.081946796 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.145149028 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061655159 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.059922594 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.136701256 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.060940576 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064662639 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.094352614 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064490131 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.086644745 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.098069752 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.336172756 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.026450204 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.062251443 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.049339014 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.073868744 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.06246241 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066795178 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062475001 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.063530025 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063304619 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.070241324 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065959518 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064614453 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.104488299 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.062810014 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065742584 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063140139 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067592322 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.096041283 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.060002962 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.448924198 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.091785074 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.062969606 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.073141386 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.100846978 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.061381904 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.068800457 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.063389639 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063189435 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062180166 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.063146159 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.177824387 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.087482298 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065032416 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.109762781 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.032616339 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.06290685 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.059298241 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062736742 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067305318 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06599411 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065155723 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062977422 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065657122 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.063243796 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.061071931 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.108032341 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.063244397 seconds)
  done (took 20.981263855 seconds)
done (took 37.787153148 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.243268512 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077852835 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078180679 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078699534 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078443334 seconds)
  done (took 1.789864263 seconds)
done (took 3.016220708 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.101568052 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.059932919 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.096248311 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.094687734 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.062878887 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.059793819 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.093604089 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.060270384 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.092662512 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.09448281 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.097019859 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.096093312 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.059945033 seconds)
  done (took 2.303251076 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.064959249 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076619672 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.078780629 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.058739872 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.068857253 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.07666507 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058276812 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.076434996 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.083162748 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.077203046 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.076824594 seconds)
  done (took 2.019555579 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.064020311 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079392 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.079546167 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.058592822 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069272539 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077382785 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058267055 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.076362613 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.080500934 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.077262472 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.076877893 seconds)
  done (took 2.009548244 seconds)
done (took 7.549898065 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.063012088 seconds)
  done (took 1.258412374 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.515523332 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.569823974 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.064728821 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.083366286 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.176428712 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.093160523 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.218688497 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.068303185 seconds)
  done (took 8.15942851 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.089088558 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.064593066 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.068943551 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.066254156 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.065534154 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.065949283 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.065966316 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.065563957 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.065846275 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.065151745 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.066162057 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.064790358 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.065486113 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.064622616 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.064510447 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.064905458 seconds)
  done (took 2.374815286 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090640933 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09039628 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.069275284 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.071229351 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068181635 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.0676228 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.070011207 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.069905651 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.066755162 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.06816777 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.070528577 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.069178522 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.068800726 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.059679071 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.069618037 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07140158 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.066881855 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.06990709 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.070262023 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.071444903 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.070217347 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.059847543 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.068733686 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.069351255 seconds)
  done (took 3.008050346 seconds)
done (took 16.01356738 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.107226964 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071886057 seconds)
  done (took 1.38741925 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.065064878 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.066379157 seconds)
  done (took 1.356409228 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.071856569 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.056886113 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.079472453 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.070129666 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.058950256 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.058383168 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.077932883 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.058345193 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.05851838 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.058744201 seconds)
  done (took 1.872698802 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.059254161 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.066666511 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.064948164 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.067479306 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.065503767 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.059674891 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.062866628 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.060109796 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.067984467 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.059152277 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.063805076 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.078450779 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.063283928 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.080574182 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.063031093 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.063868657 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.066262113 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.063465514 seconds)
  done (took 2.40025749 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.057223031 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.058106866 seconds)
  done (took 1.346532985 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.061036211 seconds)
    (2/7) benchmarking "second"...
    done (took 0.058728614 seconds)
    (3/7) benchmarking "month"...
    done (took 0.060880998 seconds)
    (4/7) benchmarking "year"...
    done (took 0.061982351 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.059295488 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.058351167 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.059395405 seconds)
  done (took 1.640749146 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.403827348 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.1158646 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.33344969 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.065834728 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.075696428 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.241472691 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.059788125 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.064848321 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.064979574 seconds)
  done (took 2.690409313 seconds)
done (took 13.931312481 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.0749769 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.078782915 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.085681889 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.413717624 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.088611723 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.063216213 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.108652473 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.173056424 seconds)
done (took 2.337452197 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211359274 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.315926989 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.905093312 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.06180454 seconds)
  done (took 3.516011781 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.314502519 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.079216774 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074196586 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064045714 seconds)
  done (took 1.775444724 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.060202627 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067075051 seconds)
  done (took 1.364755892 seconds)
done (took 8.113105337 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.059605373 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.059441397 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.085735435 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.0600933 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060373987 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.060255538 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060426361 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.060158005 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06006692 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.060075863 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.060142907 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.060298223 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059996392 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.060098338 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060518535 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06069328 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059980158 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060376475 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060034752 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.059794778 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.059953212 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.05976126 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06004868 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060098758 seconds)
  done (took 2.731891639 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.075685664 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.061775564 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.064449582 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.06442008 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.065046899 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.063914707 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.064173787 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.062383111 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.063974077 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06204927 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064157931 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.064458457 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062241437 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.064388933 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062607277 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.064623531 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.064062643 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062637549 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062192632 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.064328365 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.06400503 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062581199 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.064386013 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06402679 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06420737 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064381593 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.062454143 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.062810409 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064206251 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.064399461 seconds)
  done (took 3.174517744 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.059800469 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.056467819 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.057977465 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.066225428 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.057094719 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.057704441 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.057708986 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.056683965 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.057791176 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.058506273 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.057558298 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.056934612 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.058159961 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.056924334 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.056836107 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.057605274 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.061132598 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.074337207 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.057042112 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.056789064 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.060628587 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.056996453 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.056831988 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.056975092 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.057377132 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057115071 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.056813189 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.057439012 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.056931854 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.057831342 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057001438 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.060627381 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.061581114 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.0573566 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066221902 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.061400473 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057349532 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.060768069 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.058302639 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.056811622 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.056928575 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.057021584 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.056963179 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.057068588 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.065984361 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.057479457 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.058286656 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.057648294 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.05723366 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.056797771 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.05705455 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.059521096 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062007684 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.058601097 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.056943079 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.058131547 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.056841806 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.058210758 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.056866634 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.056860192 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.056771827 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.059858593 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.05879971 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.05789654 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.074502216 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.058808074 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.065527843 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.05707449 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060655926 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.060124607 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.057821783 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.072409005 seconds)
  done (took 5.504977965 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081196757 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08286376 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062029922 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061533982 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.05812988 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.05821697 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.065704374 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057768789 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061708887 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076809192 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.057743587 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061620492 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061643859 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061584249 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.057762619 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062036776 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066238573 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.057840834 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.057874988 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061256346 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.057746618 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065665925 seconds)
  done (took 2.663490455 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.133687642 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062063778 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.098256624 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073095619 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066063282 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073987404 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063114835 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063453317 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063621452 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064042997 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063799766 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063243027 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066127368 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063890658 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063725964 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063579121 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063452592 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063700872 seconds)
  done (took 2.532414576 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.072425719 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.061948549 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08282881 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061553454 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.061992199 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061161914 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065856042 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067848892 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.062738403 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.062786791 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.067722676 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062902482 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.062238304 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062499745 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062320687 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063002523 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.062542612 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06280178 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067630766 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067225572 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06705774 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067706936 seconds)
  done (took 2.697260331 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070231419 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06040764 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073471238 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063186367 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057926878 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057707121 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.062888986 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062179419 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.063059466 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.061533333 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061814984 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057673314 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.063656465 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.061848235 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.064081238 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061828237 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.061883693 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.061937064 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061673892 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057699357 seconds)
  done (took 2.507559022 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081872449 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059282633 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060264468 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078788252 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060097102 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.060294538 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078749544 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.060369079 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.060868729 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081669413 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060866919 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060668573 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07880532 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078935941 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.060253603 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078711193 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078470612 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078726243 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.060495727 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060703543 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081303894 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.060782682 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078578735 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060542818 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060628217 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.060722707 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060795512 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088234149 seconds)
  done (took 3.193105532 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.059304159 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.058449303 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.059501541 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060462376 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060593722 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.059950793 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.061618834 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.060096744 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060282849 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.060479727 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060290068 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060523369 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060364393 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.059871149 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.059781587 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.059854221 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059785314 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.060697135 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060435601 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060385304 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.059925 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060194133 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060136691 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06060033 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060567834 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060118013 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060533404 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060645718 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060578158 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.060455054 seconds)
  done (took 3.074483918 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.069611393 seconds)
    (2/2) benchmarking "in"...
    done (took 0.067542731 seconds)
  done (took 1.405014098 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.058488581 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072171662 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.05633482 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066922115 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066139962 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.060736493 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.06735267 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066619446 seconds)
  done (took 1.777020674 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.064241644 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.084977073 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.059726175 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.060272627 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.063145811 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114207546 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.073193521 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.068164531 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073527512 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060710222 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.059957921 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.070613277 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.058734063 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070396033 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06109404 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06612831 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06425909 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069218447 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.069710405 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057155348 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069054145 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059920813 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058011041 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.060126859 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.058962877 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064362458 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.072457838 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.069268154 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066177248 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.056391655 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076621081 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.057655592 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.059168184 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066301828 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.062690454 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058062308 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091812322 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.058226718 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.063988209 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.057520371 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.068538818 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076318219 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.069823439 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.073955108 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.059594496 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06030281 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.057762836 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.06000915 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.060167184 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.065864468 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.057791694 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063740313 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.057254695 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.059700413 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.066954353 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.057919555 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.063972169 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.065756724 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068769415 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.066774372 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.065309368 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071229782 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.065559001 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.067282711 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.059055741 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075104956 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060071618 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.068765786 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070376187 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.059100204 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071234983 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057061418 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.056302011 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.057628852 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087197712 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.059315889 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.0589266 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.057665542 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.05780073 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.059456136 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066248103 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064234055 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064075999 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062118286 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072053332 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.065623413 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.057869307 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.065757835 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.074394377 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.060230319 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.057934283 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.072026983 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.059933794 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.057175944 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.073493339 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.065511304 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.059598273 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.058431833 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.060018481 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.069760995 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.059655701 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.056314958 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06444928 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.059316074 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.060727866 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.063091366 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063616919 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.056896098 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.065940531 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.063343755 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.059587993 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.056637213 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.061249578 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.058025081 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.055346654 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06384434 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.056299125 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069173301 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.061429764 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.070375067 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070280688 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.066714693 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071504637 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.057192875 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.056200389 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.073755175 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.199188117 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.059933955 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075334305 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059040964 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.067837255 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058656266 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.060653983 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.066540252 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.05742945 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060759025 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.058503573 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.064666617 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.059936618 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060657148 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06107162 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.064806241 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.069591584 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.059966063 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06561504 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.058831659 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072435731 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067120485 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062092831 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063156709 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.05938918 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.068781084 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.063704697 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066397374 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.057551156 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.059151298 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.058366624 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.067356598 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066393205 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.05986285 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067251858 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.061461622 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.059095747 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.058361775 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.059274849 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.060618405 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062597315 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.058950334 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064332374 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.065693216 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.070875861 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070165572 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.065753964 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.057125847 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.058119256 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.059901504 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.057503168 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06117737 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.065787625 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071540949 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.068731511 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07609465 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058094817 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.065780387 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.059751435 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.072881797 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.069649111 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059263506 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063801595 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.057255265 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059700064 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.065976501 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068005881 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.070618586 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070839023 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.061256201 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06111839 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.057345698 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.0706224 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.058272279 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064856542 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.06578786 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06308691 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.057834337 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.059736003 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06557054 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.061266871 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.058130831 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.071404892 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.065211983 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.057426955 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070002913 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058367894 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.067404578 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.057500833 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.060577407 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.061877449 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.059952948 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.065745823 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071659196 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057041344 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.05880861 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071787408 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.060441328 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060138493 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064202464 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.070573131 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.061025289 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06432364 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066901579 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.065910832 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.061173991 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.065472832 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.058679046 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.065853459 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.061082012 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.067969067 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.057387339 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.073264656 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.056076847 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.070215489 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058455502 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.067092609 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.057968429 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.065773997 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.058194389 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.072548891 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.059039326 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.058017847 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.067949693 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056174931 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.065032302 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057556027 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.0609557 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.062850912 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.065473066 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.059905923 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.203504026 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.05983373 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066786957 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.062849046 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066409349 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.066678274 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.062235972 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058114338 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065364739 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068524592 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.065351503 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.060438005 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.06061482 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.059833831 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.066063875 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060278422 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.059895142 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064900448 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.061757709 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.063004439 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060059433 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.060663642 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060382098 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065346936 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066716344 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07422221 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065436307 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.064110908 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.066342011 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058196488 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072100535 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.058013548 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.063851682 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.056870774 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.065596539 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.065900963 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.05911736 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075775357 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.059896751 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065168839 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070639105 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06538664 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.060553761 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.074563062 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.062600406 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.064609005 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.064656403 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.061703946 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.062969535 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.059575622 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.064571764 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.065852237 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.06740783 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.058814654 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.063856135 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065427073 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060369884 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.067673912 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.060203208 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.064840924 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.060283994 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.056930653 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.061929271 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.068003082 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06171501 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.062392492 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.05825575 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.056881678 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.058229855 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.066379803 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.061719317 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.065401154 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071571828 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057278644 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.059197716 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.057664834 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063118894 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.074338062 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.066886936 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064259238 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.061702302 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.05696481 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.059949761 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.060191009 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.058174968 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.062193833 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057153252 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.05771434 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067627889 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.059795086 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.061667715 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.05828461 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.059473115 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.065655584 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.063409625 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.0587122 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.063347045 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.057635934 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.061370675 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.056908865 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.05998523 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06147856 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057453369 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.060365896 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.066804353 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.072676801 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.063369266 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065380153 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.058824661 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.064578311 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071624713 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.067079857 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058810754 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.065665587 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.057191669 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074082662 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.065514604 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064211157 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.065783822 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.058882695 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.072672327 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.060954844 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.066020047 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.0708637 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058757926 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.064946399 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.057281067 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071176221 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.060491659 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.056867803 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.064080462 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06337319 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.203246558 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.069513601 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.060323907 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.065987117 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064719787 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.061663691 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.060500144 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.060605884 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066010284 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.072354791 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.059329363 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.063362735 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.065272642 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065647212 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.061794134 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068971351 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065472508 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059207528 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.060433453 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061266179 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.059767178 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.069640337 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0587678 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.061441034 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.062121232 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.057766544 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.063576638 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07230912 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.0663438 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06648227 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.057889597 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.057588614 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.074437406 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.060470129 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.063030183 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065395931 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.066058171 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069027664 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06605057 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.073557318 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.059213089 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063338669 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068955624 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.059770162 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.057898994 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.060851002 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.060537948 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.065717036 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067107832 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.063866573 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060277596 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.063490774 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069753555 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.059493234 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.0616439 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.063623073 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.059159201 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.067251287 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.064991157 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.065357565 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.059804725 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058050547 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.060404999 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.065816134 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.064173473 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.065664301 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059115587 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.066554521 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.071418928 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.064322168 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062355628 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.05768544 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062297165 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.065938849 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.063780918 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058157264 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.061668222 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.060683191 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06678008 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066066987 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062009747 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.057954908 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073466301 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.065599587 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.066076839 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.060386574 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.06032597 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058467317 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058288091 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067901434 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.057856872 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.059812954 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.061633 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.060144965 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.074566511 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.065095863 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.07221391 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058961172 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.061453296 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.057630545 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066311177 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.061653236 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.058088501 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.066975994 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.057146302 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071719633 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.068672008 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.067029716 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.057647172 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.061714141 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.064966773 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070467862 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066127558 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.065663063 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.061871549 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066258033 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.059779516 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.067353574 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.058270988 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.056744653 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.066856795 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064878188 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.069131686 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.057612934 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.06607011 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.059455306 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.063643002 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.064505805 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.059422356 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059101757 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.059109246 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.205200374 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.061666089 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068077474 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063145832 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073541013 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.060171606 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068360596 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.066294885 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.068197169 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069983198 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070429814 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.065532598 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.059005017 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064431132 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.065298004 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.060170075 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.061833073 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.062335662 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.0787849 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.060468076 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.060460279 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071779498 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.06624272 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.05865499 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.066043684 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.062350299 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.067143045 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.059379697 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.066717982 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.063037863 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.058829494 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.061831883 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.061747893 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.057134894 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.057486483 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.058178465 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067060852 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.062005855 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.058581388 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075667523 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.06029471 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06573026 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068140796 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.063995669 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.06013453 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057087907 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.059982826 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068234377 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07113346 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.060866288 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064904925 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.059614344 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06612389 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.05677458 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06511014 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.064688934 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064782097 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058007834 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058548997 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.070849844 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07128115 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.061450585 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.066255544 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.066059276 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.059938263 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.07817792 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.065252108 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059169556 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.068119333 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06120941 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.057645245 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.057172899 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.062177383 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.068446641 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.057829954 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.061320975 seconds)
  done (took 39.778126122 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095306218 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.057955921 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.058351295 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058233896 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070250791 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059333844 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058216932 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059290391 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.058997676 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061483984 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058013635 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058222384 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070401345 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073105026 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069518004 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062837135 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057897466 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059153211 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058093088 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058967995 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069156095 seconds)
  done (took 2.712764277 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.06423602 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.072429501 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070707306 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075224442 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066725037 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06298532 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0703757 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063126454 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071115549 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068283238 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071321966 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063197666 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068207231 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068461674 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068382634 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063274008 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071144514 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066853174 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.063365428 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070615629 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063421697 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070335604 seconds)
  done (took 2.847042411 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.058496411 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.057913294 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065242337 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.057734956 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.057318412 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.061559122 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.057437033 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.060712839 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.061361153 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.060651778 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.064731952 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.058286984 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.057390285 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.06159462 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.056796081 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.05828392 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.100550305 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.058895563 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.058719546 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.057422168 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063724979 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.065556351 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.057142836 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.057497458 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.060485216 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.061336714 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.057497321 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.060724862 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.058158352 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.060605141 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.058762502 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.05720943 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.064557288 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.064409884 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06101885 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.060751103 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.059656869 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.058688019 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.057603935 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.057536712 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065026308 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.059225435 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058111116 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.059066351 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.065121507 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.057684948 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.057473272 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.064830614 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.057037763 seconds)
  done (took 4.333294769 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.068803332 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106809785 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.063599721 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086791782 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.071999415 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.065186153 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.063547443 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087924892 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059087294 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.059751372 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.07322481 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07315075 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061581364 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.063200464 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.065154659 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06104366 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062102675 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060521356 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06445129 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.060842045 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.0646907 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.064774222 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07221362 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.072624265 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.062351003 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060350643 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060871829 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.062957441 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.072334193 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.065413724 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.063258557 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06362127 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.072610696 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065747438 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060616831 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.060860458 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.073621244 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.061575878 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.061366733 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.059192837 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.060958151 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.062945628 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.06495639 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.074024035 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061852519 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.065710773 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06132923 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.058715247 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.072632083 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.061243746 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.065982039 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.074024124 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062502517 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.061789279 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063263056 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.072644242 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.061487912 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.059925735 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.062361301 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.072489728 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.059291246 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062398 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.073222652 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.061027263 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.065493803 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.073524499 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.065569426 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06242798 seconds)
  done (took 5.995542373 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067106629 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.086693486 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068354413 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068327421 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067394157 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.068664682 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069366709 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.068950998 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069009968 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069898378 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069117155 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107780964 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065024162 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074697804 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069584827 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069002302 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.069217661 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069161347 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068835984 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06899881 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.069175199 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069867852 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068884021 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069653499 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07267141 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064636242 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068762126 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069009306 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069692025 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.068962888 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.072264733 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.068836626 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069124631 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069742026 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.071906304 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.068690036 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.059143712 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068702056 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.069182702 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069066337 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064375305 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069523997 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068670476 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.064858729 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06903409 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068955315 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069925006 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.072122458 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078009272 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069776499 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.069583108 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069973373 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069264998 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069350255 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070058098 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.078520153 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070104833 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07006364 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069947799 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070021228 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070067658 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.077764332 seconds)
  done (took 5.758408737 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073237589 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066217716 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079159404 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060498914 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.05801661 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068172308 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.057960796 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.058020382 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066097229 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.066349939 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06839426 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067943171 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070511566 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068730455 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068242451 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070673458 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068165895 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067782788 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066292657 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068125597 seconds)
  done (took 2.728198949 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.068757541 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.075115273 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063814642 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068314314 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.063537871 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068078311 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.062892955 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063912328 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064241424 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064020417 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069846816 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069808669 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064298787 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068209699 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06956604 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067971021 seconds)
  done (took 2.447574682 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.063304397 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066888448 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.066766182 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.059712098 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.062692775 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.058850787 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.059360696 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.057400194 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.058460064 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.072098622 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.059425743 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070348145 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.059125933 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.058264153 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.058700098 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.064899263 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058418363 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059275348 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.059427795 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.064650584 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.065967037 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06083664 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063040163 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.059105126 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064360935 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067699316 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.060968135 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062487386 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.059158248 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060062441 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065014596 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.065982211 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059114583 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.059899598 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.058083897 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.059398456 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.059249942 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.059789396 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.065390222 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.059519585 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.057808352 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.063970272 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.059617306 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.060267493 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.05836106 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.059883292 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.058525099 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.064881514 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060044228 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064498435 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.059193367 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.061799994 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.060109627 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.066753647 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.061957687 seconds)
  done (took 4.766212534 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071276053 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.061958928 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057200835 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.05748428 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.0630594 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06374908 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063370181 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.063418771 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063901691 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058169146 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064310944 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.062853732 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063638031 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063583071 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064163426 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063426667 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057657886 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.063444406 seconds)
  done (took 2.51831552 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.067893465 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061824333 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.066167077 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061298089 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.062159347 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062274878 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058370715 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.058362995 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058351066 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062352995 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062347711 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.062436259 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058572796 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.062114046 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.062661985 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063018522 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.062175656 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058391473 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062539327 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058682126 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062296076 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058354449 seconds)
  done (took 2.736077957 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.083386349 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.078794153 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.119303598 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.075893647 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08314764 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068067511 seconds)
  done (took 1.892459936 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085417715 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097919083 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062287264 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.062915619 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073870708 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066683742 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066529286 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067022655 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07352496 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071334329 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066912936 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073364423 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073886011 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069302557 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073900472 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077317121 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067326895 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067064876 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062775786 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076402711 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066894489 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073763688 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066858294 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066449999 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084927717 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068909247 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077132049 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071763765 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069441729 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07373731 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076606418 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066624153 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073902384 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072196919 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.063109071 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073564818 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06686619 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076924053 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074175439 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068946953 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062872775 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073967558 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073889407 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068850558 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076815431 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066903204 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069024362 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066968127 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067418712 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07961363 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074098925 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069152664 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074066056 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076753006 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077036364 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079374276 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071635748 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068955409 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073917901 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071499436 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068663503 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073741453 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068739604 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071630291 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076468479 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068777507 seconds)
  done (took 6.125343211 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093478661 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062988653 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067140673 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071933877 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068992538 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067084502 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066883327 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066820084 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067000436 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063748628 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100892618 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067052422 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069205379 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068860183 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067195524 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066798607 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067425013 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068646971 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063556436 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079479352 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06693842 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069090926 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069008031 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069360214 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071561278 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076677797 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067127179 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066675454 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066760967 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066407613 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069153457 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066957979 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068895126 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063556147 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068731732 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066628496 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066956318 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069173056 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066682071 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074236779 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069488783 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076843583 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06705458 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066334894 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071338095 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066509484 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066712633 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063804476 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066390382 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063816545 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071828069 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071543332 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071762008 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069086592 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067382748 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067030087 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066781692 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066824458 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066690446 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076738112 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068951011 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066701531 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079196871 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066740939 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066809985 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069080216 seconds)
  done (took 5.982397547 seconds)
done (took 123.121674067 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.203448831 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.179704448 seconds)
  done (took 1.751846849 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068642364 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.091001112 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.071697355 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13071137 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065535635 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100174479 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098548011 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.070397174 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065216325 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066795682 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06668065 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069360894 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13344435 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065358849 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065702062 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069881849 seconds)
  done (took 2.685620705 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098246722 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.177139759 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105202759 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064905329 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100316477 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072807782 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064995234 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075935947 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069186865 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068116756 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072715101 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070885113 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068223421 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070802398 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.068735954 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072346138 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067778886 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072689259 seconds)
  done (took 2.852387822 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.08831222 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.080175107 seconds)
  done (took 1.562205839 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.148277578 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.099493183 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.137727591 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.311559872 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.133656215 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.275425773 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.128318662 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126535518 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.107041891 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.119452436 seconds)
  done (took 2.973841685 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09589998 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.160305852 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294759406 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114548755 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071600424 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.083632967 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116736608 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077229136 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.076929686 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076182337 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076285263 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076164842 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.093410578 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072752323 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07280865 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.072663286 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.096612448 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071777598 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.071778125 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072243645 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09631602 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065710236 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072615135 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071524569 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074123582 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073763343 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06672443 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065288204 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072084948 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.071385134 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.074727384 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.080332371 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074277774 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.099719211 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069635658 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.100492759 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07086432 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07026198 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.071369572 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070094539 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07334844 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.073289578 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074254511 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.072982264 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066455217 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.070816624 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066829613 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065119256 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.075945239 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066980917 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.075645362 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.074796567 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.099657874 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068183091 seconds)
  done (took 5.894115904 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102062996 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.101468336 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065665244 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108160831 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100465717 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065998712 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101746884 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095308525 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103813547 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065912557 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06492615 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.064983419 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07455955 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.077998807 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.10974534 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102313628 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066159737 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.064706093 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104094322 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104714997 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06504505 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096980757 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.093554106 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103878164 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.064766904 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066088508 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.063990692 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.065128696 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.071834638 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.073277444 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06497327 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074217759 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082795402 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.071809722 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.062305679 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063126607 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064374514 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.073460657 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074344631 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074032633 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.073053582 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064344452 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064268478 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065009388 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065377717 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063444723 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072695156 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.074199588 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.072737175 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064317743 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.064853889 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.064072319 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064571002 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.072710841 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07212978 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.074544001 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072936507 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064274546 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064424635 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.066518225 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074840496 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074628008 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074274328 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065596501 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074392933 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064527455 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075600966 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079364748 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064566304 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065054793 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.064198999 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064710617 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064979985 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072010061 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07245888 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065342202 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.064260295 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064133261 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.074159041 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07269246 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064643896 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.071775018 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064055721 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064370438 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0652279 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064893349 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.071726903 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.073677574 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065302948 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064242764 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064639123 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064015886 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.063420274 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.071482079 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07308461 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.073831762 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.072433371 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065010144 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.072298579 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072157156 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064629079 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.072076351 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.063815483 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064147022 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064539076 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.071774703 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.071742194 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.072790312 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064129994 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.063236227 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.071125382 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.209088817 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065532081 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.073721907 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076100771 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.074078617 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.064965025 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078984015 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066414962 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075043681 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063824259 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.072899136 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063692978 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.071619249 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065361277 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.064564886 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.064700553 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.073548024 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066135665 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064928602 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065490757 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065095733 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.073338923 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076446694 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066558612 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073257215 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.073173549 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066488152 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.072607041 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065053226 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.073911026 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065621523 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065318944 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064456045 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075505493 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065328478 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065140196 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.064841532 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07616932 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.063250936 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.074588086 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.072365391 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064223343 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079496654 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07486446 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.072674397 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.075415841 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06608512 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065228166 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064341729 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.064950466 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.071982858 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07396458 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06547956 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06474418 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.071976979 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.075457323 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.064212851 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.072239814 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073022548 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.072550585 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065042672 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064797054 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076213783 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075529107 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.073529143 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.072678922 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073897024 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064942898 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072193764 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073048615 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064765116 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080528468 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065151264 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.077125041 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073479312 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.071805631 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073177169 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.074530427 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.074398361 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.075401902 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.076568031 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06472978 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064474981 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.073018401 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064845752 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064948837 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.072696409 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065214839 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065276855 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.07817045 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06332678 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.072722523 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.064436155 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074108559 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064235102 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065330831 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078115161 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065384574 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065185976 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.072049996 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06495574 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.072463585 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075974673 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.069770544 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.062172513 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.062651101 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.069984587 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.070374388 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.061733183 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.061832277 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0633129 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.071091305 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07003322 seconds)
  done (took 17.503360665 seconds)
done (took 36.633353586 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.197783923 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154431938 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.186545905 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.109824777 seconds)
  done (took 2.139929025 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.092771159 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.092809949 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.074902438 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.061870268 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.082045395 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.061750233 seconds)
  done (took 1.904840116 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.269917125 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.190430843 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168812162 seconds)
  done (took 2.062517608 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208779005 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.19170518 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.451613643 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.279204656 seconds)
  done (took 2.659581932 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.128832432 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.078937356 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.061326233 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.071632573 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.110862094 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.142786461 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.08858098 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.110604234 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.070142279 seconds)
  done (took 2.355627224 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.130790226 seconds)
done (took 12.717832771 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.107973268 seconds)
    (2/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.23966498 seconds)
    (3/309) benchmarking ("sort", Float64, false)...
    done (took 0.153096822 seconds)
    (4/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.088007051 seconds)
    (5/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.07460839 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06891281 seconds)
    (7/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.204617868 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.064702956 seconds)
    (9/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.164042399 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.150348623 seconds)
    (11/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.202871248 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.118631913 seconds)
    (13/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.073707233 seconds)
    (14/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.06698641 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072694296 seconds)
    (16/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.461606467 seconds)
    (17/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.174060419 seconds)
    (18/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113662684 seconds)
    (19/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.072228247 seconds)
    (20/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.069061629 seconds)
    (21/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.156775943 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.070399669 seconds)
    (23/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.137632774 seconds)
    (24/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.172550229 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.070801529 seconds)
    (26/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07073402 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.116062314 seconds)
    (28/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.079677649 seconds)
    (29/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.193532546 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.083617277 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.081488447 seconds)
    (32/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.104628577 seconds)
    (33/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.216840535 seconds)
    (34/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.17246376 seconds)
    (35/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.074262514 seconds)
    (36/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.234728812 seconds)
    (37/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068850157 seconds)
    (38/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.062983634 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.062938083 seconds)
    (40/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073097469 seconds)
    (41/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080798338 seconds)
    (42/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.201384065 seconds)
    (43/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.092666842 seconds)
    (44/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.159374803 seconds)
    (45/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.166376125 seconds)
    (46/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.135483387 seconds)
    (47/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.065798711 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.069770486 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.132791545 seconds)
    (50/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.17709922 seconds)
    (51/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.159845452 seconds)
    (52/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.060814896 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.080792871 seconds)
    (54/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.1745161 seconds)
    (55/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.162824404 seconds)
    (56/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14565937 seconds)
    (57/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.180409859 seconds)
    (58/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.062838639 seconds)
    (59/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.075274472 seconds)
    (60/309) benchmarking ("sort", Bool, false)...
    done (took 0.143816252 seconds)
    (61/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.134047934 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.10611431 seconds)
    (63/309) benchmarking ("sort", Int64, false)...
    done (took 0.062397876 seconds)
    (64/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.153094983 seconds)
    (65/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.060841578 seconds)
    (66/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.073780763 seconds)
    (67/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.206077335 seconds)
    (68/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073797724 seconds)
    (69/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.070344364 seconds)
    (70/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.060902281 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.060957825 seconds)
    (72/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.068508121 seconds)
    (73/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.060466717 seconds)
    (74/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.069615608 seconds)
    (75/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.05887829 seconds)
    (76/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.179003186 seconds)
    (77/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.070429055 seconds)
    (78/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.060350623 seconds)
    (79/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.061208233 seconds)
    (80/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.060051948 seconds)
    (81/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.061275896 seconds)
    (82/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.215099151 seconds)
    (83/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07200057 seconds)
    (84/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.13690246 seconds)
    (85/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.0736104 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.077742021 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.132769592 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.131501566 seconds)
    (89/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.070907366 seconds)
    (90/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.07450123 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.064549916 seconds)
    (92/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.199061423 seconds)
    (93/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.201396067 seconds)
    (94/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121827041 seconds)
    (95/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063773644 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.117083554 seconds)
    (97/309) benchmarking ("sort", BigInt, false)...
    done (took 0.237862047 seconds)
    (98/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.066943558 seconds)
    (99/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.181758585 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089416965 seconds)
    (101/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.135549849 seconds)
    (102/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.061675713 seconds)
    (103/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.179836225 seconds)
    (104/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.203372229 seconds)
    (105/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088618719 seconds)
    (106/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.210980954 seconds)
    (107/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.214355983 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.084787091 seconds)
    (109/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.070656118 seconds)
    (110/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.062847793 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.068972293 seconds)
    (112/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070734152 seconds)
    (113/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071523951 seconds)
    (114/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.162102207 seconds)
    (115/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.156233407 seconds)
    (116/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.159974041 seconds)
    (117/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.078279496 seconds)
    (118/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.068744381 seconds)
    (119/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.067184302 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.11606855 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.084968079 seconds)
    (122/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.198122041 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073088657 seconds)
    (124/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.074605223 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.130683714 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142142468 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070877702 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085420767 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.08726908 seconds)
    (130/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.06015369 seconds)
    (131/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.060358664 seconds)
    (132/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.070339379 seconds)
    (133/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.061577302 seconds)
    (134/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.132977424 seconds)
    (135/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071935353 seconds)
    (136/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.070659335 seconds)
    (137/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.150450858 seconds)
    (138/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.061212494 seconds)
    (139/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.065384455 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072841182 seconds)
    (141/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.064107235 seconds)
    (142/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.061632026 seconds)
    (143/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.134798024 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072319357 seconds)
    (145/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.064181642 seconds)
    (146/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.066651305 seconds)
    (147/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.061725265 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.070729208 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.180036687 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.085493847 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.107394786 seconds)
    (152/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06709969 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.061064036 seconds)
    (154/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.059497129 seconds)
    (155/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.060588756 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.074807358 seconds)
    (157/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.061302773 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124203037 seconds)
    (159/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.13252794 seconds)
    (160/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.064144885 seconds)
    (161/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.061252984 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.118124532 seconds)
    (163/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.06303426 seconds)
    (164/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086049821 seconds)
    (165/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068524777 seconds)
    (166/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062673634 seconds)
    (167/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.132830086 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139273531 seconds)
    (169/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.064039658 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.160493811 seconds)
    (171/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.16502297 seconds)
    (172/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.062401583 seconds)
    (173/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.061329077 seconds)
    (174/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.070169355 seconds)
    (175/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.062402538 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.062143782 seconds)
    (177/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.061297089 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.061531479 seconds)
    (179/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078296368 seconds)
    (180/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.063971037 seconds)
    (181/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.061815362 seconds)
    (182/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.0694453 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.084270515 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.080192719 seconds)
    (185/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.157700727 seconds)
    (186/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.062333151 seconds)
    (187/309) benchmarking ("sort", Float32, false)...
    done (took 0.126973429 seconds)
    (188/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.327137733 seconds)
    (189/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07686912 seconds)
    (190/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.06227592 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089456147 seconds)
    (192/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.133530515 seconds)
    (193/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070962772 seconds)
    (194/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.06311652 seconds)
    (195/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070095561 seconds)
    (196/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.061244601 seconds)
    (197/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076074981 seconds)
    (198/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073862093 seconds)
    (199/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.062694412 seconds)
    (200/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.061560338 seconds)
    (201/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.061512961 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068286407 seconds)
    (203/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.061781713 seconds)
    (204/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.069575097 seconds)
    (205/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.061150347 seconds)
    (206/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.060651796 seconds)
    (207/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.071764462 seconds)
    (208/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.061383104 seconds)
    (209/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.068687112 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.213269919 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.093544218 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066939012 seconds)
    (213/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.061478585 seconds)
    (214/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.154692528 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.060623567 seconds)
    (216/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.06061952 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.062107689 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07371241 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.072775369 seconds)
    (220/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.061736577 seconds)
    (221/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070864331 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135738542 seconds)
    (223/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.070426546 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.083160991 seconds)
    (225/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.064260551 seconds)
    (226/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.062157695 seconds)
    (227/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.061971205 seconds)
    (228/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.063429501 seconds)
    (229/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068911455 seconds)
    (230/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067805139 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.062066815 seconds)
    (232/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.061204126 seconds)
    (233/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062407222 seconds)
    (234/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.068807705 seconds)
    (235/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.061329706 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.0864865 seconds)
    (237/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.07310008 seconds)
    (238/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.063044585 seconds)
    (239/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.060247564 seconds)
    (240/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.131824716 seconds)
    (241/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.067000989 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.120160655 seconds)
    (243/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.07321903 seconds)
    (244/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06114364 seconds)
    (245/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.059990812 seconds)
    (246/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.16558824 seconds)
    (247/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.061436117 seconds)
    (248/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.151973364 seconds)
    (249/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087781108 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.080710715 seconds)
    (251/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.062637555 seconds)
    (252/309) benchmarking ("sort", Int8, false)...
    done (took 0.163632898 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.083239545 seconds)
    (254/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.059871072 seconds)
    (255/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.060343834 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.060327934 seconds)
    (257/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.069370712 seconds)
    (258/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.060266793 seconds)
    (259/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.063110834 seconds)
    (260/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.070589339 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.061862665 seconds)
    (262/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.061555185 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.061776048 seconds)
    (264/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.068717101 seconds)
    (265/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.078699814 seconds)
    (266/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.061377645 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.126050664 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.104854825 seconds)
    (269/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.062463036 seconds)
    (270/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.061919133 seconds)
    (271/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.065427632 seconds)
    (272/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.062051511 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.068432159 seconds)
    (274/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.063430667 seconds)
    (275/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.066587052 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.135373674 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.063846306 seconds)
    (278/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.061196554 seconds)
    (279/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.060542081 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.061160129 seconds)
    (281/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.061445404 seconds)
    (282/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.059949106 seconds)
    (283/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.060969087 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.115443787 seconds)
    (285/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.060288112 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.081611481 seconds)
    (287/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.067948837 seconds)
    (288/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.164293117 seconds)
    (289/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.061029771 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.070737032 seconds)
    (291/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.059741781 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.111828585 seconds)
    (293/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.06197203 seconds)
    (294/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.06862261 seconds)
    (295/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.063220163 seconds)
    (296/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.061364893 seconds)
    (297/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.062648727 seconds)
    (298/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.06234437 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.069170693 seconds)
    (300/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088146826 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.061696803 seconds)
    (302/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.062639149 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.061900903 seconds)
    (304/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.062857745 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.061259342 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.061344304 seconds)
    (307/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.061693354 seconds)
    (308/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.062563503 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.061209862 seconds)
  done (took 31.380966366 seconds)
done (took 32.834819456 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.079980433 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085453787 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.068769344 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.084196751 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.078648026 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.094336883 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.070691947 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076180054 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078375174 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.077392614 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.076271212 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.069255834 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072185352 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.071712299 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070041454 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085568967 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076404099 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.070582274 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071127041 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.061888972 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.070721831 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.062451176 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062096766 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068754328 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.073724519 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.069799151 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071663054 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.071582977 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.062052938 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06227507 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.066955613 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.070988573 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065008114 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.075681161 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070920272 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.070726388 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.071852116 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07449343 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.061846782 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.062156604 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.071757098 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.062647265 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.070926835 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.06878963 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.067381936 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.068992286 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.070343492 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.074732479 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085379707 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066357731 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.072482694 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.073022982 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.073620993 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.067444838 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.067391557 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.070390709 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.068224391 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084999817 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.070590201 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066004686 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.071476038 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071320182 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.068865179 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.070456447 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.0708901 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.072903658 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075540002 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.068589599 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.072195527 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.06916541 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.061958163 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.070584022 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.065810842 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.060622445 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.071262752 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.073102389 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.059727329 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.064901356 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.06856746 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069106061 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06068956 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064098908 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.060835479 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.066725784 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065311976 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.068955789 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067054679 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.069639345 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.061597207 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.070627766 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.069201437 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070332517 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.061994083 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075213496 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.061798216 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.068523087 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.061875261 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.061982983 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.061460298 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.067465726 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.061791616 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066556899 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.070386097 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.061087438 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.066955213 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.075277508 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06159664 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.069722499 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06173917 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.0619646 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.073919421 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.072169012 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.062176731 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066027513 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.061710257 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.067730073 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.061862197 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.061987545 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.062217265 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.061838386 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.066816401 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.062187062 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066377828 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.067492121 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075069509 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06202924 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066742614 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066323601 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.061580336 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.06846356 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.061777001 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.061789897 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06119082 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.075276986 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065604028 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.061673609 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.067577975 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065743259 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.069682626 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.060322595 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.069870081 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.067042404 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.206137857 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.067920913 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.060777509 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074811461 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067594736 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066939658 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.061979794 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062039737 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.061423278 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.061897894 seconds)
done (took 12.144480108 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.061287819 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.089301732 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.070501375 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.079315957 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.074640392 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.063136516 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.067397735 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.080842159 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.065550041 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.081876753 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.083443652 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083395194 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.090215789 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06197885 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.062387527 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.063469044 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.061512251 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.068964631 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.078322178 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08355402 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.091195511 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.062534008 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.071903539 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.07795116 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.074003766 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.079711417 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.063501645 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.063429564 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.065146324 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.081029928 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085976704 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.062052586 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.063544966 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.077743575 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.076865583 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.070248965 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.063235086 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.067345034 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.063318714 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.062342286 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.063910604 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.077866731 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.066855858 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.069776788 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.063458339 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.063540757 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.063551102 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.066808876 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.075609247 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.067281995 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.07033472 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.075079951 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.065072865 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.063002666 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.061617415 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.067336493 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063138879 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.063594113 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.062733429 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.062852069 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.062647516 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.064769458 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.063592481 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.063316738 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.066023419 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.066866606 seconds)
  done (took 6.122893134 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.078469692 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088943364 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.078176565 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.079390325 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.062929865 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06356437 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.062676555 seconds)
  done (took 2.070651755 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06217597 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074117383 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079484419 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.07941617 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.072796721 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.081278455 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063235156 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092025945 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.062095453 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.075451567 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.109470308 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080199872 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066306781 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074473411 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.063143668 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.070815433 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.063195388 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070993219 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071834137 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079489563 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067412997 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.08928774 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.076162001 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.063440767 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.084207935 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.068460387 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.062795776 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063681136 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064456638 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.064450668 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064256684 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.101665142 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.068070346 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075180362 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064517781 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.063330333 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.069523785 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066946489 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.066932968 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071720336 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.06925655 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.064791998 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.062019744 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064728595 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.066209052 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.06712141 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.061992585 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.064414976 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.064404191 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.075431793 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.062009664 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.06805051 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066507394 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068093412 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069286728 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068258115 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071136442 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.064720614 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.075104309 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.071013283 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064315867 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.072620266 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.071886786 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.069087733 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.071699011 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.067105489 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.068293115 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.069259264 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.064429978 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.065384866 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.064237462 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.07192783 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.063120428 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.064817386 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066222979 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.064861579 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.067434166 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.079826524 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.079617807 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075932185 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065093425 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.064439479 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067762253 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.079652141 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067891579 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064386251 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06658366 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.062274532 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.067183171 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06471157 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06895807 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.064806075 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.071646206 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.065514815 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066785395 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072272924 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.062571513 seconds)
  done (took 8.319055902 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.064314156 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.063052838 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06367073 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.064206253 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06428782 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.064768686 seconds)
  done (took 1.974585232 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.084826459 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.062465384 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.075469766 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.064873415 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.098138272 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.071828607 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.072275993 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073013713 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.076550959 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.075865234 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.071852586 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.07434555 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.071175891 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.06625977 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.071512637 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.065507089 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.071544096 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068056952 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.075455677 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066906255 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.077570863 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.065827312 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066271821 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.075832863 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.067201576 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.065086391 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064289442 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.075259727 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.075154157 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.075702005 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.065653301 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.066979417 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071343839 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.072757674 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.071702762 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071786223 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064003495 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.069429473 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065982997 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.066840797 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.073620733 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.065989558 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.066527678 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.069656256 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.073028239 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071282928 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.069877257 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068066374 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.070982937 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.069516983 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.069637643 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.065085368 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.066864352 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.069899364 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071205396 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072761424 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.069559031 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.07130727 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.065698039 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071206107 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.063949803 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.067021766 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072488287 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.066429373 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.067927328 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.069692733 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071633871 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.065872988 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066275287 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.06384175 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.069908386 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.064068724 seconds)
  done (took 6.610739401 seconds)
done (took 26.640502364 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.98534068 seconds)
  done (took 2.524364398 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.552225348 seconds)
  done (took 2.128763048 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.811497714 seconds)
  done (took 8.382597198 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.295190055 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.333801716 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.706716059 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128008298 seconds)
  done (took 3.069855338 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.704792333 seconds)
  done (took 2.284134258 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.226552708 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.215291814 seconds)
  done (took 2.032639246 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.342378568 seconds)
  done (took 1.913204249 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.113897407 seconds)
  done (took 2.682036318 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.225205933 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.154184984 seconds)
  done (took 1.960735626 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.44741114 seconds)
  done (took 2.020898927 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.393624303 seconds)
  done (took 5.97314374 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231560677 seconds)
  done (took 1.85488016 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.22784015 seconds)
  done (took 1.808844708 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.715892731 seconds)
  done (took 3.286347057 seconds)
done (took 43.509269473 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077470221 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080343406 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080005159 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076094028 seconds)
  done (took 1.868145461 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.069500532 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.065293241 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071186674 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.071273678 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069265656 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.070328984 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.070313999 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.067100906 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.068591608 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.066934067 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.065625454 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.066832275 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.069852042 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.066878282 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.069675598 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.07147502 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.067175241 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.067394717 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.069868568 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.066834182 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.070280015 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.067165158 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.0657997 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.06596576 seconds)
  done (took 3.212593229 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.072946128 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.06817575 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.071514801 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.068612689 seconds)
  done (took 1.869006454 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.071383963 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.082128985 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.085199783 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.090771962 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.073799489 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.073943146 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.082157722 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.083058897 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.062243494 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.085964102 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.06525427 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.063957031 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.063997656 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.083902631 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.081575899 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.060465243 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.061005395 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.074337992 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.073478057 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.075558927 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.064916951 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.062320256 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.073438822 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.073370923 seconds)
  done (took 3.355852454 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.074921362 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.061757399 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077198717 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089567234 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091425349 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.062523952 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.078425306 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091513579 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.138074441 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06267153 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068246772 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.062358899 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.103999659 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.062621725 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079273022 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108365738 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112606677 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06642182 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096300006 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.062828534 seconds)
  done (took 3.246127097 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072033751 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.06453376 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066684363 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.062261906 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074515105 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.070195426 seconds)
  done (took 2.000095343 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.063278292 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.062815965 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.063898633 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.063327026 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.068750222 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.063659258 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.062552803 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.064097002 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.064514571 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.064229992 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.063550304 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.063121126 seconds)
  done (took 2.358197413 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.15669056 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.064909709 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.065512694 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.063806267 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.068608015 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.063514319 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078747827 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066121373 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.082917257 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.063488836 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06372301 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.065979172 seconds)
  done (took 2.497306872 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095901174 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12500703 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094547646 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.070737528 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16788908 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09276235 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.088896893 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.119979417 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091197417 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.067107964 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090971207 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133364545 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09375067 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.096393883 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08014303 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122824968 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107716614 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085855154 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111966017 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080020406 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.068459147 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130117171 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.067781822 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090662835 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097909177 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.093455293 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104301117 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127607222 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081572967 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.08827155 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080862217 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.072434053 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.102606026 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.082325572 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.095293781 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091627594 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095817171 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082861129 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.084151649 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117638083 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148875578 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098154692 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098287625 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132147231 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07685025 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.105904643 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079308581 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097103121 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102637857 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091723494 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073664583 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090234306 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.104763503 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100311451 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.080565579 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080818059 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116302507 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.097568924 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094923534 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078695265 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104756582 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.084232157 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105062863 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265612659 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135973208 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098755239 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13368102 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122241354 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094382252 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.087788716 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.090297857 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074110445 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109607456 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096617075 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135027931 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107813836 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098029758 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.095208762 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080803293 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106452934 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11248032 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092086688 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092530856 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142929093 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106368916 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09129141 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087319296 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.136744958 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069623676 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1449863 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08743776 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118600601 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095459177 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135006151 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089138107 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.081877326 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104351581 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101673934 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08744651 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100254839 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080329705 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108802409 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088449651 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096311231 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.07761574 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085991457 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082743871 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.092514314 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.071114272 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101929727 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11377769 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110676417 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07321179 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106591036 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084529362 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.075553776 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091096171 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136220938 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08208271 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.073751599 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148018373 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.091046853 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.114043555 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107060392 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.082347672 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.2667819 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132018334 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089853454 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086849267 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075158444 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152824999 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07477462 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118643241 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080118933 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101203473 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104988886 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129740995 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136484937 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094313437 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076835591 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090736287 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.105053232 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085908126 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084653078 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075666694 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.106892221 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12339863 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.098994473 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079348149 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.091259355 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.067767326 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112672862 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074856691 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083570679 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09484912 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.086670143 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.088063366 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139789446 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.081269256 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10368239 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093728218 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.063984557 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087497035 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146798945 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079273782 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.106101101 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111969074 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080190322 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.064631612 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.092183663 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.071167787 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10751334 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.090001812 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103431821 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07454808 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102598585 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.065214114 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.070645696 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124531552 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097730523 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085150875 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.12772921 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10380505 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.087670473 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.102131467 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.095469157 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092042296 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097627962 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.256028409 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103305875 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.071646085 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124645304 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088141913 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.074432962 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083532266 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075680543 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.074060254 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09635712 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110968621 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085711046 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09749152 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099617163 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087213612 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.108924359 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08827781 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077641656 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131421163 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075056018 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.073316845 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086646412 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.105754986 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087582506 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.132464215 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.078321815 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134230296 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091401126 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07886916 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110623395 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.065591549 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.066372522 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.079193275 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090252223 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111440656 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075869945 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074510352 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113404283 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127160431 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093398773 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098679412 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.064935622 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086840395 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130647067 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.112114575 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078987596 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106016903 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080831678 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124707065 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0923042 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115700146 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101931469 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106506365 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.089921078 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.079440046 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.071955466 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085331394 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106700323 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082717046 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078425455 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.064723752 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.071018057 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088676059 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087345236 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108971947 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083621463 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128956657 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.06918183 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098172654 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.258589669 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10561954 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089405642 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095678393 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.091858091 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092718258 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091107946 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091570638 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07306809 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124485275 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101804583 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077904376 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087758973 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094943776 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105687635 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107763593 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10842 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093819196 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105923685 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122243671 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097573464 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081385267 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083258708 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.091542888 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.083330533 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080036871 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.101940184 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108631103 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09491213 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105118613 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.09094575 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.089734064 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102765073 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089142554 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085110399 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.113725831 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147770742 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.098528356 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100220966 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081771201 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102943494 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10172074 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11184022 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.109616298 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106433712 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.067276037 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.071743954 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.067398042 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103161958 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07745259 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116692906 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075402277 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105014036 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094523501 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078883228 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.065603653 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100727494 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092226313 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.081261313 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122113131 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.112571982 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07213326 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08960934 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106169058 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082039066 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122423091 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.098357877 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09661169 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.068476533 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088481514 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.071650687 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.262124804 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.098944474 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.075151439 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.07341876 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.067245347 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10461477 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082587942 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108107341 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088101659 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097992484 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115315344 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12777191 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084061069 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093263862 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115017398 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11251928 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.081385396 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111290716 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132589302 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.117572267 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.079783667 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.084111515 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105088409 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105435248 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101003203 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075176022 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076809521 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107069436 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113192346 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.066900459 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083476209 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069141042 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.083406501 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109226684 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093424559 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.078684012 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113590473 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073482527 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106156741 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094649712 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121822763 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12145775 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143346017 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095690595 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08419571 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075502638 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119610396 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.067624602 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113376692 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109161195 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086500673 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.067179364 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082782616 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.09469391 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.62542482 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107662812 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07454447 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134288317 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086181361 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114236829 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083646266 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.113522509 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085143391 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096478659 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.085702702 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27804977 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.080101103 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106623241 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.17137874 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106460013 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.104322979 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.071336221 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.083057829 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.070743865 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.075956808 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.07768575 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083326889 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105418955 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.081184223 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102253164 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.076848691 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.103610778 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087022218 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085018709 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.095410336 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077345744 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133986167 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08452179 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11849375 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103550587 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075450202 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.071235594 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.082948597 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.09712913 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079196836 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090819563 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.076888449 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.074328033 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147071873 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098405733 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081806435 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099031504 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.087650002 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.083361818 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088366428 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113091854 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106082085 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070106445 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.084433618 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099813191 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078445569 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.072611986 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093742392 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.06646254 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08580274 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095128837 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092320781 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086153571 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.099139738 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07491474 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083754786 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105707981 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082046644 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.074045049 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073631877 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.073341834 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.072877338 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099922919 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103989677 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109840688 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107498347 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089318138 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092051843 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.077689159 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.217929383 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.23462575 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094695621 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.101410836 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07318229 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.127675349 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085751112 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085028024 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092480517 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097177525 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14782032 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071280914 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105908635 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090519199 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105470225 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083338964 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102973933 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091862997 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088570258 seconds)
  done (took 49.351679115 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.088697728 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.148021757 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.151072081 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077523419 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.091246826 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.114323997 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203727062 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187534463 seconds)
  done (took 2.775954887 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06265343 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.076847429 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098440767 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.078361636 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.061483981 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06266971 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.19817602 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.076555068 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.060969804 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098360792 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.071178038 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.062911268 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.407304738 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.062568182 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06359375 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.072954671 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.064614405 seconds)
  done (took 3.376985741 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.359461834 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.599083131 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.336308135 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072697102 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.964895529 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.083942214 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.330928269 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.131648801 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076002744 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.556421434 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.36835609 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126754818 seconds)
  done (took 18.715960759 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.070417344 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069382074 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.073644674 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.073688091 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071090973 seconds)
  done (took 2.060158221 seconds)
done (took 98.283822963 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.076478569 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.163017209 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.065235241 seconds)
  done (took 1.963697036 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.0784275 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.076785991 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.076244897 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.075325008 seconds)
  done (took 2.016484606 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.068880597 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.071669072 seconds)
  done (took 1.84299629 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.238590798 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.160701717 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090487323 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.078743474 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075389419 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076093272 seconds)
  done (took 1.939322946 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.06767028 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.06712203 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.067592772 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.068274435 seconds)
  done (took 1.967563026 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.06301642 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.062634511 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.064286627 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.066419161 seconds)
  done (took 1.95504971 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.078501822 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.07884941 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.073844857 seconds)
  done (took 1.932680959 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.09090866 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091530179 seconds)
  done (took 1.884011958 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.075261394 seconds)
  done (took 1.779523959 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.084571432 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.093843768 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.14762384 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.10811303 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.146156997 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.130984832 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.07499111 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.076534502 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.071300512 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.069682951 seconds)
  done (took 2.708427885 seconds)
done (took 22.258559086 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07318302 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.361648259 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.356845048 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083764502 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669493232 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.353765331 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.98510321 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088461423 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.096685851 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06553518 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08226349 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.644799767 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.974319797 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.320370734 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.961190218 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324994817 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.645904869 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.063057621 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.062555933 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.063137897 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.967546886 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.062591385 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.063133407 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.063073714 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705186873 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.367766697 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.063638516 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323826658 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063374506 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.065745382 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35130956 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06489089 seconds)
  done (took 16.121562963 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.065639347 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.115147199 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.067868986 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.078359349 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.065291847 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.064636324 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.0661238 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.063744316 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.103341512 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063717135 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079388242 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.062567518 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.067319182 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065115889 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083603551 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064042114 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065257839 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064295191 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06409175 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0677721 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.081610227 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063964617 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064658179 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064106509 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064248273 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.076627359 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065177697 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.063860167 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064117637 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066253857 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.06750623 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065393993 seconds)
  done (took 3.96317708 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115343944 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123568149 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071252395 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105066315 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116991885 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067733361 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14669114 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09001878 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111722489 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066475973 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081411549 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066014803 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100481376 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067681916 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085571105 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064729924 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065659213 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06464618 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063709093 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064740232 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082215836 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063655881 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064831921 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064384151 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064954193 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07869203 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065000341 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064043141 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063787997 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066504347 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067723997 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065432199 seconds)
  done (took 4.274082213 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.065258547 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.0679304 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.07542329 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.076511936 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.064381188 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.067097385 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.066626049 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.064101844 seconds)
  done (took 2.274202274 seconds)
done (took 28.356844052 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.073337283 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.063059343 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.066527505 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082904733 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.06865184 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.066432037 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.060797966 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.071470317 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.068833715 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.068815467 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.070177409 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.064104494 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.067401138 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.062740202 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.069945149 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.063645155 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.070530816 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068262827 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.069346521 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.070129219 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.067193993 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.068793635 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.069848722 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.067533336 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.066917829 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.06665174 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.071148419 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.067530414 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.062486778 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.064856124 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.064313784 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.072747068 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069248618 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.069053906 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.062180235 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.062115609 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.066615011 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.064185836 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.068478672 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.071230759 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.06360156 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.071053044 seconds)
  done (took 4.53669306 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.079587579 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.084099006 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.077316205 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.076368491 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.0935548 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.076073685 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.081180563 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.073098567 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.07217031 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.080372844 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.068522307 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.074813404 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.072819251 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.067298357 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.073228648 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.069562166 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.074112236 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.068549027 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07214624 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.072661057 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081486935 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.066939533 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.07460666 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.073676492 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.069248032 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.074746352 seconds)
  done (took 3.682173265 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.068995117 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.079594637 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087036177 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142041228 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108647614 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075602816 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076109918 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088794868 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.091672753 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.062962041 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.066559064 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.087697708 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088069946 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.071449675 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104529685 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.079094223 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.078813237 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.065399232 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.069679779 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091951629 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083510764 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081209015 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.090887757 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080982051 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.064343121 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.067139606 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070936414 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.078283785 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071228662 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075812646 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069031351 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.067775724 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.063825142 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07343395 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.067007159 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.061678672 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.085922285 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.0738488 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.075163675 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.10411039 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072619859 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.065417256 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092085512 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124873953 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.064381648 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.068030202 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.067727997 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075913353 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.065524279 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091603503 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076812503 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.062951463 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.063347172 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.063670989 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.064135984 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078290999 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066228457 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.066123357 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075039694 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069837964 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086459933 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.069384296 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083643429 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.064050758 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074479342 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06527617 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.065418727 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063050011 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094884853 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07086589 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.1121428 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.065095198 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.062337288 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.073595607 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.072420644 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.068279151 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.062183394 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079177718 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072775054 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.065646083 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.073503918 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.065222504 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.065343644 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09280429 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.062817567 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.061915829 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.061391333 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.065727904 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.065473398 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06293314 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.075520874 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06213664 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.0665932 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.076493977 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.063165548 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.063849049 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.067212862 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.06493811 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.061985006 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076394806 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.067217597 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.063508725 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.073719291 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.063061365 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.0650516 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.075967282 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.069084188 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.061712633 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.064088281 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.065177848 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.063718984 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.066851273 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.06567461 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.064828175 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.070002536 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.070256278 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.069747849 seconds)
  done (took 10.367000126 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.155921359 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.149045663 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.066751026 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142534861 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.073273639 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.070377141 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.140949661 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.082908584 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06359651 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.063917253 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.062649893 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.090954355 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.087897087 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.097903195 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.067314293 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06319313 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.085678171 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.094212248 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.141784826 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.137457882 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.088764467 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.072182936 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.067567137 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.066640259 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.066300464 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.073312882 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.083074292 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.073861265 seconds)
  done (took 4.300607206 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.072366306 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.08766578 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.067242282 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.07453015 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.081595415 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.063618202 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.064806294 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.065095557 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.077136692 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.072948021 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.063496854 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.06775772 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.067013527 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.067795156 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.066105543 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.071493842 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.072093694 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.064507773 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.068889698 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.070432835 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.075306257 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.090010835 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.069337914 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.064453972 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.067421989 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06449449 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.073849164 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.07693728 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.064881384 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.079799372 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.062761772 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.069054345 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.078447032 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.065380439 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064533358 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065354731 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.065094303 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.064830042 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.065432129 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.063592544 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.064056746 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.069267174 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06364551 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.072992142 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078578647 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.072182614 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.067066465 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.06705471 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.067783803 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.063260859 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.067499452 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067197758 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067219335 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.071993858 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.068299081 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.067399747 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068563594 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.090766243 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.070791778 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.062557626 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.062583233 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.061857263 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.065076258 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.073970948 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081732348 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.067198946 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.063514199 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.064811995 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070143215 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078552152 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06464808 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069626506 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.062574466 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.065642219 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.067631255 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.067369228 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.065548321 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.064012544 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.064576962 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.065424723 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.06467226 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.065210508 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.064499911 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067592803 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.063154872 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.063383104 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06508937 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.065608401 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.071373456 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.063458197 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.067022363 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065800239 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.063888899 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.067208405 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.0705282 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.067494888 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.077206662 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.075765948 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.064662757 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.061776092 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.075486328 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.065697589 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.062336262 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.069125493 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.067157678 seconds)
  done (took 8.975750737 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.085148728 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06499824 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.078967975 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.085498488 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.073627943 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.070428502 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074902483 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066190822 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.080563681 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.064247764 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.073039677 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.061788807 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07425419 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075344804 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.066540173 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075189312 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.067430301 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081921109 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.079486285 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.064005059 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073979305 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.077367797 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.076845859 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079067224 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078574087 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079863854 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.07653531 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.065870486 seconds)
  done (took 3.851041653 seconds)
done (took 37.433379073 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.793115316 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.97496039 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.790444519 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.976701925 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.94724886 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.989531668 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.835217591 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.787834313 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.856338389 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.847916955 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.11422189 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.269628379 seconds)
done (took 65.96581989 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.805360582 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.949731212 seconds)
    (2/2) benchmarking "String"...
    done (took 2.062228921 seconds)
  done (took 5.74003572 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.046746695 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.603586433 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.14506176 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.790193504 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.796784261 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.339630603 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.592697394 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.257184135 seconds)
  done (took 31.25476613 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.92120352 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.02004166 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.464147734 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.497217074 seconds)
  done (took 15.672999879 seconds)
done (took 64.339152091 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.837450666 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.791560336 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.808524933 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.821847137 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.802488618 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.792481608 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.792910581 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.792054521 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.825467586 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.848609172 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.794199092 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.797091719 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.791441873 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.813703704 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.491260867 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.849150336 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.803528192 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.802191076 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.797596764 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.807791074 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.795217971 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.794306565 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.269997591 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.976730361 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.407861516 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.060459678 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.245066206 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.203658196 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.799162799 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.79222301 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.836037374 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.055513084 seconds)
  done (took 204.827823529 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.791588261 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.875381847 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.927078166 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.838433475 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.398695745 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.96697908 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.887460395 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.425948075 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.792381421 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.80395054 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.971988088 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.793481656 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.003915828 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.738692208 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.828700745 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.829268671 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.92791741 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.012765405 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.831274284 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.954982438 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.816039423 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.848904688 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.808399298 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.962549009 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.83347835 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.889049848 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.813156928 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.81507325 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.967166739 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.905493275 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.809843683 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.813765392 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.958569966 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.661556094 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.801141069 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.825489452 seconds)
  done (took 170.8645961 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.982374572 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.802466295 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.792742798 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.8480581 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.913802524 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.797779483 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.447954577 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.801953641 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.33865685 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.797598197 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.793829966 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.794597124 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.793957921 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.807218215 seconds)
    (14/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.794693036 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.883282305 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.795174036 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.806667044 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.797224092 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.819947515 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.79862406 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.792298343 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.795290359 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.795133713 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.795522913 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.796970565 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.796705309 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.888952642 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.035064532 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.798229033 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.797325118 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.899346674 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.812044887 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.892533825 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.800880067 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.887124423 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.848965804 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.905309137 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.799465723 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.013269428 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.87099562 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.794021359 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.796758377 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.859238885 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.806711063 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.795923535 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.797821616 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.804151426 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.860235435 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.038642184 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.793774892 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.917108299 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.276508525 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.797982919 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.798383014 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.797022919 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.795384843 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.364385288 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.801088648 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.797953736 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.797107782 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.803210935 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.802916707 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.795093869 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.798862741 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.18341043 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.869339254 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.928975734 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.987124527 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.799688419 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.381051613 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.929407977 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.797751122 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.798328443 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.798944744 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.801248858 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.796855501 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.80247631 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.92100068 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.806583747 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.911284408 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.880157398 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.917789759 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.800417416 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.805998161 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.609367041 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.86533055 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.829141388 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.620141428 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.80050047 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.174164965 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.565643991 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.802562684 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.801215379 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.811834474 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.79943465 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.798851748 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.800821165 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.879897356 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.79784553 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.918797356 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.519383595 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.930327014 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.987839592 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.799866037 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.799730947 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.804511433 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.893442746 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.966917175 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.800181745 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.864957081 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.805632992 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.803327937 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.944651306 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.797488604 seconds)
  done (took 403.401289172 seconds)
done (took 782.864352646 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.387359047 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.36452723 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.477421714 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.376105614 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.350849933 seconds)
  done (took 13.691380144 seconds)
done (took 15.422296596 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.815930296 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.802547242 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.864634287 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.884871441 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.814916446 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.818426995 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.879254173 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.818021267 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.850739135 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.856312937 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.885102018 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.886158677 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.825960922 seconds)
  done (took 25.740182393 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.811197199 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.959243905 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.036779731 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.840368044 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.811756062 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.034069287 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.863128312 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.95252207 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.953204263 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.0391955 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.046987808 seconds)
  done (took 23.087954872 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.81020861 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.965608864 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.036346921 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.843075475 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.809691069 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.036782062 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.870940538 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.947483575 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.952173863 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.036060929 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.041350963 seconds)
  done (took 23.095751742 seconds)
done (took 73.661036764 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.805312148 seconds)
  done (took 3.539759212 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.824518993 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.969649155 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.802153267 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.800661501 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.804597109 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.803340573 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.80121216 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.803327702 seconds)
  done (took 16.348258667 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.80339098 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.805278136 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.80451666 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.803757935 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.80488439 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.800841781 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.805199757 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.805004991 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.803321323 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.804519898 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.802400155 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.805382064 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.806669359 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.803699084 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.803274822 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.805416713 seconds)
  done (took 30.607043743 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.805809886 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.806422161 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.803901852 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.807325443 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.806039543 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.804964024 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.808161317 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.805178403 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.805291084 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.804443382 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.806835999 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.804723659 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.804357731 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.806674603 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.804823192 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.802418924 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.804807047 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.805027584 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.810506432 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.806169847 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.805921915 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.805319486 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.804714881 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.8049671 seconds)
  done (took 45.075648635 seconds)
done (took 97.314360079 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.569456517 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.642032084 seconds)
  done (took 9.951322397 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.806878257 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.806122739 seconds)
  done (took 5.354770777 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.806433237 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.803885266 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.805710922 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.804389578 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.806151019 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.806525794 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.805748032 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.805505664 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.805398364 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.807867013 seconds)
  done (took 19.795066424 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.806494409 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.805363287 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.808208931 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.805348774 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.805467723 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.808790136 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.805562124 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.808902207 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.804701435 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.806809995 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.805783102 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.806873126 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.80631679 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.806702261 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.806851175 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.808086058 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.805656737 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.808392232 seconds)
  done (took 34.258895877 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.807774853 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.807231702 seconds)
  done (took 5.352450192 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.808457385 seconds)
    (2/7) benchmarking "second"...
    done (took 1.806912049 seconds)
    (3/7) benchmarking "month"...
    done (took 1.807361005 seconds)
    (4/7) benchmarking "year"...
    done (took 1.806526536 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.806618272 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.807788637 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.806315748 seconds)
  done (took 14.387962844 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.808169049 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.964016427 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.013865331 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.639809846 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.808691311 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.809539375 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.160594554 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.811689263 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.815550861 seconds)
  done (took 20.573171196 seconds)
done (took 111.410249572 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.643469804 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.808022282 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.076712724 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.886209052 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.824289547 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.099183947 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.80956856 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.447203846 seconds)
done (took 42.334981597 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.901720655 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.805931535 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.834861507 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.835154586 seconds)
  done (took 22.218460501 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.809064518 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.150855723 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.831079766 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.642907673 seconds)
  done (took 22.195154619 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.193279325 seconds)
    (2/2) benchmarking "read"...
    done (took 2.154439207 seconds)
  done (took 6.095870262 seconds)
done (took 59.152674479 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.810546823 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.810837183 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.808708243 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.807318045 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.810047392 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.809718778 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.810508999 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.809336305 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.812246985 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.809603566 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.810574027 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.809791022 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810128661 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.8104146 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.812497369 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.809288301 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.812166385 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.809117247 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812214228 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.811046501 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.811640249 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.813415405 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.81239678 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.811793761 seconds)
  done (took 45.198629792 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.809506348 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.809640447 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.811964124 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.811454891 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.811314528 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.810492548 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.811938699 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.809623211 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.811982148 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.813699179 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.811896714 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.810334559 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.81116378 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.812239762 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811189495 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.811086296 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.811675643 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.811705797 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.811704719 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.813708807 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.815362281 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812692116 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.811693009 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.809994463 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.812766821 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.811262505 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.810593934 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.812373901 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.811241616 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.811669977 seconds)
  done (took 56.092512459 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.811244728 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.814579315 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.809623348 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.810252318 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.81286142 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.813525227 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.811127163 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.809906823 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.813673045 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.813614163 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.810589487 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.812403585 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.812020668 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.814380873 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.812378399 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.813095821 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.814424109 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.811132979 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.812400525 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.813268499 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.813679372 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.814924584 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.812875835 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.813570963 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.813021467 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.811470101 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.812747679 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.815002776 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.812524134 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.814329054 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.815136424 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.814082672 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.812433473 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.812820765 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.812914724 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.816258512 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.813447838 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.812930079 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.814014057 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.814259071 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.81512871 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.815088755 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.813228408 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.813423188 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.812270409 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.814600839 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.812909058 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.81500907 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.812201288 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.815911985 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.813928766 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.813367651 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.813980954 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.81364935 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.815074936 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.81295788 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.813750802 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.813295542 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.813687926 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.812815921 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.814804229 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.813810388 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.814491381 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.813958581 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.814698936 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.812629354 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.816653523 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.813256634 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.813341697 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.814888277 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.814325121 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.814162492 seconds)
  done (took 132.312258327 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.815115189 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.815980673 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.813910555 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.814461711 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.813525941 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.814536885 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.814392907 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.815119178 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.813352618 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.81416612 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.815234363 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.814125552 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812664069 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.81651741 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.816295232 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.814369859 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.81476032 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.815342945 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.815350855 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.816200424 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.815602822 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.81498061 seconds)
  done (took 41.674493655 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.814251371 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.813812448 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.814134573 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.814030213 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.816802578 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.815459823 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.815353165 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.815056805 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.815353899 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.817515016 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.817699947 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.814363338 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.816021258 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81531452 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.815399296 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.818349075 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.816769373 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.816177448 seconds)
  done (took 34.430371762 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.815214208 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.815860967 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.816276831 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.816990057 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.815855286 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.816820292 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.815540428 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.816302849 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.815168247 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.816967566 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.815817569 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.8156277 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.816965698 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.816376842 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.816306538 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.817772013 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.818292566 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.816536401 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.817668719 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.818463337 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.819096572 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.817347273 seconds)
  done (took 41.71717287 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.818239943 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.81795997 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.816605356 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.818249521 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.816923252 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.817555981 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.818103397 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.81803708 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.816808655 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.816487518 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.819520776 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.818946988 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.8183812 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.818775848 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.819143361 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.817157813 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.818184473 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.818099498 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.820911714 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.819229945 seconds)
  done (took 38.113538632 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.818427271 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.819018603 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.817933475 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.817360552 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816205548 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.818829011 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.817954398 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.818959716 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.819131301 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.81799304 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.818736023 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.819145121 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.820116039 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.818995513 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.819151732 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.8193862 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.817482533 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.817912029 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.820219063 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.81985443 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.818778008 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.818808784 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.819926909 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.820605208 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.820003282 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.819923637 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.818249452 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.819327555 seconds)
  done (took 52.680696116 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.820746377 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.819928289 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.820521319 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.82014404 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.819971433 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.819627084 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.822246673 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.822235694 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.822741206 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.820328636 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.819816547 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.819836181 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.820275315 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.819736653 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.821307303 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.820244572 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819403763 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.822545804 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.82278269 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.819466843 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.819795189 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82114352 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.821786325 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.821772158 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.820794539 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.820211956 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.822619438 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.820622242 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.821488098 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.820884444 seconds)
  done (took 56.379236183 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.841982074 seconds)
    (2/2) benchmarking "in"...
    done (took 1.841750885 seconds)
  done (took 5.437464749 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.821781904 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.8216846 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.824559714 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.821664885 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.823258034 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.821045269 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.822445873 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.822479506 seconds)
  done (took 16.332062385 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.82201085 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.825447335 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.823649035 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.821471804 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.824405962 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.829725137 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.825301414 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.825131471 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.825258224 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.823381851 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.828478335 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.82687596 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.831294257 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.827990287 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.821251683 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.823590765 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.826976094 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.826388108 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.825759284 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.822809489 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.827309656 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.825496041 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.824437644 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.823942782 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.823087233 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.823691944 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.83296398 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.823990531 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.823611707 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.823636251 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.83142644 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.826902915 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.824672231 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.826632823 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.82475314 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.826667759 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.831014228 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.827430825 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.826003681 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.826203841 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.826786007 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.827434877 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.827885909 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.830709375 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.82761948 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.824656787 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.82583409 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.82635117 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.82501734 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.828821301 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.833997375 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.825409856 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.826630235 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.827627873 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.828732694 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.823771671 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.82367674 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.828941254 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.833082341 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.831653084 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.830363925 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.846255591 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.837106466 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.824259342 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.828748004 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.83538982 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.854066712 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.830231814 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.827427435 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.825960709 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.834564819 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.828176769 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.824960558 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.828005377 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.838241692 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.835448281 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.830417222 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.827160475 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.827786997 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.82733853 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.8284565 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.827451727 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.829020201 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.827747968 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.839196981 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.851868297 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.828222224 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.82715253 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.831411634 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.826232735 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.833951801 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.830720468 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.827439799 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.82622627 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.8299555 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.829987345 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.829207553 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.830118331 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.826241006 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.836638199 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.829774155 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.827402415 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.831269704 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.833780687 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.827042131 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.826886008 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.826687225 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.826730113 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.835161623 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.830095744 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.828036393 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.827029112 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.830274766 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.832304912 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.829156969 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.831541616 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.837818006 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.836579791 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.832307803 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.832306005 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.83049793 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.831646142 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.839003829 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.854066775 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.828962751 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.834216915 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.833583869 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.842075384 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.833942251 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.829112665 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.831730087 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.829095875 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.831109426 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.830919086 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.828608829 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.828782177 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.828895177 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.830736574 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.829093791 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.829144236 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.832004935 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.831898351 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.831938444 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.830228277 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.833948055 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.829520908 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.832432734 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.837648657 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.830866534 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.830079905 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.829795367 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.831592372 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.832192839 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.830598556 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.830055751 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.83181719 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.830448403 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.830973062 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.832559907 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.829896802 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.832255522 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.83214581 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.835517699 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.830430827 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.833677121 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.831753143 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.832291699 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.83268409 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.831207526 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.830795399 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.83243961 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.830850087 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.835808634 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.831354548 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.831933276 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.833983153 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.832397949 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.832095903 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.834720308 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.84337653 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.833742876 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.842445376 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.830821872 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.842988084 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.831700302 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.833951118 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.832771248 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.832521451 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.832833388 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.831980929 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.832712579 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.835942759 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.852722179 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.843520746 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.833308484 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.835039731 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.83878559 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.836771201 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.837812806 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.831075472 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.833973274 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.832690039 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.833245863 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.833832004 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.833630599 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.836482762 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.832873762 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.834651266 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.837999888 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.832414397 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.834073838 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.833088688 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.833015795 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.835071878 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.833812583 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.834591462 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.834986112 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.833386531 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.840852474 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.837495256 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.8336223 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.835209289 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.83758318 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.834109134 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.835408741 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.8359055 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.83727399 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.834007453 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.836923884 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.842088967 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.83666301 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.836008976 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.835642793 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.835232712 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.836536623 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.83604043 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.840413979 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.845911171 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.837844567 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.836422085 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.842109289 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.836048632 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.838053999 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.83650842 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.835894949 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.834746605 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.835619837 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.835269085 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.834399493 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.843149926 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.837553203 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.836521865 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.836082825 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.837714324 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.836605747 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.837779076 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.835797792 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.8388558 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.845163147 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.842061569 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.837802889 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.839312345 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.83961997 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.838611308 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.84086754 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.837452742 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.848275515 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.846484982 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.836346603 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.836743974 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.836124071 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.837770777 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.836811098 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.837287605 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.845738601 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.838819429 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.840654653 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.843037239 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.839570552 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.838015785 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.844341926 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.839460966 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.841982588 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.839761083 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.838649467 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.839143846 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.837691741 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.840326452 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.839278343 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.84165865 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.844236079 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.840701434 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.840228101 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.83922901 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.847656014 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.840563257 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.840148406 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.847555395 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.840608821 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.839220612 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.840457134 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.838287321 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.839292319 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.839869305 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.839267893 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.841751847 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.840919491 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.84446566 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.850430948 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.84248979 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.848354183 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.842631251 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.850768093 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.840323104 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.842344538 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.840276516 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.842119404 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.848849679 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.842741399 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.839505493 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.848131616 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.842746982 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.841944583 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.84543132 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.840242317 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.840386438 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.842109938 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.841900877 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.849694807 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.844700052 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.84024219 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.840229635 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.84145305 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.842235852 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.842521405 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.842518113 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.842369478 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.842896256 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.842590978 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.842353933 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.841937701 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.84378145 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.843082038 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.842345762 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.84309567 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.85072328 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.841531662 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.844603666 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.846575094 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.841320677 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.851054976 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.843069315 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.844615344 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.842890121 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.843589154 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.845115573 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.842367154 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.84197588 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.842938134 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.843752209 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.843683635 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.854350347 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.851763825 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.847195351 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.843238946 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.84320904 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.843287258 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.851758733 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.868705836 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.843504639 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.8443747 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.849061643 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.853510067 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.844661055 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.849590645 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.847387106 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.851183617 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.846702122 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.845792371 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.846804822 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.855044994 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.842692051 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.843549303 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.845223703 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.850426035 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.846893424 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.845567806 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.84657832 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.848586729 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.845473326 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.856067178 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.847380796 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.847507674 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.845495535 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.845445704 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.845793597 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.847139575 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.846024309 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.846970477 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.846886377 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.845199031 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.845538762 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.848463554 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.843614382 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.84960915 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.853900274 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.845984976 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.844059207 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.848724766 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.844856445 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.846770448 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.847862073 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.84663373 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.848615733 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.845981465 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.848201538 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.848867782 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.856250662 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.849411651 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.846198634 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.847749124 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.850234657 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.844754202 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.845319584 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.846122121 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.855979627 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.851740812 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.858010198 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.855990392 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.84634554 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.848187691 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.855726614 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.856800584 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.846048003 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.847299332 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.848844744 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.848358295 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.847792795 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.847113227 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.845841147 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.850432083 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.854211551 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.848570656 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.849058023 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.847401677 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.847845625 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.849337383 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.850782649 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.854220592 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.847507966 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.848361054 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.84703823 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.848473163 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.849158473 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.850398374 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.848239134 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.848387735 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.851684816 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.850241783 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.853574465 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.849481158 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.850964527 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.851310165 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.847639073 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.847864725 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.849864952 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.848770998 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.847754722 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.852326188 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.857842681 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.848877174 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.848831608 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.850978412 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.852537215 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.850067227 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.849792312 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.84876632 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.848320536 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.857700684 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.851789628 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.849585379 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.850093388 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.850974942 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.854583847 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.848921239 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.854244953 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.848163045 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.849160886 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.848118923 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.852747777 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.861143615 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.85450315 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.852419066 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.85960798 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.853000643 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.850220526 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.849055735 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.849489682 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.850470318 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.849635777 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.852921705 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.85116552 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.851080015 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.849864268 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.851693903 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.850302445 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.85254721 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.850374767 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.851178534 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.85567492 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.862387485 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.85993207 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.851526419 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.850700208 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.851748058 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.853394502 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.863239163 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.851193216 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.852138285 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.849225704 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.850823975 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.85205217 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.857575399 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.860899827 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.854081847 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.850370004 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.855338451 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.87257781 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.852131855 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.860678997 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.884070008 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.853678661 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.85167445 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.850515256 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.852127243 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.851642817 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.854684233 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.852419141 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.85954229 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.853328122 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.853181815 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.859051039 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.85233435 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.853303765 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.852980958 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.85551366 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.857672793 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.852348247 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.860694338 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.852341073 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.852279877 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.853045907 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.856600854 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.853241372 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.852391954 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.853988862 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.853657875 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.852579956 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.852774981 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.861575454 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.854169679 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.854559761 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.867336685 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.866577304 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.854735875 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.853311538 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.854643945 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.858897989 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.855111315 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.853574587 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.858231124 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.863866327 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.856369562 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.863274029 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.856234337 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.85433447 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.854167697 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.854930313 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.853359363 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.865786889 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.865981947 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.855791109 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.856256951 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.861005864 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.855994787 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.861420196 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.860415928 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.856956484 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.855835043 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.853725199 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.855535329 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.85535661 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.854492303 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.857390615 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.863924226 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.854724521 seconds)
  done (took 1099.369574126 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.855183426 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.855679947 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.857038712 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.855476118 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.855233056 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.85606856 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.855063859 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.855376432 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.855044182 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.856393816 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.856042101 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.856457391 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.856347524 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.855791256 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.855669893 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.857006068 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.857161204 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.857958264 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.8572856 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.857086572 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.855547979 seconds)
  done (took 40.766585027 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.856401704 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.858644771 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.85663539 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.858930179 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.857685154 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.857794916 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.856788396 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.859917076 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.855495819 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.856282533 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.857011242 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.85611606 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.856106019 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.859515732 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.855977633 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.856603347 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.856348036 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.855762844 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.857336359 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.85741595 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.855474232 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.856361505 seconds)
  done (took 42.641938302 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.857278183 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.859225172 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.855251389 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.856519974 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.856755826 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.856717239 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.856490672 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.857739993 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.854815934 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.855640859 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.86338108 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.866838981 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.854388941 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.858477557 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.855404691 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.856343877 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.00576112 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.858545249 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.857251021 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.856049636 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.856647986 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.861882419 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.857353452 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.855961235 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.855733003 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.855258908 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.855710186 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.855005264 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.855010474 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.856195326 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.859297478 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.855449812 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.853874082 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.857714483 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.853654705 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.854434238 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.859000659 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.853282549 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.854546287 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.848632956 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.857970415 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.875686055 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.849031621 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.850811392 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.859491951 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.848521693 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.849182502 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.851473615 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.858603602 seconds)
  done (took 92.901639823 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.847428332 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.848122859 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.849256473 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.850396561 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.848603782 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.849591227 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.847584917 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.847640141 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.848365766 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.848827682 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.855237504 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.849227976 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.849128573 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.847106124 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.846264457 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.846614461 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.847939059 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.849187857 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.847958152 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.848175277 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.84726196 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.849140632 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.848491352 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.849313072 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.84771863 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.848480253 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.848799741 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.850698124 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.848845327 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.847164379 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.847003191 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.849510631 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.849322278 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.847227455 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.847802635 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.848825658 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.847481402 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.850524372 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.847102568 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.846316214 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.846304134 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.845543923 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.848396493 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.846709045 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.847668583 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.845854738 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.847119609 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.848640262 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.846837722 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.84626759 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.847469731 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.847511718 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.847330804 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.847100452 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.845975982 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.846374727 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.847973967 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.847585919 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.848082833 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.850575424 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.848293265 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.849050188 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.849216006 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.847895193 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.848785416 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.847080521 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.846846871 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.848301615 seconds)
  done (took 127.451433018 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.847981791 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.848495007 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.849733564 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.847800916 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.849954493 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.848587189 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.849343094 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.847969842 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.849681415 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.849762022 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.848407571 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.849298682 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.848824094 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.8499509 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.849559553 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.849741513 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.850506274 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.85012194 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.848487105 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.85115064 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.848976249 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.849136117 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.849720847 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.850171333 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.849550606 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.851243764 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.85139305 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.8512351 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.850318533 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.850584219 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.851218609 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.85030076 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.84859185 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.852121477 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.850356966 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.847571488 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.850138583 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.850513316 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.851169936 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.850219807 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.850252856 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.849477561 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.850342335 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.850211639 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.849695552 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.850298009 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.849995493 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.851237037 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.851027479 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.852262168 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.849784729 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.851077087 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.849675171 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.851169608 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.849642202 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.851348604 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.850730225 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.848309009 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.851937845 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.851829856 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.852453355 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.850541398 seconds)
  done (took 116.485964331 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.851433897 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.851741852 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.851018416 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.849559776 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.849524755 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.849971705 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.850067358 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.851085961 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.845633546 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.843922811 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842351453 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.843002835 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.845373984 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848310717 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.842012807 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84689013 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.842690929 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.844970347 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.843792962 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.844754389 seconds)
  done (took 38.722597099 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.842407001 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.843924282 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.843379928 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.844925237 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.844406419 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.842309876 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.843745758 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842720235 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843940513 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844414244 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.843226094 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.841354883 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84156087 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.842252379 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.846446615 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.844142553 seconds)
  done (took 31.270732106 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.84192499 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.842562137 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.844618383 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.839793125 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.841371873 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.842013432 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.842237643 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.842076445 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.841661205 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.839474218 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.841793298 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.842777178 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.842268361 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.841364925 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.842686582 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.84103251 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.844834845 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.843066857 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.84380335 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.843656511 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.841746393 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.840678713 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.840911249 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.841756559 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.842718005 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.841959865 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.841062126 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.841481185 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.843369036 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.845864266 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.84245352 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.841873846 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.841789374 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.841871337 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.839117434 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.842691749 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.84112687 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.84270842 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.839793606 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.841694749 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.842558325 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.839256996 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.841023322 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.841441971 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.843224501 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.841705896 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.842297635 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.842219857 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.840018579 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.83911249 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.840508001 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.840127972 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.842564915 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.83830126 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.841604285 seconds)
  done (took 103.073750883 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.839958889 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.841449411 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.836455657 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.841168461 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.84159517 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.837507028 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.842850527 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.839652801 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.836876095 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.838939413 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.837537471 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.839564289 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.841744329 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.839162163 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.841505781 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.838102432 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.837994209 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.839474845 seconds)
  done (took 34.882001762 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.83826517 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.836673213 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.835913031 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.840620381 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.840416862 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.83703119 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.838404633 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.839864959 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.840843181 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.843551036 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838111105 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.839919978 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840514029 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.841295032 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.839432445 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.839085873 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.838439975 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.837226929 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.836687368 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.838462353 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.84186723 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.836860549 seconds)
  done (took 42.227733461 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.840290634 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.839322689 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.853630911 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.859140145 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.855847439 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.871193676 seconds)
  done (took 12.883921381 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836709222 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840563214 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.840177372 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841226138 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838904028 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837446721 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841399321 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839040278 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841857366 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840534638 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838938393 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840713713 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842183564 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83775086 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838244493 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837859732 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840605104 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840964416 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840938173 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841376519 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837817838 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83862349 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8399279 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844790507 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841960425 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840381375 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840063948 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842189924 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844083055 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841258519 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84173 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842179837 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841500442 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843390006 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841651182 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840786402 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839476738 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838996725 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841142362 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844786911 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.839925019 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840650385 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838882542 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83719241 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84116785 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839883403 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841818519 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840705949 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841511399 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839012282 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841963122 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840334005 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839892341 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841551248 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840158389 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843288934 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839955157 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839893776 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841459629 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84107326 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840209197 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843231412 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84291925 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841234194 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839973904 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841641963 seconds)
  done (took 123.254641809 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8403153 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.841272988 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840124221 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839366565 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844936479 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840062091 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839793123 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840908292 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840566881 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839077278 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841830472 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84050821 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838846285 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842121214 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84282659 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842246157 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840227992 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842561885 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842249889 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84095608 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841516967 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843846868 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841959388 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840334879 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841908543 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841416867 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841913055 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840397874 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842792601 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841777508 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842762659 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840784103 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843063651 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.841635967 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8412244 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841567366 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839673275 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842695091 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840150336 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84169967 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842191069 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842795046 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84403136 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843831646 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843631654 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841790843 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840738191 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843009853 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843402824 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84308774 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841322654 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844279933 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843667075 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843373919 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842091303 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842675892 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842336464 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842124933 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841841864 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843928739 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844837341 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842914313 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84394202 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843441396 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846132489 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846806017 seconds)
  done (took 123.356011997 seconds)
done (took 2551.404182142 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.879914649 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.860837238 seconds)
  done (took 15.517933266 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.003039034 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.958617073 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.844792472 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.882255112 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.843337086 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.868904538 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.865403438 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.84382031 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.845282742 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.839750466 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.842468275 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.030906236 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.851726444 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.842750305 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.844495534 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.937105998 seconds)
  done (took 51.927328604 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.849584721 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.850068583 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.858042979 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.852802312 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.84985563 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.859777199 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.880344069 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.854137871 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.88567416 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.858321722 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.916950663 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.859706705 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.850208038 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.900103155 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.863606755 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.863967829 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.94307446 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.923976421 seconds)
  done (took 35.496360675 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.926351661 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.860949688 seconds)
  done (took 10.572104528 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.859707834 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.845564842 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.885066502 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.850808243 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.862813829 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.878772789 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.868835986 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.86586503 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.855016002 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.860654966 seconds)
  done (took 70.415366837 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.8546343 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.851452266 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.84810492 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.846437189 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.843416272 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.849955435 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.84512093 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.844469351 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.528318473 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.884203609 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.854939876 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.854998438 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.848714634 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.849213226 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.848080549 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.87467452 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.956642422 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.844359232 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.849246557 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.853338324 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.847959732 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.910780895 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.859936834 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.851656312 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.879402534 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.523909414 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.859297151 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.853430343 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.973232415 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.847875055 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.847952109 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.057851198 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.854804159 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.315715389 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.123780369 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.853087151 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.861167589 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.854731999 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.847451976 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.968765424 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.848848292 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.857187217 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.821793402 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.099681057 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.943043183 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.891802539 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.191214603 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.849671329 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.852680416 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.879258246 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.847685936 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.847784652 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.867605127 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.367734423 seconds)
  done (took 131.765961099 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.846006004 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.195038078 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.015044096 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.846970086 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.133055791 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.052369282 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.848435952 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.892165318 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.849062539 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.073289225 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.097351389 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.953380866 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.848183928 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.845709613 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.847590059 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.845592646 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.000796527 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.915505352 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.847999689 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.847580296 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.871532076 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.086033624 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.963842261 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.848516161 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.873661607 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.054810752 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.972848523 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.950510198 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.629082018 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.847028021 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.911329873 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.849179959 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.850985858 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.848700639 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.001227927 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.941550182 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.932040368 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.851821241 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.848582008 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.848049166 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.597607195 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.044813516 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.941101618 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.983658818 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.09660914 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.050222925 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.624367187 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.848261419 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.583982432 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.009325083 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.078324587 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.074940623 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.968100083 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.852481078 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.182571323 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.848792493 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.845144685 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.095696283 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.067449584 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.944500555 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.849542039 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.847597671 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.845670941 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.139533337 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.849901714 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.940408535 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.850441691 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.847907165 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.942503321 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.950356456 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.079473571 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.064348063 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.880819244 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.203162438 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.363910455 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.095258561 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.913107557 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.10015464 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.853241636 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.848075858 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.923824727 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.70272876 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.099263279 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.131629652 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.093717751 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.883202477 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.565591029 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.850961859 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.074574748 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.067260333 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.113442145 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.091760229 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.090931355 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.175947297 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.851716874 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.852478716 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.178577889 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.97457932 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.851361588 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.194661989 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.08304534 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.415219715 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.879805566 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.153762572 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979512264 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.853857328 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.537653003 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.849171005 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.080487985 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.888250033 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.855863131 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.854652048 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.068269148 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.845324223 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.854313918 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.492264232 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.911725115 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.853908307 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.082228454 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.857029569 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.117311707 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.856020015 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.084214056 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.424738811 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.883590558 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.022049543 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.100380131 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.851364816 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.096549148 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.094410114 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.965647153 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.071480274 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.545206434 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.855268608 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.139082173 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.854880242 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.855164438 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.019231261 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.853899617 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.995548958 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.856377837 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.144906696 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.876968454 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.089656987 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.855250999 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.106333126 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.885752334 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.903698692 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.858665886 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.979939212 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.858627684 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.768469509 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.011669931 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.854673691 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.85250054 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.405058182 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.853747568 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.002329667 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.081257042 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.873054458 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.925333377 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.51047271 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.852909523 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.931686134 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.875302235 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.243173145 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.857580828 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.104968336 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.857674812 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.854257507 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.856390303 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.140046948 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.037102878 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.859850086 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.854492935 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.763842461 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.855507287 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.857294469 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.034972666 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.165427382 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.855246105 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.052824909 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.857877619 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.981112646 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.859022002 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.93750718 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.188336051 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.856952314 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.858207477 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.854250931 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.854193049 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.854213845 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.064136548 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.879855226 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.40323329 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.992511074 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.131741226 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.166156289 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.093447065 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.895905711 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.862910017 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.113291654 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.860524028 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.915677476 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.861676913 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.876001752 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.086164809 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.862921649 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.064432993 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.125631824 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.726378604 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.898757027 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.858708682 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.858386251 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.85782731 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.000864832 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.936354521 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.859501425 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.856345688 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.969489385 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.97520283 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.064469532 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.859602111 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.940744167 seconds)
  done (took 899.115625347 seconds)
done (took 1216.582955507 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.859935818 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.857950979 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.861199005 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.855014698 seconds)
  done (took 29.221331296 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.858457267 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.860272505 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.857458833 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.856639181 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.85669435 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.85766647 seconds)
  done (took 12.933649776 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.037423884 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.854928194 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.858113855 seconds)
  done (took 21.53956325 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.930573588 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.26510971 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.995405706 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.291891384 seconds)
  done (took 10.272322448 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.858198335 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.858251385 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.857210041 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.860810777 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.856891179 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.858557366 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.857549616 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.857120297 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.860133634 seconds)
  done (took 18.515160554 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.570161381 seconds)
done (took 98.839186943 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.25001196 seconds)
    (2/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.325319112 seconds)
    (3/309) benchmarking ("sort", Float64, false)...
    done (took 5.580430336 seconds)
    (4/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.860350139 seconds)
    (5/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.870278391 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.000889703 seconds)
    (7/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.052850134 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.955107186 seconds)
    (9/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.040005673 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.004382156 seconds)
    (11/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.187584318 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.539815587 seconds)
    (13/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.337195476 seconds)
    (14/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.916240979 seconds)
    (15/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.873228598 seconds)
    (16/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.158871059 seconds)
    (17/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.962080302 seconds)
    (18/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.360353467 seconds)
    (19/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.386050653 seconds)
    (20/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.280615749 seconds)
    (21/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.860306178 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.022048555 seconds)
    (23/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.357211365 seconds)
    (24/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.93664698 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.883555069 seconds)
    (26/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.955981318 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.984124114 seconds)
    (28/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.859290368 seconds)
    (29/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.233500046 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.855515558 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 3.498426442 seconds)
    (32/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.346062128 seconds)
    (33/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.866029938 seconds)
    (34/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 8.283285529 seconds)
    (35/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.068790843 seconds)
    (36/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.240275114 seconds)
    (37/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.945857274 seconds)
    (38/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.509700222 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.856549162 seconds)
    (40/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 3.32199149 seconds)
    (41/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.34204358 seconds)
    (42/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.249192176 seconds)
    (43/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.890884413 seconds)
    (44/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.971968018 seconds)
    (45/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.969549379 seconds)
    (46/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.127008267 seconds)
    (47/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.916564505 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.02686273 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 1.99106357 seconds)
    (50/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.000680589 seconds)
    (51/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.955295937 seconds)
    (52/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.964455007 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.249750034 seconds)
    (54/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.059704966 seconds)
    (55/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.068139084 seconds)
    (56/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.860283989 seconds)
    (57/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.176660557 seconds)
    (58/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.20413824 seconds)
    (59/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.285836609 seconds)
    (60/309) benchmarking ("sort", Bool, false)...
    done (took 2.073896278 seconds)
    (61/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.000545711 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.803281305 seconds)
    (63/309) benchmarking ("sort", Int64, false)...
    done (took 5.553371735 seconds)
    (64/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.11023807 seconds)
    (65/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.962572088 seconds)
    (66/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.030707679 seconds)
    (67/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.647586601 seconds)
    (68/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.148828668 seconds)
    (69/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.861782588 seconds)
    (70/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.0201995 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.117322371 seconds)
    (72/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.873984214 seconds)
    (73/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.015524911 seconds)
    (74/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.875500166 seconds)
    (75/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.957200312 seconds)
    (76/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.86259624 seconds)
    (77/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.892328674 seconds)
    (78/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.950045355 seconds)
    (79/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.860934064 seconds)
    (80/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.950947332 seconds)
    (81/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.960438465 seconds)
    (82/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.857660576 seconds)
    (83/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 9.486184006 seconds)
    (84/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.227195516 seconds)
    (85/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.97397007 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.203650653 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.885397239 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.859171429 seconds)
    (89/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.947347236 seconds)
    (90/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.504812261 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.864090706 seconds)
    (92/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.117340631 seconds)
    (93/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.882199588 seconds)
    (94/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.862441429 seconds)
    (95/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.114416572 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.432977276 seconds)
    (97/309) benchmarking ("sort", BigInt, false)...
    done (took 6.959969739 seconds)
    (98/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.010140502 seconds)
    (99/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.246199723 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.469767818 seconds)
    (101/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.057878572 seconds)
    (102/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.008821097 seconds)
    (103/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.037687764 seconds)
    (104/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.166715903 seconds)
    (105/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.877289565 seconds)
    (106/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.174334457 seconds)
    (107/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.858926403 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.00663634 seconds)
    (109/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.363822248 seconds)
    (110/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.040307352 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.881855754 seconds)
    (112/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.011756796 seconds)
    (113/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.861935291 seconds)
    (114/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.109555815 seconds)
    (115/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.11365658 seconds)
    (116/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.858037493 seconds)
    (117/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.554292739 seconds)
    (118/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.860564159 seconds)
    (119/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.938250463 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.860665491 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.973336816 seconds)
    (122/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.861118407 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 4.051289871 seconds)
    (124/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.539941266 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 1.992891556 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.858923267 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.884583107 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.746551184 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.629964359 seconds)
    (130/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.328677181 seconds)
    (131/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.938055799 seconds)
    (132/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.990315771 seconds)
    (133/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.609371466 seconds)
    (134/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.00460334 seconds)
    (135/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.893847329 seconds)
    (136/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.882020362 seconds)
    (137/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.00100342 seconds)
    (138/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.119984573 seconds)
    (139/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.92242836 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.11289405 seconds)
    (141/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.861347969 seconds)
    (142/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 4.119284212 seconds)
    (143/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.976525914 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.112406557 seconds)
    (145/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.963162683 seconds)
    (146/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.877448549 seconds)
    (147/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.860360413 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.949292359 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.242085935 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.634223748 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.998609018 seconds)
    (152/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.075704851 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.860970644 seconds)
    (154/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.962138399 seconds)
    (155/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.880127736 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.119765081 seconds)
    (157/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.030323296 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.968465577 seconds)
    (159/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.160388341 seconds)
    (160/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.240101235 seconds)
    (161/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.281463792 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.965124971 seconds)
    (163/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.100021434 seconds)
    (164/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.872855995 seconds)
    (165/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.106783384 seconds)
    (166/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.137557083 seconds)
    (167/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.338875949 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.861024591 seconds)
    (169/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.668556404 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.86043516 seconds)
    (171/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.867512005 seconds)
    (172/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 1.99279009 seconds)
    (173/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.972581921 seconds)
    (174/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.440664545 seconds)
    (175/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.957654912 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.25970266 seconds)
    (177/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.17489481 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.17723895 seconds)
    (179/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.694546904 seconds)
    (180/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.86879302 seconds)
    (181/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 3.668286256 seconds)
    (182/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.030935343 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.751949233 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.815494744 seconds)
    (185/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.870922743 seconds)
    (186/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.107076372 seconds)
    (187/309) benchmarking ("sort", Float32, false)...
    done (took 5.565062597 seconds)
    (188/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.069184279 seconds)
    (189/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.8651277 seconds)
    (190/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.014675009 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.533828617 seconds)
    (192/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.020161097 seconds)
    (193/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.891049564 seconds)
    (194/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.938005243 seconds)
    (195/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.889972822 seconds)
    (196/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.071893162 seconds)
    (197/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.866656845 seconds)
    (198/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.980595572 seconds)
    (199/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.436927288 seconds)
    (200/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.272697976 seconds)
    (201/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.430833349 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.026127721 seconds)
    (203/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.364549459 seconds)
    (204/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.887154263 seconds)
    (205/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.863364504 seconds)
    (206/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.281285004 seconds)
    (207/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.863128571 seconds)
    (208/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.475516404 seconds)
    (209/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 1.990282422 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.865250483 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 4.380255276 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.100664581 seconds)
    (213/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.083186134 seconds)
    (214/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.342792471 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.182199553 seconds)
    (216/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.207728837 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.19856085 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.163733096 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.551662676 seconds)
    (220/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.323168463 seconds)
    (221/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.890426556 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.868293899 seconds)
    (223/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.947313956 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.755312332 seconds)
    (225/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.175796525 seconds)
    (226/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.498297217 seconds)
    (227/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.253070733 seconds)
    (228/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.150027852 seconds)
    (229/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.003126033 seconds)
    (230/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.003968183 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.181042657 seconds)
    (232/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.977845573 seconds)
    (233/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.353829922 seconds)
    (234/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.887753337 seconds)
    (235/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.970036551 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.48156276 seconds)
    (237/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.428078778 seconds)
    (238/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.964325367 seconds)
    (239/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.621661476 seconds)
    (240/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.150253339 seconds)
    (241/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.868331041 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.989277552 seconds)
    (243/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.756673612 seconds)
    (244/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.07547915 seconds)
    (245/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.273555652 seconds)
    (246/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.864305452 seconds)
    (247/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.864262162 seconds)
    (248/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 3.196443543 seconds)
    (249/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.897854436 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.773059566 seconds)
    (251/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.869812926 seconds)
    (252/309) benchmarking ("sort", Int8, false)...
    done (took 4.761393456 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.225185082 seconds)
    (254/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.311889771 seconds)
    (255/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.175367435 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.00754557 seconds)
    (257/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.889726676 seconds)
    (258/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.094459263 seconds)
    (259/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.269076351 seconds)
    (260/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.888672215 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.153762709 seconds)
    (262/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.964368814 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.204039392 seconds)
    (264/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.88586498 seconds)
    (265/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.673290535 seconds)
    (266/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.953615588 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.903212426 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.990255152 seconds)
    (269/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.24432283 seconds)
    (270/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.080779229 seconds)
    (271/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.926964221 seconds)
    (272/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.868468363 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.930977011 seconds)
    (274/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.868785451 seconds)
    (275/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.986134849 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.867841488 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.867825068 seconds)
    (278/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 3.191898214 seconds)
    (279/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.065169778 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.92627803 seconds)
    (281/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.204612991 seconds)
    (282/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.187808182 seconds)
    (283/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.957739011 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.99996675 seconds)
    (285/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.557580198 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.010941754 seconds)
    (287/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.890969036 seconds)
    (288/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.868284196 seconds)
    (289/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.86886913 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.246584647 seconds)
    (291/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.050011748 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.872373249 seconds)
    (293/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.064568758 seconds)
    (294/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.880275512 seconds)
    (295/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.261812299 seconds)
    (296/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.954160286 seconds)
    (297/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.949451405 seconds)
    (298/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.974395748 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.902907534 seconds)
    (300/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.869745862 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.263516853 seconds)
    (302/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.871335403 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.299894426 seconds)
    (304/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.137112508 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.049292596 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.080830781 seconds)
    (307/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.870458988 seconds)
    (308/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.618046899 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.372154386 seconds)
  done (took 1008.495078758 seconds)
done (took 1010.359811272 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.895429689 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.888446869 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.869517192 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.891562986 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.983122505 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.914979994 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.884158959 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.87415568 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.921424364 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.920093 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.868381493 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.91121297 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.871520109 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.871129373 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.871495768 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.886424533 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.17035741 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.892803794 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.888468799 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.883441748 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.888722519 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.870003388 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.92082307 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.912435689 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.875367614 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.875587924 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.87440049 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.891220289 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.983424511 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.87337595 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.876254021 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.883254399 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.171548898 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.890786044 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.869109678 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.891270402 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.885788061 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.883817276 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.876174251 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.905139136 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.305298106 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.875174149 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.87283322 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.871474121 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.872273838 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.878941467 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.873626801 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.881886093 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.888155533 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.889033107 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.301535022 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.891400531 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.876950307 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.874653745 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.886830969 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.874532307 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.878325736 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.892353848 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.894360976 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.890515898 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.161055223 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.901807209 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.878277038 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.891976079 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.882915268 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.336106983 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.874344974 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.882596196 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.307182762 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.884067908 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.336619533 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.886292555 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.878265992 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.889002678 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.906109065 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.173744877 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.892319599 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.874799552 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.882958446 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.872475741 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.88599591 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.889421491 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.879727903 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.875609227 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.892559851 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.918094282 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.887697165 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.874143532 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.886445247 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.893979068 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.884582301 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.886849177 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.880181635 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.874209345 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.886883824 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.880377449 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.878947252 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.878491131 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.881584095 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.889060237 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.306321201 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.896224973 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.872872564 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.873127677 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.875213104 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.889999553 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.304943916 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.879357878 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.898849315 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.924932769 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.87796996 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.163166443 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.899979561 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.894457008 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.888367792 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.878124009 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.874613853 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.161702249 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.324480816 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.893518988 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.876394003 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.874548653 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.893931142 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.876809839 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.87331762 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.176758619 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.89975702 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.892708944 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.99895192 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.89113075 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.909516602 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.874127294 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.88076715 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.922783628 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.894909321 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.910573748 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.879813542 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.89416517 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.895521421 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.874951328 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.890611997 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.891426335 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.876670483 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.886261829 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.875388732 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.924380596 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.891726937 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.891845402 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.898961414 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.001665084 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.875975006 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.165708482 seconds)
done (took 294.670811629 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.954166898 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.876081802 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.995548168 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.878436791 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.97071444 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.952691217 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.877871099 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.878858484 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.877939145 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.378943679 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.877539393 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.882609651 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.877163064 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.879196563 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.949818456 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.878142863 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.878840739 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.324736345 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.87902743 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.963287914 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.878690731 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.878245824 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.878968056 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.37996176 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.879288205 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.878156038 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.958319807 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.878649536 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.328806605 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.878726783 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.878916673 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.328791357 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.957944363 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.906258393 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.887972954 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.884494921 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.970772676 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.888547725 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.949619969 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.949912399 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.01289598 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.912846324 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.879363796 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.88017046 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.883557537 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.884280564 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.880201788 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.911663525 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.878763819 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.887398888 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.325939086 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.885235947 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.888253275 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.881147115 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.880064394 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.907280096 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.880246731 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.881365588 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.965410065 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.882253935 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.950090513 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.384097583 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.381522874 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.880725856 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.879667388 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.880805368 seconds)
  done (took 186.004070471 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.945868622 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.954724325 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.946884367 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.886060609 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.930792324 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.948311475 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.884886461 seconds)
  done (took 15.305072605 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.886744391 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.881191967 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.931028511 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.929439365 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.881819897 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.060091393 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.895700613 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.885272281 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.909158527 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.880146137 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.518131545 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.929460306 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.889127686 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.881397348 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.893324368 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.938272494 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.883612878 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.880900664 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.998008162 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.030363857 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.887042797 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.889863646 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.90871162 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.894704415 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.885621868 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.880176518 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.881049668 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.888657351 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.883067261 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.881661436 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.881405988 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.933574499 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.883270136 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.883721673 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.882930019 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.883837439 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.883139592 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.8839558 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.88475476 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.883964286 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.884336066 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.883737273 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.883234475 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.884550107 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.885943469 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.908684598 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.88353535 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.884160113 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.885211763 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.885754952 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.911364503 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.884976945 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.883841209 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.888919082 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.929597126 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.892004765 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.884874015 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.883572178 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.88388183 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.884143131 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.884266961 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.033825026 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.933776085 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.884529068 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.933777062 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.039295893 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.888221919 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.885452308 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.884801895 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.972866167 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.884219617 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.933913335 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.885158606 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.999488435 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.885303557 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.064994033 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.907858043 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.888598319 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.889112326 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.884468774 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.892848807 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.886334351 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.887967888 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.892791992 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.896051418 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.88625349 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.886966712 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.888091114 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.894493348 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.886316318 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.943140438 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.887258163 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.888315472 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.027495371 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.888439504 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.005981228 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.91650044 seconds)
  done (took 207.374244739 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.894818812 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.895464004 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.892634375 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.905579642 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.890864489 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.890808837 seconds)
  done (took 13.184188409 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.892696703 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.891949942 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.8877948 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.887561326 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.889165566 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.888979176 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.892595103 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.890495998 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.889811781 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.887834659 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.888168856 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.890240523 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.888218899 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.887525778 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.88889018 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.889445225 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.88836497 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.888872414 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.889028023 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.888779094 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.096417183 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.888958266 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.888136464 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.8897623 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.891155113 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.888857785 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.901917688 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.887742048 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.889404534 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.896745128 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.89217251 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.889102868 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.890067783 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.895524188 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.892892461 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.890124353 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.893010982 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.889351875 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.887862884 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.889614068 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.888184036 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.889372356 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.890040133 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.89007591 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.891621559 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.893272987 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.894591956 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.901920907 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.890394212 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.890398865 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.890232402 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.89000451 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.89191054 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.89205046 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.891652496 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.895880855 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.89323697 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.890776821 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.893147458 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.891524408 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.894120016 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.89203581 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.892386533 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.900153188 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.896132754 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.891161835 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.891138876 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.894539215 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.892948183 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.891456482 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.891755289 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.890363537 seconds)
  done (took 139.190282394 seconds)
done (took 562.874480729 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.88944385 seconds)
  done (took 8.706848927 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.061157228 seconds)
  done (took 8.976012906 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.384184546 seconds)
  done (took 10.203322859 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.928190291 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.919442631 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.891693088 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.893627199 seconds)
  done (took 29.460890589 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.206206311 seconds)
  done (took 9.023153012 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.901612968 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.893214811 seconds)
  done (took 15.68795183 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.937729696 seconds)
  done (took 8.758352568 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.108958435 seconds)
  done (took 8.940652352 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.899128091 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.905964096 seconds)
  done (took 15.646796777 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.894434803 seconds)
  done (took 8.713610545 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.433600955 seconds)
  done (took 10.34082971 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.90440804 seconds)
  done (took 8.770283535 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.911982975 seconds)
  done (took 8.732704656 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.046139279 seconds)
  done (took 9.866296282 seconds)
done (took 163.643681059 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.896475903 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.889317555 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.889786281 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.888778491 seconds)
  done (took 29.382248122 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.928274516 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.928614365 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.936833761 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.930703592 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.918619028 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.918106111 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.928340031 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.929950854 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.918785169 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.927576069 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.930304182 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.925676468 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.928229447 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.936761329 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.938955888 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.926250895 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.927650231 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.930157633 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.918791404 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.939508142 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.926914603 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.92823353 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.895335835 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.895852797 seconds)
  done (took 48.035629213 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.085516166 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.965543782 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.049049863 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.947384506 seconds)
  done (took 9.868650527 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.894536788 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.957685172 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.946684696 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.943030618 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.946803442 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.998742691 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.948025232 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.033067847 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.023093514 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.021151757 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.902471045 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.915562619 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.920367148 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.942835241 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.999939543 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.895623437 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.896124955 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.011344271 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.957869205 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.082943521 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.895132167 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.949415465 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.946805291 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.948503138 seconds)
  done (took 48.797964484 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.897203793 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.904317362 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.904201504 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.897593696 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.897582373 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.89919438 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.904082216 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.899069376 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.91760273 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.89897588 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.898740961 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.89698303 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.904027609 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.897301484 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.897598505 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.911657915 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.912862477 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.897747138 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.900922844 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.904634031 seconds)
  done (took 39.86377153 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.896156007 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.743087765 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.241841575 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.147979914 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.895573204 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.896287967 seconds)
  done (took 31.643539438 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.908363416 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.90061599 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.897826586 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.953848891 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.031434125 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.899232352 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.897284247 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.907301772 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.941403585 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.956875368 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.910264546 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.923705851 seconds)
  done (took 24.951827327 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.896826148 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.895924741 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.896751087 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.907933484 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.909061456 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.904287365 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.90618923 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.896759115 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.906214003 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.914233676 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.903977852 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.909320795 seconds)
  done (took 44.673898096 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.604168847 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970224424 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.896651546 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.772732255 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.37885639 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.453994221 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.797382769 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.663681532 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.362215635 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.824543269 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101250797 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.897419203 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.981266538 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.899327333 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169091633 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.277138109 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084178189 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.142044201 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.543553698 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.92700099 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.100737685 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12288648 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.190513569 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899005762 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902349241 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.046355958 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.306340313 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.701241462 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.928574271 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.195132458 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.13992801 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.847724209 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956329187 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.902231594 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.913196392 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902289535 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904388504 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170065947 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.903930054 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177464 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973853965 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148655894 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90410777 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.323364232 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.603255517 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.251377757 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.007242719 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.902080937 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903141717 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899610694 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.827103361 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984299714 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.904906848 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904979241 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.600258293 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.901685265 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975806077 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.902120949 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105266322 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.709014457 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.592890869 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.90226848 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902837129 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.45178308 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.017949753 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.017115163 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.674184958 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.278392777 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.318001011 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.999192693 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.902683077 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.902868667 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.027781357 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864622004 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.619778333 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936313228 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.038800357 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.914701296 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.54303903 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190483963 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.347930879 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.453922278 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.822170026 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187174706 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.679124152 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.883728834 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120536597 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.733610739 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.829478361 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143519311 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937966262 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905985131 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.166253206 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.670718096 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.0130199 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.914917839 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347393521 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919686013 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.908592099 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904135239 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.117379655 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.290779605 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931950884 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.026399865 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916427582 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.986511937 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829985142 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.914259817 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.904754528 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.809335673 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.910060787 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.827485136 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.948369167 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.560794001 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.941663237 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.845714258 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90826705 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.003610999 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945320296 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.853792753 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171618256 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.209628523 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.586046847 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864702999 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.034592255 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.309129223 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123399708 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.908251587 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.118879838 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.442087257 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.314769428 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.943677756 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.193471896 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.964801919 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.194118363 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335041615 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981437353 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.691796164 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.702348363 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.122419441 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92054941 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.9059455 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.907854102 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910437853 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841120868 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.543208278 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.304515843 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.064653842 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.120305797 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.211184677 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.885620966 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.836578346 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211644383 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.04226541 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.914223773 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.563564508 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.294350539 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.724684202 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.930420852 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.031529287 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.068158973 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.865788047 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921064371 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984864893 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92350638 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.912556273 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.290194208 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.262512619 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.908009977 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.909790051 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.856722986 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.915641916 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.910272471 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.440762125 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.871971366 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.910782213 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.918994707 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.782088644 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981935903 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.911104454 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.910948996 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.443416977 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.419293365 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.911109182 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.563327303 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.909513821 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.090949458 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.179563601 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.302425427 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.029681468 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.608856203 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.324368428 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.013204591 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.608333871 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.835954433 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.907832798 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.848869866 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91130747 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.912503421 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913813469 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.09492526 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.185104399 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.209962479 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.370057035 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.971490402 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112644154 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.640258903 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.859881237 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.911827393 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915640511 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.911578229 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910073898 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.417439812 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.204094465 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.028631831 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934231157 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.914037433 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039967894 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.921259445 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.836847076 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.911638959 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.913166445 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323415233 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.932960155 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.858454761 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.24563872 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.78855454 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035236313 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953554225 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.921954288 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916551647 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.643493719 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.950392843 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83685929 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355056929 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93907074 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.691351089 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399505131 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.4694224 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201290655 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.229993837 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.239072799 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.980116497 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.126327028 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.995735031 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.965109175 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.998974368 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850229051 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.834377823 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.574902026 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.245488934 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178274593 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915391135 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129192824 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.648793615 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.137642594 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941117552 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.569079414 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.212042398 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.886456466 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926907568 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.218686134 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011353429 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993987567 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914749692 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.862855898 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.253230836 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956282013 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.61468451 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926237443 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.265096691 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.321614586 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.974333469 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.313678352 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.121090754 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.915622303 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273357841 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.099153451 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.944186518 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.918789616 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.89996828 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.12478945 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.493175615 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.762888582 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91525443 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.052715833 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.202187979 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.816878303 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.916314754 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.048057769 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165182203 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914998636 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.28872028 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286743874 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.035921191 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971928641 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139696522 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.582033403 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211336092 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.470284502 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.399964653 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918869569 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.841601612 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.614139736 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.11793997 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.922517962 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.881932761 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133985704 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151518218 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.599703675 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143282886 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.161685815 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.929335012 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.189667553 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991818457 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.016435528 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.257654443 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.350621135 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.166975806 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.143952058 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.45768273 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.13031256 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.400088984 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.087800634 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.919503532 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.122179125 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135973809 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.13305728 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.33040005 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0838875 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.627819558 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.922873513 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.125462154 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.21081118 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977737408 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.326842144 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.079967912 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.00127667 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923821993 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983887247 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.922880736 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927584212 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.325268759 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.438860228 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.93311722 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998309133 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.038822763 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.42377477 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.918639199 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.924174649 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190379258 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269666761 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.259246101 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.902897293 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.917319067 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923856707 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048493144 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.846013846 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926045963 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191023491 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.923504055 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.309821864 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.063019658 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935420582 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.266584418 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.30357347 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.573089945 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.87548371 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927763494 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144719703 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.235040787 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.085153782 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.028124626 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193036685 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.263917969 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.958137478 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.324749845 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155185029 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924863928 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.798788382 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.925728133 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050930868 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.117787221 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.197612946 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.428900841 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.658922113 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.187579451 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.766868406 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.924162849 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.694327499 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191036957 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.195161133 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.974127677 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986401922 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928077296 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338864231 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.633178697 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053860738 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.793396539 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844827757 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.92603448 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.241227507 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.164383324 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.632310809 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.926966943 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.199883282 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227032833 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195403041 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.974493654 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.80111144 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134514055 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925738729 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.928522795 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.178041386 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.156962657 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.171759576 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928855978 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.932843882 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.730409421 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850323691 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.921088427 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978808483 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.150613328 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944225666 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.437793266 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.624159165 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213808525 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974261253 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926012414 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.19763279 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.432236343 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.473782448 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926617776 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144237343 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.901500573 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.218238575 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.927438471 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.341110313 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.221367834 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.925827013 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.438931678 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.16281537 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190225161 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855194984 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930554902 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139161039 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.792837355 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.922467383 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.933847275 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332408925 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150220243 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.662064236 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.483363542 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.923060999 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.928312918 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.338574846 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949684219 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.34227119 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946968896 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943456968 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.442467863 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.618163018 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.210389929 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.168852251 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.444260544 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.521511463 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.927694523 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.925240527 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929150777 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.845931359 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274356762 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.108185789 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21494088 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.961668475 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341221213 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952960603 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.299352001 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378817338 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.574661242 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988560484 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.462294761 seconds)
  done (took 1680.511429328 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.944261167 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.953323516 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.985183036 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.947724907 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.94793095 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.968207987 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.008779405 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.011783905 seconds)
  done (took 57.633761543 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.943957497 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.957760419 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.947329171 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.943167256 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.944936671 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.943717801 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.099780604 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.957395978 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.971810038 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.947705987 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.944927924 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.939814895 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.221800587 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.966149911 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.944377163 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.946439297 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.94464668 seconds)
  done (took 75.437221417 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.943944276 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.351824561 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.000521319 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.946137394 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.919408627 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.955626486 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.969289785 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.003490414 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.946435365 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.189093711 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.238574035 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.984141417 seconds)
  done (took 91.316284497 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.95060947 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.945660119 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.944865664 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.945017917 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.946997375 seconds)
  done (took 11.607358984 seconds)
done (took 2195.575329023 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.173758546 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.005414479 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.047741488 seconds)
  done (took 5.921870006 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.094745041 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.13939861 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.252117947 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.012369168 seconds)
  done (took 10.378319862 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.253342257 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.310273774 seconds)
  done (took 6.433081198 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.347950274 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.959271353 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.326958531 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.94861699 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.947795847 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.948209162 seconds)
  done (took 22.71992802 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.948403933 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.948194125 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.949479373 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.949181451 seconds)
  done (took 9.664482147 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.946551929 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.676727138 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.947402368 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.956619331 seconds)
  done (took 21.395797269 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.095552292 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.065623837 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.090412781 seconds)
  done (took 8.123184396 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.09020162 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.783126831 seconds)
  done (took 6.742766293 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.100365871 seconds)
  done (took 3.971092009 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.975038552 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.218361461 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.447403714 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.479700591 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.593512741 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.764053091 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.270911991 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.198399874 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.362094033 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.38412271 seconds)
  done (took 25.565238703 seconds)
done (took 136.590080385 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.309296622 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.969886679 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.152242455 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.32354267 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.180611699 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.152994105 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.17502827 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.31791854 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.996514113 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.981430195 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.316021865 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.182493098 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.11527733 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.967150456 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.127129909 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.968419604 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.182047318 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.325615101 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.994257815 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.218101945 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.174032658 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.962441405 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.156857731 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.973445799 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.181888497 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.102708057 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.506459537 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.966351051 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.140605212 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.516338027 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.112448219 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.366911586 seconds)
  done (took 170.989431097 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.95182924 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.946794121 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.946437103 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.94637656 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.583002234 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.94548044 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.947498303 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.945776836 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.391927414 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.387897007 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.947428138 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.571829469 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.948085485 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.946079227 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.947550692 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.94729635 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.583396401 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.947811487 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.946309779 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.947232352 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.947815587 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.403086783 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.946502206 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.416126645 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.572238139 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.949051774 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.946883209 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.947462897 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.947430721 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.947076939 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.946180778 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.948321583 seconds)
  done (took 212.520357077 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.950999536 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.947081824 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.948221897 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.949594918 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.9494621 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.950150234 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.949494172 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.947650496 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.79000818 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.774782368 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.947563352 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.949570481 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.951240396 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.950297361 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.95611224 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.948984869 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.954538249 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.954945221 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.949447642 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.953852526 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.950686862 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.67317508 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.948391814 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.695355832 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.954214621 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.955960857 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.951027864 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.955545037 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.954430578 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.954510601 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.952151722 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.950188008 seconds)
  done (took 223.448808366 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.193404312 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.954088355 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.954401628 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.950011781 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.954915482 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.954492212 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.928206171 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.200456749 seconds)
  done (took 19.967349367 seconds)
done (took 628.81042667 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.335973578 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.177548558 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.13006327 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.978583818 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.254586257 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.019388935 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.973483978 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.038775369 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.820022976 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.048419398 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.63262678 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.000775026 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.722339722 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.999325395 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.101028822 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.029050287 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.563188481 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.647323203 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.119301958 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.045462797 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.147203131 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.929901013 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.053919262 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.874555411 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.651489175 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.973397688 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.046435161 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.548217229 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.983321008 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.136077732 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.670505833 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.302049853 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.990342644 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.975661161 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.027717903 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.008875684 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.242522121 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.986759981 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.099372421 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.727199268 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.059193988 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.721568975 seconds)
  done (took 106.671768845 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.966487506 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.962340563 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.963229848 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.962059292 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.970000182 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.9614125 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.961890703 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.961404968 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.962725259 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.961343112 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.962139382 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.974116729 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.961727336 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.973084196 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.962353556 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.962769675 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.963461999 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.972030639 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.962838812 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.96401421 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.963225217 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.961951111 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.956509121 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.962737419 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.962437882 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.962336587 seconds)
  done (took 52.954844002 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.957677803 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.126279425 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.199125073 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.97959803 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.957567135 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.960502587 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.97470191 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.961544329 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.960373045 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.960998334 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.048007653 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.963456004 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.976629982 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.199911009 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.972239312 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.957359965 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.960053881 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.961278913 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.137007143 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.974731951 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.977904857 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.964389767 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.978314069 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.973217564 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.961735546 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.960878557 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.964304018 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.407139566 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.967347381 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.051186147 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.016595485 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.980414808 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.342924029 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.211423714 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.015172529 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.967256327 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.961776297 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.054771565 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.96845537 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.96140073 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.977655981 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.965947165 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.207225611 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.495549562 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.971963637 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.960033986 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.417868709 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.063955637 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.001954936 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.968271202 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.210548604 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.97679336 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.960673311 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.96207153 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.996398885 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.969461658 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.961249482 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.275473725 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.977224517 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.978980246 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.96593845 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.961502845 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.143544693 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.971927267 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.130715578 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.971810894 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.967610704 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.962695768 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.209070617 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.979148452 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.519682072 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.976515623 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.961143046 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.052361913 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.137969315 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.444697552 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.973689985 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.144468252 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.360884951 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.985197061 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.971646114 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.396571653 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.989335489 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.971456596 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.965550107 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.964356949 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.962757272 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.005755914 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.979287744 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.42407499 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.508842252 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.293316309 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.990792009 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.974402366 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.965518343 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.276991738 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.969791885 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.962501687 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.200428522 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.522265869 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.975387296 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.970724707 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.489105458 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.981764691 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.982739234 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.973774045 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.214657019 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.978927056 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.005739 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.963474078 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.969877685 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.964914674 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.982127091 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.971124546 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.962769771 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.478104215 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.073792463 seconds)
  done (took 243.11440314 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.96268168 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.960959293 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.96320511 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.960511747 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.962428747 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.966349024 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.963461566 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.962852768 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.966020603 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.963346352 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.962655627 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.964669992 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.965910475 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.968688376 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.996685648 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.965565696 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.565106678 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.963805938 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.964771267 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.961966815 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.607471513 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.970356449 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.963447896 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.960587258 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.964556019 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.964482175 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.965473919 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.99888995 seconds)
  done (took 170.197021323 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.966547801 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.078694663 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.983370512 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.992195221 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.970578068 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.963480484 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.064741372 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.982356719 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.969055739 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.96467543 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.964030766 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.024501725 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.973489106 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.064081264 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.996367277 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.070053543 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.070485223 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.971700956 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.964754108 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.966739261 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.993813461 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.975945944 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.025634602 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.087251685 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.984272016 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.078530207 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.984362078 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.965862812 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.968404371 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.081706004 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.985331192 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.02639604 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.991809211 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.983901842 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.080985966 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.084167854 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.070570277 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.071668535 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.970574744 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.965459482 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.965787575 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.967188954 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.079179223 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.983024837 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.968391442 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.084038876 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.984221489 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.966775585 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.968186871 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.967997342 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.980726958 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.982129675 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.029580738 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.093919227 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.000650338 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.989656104 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.066588803 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.093581912 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.966424075 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.065952509 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.974267812 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.080528963 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.984714832 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.968224841 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.96788108 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.971432983 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.996463359 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.072994461 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.072115757 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.974745797 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.06763277 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.003279148 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.975677341 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.9701733 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.96982378 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.081321304 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.085548072 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.000834471 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.002723845 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.999002134 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.975330744 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.96757077 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.970529999 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.985334211 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.974727941 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.082779256 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.085056974 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.974312621 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.969393439 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.967875425 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.968964198 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.993309185 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.087706395 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.004880963 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.077516508 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.03491493 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.040382658 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.980221707 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.982600999 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.970811929 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.031598831 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.980021668 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.9799005 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.26489174 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.029190715 seconds)
  done (took 213.072663029 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.380687276 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.018427749 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.024108513 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.289585996 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.329416839 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.965048073 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.011985684 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.017124638 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.059422367 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.23758452 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.089868743 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.036686591 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.003880576 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.988215568 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.010618054 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.04901138 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.021371766 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.36639212 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.224474244 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.477696221 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.00633286 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.291210851 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.357147232 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.600802415 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.069421412 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.414245555 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.63680088 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.180213881 seconds)
  done (took 66.057357871 seconds)
done (took 853.943084434 seconds)
SAVING RESULT...
DONE!
