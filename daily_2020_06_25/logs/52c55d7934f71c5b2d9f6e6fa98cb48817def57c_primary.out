cset: moving following pidspec: 15128
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.668291383 seconds)
loading group "shootout"... done (took 1.131046229 seconds)
loading group "string"... done (took 0.433571077 seconds)
loading group "linalg"... done (took 7.90325343 seconds)
loading group "parallel"... done (took 0.154657909 seconds)
loading group "find"... done (took 1.263948727 seconds)
loading group "tuple"... done (took 1.947546868 seconds)
loading group "union"... done (took 12.896019166 seconds)
loading group "dates"... done (took 1.392432297 seconds)
loading group "micro"... done (took 0.253656653 seconds)
loading group "simd"... done (took 4.561504046 seconds)
loading group "io"... done (took 0.985097478 seconds)
loading group "random"... done (took 9.328787803 seconds)
loading group "problem"... done (took 1.632928642 seconds)
loading group "array"... done (took 20.880754568 seconds)
loading group "misc"... done (took 1.707982738 seconds)
loading group "scalar"... done (took 46.292880131 seconds)
loading group "sort"... done (took 3.633245612 seconds)
loading group "sparse"... done (took 13.916578801 seconds)
loading group "collection"... done (took 19.881854812 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.550929906 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129788739 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140996466 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123005862 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.158795368 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118931006 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.130164582 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084916269 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.975208163 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149040046 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113443414 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.483875156 seconds)
done (took 5.579330057 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172424921 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087148578 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079188493 seconds)
  done (took 1.277546661 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067196844 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128620872 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068111706 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069327441 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068188788 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06806922 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067559148 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06747762 seconds)
  done (took 1.645975614 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073624845 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068966397 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066636403 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071441337 seconds)
  done (took 1.390797792 seconds)
done (took 5.680792844 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.254057363 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.109021523 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.301835302 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.324385367 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.44057963 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.092218288 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.074993662 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.071418785 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.131040497 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.33509216 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.118260461 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.195194689 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.099423054 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.182673371 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.005847923 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.133444116 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087078597 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.126117658 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094225756 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133687929 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.369840004 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.078098852 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.083719123 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.073276895 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.06913381 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.650092834 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660673699 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145371779 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084658376 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.084041583 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.118273311 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.63168763 seconds)
  done (took 10.508924298 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10120156 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.101179687 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07007434 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125711451 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097305338 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070568611 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07629448 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069254709 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089548709 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129057311 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091148912 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108526405 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06771345 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070852876 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.094503653 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197378202 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080686554 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08236144 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069973483 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079574431 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.10784093 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079017626 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080270954 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080737934 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129743411 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170592091 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097979485 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099369959 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068359906 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081235857 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116346152 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127156476 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067702799 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068137366 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124829305 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098744502 seconds)
  done (took 4.625541138 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.175700431 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.094549648 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.102792582 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.620810812 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067540194 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.149395785 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.234596167 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.073846105 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.396261789 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.159565983 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.152754296 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.142500906 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.122278562 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.073774045 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.339953884 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.127163917 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.347060269 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.07308747 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.076207082 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.068302885 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078072458 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.070565864 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066237004 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.079318338 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.093959566 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.097810245 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.224182904 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.017641526 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.300991334 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.071223012 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169618455 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.098152102 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.36542961 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.070823905 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.093613096 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.392328536 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.128556813 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096821446 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066211711 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.172316957 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.131768656 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065997594 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.119812093 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.081534809 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.072502765 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.072525442 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070070843 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.080285426 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.083304787 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.1046927 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.071592528 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066964992 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.170399812 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065995107 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.067596343 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.069054943 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065530269 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152430815 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066019194 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.157173193 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065988292 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070555968 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.096173691 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072086817 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.090058215 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066328244 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.119443204 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.3309769 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.04513686 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.071355649 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.245054132 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078105276 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.067851067 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.084401729 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06796752 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.069360974 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06805675 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.079261641 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.071943023 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069922516 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.112044831 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068163836 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.071232805 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.067143887 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.072717058 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.100867451 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066677874 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.454758915 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.100730946 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.068135039 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.078243529 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.108442319 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068337374 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.074101941 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.070998693 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.073267687 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067073684 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.070218116 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.073128102 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.094873241 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.072900053 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113335023 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.152679677 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.073150296 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.068174038 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.072979381 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.073249776 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.071173718 seconds)
    (108/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067539908 seconds)
    (109/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.074753177 seconds)
    (110/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070680498 seconds)
    (111/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.068448612 seconds)
    (112/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066963783 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.122331422 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067006245 seconds)
  done (took 22.479069693 seconds)
done (took 39.900480786 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.261855051 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083499247 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.084672992 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084351178 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083592912 seconds)
  done (took 1.81031762 seconds)
done (took 3.004337773 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.135397448 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105293988 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065589689 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.104227858 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065696359 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107013113 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106135438 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084398739 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.1061044 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065765062 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104983266 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065432139 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065594154 seconds)
  done (took 2.389161229 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081812686 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086203175 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070364883 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083330925 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06492589 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083487086 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08289552 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091190535 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082935783 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074676456 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065155441 seconds)
  done (took 2.056096825 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082058941 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085291645 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071073747 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082337239 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063990211 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081788238 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081637866 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085933103 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081892247 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074387671 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063975398 seconds)
  done (took 2.037293513 seconds)
done (took 7.66410553 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07569775 seconds)
  done (took 1.245226129 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.546232294 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.539838271 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.07846755 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.099043136 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.204351346 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.1084488 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.2347146 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.082532164 seconds)
  done (took 8.24558934 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.111576143 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070600137 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071439846 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069690277 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071601478 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.06988297 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07155299 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070872907 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07011425 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070592747 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070899807 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071303445 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070203897 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069984694 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071356412 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069990194 seconds)
  done (took 2.432307473 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.100210757 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09815469 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073934963 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075313311 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073026103 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072851041 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075282111 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074746707 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072416088 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074186426 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076284541 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074524245 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073686734 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065049268 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074932828 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076938391 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072027568 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07470561 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076103557 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076297159 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075915676 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065209586 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073725449 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074559026 seconds)
  done (took 3.112931655 seconds)
done (took 16.219343672 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114536131 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077375363 seconds)
  done (took 1.368593813 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081543645 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08141062 seconds)
  done (took 1.348083677 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.076965739 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063008991 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.083988848 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07372839 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.064356097 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063687423 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.081248502 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063798233 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063468065 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.063616213 seconds)
  done (took 1.885088998 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065195258 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.075659416 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069750083 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.0821934 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070096112 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064608726 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069554769 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066767438 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.074003365 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065177137 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070350548 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085059043 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069552641 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086783061 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.069386403 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070192291 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070753223 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067484778 seconds)
  done (took 2.481710489 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063779644 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06403738 seconds)
  done (took 1.323185087 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066904917 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064165766 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067020023 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06729384 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064046584 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063614583 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06430928 seconds)
  done (took 1.645592974 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.377037976 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.133943438 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.34247509 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071429489 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080062746 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.254302013 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065482613 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070665735 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070565506 seconds)
  done (took 2.700666985 seconds)
done (took 13.949997465 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081644028 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086480968 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.103161919 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.428823235 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.096210113 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070493567 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11652552 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.180587422 seconds)
done (took 2.370669444 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.216893266 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.115157858 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.928662272 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.069151624 seconds)
  done (took 3.310310518 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344627018 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091973518 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078008661 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067952481 seconds)
  done (took 1.788427678 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069494651 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07098534 seconds)
  done (took 1.341123784 seconds)
done (took 7.86566732 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065993204 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065432914 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093464478 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065873341 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065685358 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.06600592 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065999272 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065830365 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065568031 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065834931 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065976279 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.06628619 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.06751096 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06786545 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0684159 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067310488 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066224818 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066810612 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067586553 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067404195 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06745932 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066081 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066110227 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065871412 seconds)
  done (took 2.859014116 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082147201 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067641879 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.069205515 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068813403 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069567659 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068972837 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068960936 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067779214 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.06985827 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067330852 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06950807 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069625955 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067548231 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069997193 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069055513 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071464596 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071012888 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069765436 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069139544 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071591449 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070761431 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069582917 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071396822 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071124079 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071568824 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071441393 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069283755 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.070117774 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071220601 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070498322 seconds)
  done (took 3.317239111 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.066360019 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062089513 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06264742 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070677074 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061974912 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.062844029 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062374532 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062155544 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063050685 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06256771 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063211961 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062035396 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062100515 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063207995 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063558676 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066494354 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079486461 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062648958 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062081838 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063937099 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066031806 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062267576 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062101707 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06225291 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062164736 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06238348 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064942672 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062179878 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062692697 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062395253 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065857525 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067070686 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062158314 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07136909 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066692208 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062278615 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066520062 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062187243 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062867672 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062299717 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062131837 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062244518 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062974081 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071811736 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062933608 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063531109 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062283032 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063488621 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063243688 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064234706 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062377511 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062314132 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06431665 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063286802 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06721276 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061911732 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062981549 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062664013 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06287171 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062221374 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06203067 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062190206 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06535337 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062768347 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079128825 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071149 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062337622 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063511524 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062723225 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065494917 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063824385 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07836749 seconds)
  done (took 5.846078866 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088663273 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09049806 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066851194 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06687784 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063115531 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063331578 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070499017 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063172714 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067748438 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08156318 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062696504 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067178574 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067172243 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067137371 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063079288 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068007979 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071570202 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064599251 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064417519 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068268935 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06440376 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070499161 seconds)
  done (took 2.745424685 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.149517182 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06862242 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105618295 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073145125 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071770148 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074528983 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069817194 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069158719 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069037012 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069358028 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069453675 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068832207 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070982625 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069063582 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069911366 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068926082 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068696048 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069278954 seconds)
  done (took 2.592545192 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078562032 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069423536 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087846196 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068185514 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067747713 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067629805 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072317663 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072576933 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067568568 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068466318 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072540176 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06806672 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067873002 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068513498 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06819944 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068067242 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067972929 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068807592 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072815069 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071942562 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072334164 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073018729 seconds)
  done (took 2.778300719 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079130539 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066750629 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082610434 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069382148 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062572406 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063233627 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068688529 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06746466 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068542077 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066984202 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067819938 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063181087 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06974362 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06797589 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070056113 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067930314 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06811064 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067528975 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067059587 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06313724 seconds)
  done (took 2.587185637 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091957238 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065835519 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065764545 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071654782 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066964677 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065986627 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072259848 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065945108 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065999005 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087837891 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066547923 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066665311 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071554898 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069703736 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066047667 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071833186 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071964855 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072267039 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068489665 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065827009 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086014815 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065827281 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071742746 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06584808 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065909329 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065930276 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065947615 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069448494 seconds)
  done (took 3.189725008 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066441239 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08103753 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066062053 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065948659 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065868501 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06582741 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065423134 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065454589 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065133137 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066004401 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065280769 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065505915 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065508761 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065294141 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065227576 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066507313 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066450228 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067408182 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066344611 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067569241 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.0670763 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066392259 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067625085 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06715247 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067485595 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066317017 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066827146 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066684721 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066807887 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066601957 seconds)
  done (took 3.230024094 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075055782 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073683897 seconds)
  done (took 1.393390019 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064508157 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079253953 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061906895 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072926845 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.0707215 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065563114 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071552165 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071013417 seconds)
  done (took 1.794952627 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.089209552 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07873737 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.065129508 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082242394 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078984329 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.088259065 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131376675 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064527168 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075262535 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065553938 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.0862538 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066889102 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07457479 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069796489 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074990871 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078144974 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062384965 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.069219243 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06522348 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063055408 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065137278 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080362864 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073827147 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062769971 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069822409 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092366551 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08318146 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063657331 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071068929 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076343092 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074350571 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061964645 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064980426 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065110117 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062932034 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.078656505 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086305546 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071653796 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077506093 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064815045 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07507107 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062396938 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073855099 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075529406 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080873955 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064506641 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.064325817 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062459016 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066149628 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070710551 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062661853 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068961441 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062184408 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076244726 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072128499 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079517205 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062957407 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070215583 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070649504 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071242094 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076660996 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070472425 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073947866 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063638079 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080103651 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074084509 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07828462 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06247619 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062049863 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06297355 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078602377 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098148193 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074502408 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064803665 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064834156 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062688525 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071630512 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064931356 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076054384 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075759693 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064666039 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072119442 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076562179 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069507825 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070811771 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070909055 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062761034 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067737149 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065771088 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083182453 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063529344 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062421694 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065301179 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079133912 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070986805 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06632129 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065167147 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075644224 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061616444 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064001973 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064659591 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069769965 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076763861 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06766306 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07023943 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076824694 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075358868 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068350317 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070452936 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061081237 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.063679481 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065519394 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074554637 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060824759 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070372243 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067611784 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.063715917 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074142551 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06187876 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063015681 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075381987 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074577728 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062123865 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.060889762 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070181112 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06347806 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065105714 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075689908 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061953208 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061915518 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061272549 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070646046 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.062996992 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074989345 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066721896 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.201969357 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063045467 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064328605 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.06883473 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07696195 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068925117 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070786343 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074266788 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070618948 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06364528 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076524897 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071790377 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067014359 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073489263 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068474318 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062425133 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066191133 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070990858 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062978431 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07219066 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066806237 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071684749 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064580556 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063124257 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.06928086 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064729654 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066695403 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069254485 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063121435 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07853857 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070754994 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062843169 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061838126 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.070257694 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065559748 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063712375 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066687765 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070633752 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065158063 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063047768 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063669148 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070357377 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075015471 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067581469 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064710974 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074308133 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081744529 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064053123 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071750686 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063756001 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065032657 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064405171 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078396798 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074369281 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068400813 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071221928 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061760023 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076233621 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076531754 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06703491 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062592547 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067338763 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068186573 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07615937 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067818949 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064986883 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063060094 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070215767 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067106568 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071168334 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064123879 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067224847 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069275089 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063143857 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070085152 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06491412 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078767557 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072078599 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064759535 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066606762 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063089255 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07582726 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063205823 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065907901 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06732398 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065567576 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063858448 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071016808 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062157671 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076599518 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077085767 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069922095 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066953671 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063994992 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076124125 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.07014639 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072392398 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071446727 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073830806 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079123433 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066599525 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071071888 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078464173 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063890555 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061606844 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075409378 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062736505 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063256745 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063021909 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063032605 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070949751 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069879997 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073512085 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061115435 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070098258 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.061685513 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065921377 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062106936 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071439707 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070316595 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067986321 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075503956 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063734396 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063297887 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070895051 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.062548219 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06337665 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064131535 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06991708 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063080491 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069010384 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065802694 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068553958 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065988147 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.061218604 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069016714 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063073323 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068759091 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071778532 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062737197 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068526756 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.206196631 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065694037 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071245341 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068848795 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067680801 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072088079 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071144777 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069412229 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070638197 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062544866 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075778197 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064112991 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077294367 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069321282 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061608912 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.06927285 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071606041 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068268672 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06489771 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064578289 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069770174 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063712728 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070925429 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076009839 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066028726 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079736443 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074544936 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070006569 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070853715 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069674211 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069418024 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066623273 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068804692 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064922094 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069503767 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06394855 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072919586 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071172073 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069172371 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070544745 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064670041 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069718467 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065234664 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062037523 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067073266 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067037049 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064299767 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07656156 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064816274 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068769128 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064897813 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066057606 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063460621 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063008394 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072377307 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077619174 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066696516 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076459351 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068738279 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071410806 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07929449 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061998503 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06305759 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062985019 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066289593 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076971325 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06499676 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077568794 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06997696 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067384659 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062059859 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065232453 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06337838 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062933388 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062759512 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072797714 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066980653 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06380851 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064145037 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071286093 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065036356 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076257397 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064551431 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068975088 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064671988 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062324783 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067144487 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067147583 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07147332 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065080873 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066200099 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06276733 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064665747 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069037457 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070300103 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064201593 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070171922 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077198984 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063959693 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071756244 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06649456 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062228905 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071347604 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064167302 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064322184 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067005756 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072438571 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071527594 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064797472 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077666332 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066666681 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070151646 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064549454 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062551617 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063758123 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063745832 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063881357 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066493214 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065024731 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076416436 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061557631 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.06905583 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068987246 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067132492 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073013794 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064007711 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069136243 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067687819 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065792606 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069657267 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076064683 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066204937 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070139854 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.063607397 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068696218 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072648329 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065589023 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074062584 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068320041 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063251725 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068994066 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064349979 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062734733 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062692033 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.202308519 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077322759 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066872819 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068676852 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068314058 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063162719 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06919774 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067464981 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079719155 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073496299 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073083431 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063964203 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06343311 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067095106 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067614502 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071788848 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072461002 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07563434 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072746967 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069664361 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065736331 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.08026482 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076013463 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07367582 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067454685 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.07352169 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066204823 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072971461 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070388607 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070792163 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066455959 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074133499 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071911346 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068569043 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076115989 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073672212 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066309687 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071707023 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071653589 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070483501 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064354123 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065657001 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072875718 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074830411 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071168259 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064309493 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079780865 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065702435 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069443321 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066411791 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064318626 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072559122 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062588713 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071197468 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064835156 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064548207 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062738442 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067306204 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066236707 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071222217 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067332644 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063077805 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079159134 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078097307 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070426599 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063701244 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063140909 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062912417 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062428299 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067230685 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065052914 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070539335 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078851618 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067213196 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066720731 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062826869 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064347441 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071579348 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072372368 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062259441 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062823977 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067299625 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073400371 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077947372 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065758598 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066015922 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073636126 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072913199 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064603456 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068851124 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062928514 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072136962 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080540332 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064566548 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070736465 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075356227 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077089859 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064848897 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063034867 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064805689 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070778133 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070512417 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.065339309 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.065391718 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082714619 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07172227 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067032728 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.063427502 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071747141 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067092214 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077893198 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067540113 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06479938 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073106997 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070678787 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071055496 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074273045 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07469688 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070358753 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070122605 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062935082 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068630909 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063343202 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066395318 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064221324 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063846514 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0671559 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.069894881 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066434667 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078120379 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076762811 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066238056 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061087287 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066250597 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065818281 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061787576 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06398775 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061822241 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.062223219 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061914716 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062055815 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068926347 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071417846 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06707473 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.202215315 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065627612 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062872034 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07504574 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07141527 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070714183 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06254708 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06461678 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.064838539 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07237789 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066506623 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066211656 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070741846 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070396637 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071029532 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062978084 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076263104 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063367345 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070970415 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06760818 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064190674 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064896957 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071663152 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068235045 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065420567 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070827362 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071866612 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06590439 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062835821 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062263675 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073428638 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062729784 seconds)
  done (took 42.887502224 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099475535 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064041783 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063051093 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063278556 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072295567 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063639146 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06267938 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063981232 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06385749 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065674806 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062905655 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06288371 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069822124 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077193001 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072171374 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066855205 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063099955 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063919207 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063075992 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064211758 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070329362 seconds)
  done (took 2.765527882 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.069929415 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077319175 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074907856 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078834764 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071332959 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067515745 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074595211 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067592148 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075224227 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072634024 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075235662 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067408506 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072321302 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07240031 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072409796 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067811745 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075604187 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071729234 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067950017 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074884119 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0678877 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075527353 seconds)
  done (took 2.926578576 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064177938 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063510564 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.07004712 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062037864 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063837393 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062276654 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.065965813 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062382101 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.065858597 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066459909 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066522286 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066478419 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070579418 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062337535 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067553062 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062325085 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107032651 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.065704215 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063940798 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.064496116 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062354502 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070511547 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062596223 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062995607 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066168481 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066531342 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.064230593 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062760758 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063491483 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066641169 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064329754 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062020596 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071255246 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070080615 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066918465 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066671638 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064213412 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063875653 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064805135 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062366882 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070096571 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062804397 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064328107 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070721038 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062684725 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062197251 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070335444 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064048166 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062216697 seconds)
  done (took 4.574299779 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.073926126 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112008981 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068434865 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09400512 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076111611 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069445993 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068587833 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094657933 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063836685 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065016008 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077611994 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07757096 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066081687 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067362372 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068196993 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065627289 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066504728 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065295452 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068953096 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066036521 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068705836 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069709661 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076044492 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07806456 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066867062 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064878527 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065262241 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067224881 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076420377 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069157008 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.0678342 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067853343 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076586491 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068474769 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065356871 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065477193 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077123745 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066164073 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065586894 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064123524 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065341533 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067084661 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069795925 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077635229 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066048934 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070537644 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065818525 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063568393 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076776544 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06570401 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069948267 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077574133 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067013514 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066237987 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06751978 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076833789 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06616958 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064604312 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066750508 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076614016 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064162936 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066997218 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077446933 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.065210004 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069300621 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077826869 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071079742 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067330457 seconds)
  done (took 6.288437417 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072983857 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093749179 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079227309 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079191403 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073255252 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073683624 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073918692 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07373529 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07344569 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077418738 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073954937 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113399078 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069695271 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075321457 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073651051 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074030603 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073693642 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073706806 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073447911 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073230894 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073894521 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080303831 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073667682 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079227646 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07695461 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070015852 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073475994 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073436097 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079499002 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073584614 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076535555 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073195625 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073198268 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079478453 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076659758 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073604105 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063725558 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073708667 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073706679 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073269786 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069469165 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079499728 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073365404 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069386323 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073817044 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073122643 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079509447 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07662009 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075131958 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077266605 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073475485 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080030588 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073826763 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073682237 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079755439 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082503137 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079542083 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079564344 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073612241 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080136591 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079769491 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082423634 seconds)
  done (took 6.088543674 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080418036 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070133516 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081532142 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062648724 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06453776 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072344186 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062560642 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062621568 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070537224 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.070841279 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072094423 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072420031 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074894645 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072007637 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072003533 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074952544 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072111791 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072484291 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070146802 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072343951 seconds)
  done (took 2.789546121 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077074063 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081641737 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068102544 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072555525 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067876594 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072377042 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067723573 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068641561 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068246167 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068411544 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073859577 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07362389 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068516234 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072432688 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073387559 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072276935 seconds)
  done (took 2.499044644 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.0836254 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070818179 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077276122 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064553869 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067660382 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063587236 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063797256 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06254903 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062913396 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076512259 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064163726 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074852012 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064117937 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062849515 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063932333 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069735932 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06309297 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064040866 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06380845 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.0767911 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070753041 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06517935 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067659935 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064088762 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069138482 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07116572 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065402478 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06812968 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065481897 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065698747 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070084693 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071318758 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063970661 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064333485 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063249005 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063963265 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064132019 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064322985 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071159206 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064971723 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064040189 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070854838 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064458777 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064911815 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063854965 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065073675 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063651133 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069873118 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06432805 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069406238 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064094032 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066280679 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064736595 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071464078 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06638404 seconds)
  done (took 5.040317194 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079332876 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068129991 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063078092 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06246665 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084096005 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068390799 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068630861 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068974101 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06905896 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063105286 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068507597 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067514726 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068513608 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068127374 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069321609 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068568908 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063019873 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068950631 seconds)
  done (took 2.604123609 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073228811 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067648527 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072155449 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067615729 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067341096 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067445834 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063369381 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063067312 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062987559 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067581775 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067586121 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067343204 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062988316 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067321133 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067785467 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067793041 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067754398 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062992246 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067704654 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063173965 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067498058 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062818866 seconds)
  done (took 2.82342495 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095997547 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084009592 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.145135276 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080256446 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.090416174 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.0728063 seconds)
  done (took 1.929456667 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093082257 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098421608 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067463457 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068084268 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073426663 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070682159 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071395579 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071357403 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075295519 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075650926 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070988468 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077887885 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075221303 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076980248 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0730708 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073084476 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070914761 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070935876 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067781197 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08004569 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071071912 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075568575 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071491555 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072001479 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071354356 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076955371 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075310897 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075614806 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070895613 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075293925 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072982614 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071241321 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075374219 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075575534 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068100352 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075126974 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071417454 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080347513 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073093772 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07737777 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068715373 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073638818 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075316935 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075042245 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075255236 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070941589 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07430808 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070963792 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071089053 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084953312 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073292931 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077636556 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073182823 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075420961 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075235024 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082041136 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075377202 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076884632 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073369214 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075724809 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077245115 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073735316 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077061988 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075629383 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073340967 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07690758 seconds)
  done (took 6.293577122 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103810752 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068794364 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071480474 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075599763 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076955041 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071487721 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071638231 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071390082 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071066368 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068394906 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105461496 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071590829 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077859447 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079475013 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07252678 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07140019 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071428478 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077075515 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068343811 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081655936 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071305671 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077043365 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077298799 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076864433 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075763632 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073397807 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071556802 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071613042 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070962526 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070913143 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074646872 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071147682 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076998538 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068236321 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077309319 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072158382 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07226042 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074993844 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07114854 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073619831 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077676205 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080287145 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070862918 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070963804 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075606226 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071545396 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070751951 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068191666 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071122035 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068156455 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075943529 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075900009 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075602973 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077376494 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071484778 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07114142 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071178271 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071152 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071329124 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073243612 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076978674 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071225549 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081997808 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072072436 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071685655 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077415992 seconds)
  done (took 6.290495639 seconds)
done (took 129.337615721 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.210051619 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186258749 seconds)
  done (took 1.745876592 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074431744 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.103777487 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.08260325 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.134428634 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071375053 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10605163 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104809627 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083027785 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071517002 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071161712 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071578226 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074441642 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136721882 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.073559491 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.07159087 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074232192 seconds)
  done (took 2.777632687 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104087913 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.213585678 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108975295 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070029241 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104049524 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077303396 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071774833 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.083311474 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076352978 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072078022 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.0773064 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075484647 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071494684 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075450703 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076202897 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077193991 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071461678 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077306915 seconds)
  done (took 2.955627313 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101956215 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093272203 seconds)
  done (took 1.571734397 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.174268392 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133484698 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201258129 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.342350342 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.150301009 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.412602887 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.135749792 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.135472748 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11250213 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.132444947 seconds)
  done (took 3.300525679 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10344027 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.196412496 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294048681 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123069349 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07624311 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.107892476 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.124831311 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082243701 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081634999 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081624251 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080910434 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079420456 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100874423 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076698685 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076173074 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07756123 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103534711 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075107037 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07658774 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076730245 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10401088 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071313618 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076841395 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07489769 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078645827 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078674053 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071814469 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070991149 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076596652 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076099698 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07889373 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.105253915 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079074874 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103620788 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074556803 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104886812 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078254901 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074723105 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076195423 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074716095 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077647214 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077717098 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078774415 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077519729 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071468844 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078062546 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071646157 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070307537 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080066643 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071486147 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079808462 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078906329 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103925413 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071479176 seconds)
  done (took 6.209045309 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107846787 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106311715 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071551524 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112729853 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103822446 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071451071 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105542172 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099499974 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107428491 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071145412 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069932275 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071387291 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081816427 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08465639 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115424725 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107609559 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073236916 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071068454 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107810409 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107796178 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069884347 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101778935 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09825755 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106961255 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069557844 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071261669 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070094979 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07131764 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076308107 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078001823 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070625737 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078558716 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083611341 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077336072 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069072409 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069536534 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070202743 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078076351 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078564253 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078494405 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076605726 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069398073 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069799707 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070436786 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070364299 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069523408 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077153682 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078578001 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077278805 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07007733 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070941433 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069443628 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07077948 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078276481 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076620848 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079175827 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078585828 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069789164 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069442752 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071862095 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079718924 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078636707 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078283346 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070442887 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079106562 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072030633 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079754528 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083257608 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069969961 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070575077 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06961496 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070133554 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070225497 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076411314 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076661195 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070652674 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06985505 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070032328 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079000474 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076984061 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069824518 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076755863 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069639741 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069888852 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070956113 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071107279 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076579885 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078652722 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070979074 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069750943 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069906182 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069716215 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068995184 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076175982 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078271348 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.0781914 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077670511 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070723676 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07748043 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076736659 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070569027 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076613047 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069061665 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070758723 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069861316 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076174078 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075005907 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077954164 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06905947 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068690767 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075956833 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078757042 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06896253 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075400984 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07727654 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075674307 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068249823 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078241648 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069627927 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076883417 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068858614 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.215585399 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070993291 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.0783105 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071354625 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069676613 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070390732 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077817444 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071643317 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070298964 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07070321 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070183617 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077833246 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081213642 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071561078 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077236015 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077244957 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071403281 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077755884 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070323569 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078513043 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070727455 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070856185 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069291662 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080273131 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069826663 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070908043 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070269159 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078966117 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070155165 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07892688 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076882637 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069774744 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080804283 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07901806 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076225247 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07923675 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071648561 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069705707 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069336379 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070162154 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076371632 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078934902 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07141212 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069860045 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076261913 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079074967 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069504085 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.076737342 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076738964 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077212655 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07003209 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070435103 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080092621 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079295671 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077630745 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077148328 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077753513 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070359275 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077026527 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077403123 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070295863 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083886616 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069985671 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081674575 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077983605 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076798461 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078206021 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079391516 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079499462 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079509936 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082330337 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069947085 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069718884 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077599648 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070181505 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070293353 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077462097 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070971767 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071239552 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081621511 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070522002 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079656891 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069641409 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078074853 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069156997 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070973502 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082138551 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069873807 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070791198 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077873967 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072514331 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077062663 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079517235 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076993861 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069604977 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071236957 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078848447 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078025781 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069449189 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069337225 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070985344 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076740518 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076264168 seconds)
  done (took 18.606848185 seconds)
done (took 38.55410984 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.234289975 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.173819188 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.203889645 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.131516695 seconds)
  done (took 2.226406415 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.115023797 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.109400177 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091054509 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066409646 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097390496 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066329592 seconds)
  done (took 1.962246049 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.345332837 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.23551381 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.208373418 seconds)
  done (took 2.199103798 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.222601763 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.210363983 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.461560713 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.28364024 seconds)
  done (took 2.691276171 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145814026 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.086437013 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06504056 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082517277 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.126668728 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.151082743 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.096576761 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.121217048 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076435245 seconds)
  done (took 2.425687737 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.158583105 seconds)
done (took 13.094515074 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.099049154 seconds)
    (2/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.085097016 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.073334389 seconds)
    (4/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.447529836 seconds)
    (5/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.216945213 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069369371 seconds)
    (7/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.244091611 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.108879123 seconds)
    (9/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.256942169 seconds)
    (10/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.162330182 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.128844443 seconds)
    (12/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.199813113 seconds)
    (13/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067574793 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077184555 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.092979039 seconds)
    (16/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.171306321 seconds)
    (17/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.172557525 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095590749 seconds)
    (19/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.183724264 seconds)
    (20/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.207787509 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075078453 seconds)
    (22/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.185198149 seconds)
    (23/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068041666 seconds)
    (24/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.190301022 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07561407 seconds)
    (26/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.164106345 seconds)
    (27/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.139682653 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.101864883 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.14916624 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.104669871 seconds)
    (31/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.242034213 seconds)
    (32/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.201867783 seconds)
    (33/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.228335213 seconds)
    (34/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.17196503 seconds)
    (35/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074132749 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.093083572 seconds)
    (37/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.139511296 seconds)
    (38/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.176806011 seconds)
    (39/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.125745816 seconds)
    (40/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.212352288 seconds)
    (41/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077720756 seconds)
    (42/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.089919432 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.111136643 seconds)
    (44/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.224067435 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074902674 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.104684919 seconds)
    (47/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.123215077 seconds)
    (48/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065768297 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108732993 seconds)
    (50/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.217962943 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.178168215 seconds)
    (52/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.124017925 seconds)
    (53/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.138058351 seconds)
    (54/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067878443 seconds)
    (55/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066482215 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066642631 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.107280336 seconds)
    (58/309) benchmarking ("sort", Bool, false)...
    done (took 0.158232733 seconds)
    (59/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073796576 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 0.067650788 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131718691 seconds)
    (62/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080481846 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074626914 seconds)
    (64/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.067508961 seconds)
    (65/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.202554715 seconds)
    (66/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072147475 seconds)
    (67/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075197312 seconds)
    (68/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.156848148 seconds)
    (69/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.169729296 seconds)
    (70/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.066226628 seconds)
    (71/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.065796587 seconds)
    (72/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075572316 seconds)
    (73/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.13847079 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066626298 seconds)
    (75/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.138662968 seconds)
    (76/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.224507459 seconds)
    (77/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.072536275 seconds)
    (78/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064957169 seconds)
    (79/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074008904 seconds)
    (80/309) benchmarking ("sort", Float64, false)...
    done (took 0.129837949 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.109446132 seconds)
    (82/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076020642 seconds)
    (83/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.160349395 seconds)
    (84/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076804594 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065936378 seconds)
    (86/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074715404 seconds)
    (87/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073995943 seconds)
    (88/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.196276046 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138742657 seconds)
    (90/309) benchmarking ("sort", BigInt, false)...
    done (took 0.410495024 seconds)
    (91/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076898693 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139739579 seconds)
    (93/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071682192 seconds)
    (94/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080657284 seconds)
    (95/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.067413 seconds)
    (96/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066773065 seconds)
    (97/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.142398421 seconds)
    (98/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066642337 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088847922 seconds)
    (100/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.06748462 seconds)
    (101/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073796741 seconds)
    (102/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065901458 seconds)
    (103/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.190981221 seconds)
    (104/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.168674166 seconds)
    (105/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.165488344 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068163729 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066766052 seconds)
    (108/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.065935344 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066781232 seconds)
    (110/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07704918 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142607191 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066974485 seconds)
    (113/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066006976 seconds)
    (114/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.093167487 seconds)
    (115/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066620264 seconds)
    (116/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.075620507 seconds)
    (117/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073982002 seconds)
    (118/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074754843 seconds)
    (119/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.065841933 seconds)
    (120/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.065939174 seconds)
    (121/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.06718773 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07510417 seconds)
    (123/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075829765 seconds)
    (124/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095530631 seconds)
    (125/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070299295 seconds)
    (126/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.0674459 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.125380601 seconds)
    (128/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.190830177 seconds)
    (129/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068376303 seconds)
    (130/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066088474 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074085876 seconds)
    (132/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078417037 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076443492 seconds)
    (134/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067256141 seconds)
    (135/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071813829 seconds)
    (136/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066431774 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075181892 seconds)
    (138/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.197933755 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088798376 seconds)
    (140/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.0751732 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074632426 seconds)
    (142/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069438999 seconds)
    (143/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090902929 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146570049 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088692483 seconds)
    (146/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074778995 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.095842159 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074862199 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.140670126 seconds)
    (150/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075589268 seconds)
    (151/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095452017 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.127772393 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.127850869 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.135938494 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06670967 seconds)
    (156/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066148507 seconds)
    (157/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081031161 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135489504 seconds)
    (159/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074234659 seconds)
    (160/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.190345087 seconds)
    (161/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.077435763 seconds)
    (162/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074266331 seconds)
    (163/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.065991375 seconds)
    (164/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.067288014 seconds)
    (165/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076418555 seconds)
    (166/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07645476 seconds)
    (167/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067520945 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142811719 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067062708 seconds)
    (170/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.066863689 seconds)
    (171/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.167407811 seconds)
    (172/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.138060235 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095904317 seconds)
    (174/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067670659 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091329959 seconds)
    (176/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067640726 seconds)
    (177/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080501811 seconds)
    (178/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.138312283 seconds)
    (179/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.183430039 seconds)
    (180/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067878208 seconds)
    (181/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073165988 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118529639 seconds)
    (183/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066460542 seconds)
    (184/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071964827 seconds)
    (185/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066167513 seconds)
    (186/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067889224 seconds)
    (187/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.207886359 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112963885 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066707036 seconds)
    (190/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073454683 seconds)
    (191/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.06603038 seconds)
    (192/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066731221 seconds)
    (193/309) benchmarking ("sort", Int8, false)...
    done (took 0.169426362 seconds)
    (194/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075345292 seconds)
    (195/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067184533 seconds)
    (196/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066208941 seconds)
    (197/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.080065697 seconds)
    (198/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066960406 seconds)
    (199/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.161113 seconds)
    (200/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.09219492 seconds)
    (201/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073029318 seconds)
    (202/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065837088 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.073019872 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065823018 seconds)
    (205/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.067650325 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088658731 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072728315 seconds)
    (208/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.065021407 seconds)
    (209/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07274782 seconds)
    (210/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074954942 seconds)
    (211/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070417724 seconds)
    (212/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.066596581 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07575071 seconds)
    (214/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.06672698 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073933388 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.288113087 seconds)
    (217/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073247788 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142302974 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091704176 seconds)
    (220/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.141791626 seconds)
    (221/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.068903939 seconds)
    (222/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.079175423 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148570714 seconds)
    (224/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067007377 seconds)
    (225/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068189623 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090995892 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.118485478 seconds)
    (228/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075038306 seconds)
    (229/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066113902 seconds)
    (230/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066165147 seconds)
    (231/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066196478 seconds)
    (232/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067299462 seconds)
    (233/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080049524 seconds)
    (234/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073667875 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066886212 seconds)
    (236/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079230341 seconds)
    (237/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.067674143 seconds)
    (238/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.069652378 seconds)
    (239/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121170653 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066645459 seconds)
    (241/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074235448 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.132315737 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088677342 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066890403 seconds)
    (245/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067685001 seconds)
    (246/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.185539169 seconds)
    (247/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.066106846 seconds)
    (248/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076038862 seconds)
    (249/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068970164 seconds)
    (250/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067827722 seconds)
    (251/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06657632 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.096132217 seconds)
    (253/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067940828 seconds)
    (254/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091143309 seconds)
    (255/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.067621798 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068054557 seconds)
    (257/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066339031 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.174576057 seconds)
    (259/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066300127 seconds)
    (260/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066165416 seconds)
    (261/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066470169 seconds)
    (262/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.06923067 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076698658 seconds)
    (264/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066276206 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.133002958 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066997481 seconds)
    (267/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074910239 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073638483 seconds)
    (269/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066684219 seconds)
    (270/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.067436589 seconds)
    (271/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066569859 seconds)
    (272/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068983475 seconds)
    (273/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07548992 seconds)
    (274/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.180764398 seconds)
    (275/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.067620313 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.132666727 seconds)
    (277/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068451542 seconds)
    (278/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067857541 seconds)
    (279/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.137749684 seconds)
    (280/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076327219 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066854689 seconds)
    (282/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066493729 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.175641111 seconds)
    (284/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.0716289 seconds)
    (285/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.0817279 seconds)
    (286/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066561822 seconds)
    (287/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.065961138 seconds)
    (288/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067374586 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.18376049 seconds)
    (290/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067877345 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076072766 seconds)
    (292/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067805688 seconds)
    (293/309) benchmarking ("sort", Float32, false)...
    done (took 0.132308387 seconds)
    (294/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.067567663 seconds)
    (295/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068865914 seconds)
    (296/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.0676116 seconds)
    (297/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.204611869 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074209915 seconds)
    (299/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066377525 seconds)
    (300/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082197103 seconds)
    (301/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068057473 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092704079 seconds)
    (303/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.066998126 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092119905 seconds)
    (305/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06620734 seconds)
    (306/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074527585 seconds)
    (307/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070676247 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.066345194 seconds)
    (309/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066363 seconds)
  done (took 33.309468539 seconds)
done (took 34.739355718 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086890517 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097968419 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073809979 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095767175 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081945528 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095853033 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074714634 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081263502 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083599225 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080926941 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079922785 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072845687 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075898979 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076532942 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074222192 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097397329 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081001511 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075086584 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074732046 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066584617 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075657481 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067333794 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066315043 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073071516 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078334121 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073701025 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076601642 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07601308 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067665843 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068165322 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072557683 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075951643 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066770493 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08194252 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07595154 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074820433 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076588102 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079305869 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066883666 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067772936 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077019667 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067162205 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075012873 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073814493 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072267022 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073280196 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074987455 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078718765 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096801104 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071091268 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077218848 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078149605 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078533155 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073051262 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072136591 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075266688 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073047535 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096916818 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075629395 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071311578 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076105652 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075950201 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072938452 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075374378 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07502495 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077198399 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078774326 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073513343 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076906007 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073895539 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067333475 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074937015 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071892084 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068921559 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077907278 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07966126 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066057021 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071254527 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075767764 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075427641 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067151171 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071302191 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066331596 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071904199 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071156451 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07322003 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072137925 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074188058 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067080585 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075132788 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074528258 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074555709 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066811983 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079193254 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067329463 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073312674 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067212431 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067368522 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066878387 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072576614 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066694381 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070871225 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.0758914 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066596219 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072002708 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080049006 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06710107 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07458783 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066413254 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066797027 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077781867 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077537759 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067471542 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071786723 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066650273 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072342087 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066622666 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066506714 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066840793 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066956474 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071211805 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066922864 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070440338 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071895347 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078872265 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066541788 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071827 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071244163 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067038861 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073976091 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067256565 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066735498 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066837713 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079994845 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070650193 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066872395 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071736579 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06999562 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074068781 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065245138 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074319177 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071900029 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070568287 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07287448 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065402341 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076522907 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070515601 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06990518 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064943919 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066026027 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.065030749 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065461311 seconds)
done (took 12.736098487 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070204563 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.120490006 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.090835558 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.092664562 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082991968 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068060395 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.073785834 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.088962991 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068989605 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.093850701 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088705156 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087258515 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.107332886 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066372186 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06722638 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070017309 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070321335 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.079820216 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.094513866 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088952642 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.104162682 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06715604 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.084904651 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086507817 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.082591971 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.089747354 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068661422 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068349113 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070444121 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.086043407 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091392325 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07049392 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068718586 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.0883326 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084277569 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079175951 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068226652 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.074716513 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068468667 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069711149 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071662154 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.088322335 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075968884 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079593527 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070599091 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.07741408 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070704576 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.081742484 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.083919855 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.074363055 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.080896348 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.089205211 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070653154 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082192226 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067542639 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.081456204 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.074957151 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068173713 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068273914 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.07281792 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068911988 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072174331 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079545716 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.076592455 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072363413 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080620841 seconds)
  done (took 6.71604389 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086854266 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094456114 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083390344 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083491171 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.0668314 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070089229 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069441069 seconds)
  done (took 2.091781145 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06762262 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093152994 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.094780473 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094244387 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.087684368 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.095390449 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078207263 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067705533 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.100446073 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067138938 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092018805 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112765382 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071761919 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078818734 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.096678166 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068357655 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091931938 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067935649 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06927168 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095200741 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072218645 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.093911132 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079045912 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06809371 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084333848 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068342107 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123221946 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078446099 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069519544 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069194131 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069391602 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.112831685 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083626828 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081104548 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06924462 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082044567 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084578441 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071705627 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082076227 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.078032743 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084072168 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069289571 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067184683 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069433895 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071769199 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079211502 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066971324 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06941831 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069336587 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.092257544 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067137201 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084017127 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071978251 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073240294 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07386125 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072547472 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077121445 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069966586 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091841171 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069403294 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08739504 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086539897 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084097125 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086645966 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068385275 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083977565 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084205623 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069287904 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070493625 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069629316 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087031904 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071576717 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069622942 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079237878 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068074363 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.098552018 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09617438 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067592555 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080877532 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068909862 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069671592 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079519071 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.096560861 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073351423 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069690979 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073411613 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070286602 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.071757711 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067180592 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072523495 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069721994 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073506726 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069761528 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072514842 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07109533 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087091614 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067791358 seconds)
  done (took 9.160875354 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070512612 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069596527 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070028386 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068802966 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070223991 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069571017 seconds)
  done (took 1.983543616 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090708841 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068528607 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081489025 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.069017642 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.115658977 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.082876119 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083411152 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077227725 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081240993 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080793626 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083120093 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086023884 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.086612642 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070737827 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082869803 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069711366 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082915022 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072208178 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080053851 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071649529 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.080784147 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071668614 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070962504 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087573729 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071824528 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070114326 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077322733 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080031702 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07967298 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077376836 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070528903 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071875669 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076716356 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077429367 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083251848 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078071407 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068852624 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07493448 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071529802 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072638692 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.085587633 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070988402 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.071282022 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075479635 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07709264 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076307114 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074837798 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076666627 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082922222 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074738025 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074673434 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069674164 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072060834 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07499996 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076414406 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077382739 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074589401 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083152064 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070570312 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076336884 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070655099 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073329315 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076838393 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071688168 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075148098 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075012933 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076662455 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070709332 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070998758 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068848363 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074857541 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068955295 seconds)
  done (took 7.048567714 seconds)
done (took 28.562990513 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.524271306 seconds)
  done (took 2.039515315 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.63284352 seconds)
  done (took 2.181735549 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.43889851 seconds)
  done (took 7.981333065 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.438064314 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.507126763 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.767123744 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134870462 seconds)
  done (took 3.427558743 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.709709894 seconds)
  done (took 2.266758507 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.250703441 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.236017263 seconds)
  done (took 2.05198794 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.348229768 seconds)
  done (took 1.894318389 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.07770028 seconds)
  done (took 2.622736867 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.285771711 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162902545 seconds)
  done (took 2.003086745 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.457794967 seconds)
  done (took 2.005399197 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.316127839 seconds)
  done (took 5.869244658 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.241184752 seconds)
  done (took 1.832423854 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.231647458 seconds)
  done (took 1.788263157 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.733399493 seconds)
  done (took 3.283137563 seconds)
done (took 42.803548374 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08296102 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086203639 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085531544 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081692363 seconds)
  done (took 1.864107048 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075587042 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071647787 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075635758 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071232339 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075173722 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07183264 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073026763 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.074004893 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071436693 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071729463 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071611865 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071568009 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074578804 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.0731266 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071083807 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074596614 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075374193 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071615256 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074101541 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071781152 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.06987409 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074206872 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074160101 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070873041 seconds)
  done (took 3.299837936 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082132202 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074512406 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076251892 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073039058 seconds)
  done (took 1.862765249 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078209194 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09198759 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087418462 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078297798 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093069653 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087429951 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068069908 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068205512 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071708689 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077458935 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067073197 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096216152 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089831632 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077618376 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080027754 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064454831 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066411444 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088649285 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078330303 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078637123 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069392259 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077843002 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067718454 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087278997 seconds)
  done (took 3.446186174 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.08784822 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.067028011 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.087004041 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09325035 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094159589 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069171002 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.096672652 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093741013 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.138308737 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.0699016 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.075492678 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069571204 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.10705676 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069466432 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.084596921 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109277256 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113290183 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072910874 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.10126238 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069219352 seconds)
  done (took 3.330462767 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.084285351 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070594592 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.07137499 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06692843 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077290975 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073786528 seconds)
  done (took 2.010266118 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069459402 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069418008 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068981195 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068259835 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073711384 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071690321 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069356391 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070909985 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.071162658 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070373794 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.07026038 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069655643 seconds)
  done (took 2.402968747 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.163222464 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070485766 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071247173 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067509888 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073205426 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068318111 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.0840582 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071992505 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.088419437 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068557799 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067990993 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070260637 seconds)
  done (took 2.527287949 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1864432 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075794985 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220613149 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154811356 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102242596 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114189789 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11294314 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112029559 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.136491599 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09504489 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149104577 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155156416 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105873812 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126079252 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087718646 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.12343641 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138114687 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152251289 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099339282 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150691861 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137350138 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119233064 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137505703 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097474377 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099137736 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113894761 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072604944 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076962181 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155700412 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121485936 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131667403 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104077015 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088062509 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163925213 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152553139 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12897542 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142785054 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080953364 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.116432062 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.125716064 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187606564 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086648937 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145504135 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102570695 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077456382 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118824938 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108397102 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.112305948 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.097763794 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086519769 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278580069 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168745137 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.128324405 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083641129 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119193583 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101995118 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.108468077 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114532394 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169147967 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144681678 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117191406 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070048631 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108134677 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138110888 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122692206 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.102739263 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.114459385 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087621308 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128113635 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144173275 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125560202 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134591148 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.114412052 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083707537 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112269302 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131240981 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116420775 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156884608 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114169533 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071621644 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111218673 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092730201 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078146223 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143144143 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073821661 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160411885 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096137533 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.118305415 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126700289 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105833277 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104177383 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143434053 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136810744 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100443345 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084484237 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099196396 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.112671132 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13131175 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083421591 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103331752 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10617201 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07693628 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119908734 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073495691 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110315989 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092334769 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113032259 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115374358 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076316498 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263560906 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100215344 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098633054 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12403315 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143973288 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085968975 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078309578 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1513107 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112065483 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.097995237 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132721863 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14442658 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117475303 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093762888 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133354665 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161856779 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087832638 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146170336 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096622536 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081246719 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102229624 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112354852 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104220543 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.11623781 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078235798 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.110436629 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153509228 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072685822 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092137097 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122705979 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078714586 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078358821 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098563293 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097948212 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.092641077 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.096724893 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.099926885 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124270555 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113724679 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100055198 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115921976 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093129263 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152039378 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084802311 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.09840086 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100065791 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071287619 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.127413304 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142025689 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076249808 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153172024 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.114893573 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11355485 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111280588 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080794807 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131298298 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076874504 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071264548 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128252909 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105657624 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102537587 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.291117968 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114394841 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.115975077 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.111703903 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119057069 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119801923 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.119501625 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10213834 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086931371 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108519876 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120239281 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07231066 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.088227996 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079650727 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098747385 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089436378 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081892363 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128395619 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11494548 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107962771 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107843792 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092838609 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136348289 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076726286 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116856818 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.113892773 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09086801 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.139784689 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137963137 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121389276 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097386404 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128235877 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072323406 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073132721 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.083765643 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116860731 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08211001 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080887733 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105738646 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137525152 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119061141 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122753833 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119814761 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116294424 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145781081 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071898269 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117283821 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133617664 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112089871 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101392586 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087788867 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.094968315 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131387074 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097892756 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171233103 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106219434 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115156064 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143869695 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.096805048 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075809349 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098629901 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125043009 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249795189 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13284511 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095509869 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083877979 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102320065 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077143789 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092999799 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11813168 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106893322 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125933838 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.10551394 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118877004 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076208366 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103943198 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114120249 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111285179 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081904744 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111738439 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150826748 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093315001 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109385787 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137706835 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076671421 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.135234164 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156280426 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133518082 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082152592 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098766127 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112509134 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117259665 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112066805 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133642012 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097149823 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127769717 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105196962 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084976286 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083059867 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093175465 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099495502 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108008324 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.09824324 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.105668273 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092228901 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121924218 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097633967 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105278967 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110127874 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098297633 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.094415799 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094309411 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160721888 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110570074 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15418643 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.095479171 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.130348891 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153043616 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073939962 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076031332 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077104772 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130297272 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080682965 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272196455 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.110984039 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113620541 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112808698 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133237409 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092543096 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070729548 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103480662 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120630904 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119335716 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092621887 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.097033827 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145970153 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.11281079 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076367853 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111051291 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113651214 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098538386 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158020326 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080301097 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107460419 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075302544 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077017845 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116742261 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138784902 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084517868 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100230145 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111539302 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103215715 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117466842 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092431124 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109083822 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126506899 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134743755 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11856731 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086769036 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105218683 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120590833 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141433018 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099105538 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096287398 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158138779 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138469723 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.146784131 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.083231354 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107915826 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107580457 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103053581 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124490002 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081819484 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153519 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079279534 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124419271 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094518148 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085044861 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117448782 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.109986753 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083981806 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131493474 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105456114 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078781039 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076636316 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101299892 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106513989 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094078604 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.071341715 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123835554 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07161917 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120213226 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150591879 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076773298 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097609436 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090002194 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078132862 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093882749 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093994535 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081295719 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.093955761 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149875235 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.082016963 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126869764 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115350015 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099810614 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117978151 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094992089 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.633724858 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.074883283 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129830757 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102200028 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153416716 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091660335 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104108014 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09892764 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103848434 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121640075 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090562806 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.173054624 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113097004 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.102560978 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074600083 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092350059 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091981496 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.081493098 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097741171 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102268932 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098066873 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.085867321 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.102445455 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105464989 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.078014139 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088017722 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131761313 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102822279 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123442719 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126395226 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078700871 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103806869 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114958595 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074884748 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.104788548 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.4032167 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104806366 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100163656 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083682154 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.096487959 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159595954 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074313943 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143727886 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113325145 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106290389 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108811609 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.104284095 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121193199 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098316082 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113634946 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089504439 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.105068455 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107629061 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082754593 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078687087 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100829418 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104895335 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09517354 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092987148 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097488932 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139003842 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072387416 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094229462 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114009426 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131579313 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16278808 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.104052342 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082289765 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111172051 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111557098 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.10627111 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11251838 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.112287002 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079980901 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080165849 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.099213941 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.119340985 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106270655 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115957589 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104875246 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154113378 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082614816 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225764705 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092003767 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100185122 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.086448237 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07836846 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092534723 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092364891 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098311195 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109710793 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158020719 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091206423 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087088484 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088163343 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073878396 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081224177 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117374661 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104218156 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108386794 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097771553 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079934612 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096833465 seconds)
  done (took 55.650885187 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.105061898 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.078412578 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098171859 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.151124079 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122791745 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203432457 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154157816 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189210427 seconds)
  done (took 2.855023551 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069493462 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096393674 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101819719 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082760623 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067688328 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069207227 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.240197241 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081825685 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068096529 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094882012 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080829052 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069723623 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.430037393 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067640327 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068577018 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.078166713 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06858106 seconds)
  done (took 3.539124888 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.38684811 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.597717907 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.384198207 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076115795 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.873999006 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093130471 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.129913736 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139230464 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.08201885 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.517008087 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.37282214 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130520222 seconds)
  done (took 18.501359959 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.081474107 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078902266 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.089846877 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.089680326 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.078533062 seconds)
  done (took 2.128352095 seconds)
done (took 105.009654502 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08134586 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.194767436 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.068584171 seconds)
  done (took 1.999933116 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091168752 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08852153 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.088828802 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086449625 seconds)
  done (took 2.075612266 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075171956 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07717603 seconds)
  done (took 1.862606138 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.242374526 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172935976 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.099807591 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083895919 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080518892 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081141476 seconds)
  done (took 1.964894109 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073325675 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073062462 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073554027 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077713551 seconds)
  done (took 2.007686531 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.071195203 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067456469 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069840784 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072131324 seconds)
  done (took 1.992792336 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.0843914 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085429535 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.08058816 seconds)
  done (took 1.962822482 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105553162 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094742882 seconds)
  done (took 1.911120503 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080992061 seconds)
  done (took 1.794617639 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096453741 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.105192751 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131436137 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113465086 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140715022 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.118635352 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.083559393 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087810608 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078180195 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085097113 seconds)
  done (took 2.75239294 seconds)
done (took 22.631745526 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079554516 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368311865 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363780329 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090965812 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671239588 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358131776 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.970668737 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092804537 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111695975 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069774332 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087040565 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652579377 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.961774487 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323894452 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.944080547 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322537003 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653469259 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06979071 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068863309 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069750872 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.955992809 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068890253 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069908642 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069787758 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651490557 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37391844 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070284422 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.317716307 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069175628 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074001472 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35951222 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07137668 seconds)
  done (took 16.173976925 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071259195 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12168034 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076949388 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085860259 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071445106 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070790758 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072368765 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070120639 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12082729 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070163319 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087427971 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069268499 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074238527 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071185228 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090347171 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070172553 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073011566 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071716727 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070407505 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071579945 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089036294 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070311844 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071352499 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070880856 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071194399 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083244928 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071678163 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070356007 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071190551 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074181648 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075196656 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071836749 seconds)
  done (took 4.200735798 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116673029 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125110073 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077986479 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106901165 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116747141 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071423992 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145586575 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09358393 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124022933 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070941419 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087697033 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06987328 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103694315 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071430878 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090886805 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070922795 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073460698 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070922974 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070178939 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071186781 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090036911 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070331326 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07108108 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070885624 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071419218 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08493937 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071597723 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070554486 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070589013 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074659898 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075860425 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071926678 seconds)
  done (took 4.458640949 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071305068 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073569074 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08082029 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082133043 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068462999 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071497152 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072112047 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068878594 seconds)
  done (took 2.326140699 seconds)
done (took 28.884558376 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078894509 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06856055 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071978432 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088024516 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.0750425 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079711224 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067185117 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075703391 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073138236 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073108108 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075819689 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068400631 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071561388 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066686228 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073293473 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067639671 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080835216 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071473078 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080350294 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080935447 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070362445 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073774102 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076102897 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080170934 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080331092 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080410064 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077739902 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073808447 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068902592 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071854732 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.070599891 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.078600504 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.082191306 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083295524 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068231657 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068745654 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.073019415 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070834151 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.0816299 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077012569 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070075721 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077305357 seconds)
  done (took 4.849307089 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084001768 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.0894516 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082206224 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079386601 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097391736 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082722673 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08657207 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078091756 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078246315 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08635588 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075024905 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081179445 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079136591 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073994638 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078484897 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075763197 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080637293 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075865217 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.079041355 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078629418 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087436644 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073223649 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087791857 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079953617 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075678529 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080938603 seconds)
  done (took 3.846019433 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074091564 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086204625 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092676371 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143007455 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110536075 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.086526069 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081778979 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093565038 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09703873 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071011882 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075800377 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09484935 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096563123 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078063648 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.115955055 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087310705 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087050789 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073364315 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078574125 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100258491 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091672787 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088344954 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097101676 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088097094 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070724942 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074300737 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075535863 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084066345 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071401095 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079687071 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071711479 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072135696 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069692572 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079442882 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072288861 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068096975 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091977647 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079870924 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081426636 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105511129 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078399986 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069880705 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093576322 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12783766 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068488093 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072540332 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072492615 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079872937 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068243733 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095895861 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080593644 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068710238 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069472699 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068750941 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068516079 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071662844 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070912128 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07061322 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078599559 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074926829 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08990277 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07366544 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087272877 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068081249 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079308971 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068159172 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070081583 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068212157 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096883272 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071061078 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111551626 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070031762 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067681367 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079760275 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079093702 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074379467 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068748355 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087685597 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078959234 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072883831 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077467651 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071395071 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072235438 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098576531 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069654453 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068791403 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068078212 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074202584 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072321789 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069805775 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080351504 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068858176 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072589546 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088377433 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068998495 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071161311 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072412776 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071083943 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068769877 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079946299 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073609323 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070547058 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079620499 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070192144 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072244926 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082234339 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076236228 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067861106 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071249602 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072174813 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070303386 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070466462 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072393156 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07108343 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075825359 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075904997 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075249356 seconds)
  done (took 11.024593658 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166683574 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.160271896 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072295522 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.151493226 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078263936 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083106653 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.155998213 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098108027 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070885874 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071421887 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069967732 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11363533 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108787083 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11996176 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082105763 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070542771 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095433052 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.118619609 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.157325269 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.150888339 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092727569 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07844114 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073140619 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071711708 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071820577 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079802828 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087121516 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079044572 seconds)
  done (took 4.684491277 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078630163 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104833694 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074193198 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.09225998 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089103478 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070330262 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072155077 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071949198 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086631603 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078904765 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070778376 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075695936 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07395527 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073573104 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071116429 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076882309 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077435528 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069805312 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.0747859 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075435617 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080574267 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094959685 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075507257 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070718857 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073011726 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070348117 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077988581 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081839146 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070519261 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.106406336 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068263431 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074840245 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084438027 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07079181 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069931855 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070479552 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070504171 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070575074 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070916433 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069088576 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069084087 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.074648329 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069158621 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077780662 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083174517 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.077204079 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072424219 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072828976 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073035959 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06792111 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07313789 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073213338 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073115966 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077818359 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074108373 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073485646 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071607145 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096030533 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076413327 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070017019 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069521447 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069359748 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072691752 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.079894631 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.086245941 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073074852 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069385827 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070437832 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082676015 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083208641 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069702253 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075064121 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067898795 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.074003042 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073302416 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073142874 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070930394 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068845097 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069768184 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070518101 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.071000824 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070197775 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.069871722 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07307094 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068630039 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069305025 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070749346 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073868622 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078522403 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069781049 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074223491 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071127278 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069349894 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072756165 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.075347966 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072912746 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080621316 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080373875 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070754993 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069126424 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086491012 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073214916 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.073922159 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075701386 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074752741 seconds)
  done (took 9.657677905 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09243849 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070576344 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086343356 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092840227 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079948595 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075017254 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080460525 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070059384 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086070742 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075076437 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077539283 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068551771 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081094584 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079963267 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070652991 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080445914 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073042325 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.090552463 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084326474 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068908359 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07901374 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082071421 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08270623 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084860865 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083777488 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085443408 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.082272691 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079445256 seconds)
  done (took 4.036058853 seconds)
done (took 39.828848022 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.848530599 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.000858755 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.816226293 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.007038622 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.035357469 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.828911969 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.908001278 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.810757885 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.224894289 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.855341293 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.142531444 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.305644398 seconds)
done (took 66.653434492 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.82483112 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.95934762 seconds)
    (2/2) benchmarking "String"...
    done (took 2.053743136 seconds)
  done (took 5.75665717 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.018667213 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.508993761 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.077287799 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.806762319 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.814440215 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.240020345 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.583786151 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.264131106 seconds)
  done (took 31.03982255 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.926562406 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.02399411 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.497378938 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.528256428 seconds)
  done (took 15.764694075 seconds)
done (took 64.238139729 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.813326816 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.809888045 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.88336715 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.834932946 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.817527212 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.810235396 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.808633664 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.808571479 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.854846397 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.045058386 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.80661772 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.823217801 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.810300301 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.805985329 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.287511517 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.853220505 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.81837789 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.810982351 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.820917012 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.866377953 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.810590035 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.965799659 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.259969254 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.013766818 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.419102698 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.120833394 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.236804339 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.223251642 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.822399852 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.811464594 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.87775047 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.035170719 seconds)
  done (took 206.530266075 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.812520976 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.555920498 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.661686922 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.845233743 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.061020241 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.994020316 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.916507101 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.140852038 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.817099015 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.834879158 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.95920187 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.813216313 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.993038142 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.755511929 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.848226545 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.90793017 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.936093705 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.005090195 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.851802003 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.976658297 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.825852026 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.759044311 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.714094163 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.956063749 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.854578496 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.813806267 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.823308238 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.822415386 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.994849869 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.927838484 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.850761824 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.854457302 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.984021327 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.682090048 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.836997622 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.829585945 seconds)
  done (took 169.963026956 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.005586887 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.819991209 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.814195914 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.866843575 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.934857415 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.817234258 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.484352836 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.822319605 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.159818886 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.817937359 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.813921704 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.813705348 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.814060273 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.825932591 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.892565228 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.817265344 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.828643963 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.816112105 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.840139094 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.81349614 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.814641868 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.813786104 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.814017424 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.812953404 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.814320575 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.814157618 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.138044563 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.063294348 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.817103372 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.817351912 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.871748838 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.828749326 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.895976637 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.818603652 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.906141121 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.86889727 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.937734899 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.818036113 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.814273392 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.032096514 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.890268658 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.81648801 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.815296666 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.879493498 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.828954169 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.816403688 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.816543629 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.820557867 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.880546531 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.060311329 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.816815757 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.936664308 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.29859894 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.815279701 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.814887214 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.81612543 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.817424921 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.398350404 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.818186296 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.816934512 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.822203079 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.822288852 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.816038028 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.816135059 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.203855859 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.816439711 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.88728239 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.914637614 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.127950604 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.823505011 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.906173267 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.934996815 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.816389821 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.816129075 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.819499333 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.819221645 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.817484785 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.819361252 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.938662833 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.827562408 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.933492864 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.898271667 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.938697143 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.821297733 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.826157463 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.64725364 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.889335713 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.85454788 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.64682628 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.821524375 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.190546066 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.595646295 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.821162483 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.816988493 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.83025778 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.81771415 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.816918217 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.818315356 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.897540244 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.819415931 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.93875144 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.539447414 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.05842714 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.818796083 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.819160314 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.824544054 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.899247656 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.940383039 seconds)
    (108/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.822446513 seconds)
    (109/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.884343237 seconds)
    (110/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.825233029 seconds)
    (111/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.819350471 seconds)
    (112/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.819108914 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.89609712 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.819588243 seconds)
  done (took 405.059805219 seconds)
done (took 785.357039544 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.497506094 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.468871792 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.561070556 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.482376806 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.457236998 seconds)
  done (took 14.219849647 seconds)
done (took 15.972620063 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.894964148 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.900251718 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.841024143 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.900018044 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.834287499 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.898894259 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.882803226 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.840208133 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.869310274 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.841278917 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.868260191 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.840009563 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.826705115 seconds)
  done (took 25.991952053 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.052977648 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.057152627 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.887068638 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.053270644 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.867829163 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.068720899 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.167715663 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.96444092 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.959251718 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.831217034 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.8282917 seconds)
  done (took 23.494171927 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.047224009 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.051286694 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.893807998 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.047201021 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.867947809 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.057617786 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.974708203 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.967154758 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.966457433 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.831540837 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.829348048 seconds)
  done (took 23.290486766 seconds)
done (took 74.5290532 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.824301614 seconds)
  done (took 3.58111638 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.843461406 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.997941942 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.823725312 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.824287959 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.823877271 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.825059933 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.824459995 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.824969784 seconds)
  done (took 16.548445813 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.823835581 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.823629209 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.824558374 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.824601476 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.824456423 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.823136485 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.825047227 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.823922787 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.824671351 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.824606634 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.824125596 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.825049406 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.825199503 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.82453745 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.825530537 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.823712487 seconds)
  done (took 30.948845134 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.826834146 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.824082802 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.824707109 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.824540056 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.823990136 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.825633641 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.825968305 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.824666855 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.824417616 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.826122232 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.825158085 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.825833563 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.824732056 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.825293082 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.825107699 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.827401941 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.826881662 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.826459249 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.830619425 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.825655591 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.825565715 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.825192035 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.826933887 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.826288497 seconds)
  done (took 45.585237258 seconds)
done (took 98.419699499 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.695481883 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.523985136 seconds)
  done (took 9.978636741 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.828763205 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.826793971 seconds)
  done (took 5.495565726 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.826419267 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.826534116 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.826884387 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.826247996 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.826528768 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.826180856 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.826151082 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.826222543 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.826508674 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.826742145 seconds)
  done (took 20.023198911 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.827075072 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.826595258 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.826294391 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.828737106 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.826757979 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.826877433 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.826501269 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.826467401 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.827815002 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.828483169 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.827796574 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.827227166 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.827295362 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.826286644 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.826622661 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.828270026 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.82735987 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.82772162 seconds)
  done (took 34.649762548 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.829122959 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.830825662 seconds)
  done (took 5.420801798 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.82731716 seconds)
    (2/7) benchmarking "second"...
    done (took 1.827642463 seconds)
    (3/7) benchmarking "month"...
    done (took 1.82806933 seconds)
    (4/7) benchmarking "year"...
    done (took 1.826956251 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.82783989 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.827572508 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.827730327 seconds)
  done (took 14.554189422 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.828798054 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.999915792 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.062191511 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.473904024 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.829489192 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.832752818 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.740515637 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.830694857 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.832321973 seconds)
  done (took 20.192063493 seconds)
done (took 112.072130301 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.691133957 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.829929994 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.130504491 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.978978736 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.850425927 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.167132811 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.845955268 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.097393357 seconds)
done (took 43.351699031 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.872062986 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 6.433738663 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 6.459264464 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.857070954 seconds)
  done (took 21.513739239 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.832653925 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.163618236 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.853563829 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.71575719 seconds)
  done (took 22.376598165 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.191366807 seconds)
    (2/2) benchmarking "read"...
    done (took 2.178679045 seconds)
  done (took 6.1363624 seconds)
done (took 58.661108782 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.828456339 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.829576915 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.82853811 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.829230868 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.833892155 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.828993878 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.830086022 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.829597252 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.829578997 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.830065285 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.830767155 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.830427641 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.830538566 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.82963365 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.830837324 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82908483 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.829912134 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.830743142 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.830239973 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.83031575 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.833018156 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.832157875 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.829896549 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.830489877 seconds)
  done (took 45.689692564 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.831290932 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.831617542 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.830398698 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.830729467 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.830817984 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.831385282 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.831356606 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.832772988 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.831474844 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.831051553 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.830933628 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.83130893 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.835068712 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.830278815 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.831474573 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.831906301 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.832241016 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832679722 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.833285479 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.832459117 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.832290139 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.83218944 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.832239719 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.833255714 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.832144371 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.832173281 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.831460479 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.831957528 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.833740567 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.832350156 seconds)
  done (took 56.723240452 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.83231084 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.832632888 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.832299796 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.832849536 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.832364931 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.831540677 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.832754138 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.832977595 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.832522759 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.833479252 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.833301611 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.833663452 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.832394144 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.832656898 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.835463366 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.832940719 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.833116196 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.832861536 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.833168642 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.83456974 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.832393051 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.832718016 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.832768951 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.832920977 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.832876067 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.834732577 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.832943666 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.833376303 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.833605394 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.833227295 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.835754156 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.833036225 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.833296046 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.833565239 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.834579126 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.834548686 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.835228555 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.835129772 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.834170862 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.834689105 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.834363882 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.835789105 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.833919995 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.834189109 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.834080459 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.833775357 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.833741043 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.835687797 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.834971117 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.834855478 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.834489829 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.835524392 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.836130242 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.834870609 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.834951307 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.834709085 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.834623378 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.835682329 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.836036077 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.835149072 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.834904064 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.835127875 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.835641832 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.837011064 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.835646271 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.834987445 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.835206015 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.835841024 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.83568179 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.836711564 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.836744167 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.835314195 seconds)
  done (took 133.82859908 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.835264033 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.836546686 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.835607421 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.835640481 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.835285585 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.835393022 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.837429594 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.835684672 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836078524 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.835862333 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836322632 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.836619727 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836865749 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.836288953 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.837598212 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.836632556 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.836072877 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.837595734 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.836548864 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.836271939 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.837132115 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.838005316 seconds)
  done (took 42.169766545 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.840441741 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.837660585 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.837930894 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.837445006 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.837357397 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.839077519 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.837176621 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.837827516 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836492388 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.83735639 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836817713 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.837821221 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.83677512 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836482946 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.836300083 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.837545681 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.840157138 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.838620271 seconds)
  done (took 34.849010825 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.838527685 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.837377623 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.837515902 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.838927778 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.837892938 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.8385403 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.838586112 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.838423659 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.838964509 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.837743393 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.838190174 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838383345 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.83825556 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839584086 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840801483 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.839192549 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.838773699 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.839320677 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.838027549 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.839447969 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.839214421 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.839473697 seconds)
  done (took 42.221560181 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.838804533 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.83909574 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.838919016 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.83949771 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.838922577 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.839803728 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.839899526 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.84039615 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.838923456 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.839472546 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.839672098 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.839396704 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.84011758 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.840445979 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.839907025 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.839361687 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.84039287 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.840000404 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.841609708 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.840178429 seconds)
  done (took 38.566887132 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.841162566 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.841777678 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.842366862 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.840798525 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.843553869 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.842364404 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.841803149 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.84159064 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.842451405 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.842043389 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.841908284 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.84055724 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.840030964 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.842580793 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.84121935 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.841039227 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.842160942 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.841313521 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.842437516 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.843179888 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.842490486 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.841962458 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.842078542 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.842525045 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.843543317 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.841715513 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.842105172 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.841616038 seconds)
  done (took 53.347155519 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.843228449 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.841180554 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.840574015 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.841341798 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.840811494 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.841965192 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.842612147 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.842557567 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.841452743 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.841699973 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.841980723 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.841878933 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.841888998 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.84302913 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.842208838 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.842270094 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842782653 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.842863731 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.842906615 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.842301384 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.841591648 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.842638209 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.842779242 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.841764688 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.842443241 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.841638602 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.842674652 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.842204204 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.841634883 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.842301968 seconds)
  done (took 57.038576555 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.86228392 seconds)
    (2/2) benchmarking "in"...
    done (took 1.861872107 seconds)
  done (took 5.497862152 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.841359986 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.841845466 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.842294642 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.842223731 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.843525501 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.84231208 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.842043283 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.84311895 seconds)
  done (took 16.513130037 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.843975894 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.84330559 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.842378782 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.842308326 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.842172701 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.843850302 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.850966029 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.843198111 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.84485798 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.844393228 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.850068319 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.852167926 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.849912208 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.845663643 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.844563272 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.846401244 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.843792441 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.844516928 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.843249876 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.84435512 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.844051944 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.847487869 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.846583786 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.844994689 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.846152187 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.854947846 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.850236049 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.844408905 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.848766429 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.849621977 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.846199961 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.843435754 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.843842854 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.844826539 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.844318819 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.84507647 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.853399303 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.84744979 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.851511767 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.84523685 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.844050035 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.844921677 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.84737769 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.848257732 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.850466114 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.84538039 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.8443529 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.844975745 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.846119843 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.848171991 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.853583502 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.846639392 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.84442486 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.849645538 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.848703752 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.853262123 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.846850984 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.8490309 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.854745575 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.857475172 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.858680015 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.855059193 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.849260495 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.846755574 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.855772272 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.871191579 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.854505235 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.847524742 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.845458991 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.845769834 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.854447772 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.85829838 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.856289528 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.846897468 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.847364646 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.847176476 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.849180052 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.850773856 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.854419714 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.852561429 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.847537049 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.848016767 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.858080034 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.86929913 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.848752113 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.848259941 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.847963917 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.84877914 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.850140186 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.860284782 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.849608408 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.848275542 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.848533268 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.851101615 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.850175717 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.848148216 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.849369954 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.850492381 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.847612565 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.84846918 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.849269779 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.851998666 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.858701542 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.849124035 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.849877908 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.856665137 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.849276409 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.849705377 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.855878938 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.850381375 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.849821589 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.85168517 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.856510399 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.84905139 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.853290872 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.858613874 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.848681025 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.851902804 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.848716721 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.849861644 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.859717531 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.875361323 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.849314289 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.849487084 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.85576105 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.860353568 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.852687084 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.854714925 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.849195374 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.849354925 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.8493203 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.853590755 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.850576969 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.853085446 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.850132716 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.852212325 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.851094024 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.850892219 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.851587601 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.853213188 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.854443596 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.852715272 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.856011278 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.853273042 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.851154662 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.85338367 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.857668249 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.85292433 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.85363806 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.852934331 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.850730476 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.850791589 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.853414111 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.851712222 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.85252062 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.851568007 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.852396905 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.850839956 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.851957556 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.851272936 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.851754548 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.853332609 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.857194726 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.851329179 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.855465048 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.852270279 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.85116246 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.850670113 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.852666626 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.852677351 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.851902536 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.853012386 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.854119644 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.859242033 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.854271796 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.852656267 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.855254313 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.852577815 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.852943451 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.853198781 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.855884384 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.861340815 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.852483281 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.859957827 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.853192227 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.853553742 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.853064348 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.854270094 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.853798514 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.853321026 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.859095802 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.862577711 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.865039253 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.8631208 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.855673103 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.857308273 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.857139355 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.857351912 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.858568369 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.854245425 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.854448621 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.854715361 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.854654837 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.853339737 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.855920469 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.85349042 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.855103844 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.856731669 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.853557015 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.853841942 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.853876071 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.855238127 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.856724649 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.853440628 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.853938869 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.854749368 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.85545968 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.855166556 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.855361093 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.85603651 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.854432259 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.85517966 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.862900179 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.856182278 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.857164733 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.857126256 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.856145266 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.854925852 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.854990558 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.858705877 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.856125889 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.862930379 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.857676789 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.857488671 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.863102921 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.857667004 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.856693857 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.859865515 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.855644125 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.857316863 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.859678884 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.86330689 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.855005816 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.856002291 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.857569143 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.857791707 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.856030551 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.863063111 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.856053906 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.858576679 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.85635547 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.859235652 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.856410046 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.859065339 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.859121952 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.861551827 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.860906855 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.856391513 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.856440155 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.859445072 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.857327269 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.856390826 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.857378515 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.860488704 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.863803618 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.863047254 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.858259605 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.861186309 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.858816118 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.860207352 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.858922019 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.85896605 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.858894382 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.868346518 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.864731107 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.864589 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.861466644 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.858140337 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.864028426 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.860241877 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.862240305 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.859608921 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.859921987 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.860254741 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.860426511 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.857117505 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.860092003 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.858292269 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.863049106 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.86088477 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.861480959 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.858548016 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.860882706 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.858593993 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.858913325 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.859401528 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.860388498 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.859575365 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.863193653 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.862009127 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.85974932 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.860809014 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.86618893 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.860774747 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.863728317 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.860252132 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.861558868 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.86055566 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.86191355 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.860412793 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.8637025 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.867236269 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.864090499 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.869904799 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.862433044 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.86987516 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.858982042 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.863285707 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.868219581 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.858998757 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.861816146 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.861552309 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.859780016 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.868196482 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.861424814 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.862123935 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.864330623 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.860232824 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.860253376 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.861394406 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.862022441 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.860621729 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.860657619 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.869260281 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.864265265 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.865946721 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.865599879 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.860180771 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.86077061 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.861076319 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.861813483 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.866162721 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.861895089 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.863346415 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.862256465 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.862765168 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.86209465 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.860749629 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.862036401 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.861811407 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.86146405 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.871036186 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.866091735 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.865036125 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.861973488 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.870465245 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.861676247 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.871225127 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.863235889 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.864414175 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.862893765 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.861769446 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.865511399 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.863952505 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.865343672 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.86306612 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.864744191 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.866837227 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.863705759 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.866029672 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.864695185 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.862756019 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.864358979 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.873065586 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.885146398 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.865593163 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.866474102 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.863654715 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.865548279 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.866767681 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.863273708 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.863298166 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.866138491 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.874522479 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.870472235 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.865084333 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.863569351 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.865255661 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.863100706 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.863658188 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.864004731 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.863910358 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.863671514 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.865548477 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.864899498 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.868541508 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.863885864 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.866100561 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.866288647 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.866546486 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.87740154 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.865753233 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.867293918 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.865498546 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.864450765 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.867883514 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.866242562 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.864772685 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.86598019 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.865500336 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.868730142 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.871652603 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.872823348 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.868877703 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.865723208 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.864969175 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.867273084 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.868037895 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.865503242 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.866149672 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.865594896 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.868801928 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.866006268 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.867905718 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.865927029 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.865819124 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.867772202 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.864207543 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.869462519 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.873994923 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.866818049 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.865793774 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.867045023 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.86693499 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.866253624 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.868202177 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.874462867 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.871009304 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.876695069 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.875730044 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.870650214 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.868568856 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.869896571 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.875180939 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.866164536 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.868531346 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.866624462 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.868658727 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.868818061 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.872189444 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.867893621 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.874660265 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.868290176 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.868679417 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.876650034 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.869160063 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.86692751 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.869023239 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.871734835 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.868480736 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.867558793 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.867970754 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.868585611 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.875582549 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.871524959 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.868099841 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.87119621 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.868155881 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.870259028 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.872480464 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.868156188 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.870882641 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.86777914 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.869882862 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.869331043 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.867590651 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.867504995 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.869058573 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.869304405 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.872331702 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.876149839 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.868770677 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.872385064 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.870100429 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.871771493 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.869511087 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.868140154 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.869118899 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.868841778 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.869515232 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.867973621 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.869327789 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.872796437 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.86969018 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.87110294 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.873137562 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.868541059 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.873192114 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.878707601 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.875477184 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.870202317 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.87045638 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.871790758 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.873548999 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.869521471 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.869660457 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.871127284 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.872381931 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.869882242 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.870348562 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.869650058 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.874152785 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.886544256 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.87347341 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.87170289 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.872251092 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.876440924 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.870649666 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.870780161 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.870623188 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.872942326 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.873469107 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.877590946 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.870515916 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.878717894 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.8729814 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.872152165 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.87396355 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.874096683 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.880523632 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.874603789 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.871586276 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.871564212 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.877541171 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.888548379 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.870986043 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.880210833 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.900687658 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.873948196 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.875110352 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.872277408 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.872747782 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.870937342 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.875690731 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.87247797 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.873303555 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.87137935 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.871919728 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.874105818 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.879433928 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.874544102 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.872164698 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.871129645 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.873329496 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.875041958 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.872771497 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.872652726 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.872147224 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.872374909 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.873180194 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.873577364 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.875408103 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.884404499 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.884234511 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.873565254 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.873736291 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.873109679 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.876930276 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.876546647 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.884449051 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.879584433 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.874183764 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.872976178 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.875389845 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.872923798 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.872591157 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.875142572 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.876777288 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.875130714 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.873278332 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.886021319 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.882372943 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.879073189 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.875497548 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.874438646 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.873744967 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.876589448 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.875222892 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.874194625 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.875792459 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.875937655 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.878338143 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.874575556 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.876573407 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.87799271 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.882166019 seconds)
  done (took 1111.261773099 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.875972843 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.875021395 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.874785852 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.873845288 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.875039284 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.874754178 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.874995668 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.875577829 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.875628946 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.875000634 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.875073158 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.875949573 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.876996001 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.875340524 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.875423989 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.875372416 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.876490704 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.875737672 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.875129703 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.875545966 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.877449379 seconds)
  done (took 41.192281809 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.876867652 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.876317568 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.876757739 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.879972473 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.876562179 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.875345251 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.876976473 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.875127128 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.875991875 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.876663633 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.877940469 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.876580501 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.875863826 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.875824769 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.877157283 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.876620818 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.878770616 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.875851259 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.8761576 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.876495889 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.876761399 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.877160863 seconds)
  done (took 43.095932998 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.876334878 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.878350278 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.878484585 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.877373204 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.876786567 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.876942781 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.877288222 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.8776138 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.877537534 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.879998326 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.878254209 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.880313606 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.884010803 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.885541996 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.882157791 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.877790509 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.022748031 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.878248144 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.877929519 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.8787955 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.877670264 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.884722967 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.877844099 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.877735625 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.879607798 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.878409976 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.87813483 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.87853549 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.879949873 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.88185483 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.883039288 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.879076955 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.880268691 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.881855986 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.880217984 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.88166926 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.883027238 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.878613103 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.878313452 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.877998626 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.888540672 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.900330576 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.878885209 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.88633741 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.880123875 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.879272183 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.882534703 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.887647373 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.879563088 seconds)
  done (took 94.094808188 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.879267506 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.880038933 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.879356396 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.880076076 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.87956491 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.878345733 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.879176834 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.87911994 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.880022371 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.879844746 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.880047522 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.880092446 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.880044084 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.881944134 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.87961526 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.879910876 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.879982684 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.879901915 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.880091921 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.880223022 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.879681127 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.880596262 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.88165241 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.881274041 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.87992618 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.880225995 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.879708321 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.881383984 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.880925417 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.882936673 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.882698648 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.881357432 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.880957998 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.881554026 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.880869505 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.881448998 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.881549805 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.882035792 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.880633073 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.881058226 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.882743722 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.881977204 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.881244312 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.881641294 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.882117785 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.88273038 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.882014613 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.881958041 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.882504209 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.882883408 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.881845012 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.882539018 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.881646918 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.88168723 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.881970733 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.882081764 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.881507767 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.881960051 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.882883617 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.882948042 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.882254505 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.885570458 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.884223031 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.882407159 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.882587354 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.88276707 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.883373681 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.883119149 seconds)
  done (took 129.740907371 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.883115185 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.883481497 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.883074675 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.883278664 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.883895364 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.884153563 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.883677578 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.883851274 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.884340959 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.884312264 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.882880784 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.883375271 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.883866793 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.883839896 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.883201572 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.883879302 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.884718951 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.884279715 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.88467734 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.885054618 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.884563611 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.885521211 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.885275589 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.884895044 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.887127463 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.885073547 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.885073199 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.885825443 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.885977435 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.885196241 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.885693054 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.886001428 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.885731604 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.885687568 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.88503688 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.885388034 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.885456999 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.885423246 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.88510646 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.884278182 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.885338808 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.885110871 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.884815642 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.884663638 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.885501466 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.885304169 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.88616281 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.886224799 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.885071401 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.885848347 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.885409618 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.885400989 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.885798065 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.886248428 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.887308689 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.885578273 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.888198536 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.88668164 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.886115845 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.886613192 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.886259431 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.885874758 seconds)
  done (took 118.690873826 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.88666586 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.886238391 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.886447716 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.887031306 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.886827455 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.887105715 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.886164008 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.88679159 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.886828135 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.886480617 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.885278229 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.886396428 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.886847294 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.886210213 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.886638406 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.887281483 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.887036022 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.886869419 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.887511742 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.887936497 seconds)
  done (took 39.552151796 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.887035273 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.887773089 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.887115538 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.887304107 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.889010622 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.887885879 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.8868647 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.88768557 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.886405846 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.886205142 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.887195429 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.887167588 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.887901199 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.88761383 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.887196642 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.88771626 seconds)
  done (took 32.016157397 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.887797558 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.887334784 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.888441363 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.889260071 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.888376659 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.887750365 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.887836555 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.888312721 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.887533744 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.888638071 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.888836565 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.888729124 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.888478348 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.888123318 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.888798229 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.888579938 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.888653979 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.888273962 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.888684434 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.891633129 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.88935289 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.88973926 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.889626191 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.888185226 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.889304446 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.889609651 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.88941311 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.890060389 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.890347233 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.889456066 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.890034456 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.889823727 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.889939001 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.891266948 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.890278221 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.891428409 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.889321142 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.889373956 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.89043187 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.889812259 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.890618721 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.890426245 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.889273069 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.889493964 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.889781054 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.890493982 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.891218781 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.890427252 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.89025985 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.890436629 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.88993864 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.891783922 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.891148029 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.890196981 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.890032064 seconds)
  done (took 105.742369114 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.890303961 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.89081909 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.891163225 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.891374189 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.890764237 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.890759118 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.89047511 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.890549188 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.891633173 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.890920774 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.891855503 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.891622796 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.891298636 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.891754728 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.891483699 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.891030026 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.891817528 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.891978006 seconds)
  done (took 35.862605934 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.892378202 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.893179818 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.892802404 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.892247472 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.89122554 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.892300706 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.891764086 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.892460519 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.893501156 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.892788274 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.891205841 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.892674664 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.892821944 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.892275437 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.892438672 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.892238755 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.893443424 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.892526283 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.892852143 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.893058198 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.892630684 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.892985568 seconds)
  done (took 43.458724889 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.89413483 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.89371151 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.906983264 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.912458135 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.91375946 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.925502453 seconds)
  done (took 13.268810845 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893668851 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893426912 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.893611879 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89423111 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.892888153 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893608228 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893547827 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894318858 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894087427 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894064089 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893061176 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.892450501 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894303533 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893883013 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893862988 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893690502 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.89490781 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895552645 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.894876382 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894483938 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893757409 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893705766 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893968086 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894513087 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.894167654 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895109676 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894878704 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.896878872 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.894339052 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.895066751 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.89569139 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.895232293 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8954318 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896656611 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895380992 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895643385 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895708688 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895482458 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895266898 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895211086 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.896488538 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896952649 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89502957 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89524227 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.896108153 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895297308 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895618125 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89604458 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.896584203 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896927936 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.895764208 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894984716 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895449844 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895983471 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895470569 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895868249 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.896313387 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896784541 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895690461 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896003413 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896646117 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895378968 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896924607 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897829998 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.897080812 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895929481 seconds)
  done (took 126.904439393 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.896569211 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.89636237 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896819076 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896653088 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897737525 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896603208 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89940498 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897274672 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.897505045 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.896928718 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897922877 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.897478143 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898706406 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898504907 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.897813383 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.897708896 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898082421 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898346008 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.897959262 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.898319685 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897481081 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.898009373 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900551809 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.897952487 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89816081 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.898707252 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89916148 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898896554 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898793407 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.89930256 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899376696 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.898240051 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89802278 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.897606712 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.89704738 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.898626046 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898764081 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898767789 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900791897 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897576811 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89868559 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.898646328 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89899223 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899244928 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900121762 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899431662 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898945982 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899379997 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.898657669 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.89919492 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899228804 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900429661 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.89937109 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900180821 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.902407525 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.899621954 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898986215 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.900323733 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899723594 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899749267 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900962411 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900036535 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900769114 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900368299 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899987961 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900590439 seconds)
  done (took 127.147975964 seconds)
done (took 2590.241191847 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.947531165 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.919959077 seconds)
  done (took 15.697874281 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.065885038 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.015986054 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.902307422 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.951632059 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.90207567 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.929096361 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.924143755 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.902092616 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.901871071 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.902321909 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.903692857 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.090130002 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.959457196 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.902673276 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.903642109 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.994481058 seconds)
  done (took 52.995390675 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.906225649 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.907173587 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.915314598 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.908054668 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.904976163 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.918233023 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.937537387 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.908698479 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.939096131 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.92041178 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.973231432 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.917941032 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.907719787 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.95577247 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.921212536 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.922292822 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.999366459 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.983889095 seconds)
  done (took 36.578832546 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.98285681 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.915859758 seconds)
  done (took 10.740017031 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.918499795 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.969480158 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.970036463 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.919594042 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.917272394 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.916830292 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.906811978 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.908377786 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.921469427 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.922432722 seconds)
  done (took 71.109293525 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.909214886 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.907396181 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.901259313 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.903040529 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.90254074 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.907255063 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.900711241 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.906254833 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.558277008 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.944885572 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.912181932 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.907111306 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.903322389 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.906353323 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.899313798 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.923406939 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.011214759 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.899699286 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.89989186 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.911394243 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.903324396 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.954732866 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.920473098 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.904520676 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.929673372 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.557377946 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.911634279 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.911621925 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.015326515 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.905915449 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.902882041 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.091948782 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.904721933 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.369457789 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.176356044 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.908092227 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.915873833 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.908466058 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.903904723 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.017809383 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.906906688 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.913299791 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.825581566 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.151700065 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.997355674 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.950133263 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.19862044 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.924708184 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.905961863 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.936008367 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.908736962 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.902139437 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.918576476 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.41640897 seconds)
  done (took 134.616000764 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.905423538 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.262552253 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.069625569 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.90255401 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.186488612 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.114465313 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.908443489 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.944720075 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.908594687 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.127844314 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.166986468 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.011024152 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.907660208 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.902101533 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.904021857 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.903251354 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.058161019 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.973951347 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.909357328 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.903595585 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.930024218 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.151601853 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.026464223 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.905597723 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.927804871 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.110167037 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.021566056 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.004393147 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.688435978 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.902558987 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.964632662 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.906725858 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.904594157 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.90300662 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.058231694 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.999150048 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.996342369 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.906901705 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.906707222 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.906295396 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.651827979 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.108759016 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.005275633 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.037760421 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.159057155 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.112223503 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.686023201 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.901421382 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.643730218 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.066286745 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.13510762 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.137436369 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.026405861 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.910517465 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.428756709 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.900173565 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.903389834 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.153041066 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.125829913 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.999510248 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.911826414 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.902336626 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.903014609 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.192855102 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.904338021 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.997498278 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.906418154 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.903946837 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.997482823 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.999615663 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.131722175 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.117710137 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.932102696 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.24154299 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.409792527 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.145943843 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.96954942 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.151775717 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.906698659 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.901021521 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.977322531 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.744436975 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.153421429 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.18405965 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.144864787 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.935732572 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.620914067 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.901453156 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.126273572 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.121215264 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.603799852 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.147437433 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.138334781 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.218600066 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.902061243 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.901759671 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.172005176 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.026340889 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.904999261 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.248468182 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.131825693 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.430240547 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.927379508 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.203977599 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.031519266 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.904620039 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.532494385 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.902566897 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.129663115 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.944371427 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.905821525 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.900043814 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.120144403 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.890211262 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.903629776 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.846564853 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.961198583 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.907665951 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.134687555 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.903803386 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.168739725 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.906754383 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.135472123 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.954545416 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.931909292 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.131034363 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.149593319 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.903391644 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.138185945 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.14499322 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.016541018 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.177472415 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.807577185 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.900841162 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.186240891 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.905407954 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.901066996 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.070237916 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.906740732 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.04231049 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.905838437 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.196100608 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.924163497 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.133143231 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.906082781 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.156167718 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.934363144 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.952380263 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.905637689 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.032525125 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.904434056 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.815318817 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.05585505 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.909067012 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.901872299 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.620845679 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.900636264 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.048864945 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.12962331 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.921850936 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.973538277 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.564629566 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.900576234 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.979162522 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.924016938 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.283084026 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.899853533 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.153142707 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.903896993 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.900857381 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.901304862 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.186614978 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.141106422 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.907057912 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.901333759 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.804174957 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.900787329 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.89896058 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.079288704 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.244732093 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.900903461 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.101629177 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.902639454 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.022308729 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.899581406 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.980969462 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.228139872 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.890552141 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.891219962 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.89106147 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.889298598 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.890888805 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.149309545 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.912558237 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.380425815 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.021777506 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.158253801 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.195173284 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.130520584 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.925386022 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.884897444 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.142509079 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.88267375 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.943525427 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.883721795 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.89708573 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.106001595 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.878731003 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.087202657 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.144320918 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.723202838 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.924352185 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.877815862 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.874148139 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.86907808 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.017258346 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.954576189 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.872947509 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.869793727 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.980889757 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.988141299 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.074823498 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.866357872 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.953587239 seconds)
  done (took 911.581968486 seconds)
done (took 1235.149210061 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.865005421 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.864294857 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.862047922 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.865168895 seconds)
  done (took 29.254741479 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.863790027 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.860212581 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.86250522 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.862973425 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.86087412 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.862262176 seconds)
  done (took 12.965834946 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.920273651 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.861963854 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.860576716 seconds)
  done (took 21.437773266 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.931203284 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.237519392 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.997773453 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.269754356 seconds)
  done (took 10.227318163 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.855888946 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.856138579 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.856605208 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.856970228 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.858743306 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.86169545 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.860026501 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.859182265 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.861494331 seconds)
  done (took 18.520751802 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.81096294 seconds)
done (took 98.012860902 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.990572767 seconds)
    (2/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.040580359 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.996084715 seconds)
    (4/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.244727079 seconds)
    (5/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.16127093 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.022321649 seconds)
    (7/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.252233524 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.276165975 seconds)
    (9/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.923789544 seconds)
    (10/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.111717936 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.100923889 seconds)
    (12/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.161021803 seconds)
    (13/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.315940369 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.939480779 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.233488827 seconds)
    (16/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.160548863 seconds)
    (17/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.080831525 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.708390985 seconds)
    (19/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.068835653 seconds)
    (20/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.367045373 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.081899762 seconds)
    (22/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.096779201 seconds)
    (23/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.239997107 seconds)
    (24/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.110202439 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.94099772 seconds)
    (26/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.079782139 seconds)
    (27/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.145998404 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.815076969 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.051070678 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.218184533 seconds)
    (31/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.305933891 seconds)
    (32/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.249697388 seconds)
    (33/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.250310519 seconds)
    (34/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.0217762 seconds)
    (35/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.008514537 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.299549482 seconds)
    (37/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.173144901 seconds)
    (38/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.158126829 seconds)
    (39/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.749128833 seconds)
    (40/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.918707145 seconds)
    (41/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.913132588 seconds)
    (42/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.391727969 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.934136723 seconds)
    (44/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.01101083 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.194315099 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.260831181 seconds)
    (47/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.929071544 seconds)
    (48/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.151524545 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.047930542 seconds)
    (50/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.9256725 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.021628834 seconds)
    (52/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.85173728 seconds)
    (53/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.084756181 seconds)
    (54/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.927491204 seconds)
    (55/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.013706358 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.233424765 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.603338787 seconds)
    (58/309) benchmarking ("sort", Bool, false)...
    done (took 2.142234288 seconds)
    (59/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.246770894 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 5.60542642 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.051037426 seconds)
    (62/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.588855436 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.177833593 seconds)
    (64/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.455664814 seconds)
    (65/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.226356822 seconds)
    (66/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.020650464 seconds)
    (67/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.944526342 seconds)
    (68/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.161072528 seconds)
    (69/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.791867652 seconds)
    (70/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.083862232 seconds)
    (71/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.227261384 seconds)
    (72/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.943965243 seconds)
    (73/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.171159565 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.164356648 seconds)
    (75/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.220996368 seconds)
    (76/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.924120995 seconds)
    (77/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.169939818 seconds)
    (78/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.010751969 seconds)
    (79/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.933217838 seconds)
    (80/309) benchmarking ("sort", Float64, false)...
    done (took 5.662397843 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.898896288 seconds)
    (82/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.932228714 seconds)
    (83/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.021464023 seconds)
    (84/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.943606692 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.233352167 seconds)
    (86/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.928605515 seconds)
    (87/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.999415145 seconds)
    (88/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.255275418 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.928857484 seconds)
    (90/309) benchmarking ("sort", BigInt, false)...
    done (took 6.927359418 seconds)
    (91/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.95157082 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.924151808 seconds)
    (93/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.984748643 seconds)
    (94/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.922401678 seconds)
    (95/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.456673942 seconds)
    (96/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.193734387 seconds)
    (97/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.931366066 seconds)
    (98/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.861016811 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.877789068 seconds)
    (100/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.058841293 seconds)
    (101/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.947253143 seconds)
    (102/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.049809386 seconds)
    (103/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.287357804 seconds)
    (104/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.145207995 seconds)
    (105/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.930047605 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.162789459 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.339246892 seconds)
    (108/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.303619999 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.221543798 seconds)
    (110/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.935568382 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.176170749 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.263028229 seconds)
    (113/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.050695736 seconds)
    (114/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.416568286 seconds)
    (115/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.091004688 seconds)
    (116/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.029619472 seconds)
    (117/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.172707475 seconds)
    (118/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.955225653 seconds)
    (119/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.033264326 seconds)
    (120/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.404828613 seconds)
    (121/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.013795372 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.235200366 seconds)
    (123/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.950255283 seconds)
    (124/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.962582629 seconds)
    (125/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.986549796 seconds)
    (126/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.169755051 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.056574442 seconds)
    (128/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.109089783 seconds)
    (129/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.935160001 seconds)
    (130/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.180982098 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.15894979 seconds)
    (132/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.06453785 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.95765847 seconds)
    (134/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.929054944 seconds)
    (135/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.623957072 seconds)
    (136/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.228774159 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.189110049 seconds)
    (138/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.680065229 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.876884662 seconds)
    (140/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.939777309 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 3.591527344 seconds)
    (142/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.034547888 seconds)
    (143/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.939130947 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.927753353 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.031965802 seconds)
    (146/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.93672162 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 8.355319258 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.040640383 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.963870841 seconds)
    (150/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.008462718 seconds)
    (151/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.954734013 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.928822924 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 8.027129835 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.026790392 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.542662844 seconds)
    (156/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.949025727 seconds)
    (157/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.486072582 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.943826987 seconds)
    (159/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.014503385 seconds)
    (160/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.100100752 seconds)
    (161/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.936266783 seconds)
    (162/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.174757817 seconds)
    (163/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.251694055 seconds)
    (164/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.050038189 seconds)
    (165/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.935975797 seconds)
    (166/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.051103651 seconds)
    (167/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.930828937 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.039844633 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.934192303 seconds)
    (170/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.513772603 seconds)
    (171/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.202553891 seconds)
    (172/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.21899662 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.607305334 seconds)
    (174/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.944625901 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 4.532949612 seconds)
    (176/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.936338976 seconds)
    (177/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 4.055551975 seconds)
    (178/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.106970358 seconds)
    (179/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.939203798 seconds)
    (180/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.545752 seconds)
    (181/309) benchmarking ("perf_sum", Int8, false)...
    done (took 2.122494269 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.933798097 seconds)
    (183/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.183666266 seconds)
    (184/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.945583333 seconds)
    (185/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.122853869 seconds)
    (186/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.267694477 seconds)
    (187/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.736313956 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.063260064 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.324169138 seconds)
    (190/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.955749422 seconds)
    (191/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.034080424 seconds)
    (192/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.061618968 seconds)
    (193/309) benchmarking ("sort", Int8, false)...
    done (took 4.821411249 seconds)
    (194/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.9453922 seconds)
    (195/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.250426696 seconds)
    (196/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.670125679 seconds)
    (197/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.833729875 seconds)
    (198/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.041576366 seconds)
    (199/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.119504193 seconds)
    (200/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.938761533 seconds)
    (201/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 3.472694982 seconds)
    (202/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.117484713 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.001801553 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.600389178 seconds)
    (205/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.931542904 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.108340491 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.165408194 seconds)
    (208/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.143742348 seconds)
    (209/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.308978673 seconds)
    (210/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.952444768 seconds)
    (211/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.017798815 seconds)
    (212/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.928632977 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.669019084 seconds)
    (214/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.259450854 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.259740851 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.051475685 seconds)
    (217/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.024687198 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.928091284 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.923594897 seconds)
    (220/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.167884467 seconds)
    (221/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.390290587 seconds)
    (222/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.93805221 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.927447074 seconds)
    (224/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.085479582 seconds)
    (225/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.204358281 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.830431287 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.937132861 seconds)
    (228/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 3.334433658 seconds)
    (229/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.064130484 seconds)
    (230/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.122239882 seconds)
    (231/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.186377747 seconds)
    (232/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.936365988 seconds)
    (233/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.702644595 seconds)
    (234/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.939875443 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.313731783 seconds)
    (236/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.065272737 seconds)
    (237/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.009514748 seconds)
    (238/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.018574265 seconds)
    (239/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.932773727 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.168637241 seconds)
    (241/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.941954586 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.022234128 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.898847034 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.143155864 seconds)
    (245/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.931427164 seconds)
    (246/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.025357834 seconds)
    (247/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.021651782 seconds)
    (248/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.923844361 seconds)
    (249/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.456507853 seconds)
    (250/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.176718782 seconds)
    (251/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.244846556 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.716151505 seconds)
    (253/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.726262502 seconds)
    (254/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.933320577 seconds)
    (255/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.180082931 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.921980255 seconds)
    (257/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.417681248 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.926954545 seconds)
    (259/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.003043637 seconds)
    (260/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.359823893 seconds)
    (261/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.287536337 seconds)
    (262/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.924876763 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.945988251 seconds)
    (264/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.032927047 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.030721842 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.314233958 seconds)
    (267/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.945862158 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.935057092 seconds)
    (269/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.293688026 seconds)
    (270/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.029837657 seconds)
    (271/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.276613481 seconds)
    (272/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.941512025 seconds)
    (273/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 2.032653004 seconds)
    (274/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.91857011 seconds)
    (275/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.009000712 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.02686865 seconds)
    (277/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.31580607 seconds)
    (278/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.923597037 seconds)
    (279/309) benchmarking ("map", identity, Bool, false)...
    done (took 3.243705146 seconds)
    (280/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.9439195 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.29867806 seconds)
    (282/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.177702577 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.097058088 seconds)
    (284/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.049744898 seconds)
    (285/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.741825653 seconds)
    (286/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.105702088 seconds)
    (287/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.27175551 seconds)
    (288/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.093364759 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.919022098 seconds)
    (290/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.918997944 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.819393539 seconds)
    (292/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.163479053 seconds)
    (293/309) benchmarking ("sort", Float32, false)...
    done (took 5.615824517 seconds)
    (294/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.092076017 seconds)
    (295/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.930346876 seconds)
    (296/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.221885539 seconds)
    (297/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.926733504 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 3.194214751 seconds)
    (299/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.948647265 seconds)
    (300/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.835041319 seconds)
    (301/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.30244983 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.566037838 seconds)
    (303/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.938467034 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.662242082 seconds)
    (305/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.010316809 seconds)
    (306/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.945351776 seconds)
    (307/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.981107131 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.133865169 seconds)
    (309/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.037012639 seconds)
  done (took 1023.356963318 seconds)
done (took 1025.486414477 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.95138354 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.941012576 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.925617749 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.947281411 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.03986085 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.970249963 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.938909819 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.928892847 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.978091686 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.975547996 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.926631523 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.968818454 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.927435228 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.926155405 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.927485442 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.942993653 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.232312676 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.960824088 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.945488648 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.93780879 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.944938049 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.926613157 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.976115249 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.965843338 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.932315771 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.931452469 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.929909297 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.945407033 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.040271353 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.930363128 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.93253991 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.939232541 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.23202964 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.958594663 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.924376136 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.945759633 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.939661972 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.939494776 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.932394124 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.959835382 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.322754156 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.969783434 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.927733432 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.927440107 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.92605893 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.934637706 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.928467785 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.935532239 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.942035516 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.944026832 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.309928819 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.985074892 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.930386967 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.926790632 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.939616749 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.927829036 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.934530813 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.943153101 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.947996835 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.944468499 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.218278809 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.96587006 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.931026032 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.945256514 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.938406995 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.347157347 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.968578615 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.934372628 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.320751208 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.978768425 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.347297702 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.980902946 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.930139473 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.944530289 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.963472552 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.231246646 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.957800622 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.92862649 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.938000708 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.926429836 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.940766481 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.944188131 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.934669548 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.930376168 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.94627016 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.973475316 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.943401936 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.929247163 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.941765414 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.949977749 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.939897498 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.945634727 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.934258301 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.926831387 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.942783037 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.934646016 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.934508608 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.933980707 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.934714884 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.942972074 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.320307656 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.989334143 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.927975255 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.929067078 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.931631008 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.944318735 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.319462859 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.972294988 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.952778579 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.97928864 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.931937926 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.220699891 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.9675129 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.947558363 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.943481986 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.933988954 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.928540303 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.220099404 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.348156934 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.987726986 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.931998349 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.929401371 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.94684838 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.93286598 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.927692368 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.235565391 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.96414923 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.946619532 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.05444937 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.944651148 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.964636255 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.930604024 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.936963367 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.977531538 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.950575638 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.963874406 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.934419794 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.948718646 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.950627568 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.932134348 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.944174067 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.945301885 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.933547376 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.942281159 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.929393648 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.977118924 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.947089219 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.948031565 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.952081927 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.054857321 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.930341459 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.222237784 seconds)
done (took 303.153711929 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.011663524 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.927340618 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.019783862 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.926305392 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.027954813 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.001786303 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.923901336 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.922868756 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.922446929 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.449066365 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.92531161 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.927289062 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.921055519 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.920552355 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.000179447 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.918012451 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.920841702 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.362253647 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.924494602 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.000872751 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.915541431 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.914856559 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.913322732 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.402126684 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.914964231 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.912529963 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.98462385 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.904770307 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.344326838 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.903474583 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.902241526 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.335813525 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.981589954 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.927340175 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.904708011 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.911713335 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.986442599 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.909171239 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.964691423 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.97761424 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.99134108 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.928156864 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.89386184 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.896025566 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.898254863 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.893127035 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.893382885 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.923134937 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.891473279 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.893162771 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.357135529 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.895391556 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.893022598 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.889664091 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.886697639 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.914924322 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.887845307 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.888195924 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.97262089 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.888558265 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.954229145 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.375286983 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.380540499 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.88707851 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.880151164 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.881689528 seconds)
  done (took 187.659765246 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.944991958 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.95631923 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.947461871 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.886449311 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.930169795 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.949114208 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.884238333 seconds)
  done (took 15.312360958 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.885301141 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.878584638 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.928017179 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.927880126 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.878255834 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.034893507 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.878843135 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.890420429 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.883726283 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.905850494 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.880011614 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.879832661 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.888663007 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.878214379 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.928003273 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.890897208 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.994444608 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.881273684 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.879108935 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.027426385 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.884974287 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.886821007 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.905439491 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.89135888 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.880925347 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.887863356 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.471346369 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.879534249 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.878880705 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.879317612 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.880361004 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.922359389 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.878949744 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.879233861 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.880045413 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.994999691 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.880168561 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.879669515 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.881062861 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.879056264 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.878815835 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.880388067 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.879984411 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.880188992 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.879589357 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.903708957 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.880014428 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.880050322 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.881078682 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.880323854 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.906969888 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.880527773 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.880644894 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.88726257 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.923049689 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.887303311 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.881171742 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.880502925 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.877460202 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.87745073 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.025317157 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.928151717 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.875510296 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.925067825 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.875872355 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.874444932 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.872793044 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.876444959 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.963485548 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.871933166 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.921768231 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.872508737 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.034561902 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.893939391 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.871079678 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.874270021 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.872868299 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.87202215 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.871151514 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.877929706 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.870915623 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.874050627 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.877610801 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.874896414 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.869877944 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.982917166 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.01088701 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.869923683 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.871841672 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.879270315 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.871770862 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.915475784 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.870394896 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.870899903 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.928474503 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.987319821 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.901203305 seconds)
  done (took 206.519455004 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.878478816 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.878232905 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.87420702 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.887583821 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.87299925 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.871833826 seconds)
  done (took 13.066351615 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.874878157 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.874692321 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.870965651 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.871952812 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.872686179 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.871079117 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.872119793 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.874318854 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.873797535 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.870332626 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.870195308 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.870392439 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.87163479 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.869064844 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.866464482 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.866221322 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.866997612 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.867108146 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.867741039 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.864101426 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.11737359 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.863063115 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.862524772 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.867487324 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.864823403 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.859408549 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.874399568 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.860066286 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.860781533 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.867598962 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.863448429 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.859085996 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.862841203 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.866515531 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.86406069 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.862421326 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.863053564 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.860202466 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.858425563 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.86193152 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.859524762 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.858976893 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.859326989 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.86039299 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.862186468 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.866779421 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.864378862 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.874528489 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.859929769 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.859998736 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.861688631 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.860159219 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.860046468 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.860980032 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.863973621 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.868925979 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.867107722 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.860589794 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.8606015 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.86426956 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.864423478 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.86063491 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.863847559 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.864781557 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.865470552 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.862287078 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.864525892 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.86503659 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.86159981 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.860644969 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.862135824 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.861681765 seconds)
  done (took 137.341527124 seconds)
done (took 561.776274382 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.194440281 seconds)
  done (took 8.985719324 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.930604521 seconds)
  done (took 8.781662451 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.24933756 seconds)
  done (took 10.046812956 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.8823631 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.886450836 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.881188577 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.872396224 seconds)
  done (took 29.34180801 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.081754027 seconds)
  done (took 8.878743989 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.888923914 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.864047886 seconds)
  done (took 15.612871946 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.960188414 seconds)
  done (took 8.76251226 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.271294214 seconds)
  done (took 9.076024709 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.886574858 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.872323031 seconds)
  done (took 15.576658613 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.870296896 seconds)
  done (took 8.667225803 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.984855162 seconds)
  done (took 9.889150639 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.89081559 seconds)
  done (took 8.758636944 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.914061506 seconds)
  done (took 8.709722411 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.922874954 seconds)
  done (took 9.718479275 seconds)
done (took 162.596554971 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.883475641 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.863723562 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.868466818 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.86449678 seconds)
  done (took 29.276588394 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.899839653 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.899338752 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.901165334 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.909967146 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.900699852 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.898304749 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.891846972 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.892689017 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.909625853 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.901199583 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.901036791 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.90211077 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.899558083 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.893464841 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.901900483 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.901353639 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.911447846 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.901160544 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.89253802 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.902367788 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.867924831 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.911004041 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.90303801 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.869132665 seconds)
  done (took 47.359916596 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.057941813 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.938934756 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.021226578 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.92090332 seconds)
  done (took 9.73673277 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.920143256 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.921175131 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.932197435 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.972544748 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.994380667 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.93173212 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.890006677 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.890747839 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.874932342 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.921156543 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.996449221 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.915785043 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.009690212 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.86754513 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.049830633 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.868514596 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.868537275 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.920010823 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.974855086 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.984959912 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.868897866 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.92211679 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.923656923 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.916872254 seconds)
  done (took 48.13562246 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.870264033 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.877839079 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.877961457 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.870359996 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.870519991 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.871142636 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.877537705 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.873288981 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.892045026 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.872949146 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.871011829 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.871367091 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.877457731 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.870746176 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.870638142 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.884507093 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.884271609 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.870588366 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.875095556 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.877903974 seconds)
  done (took 39.308401741 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.87019146 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.716520695 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.21449692 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.122166837 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.870178739 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.869642113 seconds)
  done (took 31.463615781 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.883788466 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.879863605 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.87046878 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.929506422 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.013057017 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.878242187 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.870718511 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.882563562 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.9194245 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.937612236 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.891495683 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.899536507 seconds)
  done (took 24.656805699 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.871226335 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.876609854 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.874111819 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.885399795 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.882105262 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.880839209 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.877274289 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.869596623 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.886936768 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.891663004 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.87946933 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.884078073 seconds)
  done (took 44.364097063 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948715402 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.744259131 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.307874582 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328648643 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.393658386 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.072981636 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.870706017 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.955496997 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.871380871 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141677089 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.146654048 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1579734 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.205374256 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.766306941 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.96037958 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.440482749 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250293255 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169075509 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.987416338 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.615395756 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.063515021 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.510979229 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.569862234 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.066783604 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.160663815 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.083321182 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.223861594 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.908936429 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01190746 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965111633 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966176822 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.962274527 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235427765 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082026832 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03374621 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967572274 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.374422067 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.665946678 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.969020243 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.581274517 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.40221492 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.070317795 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963664821 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.960827208 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.88968622 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.522623463 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051855711 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.962470594 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.666443829 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.963212236 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967996501 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038922576 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.963658344 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.769547833 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.645497799 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.230142775 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.963939885 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964822301 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.523170732 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.940755711 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.620490711 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.890774701 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.051224397 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.579524264 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.402183701 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.116735636 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.963026281 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.96640789 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.891097209 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.570878106 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.072617205 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.097846287 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.977740445 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.603897868 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250457093 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.324859921 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.004961207 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231616578 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.801966541 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.893022123 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179849246 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.914276958 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.893853111 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.791570162 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.892655788 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175820979 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994185228 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.558976816 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000584733 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.045724428 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.970491191 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979013546 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96571036 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.180704611 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.860430618 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.967451733 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.205535888 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211769907 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981568197 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.051895065 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.893645509 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.964065031 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.212800699 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.169850368 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.123084117 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.544790722 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051947613 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.827155134 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.090331741 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.805897647 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.084833073 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.228650342 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023720129 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.947026145 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07898092 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.921650144 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217775245 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859306004 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.176705538 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.261065245 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197168413 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.294027474 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.214771031 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027967029 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.965030719 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.969935405 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.63834353 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.568464448 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.190905331 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.983795624 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375942794 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.086813546 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.968130979 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.903268166 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.585678452 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.268686065 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.044087272 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.182786529 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.854969742 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.353798798 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8931664 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.106421232 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.963954412 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.181175278 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.607265419 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.046161043 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.219131272 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.137822487 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.241048968 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086700334 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983467948 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061163219 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987310115 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.326214008 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.328130508 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.976862884 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.968547164 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.62820075 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.018327277 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.972809008 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.975591636 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.496507537 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234644507 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.988731785 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.974126997 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.844081167 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.978716613 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031398599 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.970350257 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.975335208 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.48775013 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.477103869 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.975526357 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.608054529 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183000434 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975132098 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.619013 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143959915 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.981654856 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.230032933 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03336118 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.896941975 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.671354967 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.670566054 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.969092995 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.896532487 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.971129633 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97527718 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976574908 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.159399796 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.237558164 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.017148557 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.572382306 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.069809531 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976257088 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.972924938 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.971958413 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.491112411 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.955522377 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.49700439 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.09061539 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10060397 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.980247246 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.898511193 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.97125099 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.972515256 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.974766873 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.919373629 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019917943 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.574139194 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164828012 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.21769756 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.376069108 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981945878 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.573926625 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.082491667 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.043716893 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.209215408 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.51607952 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.078243192 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050374841 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.977845546 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.584001046 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.694808204 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.532957234 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252776872 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.27789496 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311319542 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.392042849 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.298205337 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.058367971 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198885595 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.494154953 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.028103815 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.061296098 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.907898819 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98499335 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.608770243 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.31240646 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9830238 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188392445 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250015519 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.272455433 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.096828089 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.176314511 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001483664 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.806852407 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.006002903 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.508921854 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991424933 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.322689114 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.16840714 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055850179 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.210867446 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.043655075 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.972563007 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.308412469 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012726987 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.67461806 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.327694767 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410188151 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.394578971 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188218125 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.977476466 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.413859427 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.318578405 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.188658802 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.100383159 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.900743395 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.97925456 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.980661176 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.986460915 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.948488184 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.837196049 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.215880034 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980919267 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202181623 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.14234574 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.336335818 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.881300519 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.976357183 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.974776936 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215920654 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.682615688 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135082063 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.336100326 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.553681682 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.980226681 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.902245821 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.901062372 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.676387554 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.981518939 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.94041975 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179647618 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.075118253 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.657517341 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384315575 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29161911 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.218982618 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.986472065 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.23753828 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250399914 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.466430086 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997683151 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.0751039 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.230512117 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.661880894 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.191363375 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.204526719 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.506217238 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.195080543 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.416005729 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.946011331 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.975327435 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.184763517 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.19053003 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.282109041 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141650552 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.688282558 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.985197206 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335026731 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039838224 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.278798481 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.157612398 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.064367662 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987581465 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055724981 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983027346 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.984555027 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.984187143 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987296062 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.278903745 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.085029451 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.990439893 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055078805 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.974446449 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.53812065 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.984674279 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239076735 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312627784 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.300857567 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.038888169 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.976965694 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.978879804 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.904638465 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106580443 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.418522449 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.250225385 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.094478051 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.113803552 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998968143 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.22698697 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.273473909 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293522833 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.251439692 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.86158451 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.721795469 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.103825404 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.198871322 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985482141 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.182650128 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.18977202 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273379491 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.547761807 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.165722707 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.198154489 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.252884423 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.35290001 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.979905949 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.55971151 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.991715007 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.381771955 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.010839089 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.289658779 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23142936 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983489707 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10456205 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.986302868 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.184000789 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.430500389 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.631677017 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.319753638 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.83584949 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.981741246 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.248051479 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.297448348 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282206182 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055652746 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986233769 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.700932043 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114349914 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.885320882 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.213179094 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.981027746 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186719987 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.693827747 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.984274721 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242767684 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280628788 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.983311455 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.894325776 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011207762 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.985246257 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.194424448 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.200943041 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.224980043 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984006481 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.987294503 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.787903598 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.248160306 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039370571 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.90797242 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.983168939 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029187445 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.209870794 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999265122 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.497445747 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.682399792 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272218394 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.886693167 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0000199 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410339229 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.355316415 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302149437 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.501248657 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.196879254 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.533528229 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.868455751 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.36659533 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.988565306 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.41847857 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.371815165 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.983230793 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.520562025 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099777138 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.244651132 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.308009163 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.003228603 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.713275443 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.00779327 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198800734 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340866987 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.914776513 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.986654929 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.032082137 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.985052138 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.966343866 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996743413 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.93363673 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.535185674 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.828495641 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.543532194 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.986428093 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.999007067 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.26668392 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.543884454 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095489295 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005142228 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.989801968 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.677191277 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.272544737 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.227805297 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.537959069 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.084067411 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.988254943 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.985580623 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.908248662 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.171233299 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.179982557 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263358007 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.372918866 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.098867697 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.989576678 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.194267993 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188529047 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.289822078 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109684853 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28969558 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.10266248 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.928414614 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.689802199 seconds)
  done (took 1709.129930156 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.994761089 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.998934765 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.999739466 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.017060777 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.019280395 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.007079924 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.039607798 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.083605809 seconds)
  done (took 58.07052484 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.991144208 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.279504649 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.994150983 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.989616174 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.994191601 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.990095675 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.168495329 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.001890866 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.992267564 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.992740277 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.991473803 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.989195227 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.756240498 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.015541672 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.992080553 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.993330968 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.993484877 seconds)
  done (took 77.045797917 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.993363405 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.341743075 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.025426217 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.99519086 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.810391498 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.005560656 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.015424108 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.054773095 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.997039277 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.031796438 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.291525469 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.046990713 seconds)
  done (took 91.524153122 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.004532796 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.996588138 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.995367745 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.995258749 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.994332002 seconds)
  done (took 11.913362495 seconds)
done (took 2223.872975678 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.222294453 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.05330545 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.09330486 seconds)
  done (took 6.061210337 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.140706608 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.186028602 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.301975965 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.319902522 seconds)
  done (took 10.874329147 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.306770721 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.379652507 seconds)
  done (took 6.60173623 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.317358575 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.012425748 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.404651774 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.997435568 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.997628237 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.997476057 seconds)
  done (took 22.912382043 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.994522414 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.996090204 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.994245064 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.99405813 seconds)
  done (took 9.894938167 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.995411275 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.704620823 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.996515689 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.006287724 seconds)
  done (took 21.619111409 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.143660427 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.118596885 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.138497017 seconds)
  done (took 8.31778574 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.137462293 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.857232738 seconds)
  done (took 6.910698184 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.134640724 seconds)
  done (took 4.053070158 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.022368361 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.265185556 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.490713322 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.511096321 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.575485556 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.815451909 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.321347325 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.215829635 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.432355212 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.460782994 seconds)
  done (took 26.027979302 seconds)
done (took 139.14231558 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.33631785 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.021651951 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.202836462 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.347972313 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.231726798 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.20073087 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.215811829 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.337717825 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.027951911 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.013911362 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.348498519 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.233923374 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.161297718 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.015437374 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.169394245 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.003452008 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.227815433 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.354726897 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.032176256 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.274897403 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.227530617 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.996101533 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.191798988 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.01116992 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.263744625 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.150418888 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.540010364 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.001073323 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.172488605 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.554249048 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.154201578 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.414558857 seconds)
  done (took 172.354746908 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.998690217 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.000815797 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.000307038 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.9992421 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.573560415 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.001913054 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.998962568 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.997521521 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.436780711 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.422068016 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.998514447 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.573603307 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.000503351 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.997417093 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.002137836 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.998038857 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.616989092 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.998588996 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.001341425 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.998885326 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.000380257 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.402944241 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.999469619 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.395579896 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.602417391 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.997994749 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.998632458 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.998980277 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.999937504 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.999413895 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.998678428 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.998763246 seconds)
  done (took 213.930920636 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.926982705 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.000360392 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.003857782 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.000199294 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.00064322 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.000684339 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.001920646 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.002038209 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.767243021 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.757407706 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.003019052 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.002710402 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.002044544 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.002359598 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.000693812 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.00063527 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.999666636 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.962487354 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.00159324 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.002357076 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.001568952 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.647542531 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.001205335 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.652219546 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.001966947 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.003041191 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.001011795 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.001513306 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.000647989 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.003757271 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.001644962 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.00160071 seconds)
  done (took 224.679361166 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.241856257 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.000003635 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.001616749 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.91995168 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.003426935 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.001561117 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.977218238 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.250946204 seconds)
  done (took 20.321989294 seconds)
done (took 633.213637121 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.350681182 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.1897613 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.1798388 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.029565688 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.266618081 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.068202809 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.021898963 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.089618334 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.862166132 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.09607846 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.659766968 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.049316205 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.756706664 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.050704773 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.145838451 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.086087654 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.616105746 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.719115829 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.166176098 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.109942349 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.203493004 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.941661568 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.104387836 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.905113427 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.67397353 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.982974197 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.065337377 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.617391639 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.038953605 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.183425451 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.660578729 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.302517002 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.038556901 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.023587133 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.081834359 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.05654285 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.247756979 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.034571932 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.147221592 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.732915995 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.09062487 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.758217263 seconds)
  done (took 108.330050587 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.014307153 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.010534255 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.011958997 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.010018575 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.019143569 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.012191292 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.010334573 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.011004903 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.010625812 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.011237818 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.010801086 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.018112352 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.012847965 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.019910777 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.010449946 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.011999337 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.008779486 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.020838951 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.010785068 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.01087238 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.01231743 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.010419193 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.008267096 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.012255494 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.011121364 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.014477294 seconds)
  done (took 54.265234331 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.00498687 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.178288684 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.244669728 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.026869557 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.008576082 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.012459192 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.027946418 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.011836184 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.011488446 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.010472209 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.111158745 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.016264349 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.025491723 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.245342408 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.023293121 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.007846598 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.009469682 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.007945402 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.186147727 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.023238692 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.029732538 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.01276185 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.027345749 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.0207276 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.010797507 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.010988995 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.013176185 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.482709809 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.016591385 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.1121866 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.054032595 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.033476863 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.426809089 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.256818964 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.065361047 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.020279051 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.00971258 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.116154722 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.014000512 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.009964659 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.030663881 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.014010012 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.249522718 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.548610784 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.023311699 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.008074252 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.492127575 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.126134358 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.05209957 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.022442349 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.250973755 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.027853034 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.011636662 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.012299501 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.048024627 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.016626074 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.012523078 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.37486529 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.026001145 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.029061693 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.01477339 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.014299165 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.19251367 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.025264196 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.181585674 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.019720592 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.020126172 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.017002756 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.25398465 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.028643838 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.566531219 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.027633555 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.009268108 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.11768813 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.185384272 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.516844179 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.02491775 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.196973478 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.442216132 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.036784389 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.018413294 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.472193873 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.038377155 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.018781347 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.013544128 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.012438893 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.012667259 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.059027249 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.02736484 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.471597871 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.566613628 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.393127826 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.040661276 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.030411012 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.014539852 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.373559785 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.021814628 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.01238436 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.247271501 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.57084464 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.029060295 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.024263047 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.544822717 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.028361996 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.032894694 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.020875973 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.258284528 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.032041745 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.056591962 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.011493532 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.023191583 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.015574432 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.032371078 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.02058287 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.014588745 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.534126003 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.135984376 seconds)
  done (took 249.367689057 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.017125174 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.015162464 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.011973522 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.015481783 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.014606253 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.015515175 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.01814366 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.016184519 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.02010734 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.013321514 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.013079045 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.020684548 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.018975197 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.015162667 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.020878793 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.019296096 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.618869543 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.01652868 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.015025997 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.012006533 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.655532314 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.023258674 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.018301988 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.015864984 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.017716153 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.016714676 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.022140081 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.018162424 seconds)
  done (took 171.654403941 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.018991578 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.129647903 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.037835562 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.045055488 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.025490356 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.018311186 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.112341236 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.033801376 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.020891703 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.016510908 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.020124781 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.08005676 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.025130572 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.115933908 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.044550933 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.123418586 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.12077651 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.022102623 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.019216014 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.017490634 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.045299473 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.026681503 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.074587592 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.139838837 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.036585376 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.129771095 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.040270984 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.016319899 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.018383351 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.128402428 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.035176124 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.075131834 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.047709667 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.03325324 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.134165767 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.132390688 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.118575372 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.117691934 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.023335026 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.015784463 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.018664761 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.017300802 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.128386289 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.036985145 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.018123851 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.138643179 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.034799877 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.016338564 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.01685641 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.019391727 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.032694119 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.032030383 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.083403414 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.149090414 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.058146015 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.038817634 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.115822007 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.141561212 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.018507811 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.115560003 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.024869668 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.130235953 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.042869138 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.022196595 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.022099643 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.020619535 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.046084635 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.123473444 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.120509924 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.025283744 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.115250367 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.052380077 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.027477198 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.018083032 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.019094431 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.13238865 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.136376178 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.051261687 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.055782175 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.047027816 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.028419947 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.017482005 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.021024932 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.036478391 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.022239198 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.132948368 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.137926967 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.023699548 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.017100981 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.019143448 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.018367429 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.04510687 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.141618548 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.058318384 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.124005258 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.086035241 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.094422514 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.03584806 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.033332109 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.02753404 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.080923707 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.037885358 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.036969642 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.316731884 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.080299333 seconds)
  done (took 218.513328214 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.409326026 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.068080346 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.074261693 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.336717871 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.407749517 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.936156947 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.063006886 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.068175606 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.092708419 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.253387954 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.142966422 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.089756927 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.055623475 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.044975406 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.068028247 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.089271497 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.0779756 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.398300486 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.282798391 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.237456062 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.056848665 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.359544509 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.407958661 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.642629623 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.115962122 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.469840291 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.642732581 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.200978662 seconds)
  done (took 66.040531505 seconds)
done (took 870.094019318 seconds)
SAVING RESULT...
DONE!
