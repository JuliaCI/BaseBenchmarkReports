cset: moving following pidspec: 29471
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.893433506 seconds)
loading group "string"... done (took 0.558140406 seconds)
loading group "linalg"... done (took 8.857960813 seconds)
loading group "parallel"... done (took 0.16871909 seconds)
loading group "find"... done (took 1.405030146 seconds)
loading group "tuple"... done (took 2.109266269 seconds)
loading group "dates"... done (took 1.375017401 seconds)
loading group "micro"... done (took 0.217832516 seconds)
loading group "io"... done (took 0.608324839 seconds)
loading group "scalar"... done (took 42.95536976 seconds)
loading group "sparse"... done (took 13.399811571 seconds)
loading group "broadcast"... done (took 1.088917379 seconds)
loading group "union"... done (took 12.18420735 seconds)
loading group "simd"... done (took 2.51415173 seconds)
loading group "random"... done (took 10.239530747 seconds)
loading group "problem"... done (took 1832.258408919 seconds)
loading group "array"... done (took 24.542728339 seconds)
loading group "misc"... done (took 1.081184075 seconds)
loading group "sort"... done (took 3.603281826 seconds)
loading group "collection"... done (took 18.258022084 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.6134995 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.118171241 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.166176577 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.347949006 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.207021281 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.142784791 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.163301177 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.558824291 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.951020273 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.227261824 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.128431584 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.546320113 seconds)
done (took 5.866340597 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.255490978 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.432502532 seconds)
    (2/2) benchmarking "String"...
    done (took 0.125811083 seconds)
  done (took 1.177735755 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076653337 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.174632751 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095951556 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.109504797 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.110461362 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109245668 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093776622 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109307692 seconds)
  done (took 1.427915026 seconds)
done (took 3.57079337 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.483805467 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.84027694 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.490239543 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.12636825 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.157634606 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.14792473 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.305177011 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.161724683 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.119677419 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085662997 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.169233396 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.364198572 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.47372174 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.941936323 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.085941445 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.131530643 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.092038141 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.700231494 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.091133645 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.129159714 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.528746733 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.112919691 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.117843581 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.140851585 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.189453194 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131630782 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.1641031 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.09361272 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.665638996 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103984274 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.186445332 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098512563 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161800371 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.241057001 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.095651089 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.093903299 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677737979 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.178353421 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.112374543 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.114244931 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.66929242 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081850894 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.19178492 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.101227669 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.108774659 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.18271795 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.112875106 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079640803 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.102689176 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.09132571 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.15589935 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.465687213 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104233922 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.14511385 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.106329725 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.673887976 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098065125 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.156049563 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.14894656 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.097529768 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.094524276 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.104723409 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.152704732 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.106844323 seconds)
  done (took 19.359264142 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.117543711 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.140336489 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094427431 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140739066 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139062912 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096066879 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084655359 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.093445862 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.109326841 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.185872292 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136828666 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.144989033 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091856783 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.080354649 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117408336 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247404216 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106559304 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120968042 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.081795472 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106259924 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139433015 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097101642 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108809987 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.109732963 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169405938 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204434072 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10936435 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.1229078 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093302127 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099173162 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142822163 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.160849839 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.076577367 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09418278 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.184364875 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120255767 seconds)
  done (took 5.116456473 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.198841018 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.114949564 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.19256659 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.179522859 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146923506 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.168049588 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119105006 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.265212499 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.186822881 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.1776754 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114696496 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111630939 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078794523 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096761081 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07808681 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.645748306 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.178924737 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.14995136 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.125855667 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102184633 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083687035 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.374518467 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100261422 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082300063 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102595064 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.072340196 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.175526215 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102815307 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.281727338 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.116741107 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08713359 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131864289 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.209138824 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.116489554 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.130446615 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132605328 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141324936 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085414447 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.09858394 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.216409539 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108881754 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076859991 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.126612488 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130825141 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116614887 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099327094 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110345044 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.222708139 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.099946935 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.118196344 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.059557847 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196662686 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09659849 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097585316 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.353357728 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117619152 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086842802 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.099185718 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.288040794 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130663984 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083583337 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077900505 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10385413 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.093745938 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.400508029 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.091426228 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.991818651 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096180272 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.155054372 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099592354 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.1058194 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082100721 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102718443 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085317679 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.119046848 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079613517 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095481177 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.0791845 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.09511399 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084486933 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.115923869 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.098609322 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083606079 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095523287 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145853081 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.116150299 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116335924 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110087017 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100543259 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078536758 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129795518 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095877541 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084533242 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.145812702 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103447478 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113855757 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084977825 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141929018 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.0972057 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.176501501 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080916118 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123969831 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100060682 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113485077 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.120379428 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096553936 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084980081 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094910213 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080156157 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160832385 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082038177 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078885032 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.100853768 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109679898 seconds)
  done (took 23.579442994 seconds)
done (took 48.681984078 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.461659096 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.096694687 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.113571154 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.114241437 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.111263826 seconds)
  done (took 1.591026738 seconds)
done (took 2.269396127 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.352417424 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.184471248 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103129298 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.199157887 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086184142 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.204362412 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.171826073 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.118282185 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.198724361 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.100052512 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.179321496 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.099223074 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087975569 seconds)
  done (took 2.782191349 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093349451 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11682838 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081142415 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108607286 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074799383 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108542376 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091409044 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.135340833 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090513232 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101366576 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075402615 seconds)
  done (took 1.753913332 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091101552 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111645567 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081935582 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.105742807 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075961524 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08888625 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106553124 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114602075 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090508686 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101356408 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075921937 seconds)
  done (took 1.723709643 seconds)
done (took 6.929059853 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.013492329 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.928658177 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.115566588 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.161665919 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.329596587 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.201735837 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.476450225 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.128213519 seconds)
  done (took 10.219002825 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.112015132 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.114427614 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.082681565 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100352766 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08443888 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100240394 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.080327362 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.099884103 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081626768 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.09789748 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.08315906 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.095661715 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.079677174 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096232474 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.07954586 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.095813852 seconds)
  done (took 2.214526103 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118177695 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117143171 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.103845106 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107414101 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085035368 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10157107 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.088495286 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.102168968 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.083041932 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.100012811 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.105724985 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.090135346 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104132273 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082969922 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.102625771 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.091924476 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.099048847 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.101559783 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.088331134 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.103702724 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090475891 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.100635841 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.104199136 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.090243681 seconds)
  done (took 3.153077885 seconds)
done (took 16.266740551 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.168611028 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085541628 seconds)
  done (took 0.938220432 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.102724898 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.118637281 seconds)
  done (took 0.91090942 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.10771386 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09711283 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134608306 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.113680779 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082368913 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096468924 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114477567 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.099049 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081875162 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098622771 seconds)
  done (took 1.717425427 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085809446 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.101075899 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.089986064 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.118866127 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.108229625 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.08382683 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.102133722 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086138094 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.104088783 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080899124 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104829071 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116251833 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088287837 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11851656 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.086521069 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.103643564 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.107031687 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.085756777 seconds)
  done (took 2.462752027 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082364844 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.082876861 seconds)
  done (took 0.856984831 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.084344722 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095045471 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084394183 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099157016 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080143107 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.095016637 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079721212 seconds)
  done (took 1.310060843 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.516701186 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.260446804 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.339223495 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.098013571 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.152712422 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.371107637 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.135203339 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.113087828 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.112017835 seconds)
  done (took 2.834581009 seconds)
done (took 11.721262579 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.09233429 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.190888305 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.545770886 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.11955085 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.079036658 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157508846 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.262262325 seconds)
done (took 2.140540564 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.34853469 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.12448238 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087688693 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080817891 seconds)
  done (took 1.321755555 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08010615 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10213268 seconds)
  done (took 0.879953245 seconds)
done (took 2.903476465 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078590601 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.129601034 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.076048064 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098325548 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.076774284 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097029312 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077193242 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.076232352 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.096383451 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079480559 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09527642 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.0794475 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.094848864 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07943067 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076240546 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093320679 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078415711 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.092843484 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.07880799 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093211147 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.1929368 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094470833 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077179914 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076080879 seconds)
  done (took 2.910331581 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099910197 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09669584 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.085560905 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.101521156 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.083462474 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.101981812 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101721683 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.080017141 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.1019866 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081615161 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099489905 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083567975 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097610143 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083645827 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097986165 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099640617 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084944389 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095481532 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081990119 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100141768 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.084847475 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09643788 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.083479169 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101471511 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.0990536 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083972143 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.097805138 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.080317802 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101450864 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08335928 seconds)
  done (took 3.473538697 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08903926 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.076544626 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.094798235 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.087727042 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.094145925 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080485831 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.093549389 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.077218704 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095639787 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.07760969 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.095260065 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.078101307 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.093319582 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079009777 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079004653 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100211762 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111647096 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078329386 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.077189124 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.094540242 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.083168408 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.094124337 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.080515294 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.094122112 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.077522279 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.093592138 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078651454 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076744876 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095285152 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07700083 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099314208 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083885156 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093448921 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.091421922 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100881641 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077166764 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.10282015 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076628 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094897318 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.077517723 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.093672463 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.077244421 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077006588 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.106799807 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080535269 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.094123244 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07811626 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.094497148 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078058197 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09748523 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076874276 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093020492 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080477341 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09502736 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.08397474 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076149263 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09461514 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077479979 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09506575 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077137433 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09361626 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076959799 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100613311 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078504724 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.118410266 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.089141522 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094519146 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079239672 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098486602 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085598437 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095583019 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.097416467 seconds)
  done (took 7.042167351 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083388588 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105093348 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081044365 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095724917 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076951321 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07761005 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103224067 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09467675 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080860028 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113678562 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078359023 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096506825 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08028855 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097765158 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078984137 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095584576 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08857552 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092124857 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078320358 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097207103 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078844783 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10106137 seconds)
  done (took 2.685916821 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.222461025 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104436582 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143027116 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.113871561 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098254366 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112209374 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102426761 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086628315 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101756256 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088944621 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105813551 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085967962 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114639886 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104679278 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089161562 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.106965418 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101821574 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089969534 seconds)
  done (took 2.68038165 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094563415 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098198195 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105586276 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098300585 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.081509703 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101143353 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087666119 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113857161 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.100966427 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.082586906 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.108654771 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084280562 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101088361 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082142654 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100578901 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081468933 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10101527 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082116571 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109366541 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104865509 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089252042 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109190426 seconds)
  done (took 2.829864037 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099114022 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100508545 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.112435679 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102300991 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077207003 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097370286 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088411967 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.09858066 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106621818 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.083344456 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098065751 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080474604 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.105315051 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081764371 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10470636 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082043424 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100306759 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083155364 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100640691 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077745146 seconds)
  done (took 2.589846181 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126129437 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115276801 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097819919 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125683876 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115068796 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.098230762 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126413792 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114824586 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098647439 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128497696 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098406032 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.115378006 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126559808 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104843875 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115198844 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126693445 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108795996 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126378549 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115522569 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09860118 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.13015797 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116273629 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110806122 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115511022 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098225316 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118430043 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114769681 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.105732315 seconds)
  done (took 3.908117229 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08229817 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081158846 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095830361 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.078474217 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.096193199 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.079733399 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.095746043 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.079391437 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080938426 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096517987 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081801978 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098277962 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080825419 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097903851 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081498506 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097195405 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081306689 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.078512861 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095770508 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07902484 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.098293098 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081566029 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.097555331 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.080032978 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07860892 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09872658 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078661618 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095941121 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081339929 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095974723 seconds)
  done (took 3.341502559 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090727388 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10582695 seconds)
  done (took 0.910574486 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080402219 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115189277 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079634807 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102002759 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088836762 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099169678 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092417017 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10385663 seconds)
  done (took 1.476200478 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.107380993 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.119155037 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087585706 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112080475 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.102132724 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.118718431 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167934795 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.0890383 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107862047 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083544403 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.121138512 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081806745 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.111582749 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104846152 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091984511 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113577429 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.081136794 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.109424593 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.091305644 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.102141521 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08858576 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116105785 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093517327 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107598369 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084974599 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111292798 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113302319 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.095229699 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105251421 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095573345 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.10698313 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.076190218 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.105164383 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088474217 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.098332614 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.102224192 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118138161 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087486925 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110489236 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088415569 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110371607 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094541732 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093548637 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106749945 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098106335 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.104990079 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.089343651 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095114111 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083777295 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.103800938 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.078256451 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102915034 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077745182 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109788302 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092979941 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118881903 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085691679 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104620141 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087917365 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103342738 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090529309 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.11306455 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10950962 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.086753708 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109264891 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093818863 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108376224 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077754624 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093068939 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081504165 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.10966296 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109085406 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.11191091 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.088403709 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106323593 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081472931 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106690656 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089307304 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108472871 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110657177 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.088099634 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107855767 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0942822 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104504166 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086739255 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107907661 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.085340357 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.104241192 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08351359 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121885625 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08619789 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098083404 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084393017 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111270716 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087441181 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.104534494 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083726551 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11009498 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.077119801 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.105701028 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0892172 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108090258 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095504403 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106633628 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106153051 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093083581 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.112714684 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088520589 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103992503 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079890129 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106809979 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086039889 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108701516 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077694252 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106516482 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08791733 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.106220052 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094885435 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102988849 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.08814679 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111248564 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094673321 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.103039048 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079951201 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.10574977 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.088236965 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10961132 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095772929 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.104869499 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078892859 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096711196 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.091658769 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.105664204 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089637126 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106987087 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106388984 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077714209 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081512894 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106371608 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.11174321 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.086980358 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.106914632 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094527581 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.10819539 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086722469 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.111071542 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086772971 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101334972 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093230471 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.105943275 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078683512 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111073344 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087635418 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.104339248 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088723979 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110469507 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088214069 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.108083004 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085564744 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.10732135 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088962787 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101933263 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08863565 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.104732148 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113630054 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088552463 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096153392 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.081320253 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089597957 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.103864677 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.087252825 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.102269782 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087788958 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.107677174 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082105635 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.104014288 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087030406 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118349218 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.114055975 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090277506 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108362801 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095973143 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.105286459 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.090725474 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.105081131 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08992205 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.106230193 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093727014 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.109133019 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08920567 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105151026 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080643866 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108174368 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094518444 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.10141287 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081926755 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101282878 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089265739 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.113254564 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088524843 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.107303556 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08622354 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108263251 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093058733 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105948361 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.087869672 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101856467 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.088319422 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.111589643 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.089852446 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107857076 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095752584 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108466722 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079054961 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110150718 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085859456 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.111591642 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.07957405 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.103042306 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084910891 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.107419536 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.087291086 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.105385249 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079472882 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112638144 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094776707 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.109726788 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084293327 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.108795008 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115612788 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.089384004 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109501362 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089340911 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108988696 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103052237 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.10327582 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088814138 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115005077 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.089435776 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.097059655 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091888715 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.104701949 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083579185 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.105713797 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.086572481 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107884845 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091859211 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.1096982 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.078311921 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10683083 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.0874097 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.103371469 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080410194 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.111470983 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089545525 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107276263 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097702786 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10925119 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.108270084 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092083152 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.106106677 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.090592462 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.107798867 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090831925 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.109919696 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088587256 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.102002248 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089633369 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101809206 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082713338 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105757128 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.090152433 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.107161441 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091564466 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.105659499 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095467991 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.108408666 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.091415734 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.126298647 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103462409 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086226063 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107281552 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09336741 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.106742279 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089860138 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097924277 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095730262 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.106585698 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096436249 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.106631377 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081879696 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.10804371 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089303645 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108561739 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.090994353 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.109048407 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08833503 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.107209178 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089563027 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117553071 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.085432001 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.114198915 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091449693 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109639742 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088530155 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.109113804 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087831672 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.103307077 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089277034 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.109120213 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.107020432 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.089622705 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109988211 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090034349 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.105692054 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087858981 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.107566949 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.091377746 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.109149439 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.079385501 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100835027 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085325153 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104727651 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092921586 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102849316 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084837292 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100895271 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087598067 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100788038 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079291542 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.089586675 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105784853 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.104456617 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095395407 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.098921197 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087485116 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114525023 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.075872308 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.101164793 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081471415 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.102898915 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096419802 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.109061548 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095639116 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10863407 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085670109 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100062924 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.091529008 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.106249878 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079891607 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100529062 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094093386 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104762183 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088845583 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.107798551 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.09330912 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109098739 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094791273 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.106830626 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090533668 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.108754754 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.082500124 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.104406387 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086533695 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.108775786 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.09154572 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.104318148 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.084514097 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.107002571 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090863925 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.108162177 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.090141704 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.107240096 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097073623 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107369204 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091434271 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113149467 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080415595 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109189143 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.090184062 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.107806292 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.086936786 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.109436635 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09446833 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110680048 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09596892 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.108258014 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09313783 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108593024 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.085186463 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.10893531 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.090741206 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.109576934 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086131734 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.109624874 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097010921 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.102393683 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091213176 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109641909 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087882823 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.110449097 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.092069439 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.109029434 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094577962 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.109455798 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090160594 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112670014 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090377433 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109934198 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091871742 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.108466532 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112635794 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086904871 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.1144695 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092948007 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.109714623 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090218029 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.104311273 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090533965 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.107472196 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090610496 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.114061004 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.091890334 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.104327558 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086643386 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.102262356 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.090974716 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113029155 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097762472 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.109941719 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092579919 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099926642 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.083673291 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110761098 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088019257 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.108040285 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.093878056 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114136468 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.091590905 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.106724688 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.08948013 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113922063 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095663302 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.111008974 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.08729381 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.111619653 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.09138499 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.109043846 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086508729 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.108943264 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090355231 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.112243462 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.106766245 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086409934 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115529895 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096436791 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106970827 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087030426 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.109860844 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.088058403 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098460987 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.092274611 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.108795261 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094094756 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.109009396 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090406106 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119275588 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086159605 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.108023482 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091899368 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105687948 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108401299 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078429658 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.104400654 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089162392 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105771145 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078410296 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.10004754 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083870511 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104247874 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083690628 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078034448 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116614227 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.111262145 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091388332 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106067171 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086876379 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097489538 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081356887 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102293433 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091122234 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104791995 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096837844 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.100235252 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084434945 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.095635462 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087559187 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104683387 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089541226 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096483023 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.078830201 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082219033 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.10572648 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.1102704 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085482934 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104210112 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088786048 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103974737 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081024618 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109095648 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080039422 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106251888 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098206243 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105319239 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08879662 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.108284097 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09287981 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.107166446 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078035376 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.105848975 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.08667422 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.10668426 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105078716 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.089989775 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119512787 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087453502 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101180788 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085824335 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104671368 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083493269 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111594019 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088693102 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105968538 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088721535 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.102816037 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089707187 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.1114706 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088585683 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105973451 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.104900154 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086317404 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104662353 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.085160535 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084340877 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.108018277 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.105882181 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087857468 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.10646405 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083494893 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115365015 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095905996 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.109176143 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083193131 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.106649195 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088990924 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099358432 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.091828392 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099744594 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.086942305 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085025104 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.104161352 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088773587 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107206349 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104960929 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088689596 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10393846 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077418637 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089321695 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.106764758 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107586121 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.081617609 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086067778 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.109474776 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.108743098 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092302029 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102637512 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088567183 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103377991 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091593144 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097904816 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093974002 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104914249 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088654302 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.105001772 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092148377 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108433201 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089292222 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106695736 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09079734 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.105559536 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.095313692 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.113179381 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.084748281 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.103089669 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096181815 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.104100769 seconds)
  done (took 59.311241357 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147283526 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088129644 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101309438 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083938679 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128237361 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084248788 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101573213 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.084376043 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103054874 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.097350132 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103469272 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080608403 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118154833 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124192503 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121832087 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112244762 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080682791 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097460049 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083217391 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098080899 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099635694 seconds)
  done (took 2.898681357 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10312955 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.114901905 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114400953 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103718392 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111998802 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.119894714 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09955707 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122237007 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.123668211 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113744939 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.105776515 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12120877 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.11476515 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.096004546 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114963619 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11712412 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.106292229 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.113729945 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.120675087 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10068796 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117929335 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118359582 seconds)
  done (took 3.230516058 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.092002091 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.085902632 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.10990429 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.079714053 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.104886131 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.080908691 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.110982002 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.082187071 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108983514 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.08646696 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.102725139 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.086489674 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.110049261 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.081159813 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.102929147 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.082573697 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109076074 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086950535 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107138662 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.082330658 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.129153573 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.103534581 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.087546214 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.085313766 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.119372371 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089164055 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.111289499 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.087762478 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.10254896 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086744109 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.103153321 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088890767 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.108939837 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.083408741 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.104404455 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088391596 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.104793072 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.080611274 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.10224316 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089696457 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.101146645 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.089542762 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.113231414 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.086591976 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.104602421 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.090657395 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.107052645 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.082808846 seconds)
  done (took 5.383555296 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.12424502 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161320139 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.096819995 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.148213191 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122757341 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115129507 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087655719 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.146334734 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104597807 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086976925 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123280146 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120436567 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.091335922 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.113066142 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.091278203 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106684605 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.116614006 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088534224 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.112909969 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086818253 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.111900713 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.110461308 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102239649 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117332867 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109735371 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087449831 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10798862 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.094481486 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.118863688 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114513862 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10114528 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.115444415 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122500443 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.088725681 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105383981 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108463859 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.103191721 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.106628795 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.107493483 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.084967566 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.110899914 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095513845 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109816967 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.120912995 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.096347886 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109811046 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089954923 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103827653 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116761543 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091399146 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114659601 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120532456 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093474746 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106053407 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09530463 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.123771773 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109902296 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.08772391 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.116093567 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117772357 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.087892231 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.11039442 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.101788239 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.113975693 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.116183528 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120290485 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.093658474 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112222778 seconds)
  done (took 8.262257464 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097010347 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.133020444 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122182466 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104174699 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111761297 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111212899 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095437053 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.115146315 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.097722496 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.124446791 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116321275 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.168204651 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.092013295 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.124017912 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.098862238 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116893293 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115658405 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099628603 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.116154202 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097844371 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.116114538 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126847885 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.097612722 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128175245 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130069769 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106766475 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095262616 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113321 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102086402 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113422372 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125046425 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.111503824 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095175134 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122208361 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125508097 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.0935606 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101876315 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092587992 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.113657744 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111191593 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.086966346 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122763535 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092165724 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106288335 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111629767 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.095091329 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122877782 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124773897 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116075794 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100193108 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110793532 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122875398 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098196148 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114310829 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.124002897 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.130868338 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10369502 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121926458 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110463036 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103224815 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12228571 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.130318617 seconds)
  done (took 7.721231134 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086552369 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083204582 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.101354644 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.082124067 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.103310222 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081588727 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10255275 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084057948 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083500275 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.105179333 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083817765 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10112333 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082017089 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103508944 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083971539 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100910001 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086508516 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081457185 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10348764 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083229061 seconds)
  done (took 2.594062203 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.097716805 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125740237 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087753132 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.1146114 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.088067742 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.11360763 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106600085 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090740269 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103015623 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094223144 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117692828 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102708719 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111415255 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112952872 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099145894 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110707008 seconds)
  done (took 2.455103722 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.108206663 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116710233 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.128280794 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.092167841 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.101796585 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.093647344 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.103688359 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.080983787 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100748885 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.094745165 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.110977946 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.096597412 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103514044 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082643139 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103550024 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090532029 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.098611922 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.088698208 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10244289 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.110287486 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.109327195 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105604596 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.085954888 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105540983 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.087799293 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.108795495 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.092354051 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.1050347 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082869731 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104455887 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087623661 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113518879 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.080843129 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.111004058 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.082246992 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.102423725 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.084080152 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.104737997 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.090053253 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.109536292 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085175402 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.110334232 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.083542553 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107297502 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079986885 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106370691 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.07961807 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.111593039 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.086083184 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.108016166 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.103521618 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.094778311 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.1102195 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.097534956 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.113580727 seconds)
  done (took 6.217045648 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106906795 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109406448 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090604347 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102028539 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089699651 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.115713765 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090938098 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110605418 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089857445 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.102532971 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.088057251 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108647204 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087338468 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108005977 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086797223 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108791638 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080467728 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105871341 seconds)
  done (took 2.566156201 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096811774 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106103704 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095035019 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104040284 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085430257 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086149437 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100576321 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.082303343 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103241798 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085302721 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104093481 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087330847 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102546784 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087214907 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104681437 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08504473 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.106840952 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084206703 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.105905483 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082139656 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108928012 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08587529 seconds)
  done (took 2.873401453 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.110058878 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.14519751 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.106278797 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.155525807 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.117404019 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095029835 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.126403027 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.096316355 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.132663485 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.114934266 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096132234 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.114872844 seconds)
  done (took 2.200878308 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118768885 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145075372 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082536663 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108187971 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11734748 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090872811 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109489773 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090404581 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121776198 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122486255 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089144319 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122354763 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120913185 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120146941 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097509384 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118179468 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109229804 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090285394 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105839783 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130536463 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090758503 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121132411 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107621589 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09130544 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109721458 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119465509 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102564505 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12287713 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108963708 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101403371 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1191216 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109019724 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102374915 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123809338 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107768055 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120766643 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091834028 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131490504 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117730174 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101285038 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108299622 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11751935 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102003582 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116748531 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120755253 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089909138 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116740909 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109812213 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090918787 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136637111 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11720841 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120503256 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097623475 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122387371 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12070359 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136707963 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123017577 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120087784 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098408978 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122834896 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120210494 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117453914 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101458631 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122967836 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116492386 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120438509 seconds)
  done (took 8.189718261 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130083066 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104077886 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090176744 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124064195 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121317845 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108803553 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091401863 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109780946 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090187579 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107506937 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15645382 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109563561 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101904364 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121140173 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109651969 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091126927 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110632206 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119698172 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08829922 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138442995 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11259784 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120435032 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101701441 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121212986 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125384506 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117928053 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091726766 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110297393 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090933426 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11054219 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115800469 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091150102 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121147542 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102780023 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101433393 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110104583 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090784749 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117931858 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110241599 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098164675 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121900177 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130959493 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109988554 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090882832 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124166855 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110732713 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091489738 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106601222 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090286083 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107913171 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122607741 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122304839 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104442923 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121914201 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110982232 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090650613 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111578201 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109461424 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092025825 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117633383 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124619166 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09240748 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137846088 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112105758 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092210711 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121117407 seconds)
  done (took 8.046296062 seconds)
done (took 156.489084037 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.108535987 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.140971567 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.10021067 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169117286 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085447814 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.14076976 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119067498 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.121691857 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.084897908 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.105923188 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.085892828 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.108469589 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.151908677 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.105131842 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086204866 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108619493 seconds)
  done (took 2.616616895 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.179937426 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.281937484 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105290971 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.110600488 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.092202547 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108153981 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089391699 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112417665 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.086728299 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.119747719 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.106629867 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.08947624 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.118439825 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.089076685 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.107823271 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089102012 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.119418299 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087777184 seconds)
  done (took 2.886641443 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111330619 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.173836943 seconds)
  done (took 1.078565544 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122808675 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.185176947 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.307144939 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.164097016 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.115186048 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128723296 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.164010185 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.124994442 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19330966 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.126220467 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.107554591 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.114475592 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.135336829 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.098970057 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.117114263 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.092778278 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.13823802 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113785751 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095822222 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.112818932 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.114513442 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.114933831 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117053882 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095669327 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18329244 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.127265626 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.092959575 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.115186042 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.113453336 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095562353 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.118100538 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.1264085 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.105824889 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.189382292 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.099375572 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.187238091 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102289719 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112451374 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094435671 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.113461936 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.114926565 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.096723356 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.128351942 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.091665924 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.115894478 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.12103422 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.094147124 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.11462302 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.099753861 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.124600977 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.12031583 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.098169518 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.184539177 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.10027797 seconds)
  done (took 7.573022143 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.846092422 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156747004 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112151489 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.943222045 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147043372 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125943164 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.83701088 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113707713 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.264739769 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.073070524 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.130256072 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125473897 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227289965 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.25624882 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.14739084 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.333612628 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.709314807 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125505932 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.121256577 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.155342988 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118857274 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140497708 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.111055049 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.41463436 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.113039205 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089392699 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117953527 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124243231 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164264146 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.089897551 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115220716 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.184212859 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291118414 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.180932157 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112398294 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089812399 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11168581 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170081316 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268060726 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217004639 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.173808288 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08775185 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109294842 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10313206 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132165512 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110652975 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16668447 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175439268 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.194615204 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095463017 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124039359 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099914521 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122714875 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164310105 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.109381357 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.333708697 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.339655487 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091115664 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119981975 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107966378 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270475031 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.112439068 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.203516859 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139234322 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21563671 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091584364 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.803009496 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.16980516 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110721904 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119626865 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098329061 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117385688 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.100673285 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168401449 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.37893012 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126821708 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114566924 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089862881 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.240655612 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092695544 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109714075 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16667022 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111293966 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098890448 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127334639 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123308956 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.175535098 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.252784971 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124810947 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098815778 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117436139 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122643553 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.091601378 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.216494163 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21671387 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.183195821 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.219262237 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12229155 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.166915949 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.170423204 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123847863 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.175752068 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11836468 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128262191 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103389981 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219772604 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148033917 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.090122584 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117113689 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116942105 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147148782 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.094705934 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117893157 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.17195286 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.441692367 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.188540766 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087886195 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.114392222 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098864079 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185830765 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100953026 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261936198 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099759894 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192207405 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097638046 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.108769969 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.097974752 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.187873345 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104680266 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122676864 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123931705 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0982119 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.273493058 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.198652624 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129142777 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236623899 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.178474248 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100876809 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.201212293 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100541404 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.195352024 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10241375 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122709587 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091130304 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.809214658 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126056116 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118498351 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096230814 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.192314999 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110344204 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.092856121 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.109495776 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089150156 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795032194 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.096595127 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.108400353 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.092933601 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121302132 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098884338 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118232175 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094567859 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.185725236 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23203772 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103211904 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11916657 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.09207265 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.184927605 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.093176263 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.112494402 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.091515302 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.11180073 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100229359 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116990657 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.092211277 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.198277758 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.165605298 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218101382 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.510337369 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112516678 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.09062167 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230982036 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113586608 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287419012 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121750374 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.230906056 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.17649518 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.112093876 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.338378063 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.173688976 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.194783355 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.095999172 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.196792043 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092725662 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119567052 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165159736 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091686048 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119893408 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163475354 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.133241214 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130292038 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.15224533 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092368467 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.231544224 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108772016 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.173071001 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.113320577 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103458481 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.312368715 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.115660131 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111569558 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18698221 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098960405 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.112674239 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.591000709 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.111777848 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101302873 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122395319 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224053253 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.170523801 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119623724 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098964878 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.1267133 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.167846741 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.235446342 seconds)
  done (took 44.721711271 seconds)
done (took 59.671271524 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.310006827 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.269235413 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.303472962 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.197279078 seconds)
  done (took 1.984050491 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.187556311 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.156708697 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.127634278 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.111661813 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.159401545 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090085962 seconds)
  done (took 1.660489173 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.488393666 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.376556199 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.342151078 seconds)
  done (took 2.036456277 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.264474421 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.2852465 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.360603558 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.450192687 seconds)
  done (took 2.297409842 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210013192 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.127206621 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.10391353 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.142545955 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.176039854 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.179173293 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.145282178 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.154556686 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131527245 seconds)
  done (took 2.252173622 seconds)
done (took 11.061743173 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.254564218 seconds)
    (2/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.253709816 seconds)
    (3/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.313954759 seconds)
    (4/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.253682014 seconds)
    (5/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.164716121 seconds)
    (6/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.151447315 seconds)
    (7/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.19864545 seconds)
    (8/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.239871804 seconds)
    (9/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.241836604 seconds)
    (10/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.116498424 seconds)
    (11/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.122174887 seconds)
    (12/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.224516225 seconds)
    (13/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.228735072 seconds)
    (14/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117679246 seconds)
    (15/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.200504225 seconds)
    (16/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.144312885 seconds)
    (17/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.104738669 seconds)
    (18/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.098661866 seconds)
    (19/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.107962965 seconds)
    (20/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.236266139 seconds)
    (21/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.182999652 seconds)
    (22/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.129478758 seconds)
    (23/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.214187184 seconds)
    (24/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.10663261 seconds)
    (25/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.227100263 seconds)
    (26/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.136415747 seconds)
    (27/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.169540924 seconds)
    (28/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.268945467 seconds)
    (29/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.141005286 seconds)
    (30/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.126638258 seconds)
    (31/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.166479145 seconds)
    (32/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.140948087 seconds)
    (33/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.197936248 seconds)
    (34/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.20394596 seconds)
    (35/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.191719599 seconds)
    (36/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.112528574 seconds)
    (37/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.221803099 seconds)
    (38/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.114847615 seconds)
    (39/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.102537227 seconds)
    (40/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.153002203 seconds)
    (41/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.155795625 seconds)
    (42/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.220157762 seconds)
    (43/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.144377903 seconds)
    (44/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.19961494 seconds)
    (45/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.146976522 seconds)
    (46/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.22156626 seconds)
    (47/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.091952535 seconds)
    (48/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117871766 seconds)
    (49/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.076304847 seconds)
    (50/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.129564477 seconds)
    (51/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.147178479 seconds)
    (52/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.195270433 seconds)
    (53/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.18085368 seconds)
    (54/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.132668922 seconds)
    (55/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.23085676 seconds)
    (56/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.19571697 seconds)
    (57/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.145661045 seconds)
    (58/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.076621089 seconds)
    (59/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.086492457 seconds)
    (60/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.205324467 seconds)
    (61/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.229103899 seconds)
    (62/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.128109334 seconds)
    (63/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.07706033 seconds)
    (64/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.11785516 seconds)
    (65/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.083793463 seconds)
    (66/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.215005184 seconds)
    (67/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.194003277 seconds)
    (68/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.096988759 seconds)
    (69/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094351512 seconds)
    (70/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.19470473 seconds)
    (71/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.096267527 seconds)
    (72/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116093918 seconds)
    (73/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.096425186 seconds)
    (74/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.150858433 seconds)
    (75/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.15404163 seconds)
    (76/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092251357 seconds)
    (77/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.11136754 seconds)
    (78/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.095915541 seconds)
    (79/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.098432143 seconds)
    (80/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.088041779 seconds)
    (81/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.098188835 seconds)
    (82/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.102978655 seconds)
    (83/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.126204743 seconds)
    (84/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.077503664 seconds)
    (85/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.098312879 seconds)
    (86/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.093845294 seconds)
    (87/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.146533118 seconds)
    (88/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.187984713 seconds)
    (89/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.078634064 seconds)
    (90/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.165875329 seconds)
    (91/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.160908523 seconds)
    (92/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.097389486 seconds)
    (93/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.078351499 seconds)
    (94/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.142327357 seconds)
    (95/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.118631224 seconds)
    (96/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.078011889 seconds)
    (97/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.101060287 seconds)
    (98/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.177775508 seconds)
    (99/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.100332827 seconds)
    (100/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.078358983 seconds)
    (101/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.124064806 seconds)
    (102/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.095210647 seconds)
    (103/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.14570108 seconds)
    (104/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116761596 seconds)
    (105/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.121874524 seconds)
    (106/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.114981183 seconds)
    (107/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.095815852 seconds)
    (108/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.124816087 seconds)
    (109/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.076746514 seconds)
    (110/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.116052059 seconds)
    (111/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.143508389 seconds)
    (112/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.143378213 seconds)
    (113/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.166463189 seconds)
    (114/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.09804682 seconds)
    (115/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.097193792 seconds)
    (116/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.119460963 seconds)
    (117/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.11913929 seconds)
    (118/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.08964812 seconds)
    (119/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.114093201 seconds)
    (120/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.106242893 seconds)
    (121/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.098391988 seconds)
    (122/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.096508709 seconds)
    (123/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.154236113 seconds)
    (124/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.116483623 seconds)
    (125/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.110323922 seconds)
    (126/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.125666647 seconds)
    (127/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.085385129 seconds)
    (128/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.097754091 seconds)
    (129/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.078969201 seconds)
    (130/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088910248 seconds)
    (131/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.189307278 seconds)
    (132/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.117956766 seconds)
    (133/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.077758753 seconds)
    (134/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.099291176 seconds)
    (135/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.115560567 seconds)
    (136/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.153864085 seconds)
    (137/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.077081337 seconds)
    (138/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.119420472 seconds)
    (139/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.085232208 seconds)
    (140/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.099156187 seconds)
    (141/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.077697525 seconds)
    (142/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.1142618 seconds)
    (143/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.094559985 seconds)
    (144/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.148129368 seconds)
    (145/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.190081507 seconds)
    (146/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.091014698 seconds)
    (147/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.114451319 seconds)
    (148/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.077351533 seconds)
    (149/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.164381519 seconds)
    (150/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.077570485 seconds)
    (151/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.131068977 seconds)
    (152/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.116992865 seconds)
    (153/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.098930664 seconds)
    (154/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.10238277 seconds)
    (155/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.097480972 seconds)
    (156/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.078701486 seconds)
    (157/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.085168316 seconds)
    (158/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108387978 seconds)
    (159/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.096618117 seconds)
    (160/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.130361797 seconds)
    (161/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.089121461 seconds)
    (162/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.100435156 seconds)
    (163/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.110984798 seconds)
    (164/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.128977523 seconds)
    (165/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125181833 seconds)
    (166/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094133606 seconds)
    (167/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.099768354 seconds)
    (168/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.0872522 seconds)
    (169/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.11436789 seconds)
    (170/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.17236462 seconds)
    (171/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.114902097 seconds)
    (172/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.092723109 seconds)
    (173/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.119498558 seconds)
    (174/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.129892774 seconds)
    (175/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.077187157 seconds)
    (176/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.077787739 seconds)
    (177/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118333898 seconds)
    (178/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.140757157 seconds)
    (179/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.107781572 seconds)
    (180/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.09714703 seconds)
    (181/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093568676 seconds)
    (182/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091884594 seconds)
    (183/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.100572093 seconds)
    (184/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.084616253 seconds)
    (185/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.09917708 seconds)
    (186/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.077489462 seconds)
    (187/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.098576401 seconds)
    (188/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090503474 seconds)
    (189/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.122674244 seconds)
    (190/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.078226219 seconds)
    (191/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.114461191 seconds)
    (192/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.096793023 seconds)
    (193/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.192336368 seconds)
    (194/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09221609 seconds)
    (195/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.100323761 seconds)
    (196/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.19996802 seconds)
    (197/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.104601682 seconds)
    (198/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.100130567 seconds)
    (199/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.095699328 seconds)
    (200/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.099596332 seconds)
    (201/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.147002563 seconds)
    (202/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.097191778 seconds)
    (203/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122233644 seconds)
    (204/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.079984712 seconds)
    (205/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.076609889 seconds)
    (206/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.133500913 seconds)
    (207/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.125366742 seconds)
    (208/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.078649058 seconds)
    (209/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.117777979 seconds)
    (210/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.0793906 seconds)
    (211/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.090345242 seconds)
    (212/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.119057641 seconds)
    (213/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.117620637 seconds)
    (214/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.090706715 seconds)
    (215/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.077730115 seconds)
    (216/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.118674204 seconds)
    (217/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.076920586 seconds)
    (218/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.147869518 seconds)
    (219/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.118822039 seconds)
    (220/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.11272787 seconds)
    (221/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.099432394 seconds)
    (222/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.079128836 seconds)
    (223/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.131460656 seconds)
    (224/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.10534774 seconds)
  done (took 29.831034748 seconds)
done (took 30.666884184 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.39748028 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129591614 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.123212791 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.102079778 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.143084763 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104061216 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.124956035 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.10406759 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.123315194 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090994558 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.114327629 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12313311 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102258378 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.141219693 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.102674791 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.115695717 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.092720843 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.124859686 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.100400082 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126350293 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.142176278 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094660414 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.122449765 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.092995193 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.143718095 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094057296 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.123148339 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.101032064 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12241547 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.091382924 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.124710139 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.114369679 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.103377543 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.126771455 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092659339 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.116013787 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09177319 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.105845926 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.093187713 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.117313643 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.100546338 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.114964348 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.102960052 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.115965864 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.095329615 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.114565427 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091403445 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127113815 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090867591 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.125024282 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093678389 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128959313 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.113166834 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.092512787 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.112457615 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.094172027 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.124130949 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093371356 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124232585 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092941035 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.115297786 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092928679 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118754024 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092113874 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.114922619 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.093927716 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116863985 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095591177 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.115033426 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0951052 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113061509 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.09465852 seconds)
done (took 9.076336838 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.103480709 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169182109 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.144668908 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.126123046 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.143061049 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.129740834 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.105326758 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.138833885 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.123549762 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.115932824 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.141597483 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.136549733 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.129429693 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.121941266 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.12920875 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.096947956 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.121504925 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.104982938 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.149668264 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.138537782 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.145785511 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.099751968 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.143196652 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136455016 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.0998084 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.150824842 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.100982513 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.120243676 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.098348537 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.129027914 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.138250792 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.100412789 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.121268924 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.111975881 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.128862514 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120022294 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.10857768 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118487554 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.097683872 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.11937574 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.130050461 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.112263111 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.119378443 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.106923357 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.118743936 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.101248029 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.121304842 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12089911 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.101649149 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116764732 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.101754513 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.142986063 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.120690012 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.099856182 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.120440221 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.1013914 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122086407 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.101184257 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.124373252 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.122054476 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.098347656 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.121195544 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.102218139 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.139098229 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.121332394 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.100007193 seconds)
  done (took 8.817407499 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.120658723 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.153091153 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129468827 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107952448 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.125181964 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.090167727 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11266535 seconds)
  done (took 1.716380611 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.0967542 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.144316471 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126536691 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.146876532 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.135833727 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.129569158 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130956953 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090572315 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.137329393 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.124074146 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.119925801 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.169201727 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.114583655 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.103664609 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.149226985 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.113852993 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.127295349 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.115258799 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.100214725 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.14683482 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118896995 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.114491578 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.127544685 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.091904083 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136102161 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.09328504 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.182683872 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127227161 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091403107 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.120677528 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097174536 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.206423753 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.115057716 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124434482 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090202372 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143158668 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.113519034 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.120266456 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.139674863 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096769994 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.136455228 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.098583251 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.121878757 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.11879834 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.100455604 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.129514037 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.104194224 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.122493985 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.097569551 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.143427817 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.124712319 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114508315 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.116495799 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.096920081 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.124456987 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098392345 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129034074 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.097122256 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.143794274 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12236715 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.118654608 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.141157258 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.135903659 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.119039513 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132847964 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.114284332 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.137014412 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119159307 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099963221 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.122652177 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.118939625 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.11827013 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.124819303 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.108005304 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12252389 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.120425636 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.143240756 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096899842 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.127951102 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.096071387 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.1181124 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092001436 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.131922634 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095653992 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117940803 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.131583867 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.10624044 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.120927218 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.096340634 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.137546525 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.118409688 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.1049338 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.126432871 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.096388716 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131003646 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.143269099 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.102045922 seconds)
  done (took 12.58604746 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.099708245 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.093958184 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.122997412 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.11586921 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.094945876 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093673811 seconds)
  done (took 1.516242622 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.129469445 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.121213025 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.109869159 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.125753084 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.175242052 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.141406857 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.122957287 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125553322 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.138932842 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.110218753 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.140873368 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.142805494 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.11922581 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12631497 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.121077548 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.126068451 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.145005704 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.097113398 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.131911981 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097228141 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.132781652 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.125597852 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098730927 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.138171924 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.102992311 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.125663463 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101568607 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.13270937 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.130944962 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.102909504 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.126205726 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.10126497 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.123705828 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.12537237 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.121392033 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.123499417 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119744451 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.104820034 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124094043 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.102322777 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.143850659 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097215358 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.131663689 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.127695702 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.102868197 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.123750754 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.127021286 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102261481 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.144195855 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.104847894 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.128754411 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.124007956 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.10319596 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.127552371 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.09996791 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125217256 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.127637014 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.121616135 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.127057719 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122990021 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.099441589 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.125117355 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.103538699 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.128839766 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.099518226 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.1282234 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.123080021 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.101220481 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121397794 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.101625481 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.128182411 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.122245714 seconds)
  done (took 9.606620811 seconds)
done (took 35.12012896 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.067070257 seconds)
  done (took 1.957872811 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.875570756 seconds)
  done (took 1.769414031 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.38488929 seconds)
  done (took 17.312528087 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.512674739 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.59663039 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.958330737 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.164846214 seconds)
  done (took 3.126275065 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.958345387 seconds)
  done (took 1.869450735 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.317578303 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.261184681 seconds)
  done (took 1.476882314 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.805868754 seconds)
  done (took 1.709373647 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.498886867 seconds)
  done (took 2.405469585 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.354691308 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.201800186 seconds)
  done (took 1.471024901 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.579568814 seconds)
  done (took 1.485279622 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.91701954 seconds)
  done (took 15.826192762 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237606132 seconds)
  done (took 1.157208586 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.309903773 seconds)
  done (took 1.217117958 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.429774229 seconds)
  done (took 4.341714206 seconds)
done (took 58.01926198 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.109833669 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.129931381 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107816195 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126441136 seconds)
  done (took 1.380711762 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.113589027 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123182134 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.104488746 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.124056124 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.10891409 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.124399841 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099163654 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.131765793 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.100013528 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.127813666 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123213172 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100532106 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.124959908 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.09982439 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.122130273 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.101547398 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127801947 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.100286546 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125100324 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.100780769 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.124111353 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.124825673 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.103985752 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.124131995 seconds)
  done (took 3.670119499 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.108810454 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.096888028 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.123367426 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.095563381 seconds)
  done (took 1.338563792 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.114208789 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.139566595 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.114407736 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.131388411 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.138438046 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115516918 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120599432 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.097176777 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.122633348 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.108325938 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.12209679 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.1163309 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.139793285 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117851171 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.109582626 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113907708 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.094706433 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.13891981 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.10732086 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.133476902 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.096391101 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.131055722 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.105338138 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.136600605 seconds)
  done (took 3.787188622 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.178560402 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.135023412 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.14338599 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.168333212 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.122506758 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.119522015 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.122407531 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.128504733 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.124571102 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.096223075 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.119807223 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.151727098 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.12655254 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121824935 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.096989869 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.12617545 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.103447326 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.126822297 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.098429967 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.134147495 seconds)
  done (took 3.467335139 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.10900639 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.120548608 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092928363 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.119806694 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.104124704 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122466922 seconds)
  done (took 1.591228879 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.099112814 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.091914702 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.1158895 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.092135409 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.121833488 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093040866 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.114799565 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.09279784 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091985378 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.117056851 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.091921738 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115984934 seconds)
  done (took 2.155027353 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.221118732 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119833401 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121492878 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.098240333 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.12491779 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09624817 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.13599855 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09591376 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.175319624 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.120973346 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.112288196 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.17261895 seconds)
  done (took 2.516521395 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21634367 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102334077 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265393769 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368445304 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137745964 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170043782 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.295989374 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170248265 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.190333772 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115822528 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224216832 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159457366 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132820258 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182270883 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143947548 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.186955766 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176665571 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204001898 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152798382 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209502541 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168212881 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170667012 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183600533 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15535556 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141737732 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160437413 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.097104935 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13161342 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175681098 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173502667 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175920226 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152009013 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141677649 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203587472 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2425172 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181616072 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.302937934 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137933176 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.190606341 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.188382036 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266406563 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120531754 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221317575 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133136364 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135238968 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184332412 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159547902 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.18144908 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.135141368 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119603723 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210868796 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178649248 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.184210472 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139847939 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298762466 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150240709 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.147444811 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183586076 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193048066 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194294348 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170033301 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.100354647 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211278453 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186046152 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183499572 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14749318 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.170433561 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102458766 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179961542 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.223930161 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180166958 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172135846 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184247756 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137050955 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166157095 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174119344 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155753832 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181983588 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162327249 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.099984195 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152651846 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138722988 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106556454 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.189549921 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101879741 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231914522 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113591004 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.186809957 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234810214 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160203097 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13952699 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166191082 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194027763 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12596346 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.122159828 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148503061 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.163729204 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134228188 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135351995 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159770613 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148792214 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.104526917 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155481197 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.126250239 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161382497 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.112603173 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169089335 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167671109 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.132205174 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166890446 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127632081 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.160918712 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172482495 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190841439 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137064157 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136730273 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198287353 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160276298 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.11524032 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1791134 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.212140204 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.14146978 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140899932 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171028376 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197329755 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14662149 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190573785 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14588384 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136562751 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.153686693 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135809923 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160582391 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.158433071 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133146714 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.154179976 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196082493 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.104683718 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140903948 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176966524 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129759573 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106153443 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148219697 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13900991 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.119232064 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.153067594 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.142372862 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157515448 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16384617 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155563139 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135727416 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145613096 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220668432 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110969876 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.16399576 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150631522 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09634145 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.18082467 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212093746 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106806091 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188685827 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170303935 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224661985 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167245816 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109208861 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183351038 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133566929 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.09672092 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167604672 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162483267 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164638776 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.184323672 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220650551 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.170449797 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.155962092 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12614723 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19500094 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.178817044 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133163953 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.14912282 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164564479 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168725516 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.126008448 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.101087591 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.130843492 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141501217 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108895758 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136422867 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183779185 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165988644 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190917967 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163267828 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143519913 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185476059 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127218258 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167078044 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175495448 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1160506 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.188005799 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210756429 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143926031 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146095552 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17316248 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.12425257 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102858652 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.136313597 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169401504 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134998 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112270213 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147358638 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185847146 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178239132 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152919263 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228038059 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171680615 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196530368 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.098812376 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167750498 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17374723 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16086843 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.162457367 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135507994 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.163843892 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182637918 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148116295 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196429273 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1659476 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17221533 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201580234 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.159308591 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133798299 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151389683 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170146129 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11753116 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165711433 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150138509 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137511752 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15618786 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.113810888 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129476406 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182300871 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146484813 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181766639 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.160398842 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175845426 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130211181 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119969255 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166978313 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148654099 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.120789638 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174368627 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190350722 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146513833 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161506903 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177678819 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10742849 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.314115139 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216769795 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18753817 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138613972 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120628433 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164713934 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163612408 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166632857 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185016702 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146044441 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184421685 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161194953 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.120357385 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139503225 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151155887 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15255535 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.128395633 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.135888641 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.157146106 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.145833021 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186363612 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147669529 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162501996 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141425676 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151245788 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.158582974 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144422292 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206262243 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160432622 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181266232 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.159097759 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.168973038 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192239393 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102228097 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131841029 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.10443244 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186573052 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13612747 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162122462 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.186090215 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200082495 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16195935 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171096622 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142807024 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.126096483 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137265579 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151763465 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225158432 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120884345 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.139613079 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19281738 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.155226598 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133862814 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16718675 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28042494 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122674252 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175277095 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.125936191 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278617684 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128817136 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109025529 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164608874 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173280894 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135419188 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.160863396 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164165446 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148678012 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165149258 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1416067 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193254539 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209692703 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174118101 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178278014 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.147722814 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162109605 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166614709 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179845626 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146798418 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.147922608 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138707974 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186056858 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.215006946 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.10997516 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16510578 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16620047 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163378211 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176409592 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138781267 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192172558 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107217042 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195258036 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117319269 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128135242 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161831963 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.185667347 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136470291 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179140558 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161191259 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109899424 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129586165 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153238265 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136558591 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147819001 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.133531683 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183453265 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.10461402 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166277032 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184366403 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135537256 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157563505 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123037915 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134022026 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145875109 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12010803 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13973965 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172125018 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186138011 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.107531809 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20777612 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175868879 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168042454 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161810083 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121124652 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.666119075 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130308907 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185252766 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125012623 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214825772 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125830066 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169679737 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16400999 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152818503 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170682738 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152202996 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.198230536 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193925939 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.134720108 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135331652 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147595291 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148943721 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.108808387 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155686452 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164744456 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143262694 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.113359999 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.159915436 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150441437 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.14749336 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116441865 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189299356 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151257248 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185546233 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187418333 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143659461 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169437614 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178653772 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134215369 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.16477275 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174639438 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118831808 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153302932 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134860104 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.111571329 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184620764 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.128788279 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163747035 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163399686 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165066254 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140781248 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.139703089 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164835618 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14511064 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163638091 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103433674 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158084138 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162247017 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134902813 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.104958307 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15865502 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162533174 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.161441569 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103058586 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.174850937 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186194041 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.100966396 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137194705 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280396513 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160668685 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196213353 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.156423464 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139772962 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119412791 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157389713 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.156860681 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16388118 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.131692192 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110784649 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.134239508 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.18277249 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.157769998 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134096191 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185922825 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16273094 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190553498 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.150456196 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.268737073 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141706625 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132008701 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.13415982 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131056514 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117347979 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139347618 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148995869 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193205738 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183093008 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.156258414 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.147304998 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105864396 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128323018 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111132811 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166938695 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158406445 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161253766 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145447282 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.096653779 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147775442 seconds)
  done (took 78.062042577 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161481213 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.167168543 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.170334448 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.216542374 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189632353 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.275535184 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.22999099 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250095371 seconds)
  done (took 2.662646844 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.108059307 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.139723244 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.145868105 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.127920106 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.128917827 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.347566992 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.139704202 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.103531608 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.187591204 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.141287491 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.127690736 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.613335826 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.099005363 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.131259087 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.117944695 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.128148021 seconds)
  done (took 3.787471224 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.172020409 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.522859913 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.779090545 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.247457018 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.229772051 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.158069675 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.715070262 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.18899712 seconds)
  done (took 12.021233268 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.135109057 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.14801163 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.259838359 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.179460756 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.165739897 seconds)
  done (took 1.900995349 seconds)
done (took 119.249447844 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.103959682 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129671456 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102232423 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130984556 seconds)
  done (took 1.468421884 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.115703551 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.086655357 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.118847625 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085482629 seconds)
  done (took 1.414158531 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.485368142 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.086361863 seconds)
  done (took 1.617871449 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.136769305 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.145114502 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.120700809 seconds)
  done (took 1.421479362 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.110166478 seconds)
  done (took 1.119758488 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.105557662 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.103863703 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.147743216 seconds)
  done (took 1.371411442 seconds)
done (took 9.423369094 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.13279097 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.426401513 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.392806033 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144980206 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.726127461 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.386593468 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.041210639 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.159942726 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167983936 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098316404 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142780989 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.6785576 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.030931728 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.346411518 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.018693235 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.345566258 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.707118719 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098478392 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130749214 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098319906 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.020704561 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096557758 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126200114 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098838886 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.706120237 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.401442213 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125781247 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.381229449 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097279269 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128482473 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.387724989 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122718338 seconds)
  done (took 16.976893936 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14383809 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184935036 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.132641687 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.100492881 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.127839806 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099794226 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.133657208 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.109259289 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184057057 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124668902 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117033237 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.124039733 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102458202 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.125018741 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119350054 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.124351565 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099581214 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.127079881 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103267076 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12632908 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117070189 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123936158 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099419905 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.127535093 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096923662 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137330265 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098454746 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.136334078 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096760726 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.130421685 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128652915 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099260131 seconds)
  done (took 4.915712405 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151428665 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.1950366 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.133510607 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13253826 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.173696635 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125610206 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.209911316 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.133005477 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187648843 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12459612 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117382557 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.124931479 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.162597425 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098658488 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.146640819 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098246987 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127463391 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100400798 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131298848 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099235606 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14486189 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096836786 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126856013 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.099858501 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125013883 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111932214 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124971036 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.134771007 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098000905 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12767685 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.105530244 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123826224 seconds)
  done (took 5.215671244 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.107797739 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.131747088 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11657235 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.141978891 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100864766 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.130666642 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.105894998 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.127611106 seconds)
  done (took 1.9853597 seconds)
done (took 30.113580993 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.123738502 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.138270591 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.112644028 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.134150729 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.134177422 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.122963757 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.110622506 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.095626122 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.136385914 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.114453644 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.125505947 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.098424916 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.140092602 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.103281647 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.141016737 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.107834802 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.14686763 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.113687063 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.126037485 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.108061751 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.125862418 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.118756413 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.105223628 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098544686 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.149879278 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126806266 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.11596116 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.130142704 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.103851424 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.099312873 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.143113664 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.129303023 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.099554212 seconds)
  done (took 5.025677489 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.128872105 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.170614602 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.095221477 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.123956376 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.16468026 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.097087559 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.153792686 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.096378411 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.122865717 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.097361369 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.095440082 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.151436461 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.157010921 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.128886913 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.172736627 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.160141184 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.122195352 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.163043813 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.147814626 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.134746162 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.153876192 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.094771747 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.158523098 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.165904118 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.095851737 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.123416695 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.140392124 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.156054184 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.167022635 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.157118232 seconds)
  done (took 5.124800538 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.108065186 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.142453243 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.124656879 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.198870066 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.167170613 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.113855004 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139382454 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.116552463 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.15499936 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.097914193 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.137523377 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.157409495 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.116026563 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.137686105 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.105713282 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.14019977 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.11928392 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.128028833 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.105412991 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.145692183 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.11637077 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.139926084 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.113931419 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.13719882 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.098231693 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.135868267 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.103721443 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.14117292 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.133352102 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.108938811 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.128492286 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.10349786 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.129258925 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.109436919 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.128969713 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.106830409 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.149040874 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.109362692 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.140362139 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.16103536 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.109156787 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.131106556 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.121303897 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.17459705 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.100105477 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.134098641 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.109394539 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.136724872 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.098085654 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.14688597 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.113332432 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.127160009 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.142595682 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.099722715 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.125089858 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107052687 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.100707083 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.102574878 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.135594537 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.103959788 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.146576742 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.107715676 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1340819 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.101320822 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.135232819 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.098458739 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.124839203 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.104490414 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.151168191 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104613151 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.159138456 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099809983 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.133099756 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.107313537 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.133094354 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108146009 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.12680548 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105741103 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136266278 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.104829439 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.13597225 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.102114126 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.132619829 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.117385148 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.141192024 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.135359519 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.104593585 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.133404964 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.102168285 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.129265531 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.11455798 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.12952424 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.103072067 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.138652228 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.100164068 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.130105924 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.105171481 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.131907966 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.098694151 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.14758336 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.104939008 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.126821484 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.11718014 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.128764966 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.103170007 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.136826556 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.112037227 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.12699841 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.104342688 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.134952657 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.09793881 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.132468016 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.102738302 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.126689566 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.111355977 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.139208641 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.105032684 seconds)
  done (took 15.496817067 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.25137273 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.227510572 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.199126528 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.311029581 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.15263305 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.125371452 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.225172067 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.180306649 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.12873703 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.167964144 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.183523719 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.188829713 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.100058178 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.161386156 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.228881028 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.317346515 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.161284189 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.168660199 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.139475461 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.151329009 seconds)
  done (took 4.812056293 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.118988901 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.167784946 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.157323286 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.126021381 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.129669095 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.113469257 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.130772013 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.143566763 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.101272717 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.134536103 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.098861063 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.137022692 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.102676542 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131436673 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.116739735 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.145435852 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.103542658 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.135298 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.144621406 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.106236441 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.127800165 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14970315 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.110519469 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.157623247 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.108214176 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.143027242 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.097910855 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.135512863 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.096346871 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.128393242 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.104749043 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.144051602 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.134863565 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.100188492 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.133294353 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.100240758 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.124125426 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.101803044 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.129648876 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.104532697 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.143865444 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.103043788 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.129698909 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099873514 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.136299931 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.097913097 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.104175079 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.134631739 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.132020315 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.109022356 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.134628392 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.104659031 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.136282777 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.112395101 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.126369701 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.109292848 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.141833025 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.132603027 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.106578347 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.126589248 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.099606151 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.103823612 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.128011986 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.104093654 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.134127566 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.143755218 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.109028772 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.12903193 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.105254016 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.131886882 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.103297922 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.146813222 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.147465097 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.098444032 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.124782253 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.122258544 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.097217134 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.11707969 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.109383346 seconds)
  done (took 10.70232404 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128220475 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.128963611 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.119368044 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.164065674 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.114047985 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.138150806 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.100182825 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.14975088 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.10626999 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.137754748 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.107020617 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.143589029 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155639488 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.113350803 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.129290767 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.115440928 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132537271 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.141125079 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.148436534 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.159637695 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.110635209 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.134789096 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.113053322 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.141455504 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.132486577 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.142016924 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.162203161 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.105576608 seconds)
  done (took 4.724888174 seconds)
done (took 46.905585055 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.167986409 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.331180856 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.115626245 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.115172529 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.146315076 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.13837924 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.117711657 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.308988239 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.793384778 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.107033324 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.112711306 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.122638102 seconds)
done (took 26.61843999 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.19825529 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.708525212 seconds)
    (2/2) benchmarking "String"...
    done (took 1.468507692 seconds)
  done (took 4.226698833 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.112947714 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.114712861 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.359774832 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.112253385 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.13193838 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.13100108 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.118361733 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.120930401 seconds)
  done (took 15.12768062 seconds)
done (took 24.704168697 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.107203993 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.414511911 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.395454501 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.129391967 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.11673837 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.116912427 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.104543187 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.168649171 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.11746633 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.12732517 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.113809479 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.407357258 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.10998874 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.535592185 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.100099788 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.141027062 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.140437102 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.450136656 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.117906066 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.157451359 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.114626048 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.103317927 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.132123489 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.150686396 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.118903408 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.125206558 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.17093024 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.102648093 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.407256368 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.118939097 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.112529988 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.13128804 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.176456181 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.115782071 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.220318378 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.136955417 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.394482909 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.108784586 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.102861049 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.117755804 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.434808884 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.502843048 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.120776229 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.111901499 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.126205613 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.131868636 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.108786709 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.840476886 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.12091694 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.10554431 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.128963869 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.543351346 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.129332454 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.125369826 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.119731541 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.441157793 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.144376372 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.170823658 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.157145373 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.125278282 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.116842684 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.117302396 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.152555828 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.134982859 seconds)
  done (took 138.483945054 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.116915727 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.121841618 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.120734012 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.181124238 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.121255961 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.121386673 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.116981729 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.11641886 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.11790823 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.15168015 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.121809628 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.117141017 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.121948701 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.119141124 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.120413569 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.130450874 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.12258326 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.127468717 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.122963437 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.11941021 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.118696315 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.121977444 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.135568512 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.119398496 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.15884926 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.205357715 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.153158174 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.145389145 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.12143699 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.118305051 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.154479989 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.18400386 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.705597526 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.976255474 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.132212437 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.13704768 seconds)
  done (took 77.241256575 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.118637054 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.118799235 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.119565918 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.151622808 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.120687759 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.666220122 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.669040255 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.907937906 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.164063957 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.39973398 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.377714132 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.123957299 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.212581925 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.133133578 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.120884583 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.136360992 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.144891518 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.121503051 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.122306787 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.66735233 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.137384607 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.635266806 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.298297352 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.139798246 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.152369005 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.519561781 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.120173755 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.153071225 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.451380923 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.169207686 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.121600874 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.47701768 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.26410447 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.12245498 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.122183723 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.233420354 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.12384235 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.151771532 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.123999553 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.40019203 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.122420789 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.122783552 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.124035275 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.782528218 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.125971993 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.668550866 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.127916984 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.055381084 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.122611215 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.123394313 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.17081254 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.775691818 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.140915901 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.122840968 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.124394019 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.124064435 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.12353098 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.15311975 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.296098196 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.237917091 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.124758734 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.127305261 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.153756255 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.124538117 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.51687126 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.126043941 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.434258852 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.182902647 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.229404536 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.670924078 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.127293184 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.122975183 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219973241 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.241770089 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.123606861 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.123669983 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.125927809 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.124294472 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.233072049 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.123676107 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.527565927 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.123555928 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.294219012 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.14139183 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.412397675 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.22497794 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.12377645 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.495507567 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.12770894 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.125449185 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.836202354 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.22008928 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.12566972 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.125471101 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.124548386 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.52988146 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.673432232 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.337930501 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.129518825 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.61563766 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.129190269 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.541206599 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.654994266 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.783697319 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.13112481 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238109143 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.296947931 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.145032487 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.125894567 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.413991533 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.129804439 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.181857531 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.128691306 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.523017074 seconds)
  done (took 356.205733987 seconds)
done (took 572.973279951 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.794957395 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.758751162 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.877239642 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.778777607 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.74375864 seconds)
  done (took 10.003113527 seconds)
done (took 11.051623222 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.310484185 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.312078814 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.186896177 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.316369134 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.159008056 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.333989515 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.305144772 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.151932367 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.231760029 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.20666723 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.234522837 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.181941726 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.162420512 seconds)
  done (took 17.143699524 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.395255835 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.128299397 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.207770477 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.364356866 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.168945676 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.390572858 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.418246709 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.12981434 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.269037314 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.143375935 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.141036453 seconds)
  done (took 16.808386727 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.386510652 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.130061478 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.196541891 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.367194037 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.171149353 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.395322758 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.428656143 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.129839701 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.266375231 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.14292513 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.142298829 seconds)
  done (took 16.808565515 seconds)
done (took 51.811607261 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.169829718 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.29292931 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.160811288 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.143524839 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.140566694 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.140342083 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.144224692 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.139265961 seconds)
  done (took 10.383103529 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.135839705 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.137421435 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.136648776 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.13615623 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.138425534 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.134875178 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.135429555 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.138167156 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.138639151 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.139237697 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.139571457 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.135365305 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.135681248 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.135430226 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.134282657 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.13561852 seconds)
  done (took 19.239115756 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.137385724 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.135971538 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.134893064 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.13514968 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.135832348 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.136532982 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.137686005 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.136100472 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.136466556 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.135172489 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.139725073 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.137841028 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.137074667 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.136317632 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.137932674 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.137447511 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.137260326 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.137592139 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.142383378 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.136291624 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.138027486 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.13689229 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.136982674 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.140157166 seconds)
  done (took 28.349050769 seconds)
done (took 59.022652173 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.139560389 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.149583593 seconds)
  done (took 5.344499144 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.200995134 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.203576155 seconds)
  done (took 3.463053575 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.141908281 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.140030399 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.141330297 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.141429685 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.140882493 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.140501551 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.141562706 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.141022811 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.140981572 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.140108266 seconds)
  done (took 12.46442125 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.140120884 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.14205053 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.140950526 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.140670109 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.14111529 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.138582492 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.142104047 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.141713051 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.142158623 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.138331825 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.141622506 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.138622813 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.141317774 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.139138839 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.141219751 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.137705856 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.139430633 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.139685096 seconds)
  done (took 21.582897608 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.155721845 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.163941618 seconds)
  done (took 3.377301951 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.280098136 seconds)
    (2/7) benchmarking "second"...
    done (took 1.180075468 seconds)
    (3/7) benchmarking "month"...
    done (took 1.254969024 seconds)
    (4/7) benchmarking "year"...
    done (took 1.247900309 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.181488692 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.161057904 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.181007073 seconds)
  done (took 9.542901163 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.144637258 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.330793911 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.444732543 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.72652063 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.143602723 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.145655182 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.007474076 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.14824312 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.148318108 seconds)
  done (took 13.296890757 seconds)
done (took 70.127284674 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.13860918 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.194304945 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.170753115 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.153220943 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.434734428 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.144946631 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.142298355 seconds)
done (took 15.436935546 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.133381561 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.128892178 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.142738652 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.141249281 seconds)
  done (took 9.604907071 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.137335723 seconds)
    (2/2) benchmarking "read"...
    done (took 1.490621644 seconds)
  done (took 4.692659513 seconds)
done (took 15.359506817 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.146481602 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.142689043 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.142448309 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.146745627 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.144011926 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.146528941 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.144391941 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.141855663 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.144939921 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.143866664 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.145229739 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.146543482 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.143129209 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.147279776 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.141863496 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.141599105 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.147870324 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.144040054 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.144806795 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.142916708 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.143382316 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.146636094 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.14190987 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.143417193 seconds)
  done (took 28.525881343 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.145437504 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.143806154 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.146529158 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.144437212 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.144185121 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.146229021 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.146299982 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.14158115 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.145476583 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.147755426 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.143764493 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.144070397 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.147372328 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.146052156 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.146488829 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.144383397 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.146407214 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.145634698 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.147740755 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.145389327 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.148817628 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.146197404 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.146724922 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.148958672 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.145728671 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.144908043 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.146925075 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.144507915 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.150827794 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.145977575 seconds)
  done (took 35.442009621 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.154633887 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.154947948 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.148468768 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.149633432 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.152779232 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.149713698 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.150408624 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.149335253 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.148063359 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.149454396 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.147757543 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.149474356 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.14831787 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.148987795 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.14936601 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.148371679 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.150474453 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.151225815 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.150792828 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.149864962 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.150020819 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.149521257 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.148776106 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.149451907 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.148841167 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.150482359 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.151554976 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.150845715 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.150851966 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.150344065 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.150769425 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.149331923 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.14984894 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.150352819 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.152224211 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.149637707 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.153905186 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.157547152 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.150573633 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.151439811 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.15326731 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.152608567 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.149662004 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.150618681 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.150164576 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.151772859 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.150116712 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.151464343 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.149655855 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.151684028 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.152359888 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.150575062 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.1516835 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.151451982 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.151088802 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.151477029 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.151926098 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.150609966 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.153056659 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.153667794 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.153944038 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.152278011 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.154313439 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.151869996 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.151654247 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.152459229 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.151966282 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.153292332 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.151073225 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.153238246 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.151614758 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.152639214 seconds)
  done (took 83.941044664 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.152930262 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.150727783 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.152076034 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.150526151 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.150455509 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.152992592 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.150269827 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.152095333 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.148057222 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.152225959 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.154685363 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.150043332 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.151674155 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.15298482 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.152534138 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.15012516 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.154817174 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.151095545 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.153255323 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.154008233 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.153659074 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.150227771 seconds)
  done (took 26.408274807 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.154370642 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.153826997 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.150816438 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.155701856 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.152355273 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.154792498 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.153506264 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.154785786 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.155671751 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.152561722 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.152366203 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.153582737 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.154340559 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.151720527 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.15198791 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.153577931 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.156190364 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.154884646 seconds)
  done (took 21.835921858 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.152902188 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.153806925 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.155133683 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.15320023 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.152316807 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.155832542 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.154448664 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.155436895 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.156390862 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.153221298 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.156309597 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.155996145 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.155941135 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.152914264 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.154667298 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.15322211 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.157431771 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.154117237 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.157172763 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.154362003 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.154390551 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.157044517 seconds)
  done (took 26.476305915 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.158161689 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.157714283 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.155325093 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.154734269 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.15490389 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.154916934 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.157627414 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.154731035 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.158966612 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.157565279 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.155765496 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.157238386 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.157198547 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.156174928 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.155956484 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.15497026 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.157678054 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.155431737 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.157504263 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.155647183 seconds)
  done (took 24.201146141 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.161721791 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.162148581 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.161737482 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.161062104 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.160929506 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.162423409 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.162138982 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.162527632 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.160159092 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.161723236 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.162742358 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.162200447 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.161763871 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.161888374 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.160802686 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.16151018 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.161790873 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.162190433 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.161183352 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.160798306 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.162050065 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.161479354 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.162770634 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.162889762 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.163138426 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.162176064 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.16177459 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.160647581 seconds)
  done (took 33.601783495 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.160501039 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.159785746 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.157234843 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.157361541 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.156411048 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.157688809 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.15812636 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.157931531 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.160563555 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.157043035 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.16069379 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.159695758 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.160439831 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.159671382 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.160998703 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.161195245 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.160215008 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.157678596 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.160001846 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.159257105 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.162080235 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.161128156 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.161784743 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.157851989 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.158724905 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.161665918 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.157810249 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.158475526 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.162919138 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.159651442 seconds)
  done (took 35.858437667 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.204951817 seconds)
    (2/2) benchmarking "in"...
    done (took 1.205086469 seconds)
  done (took 3.48516571 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.160386608 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.162768116 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.160649323 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.159703198 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.158648153 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.161985908 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.162446843 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.159526428 seconds)
  done (took 10.360775741 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.161954138 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.16173434 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.161762042 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.161427585 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.163530473 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.162333658 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.16869695 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.180464105 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.162902856 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.164629046 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.171003587 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.171139907 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.165070581 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.163153484 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.162259515 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.163916953 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.162798625 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.16473532 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.165666198 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.163274619 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.164217205 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.166232032 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.165731008 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.162189583 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.165195612 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.173393722 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.167885717 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.163813623 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.165836465 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.167684165 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.164499913 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.160657945 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.165265448 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.165328699 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.163793621 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.166239443 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.172747545 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.184618407 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.169994282 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.164898547 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.165334887 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.161939941 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.165611326 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.165625797 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.166424026 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.166353402 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.166810605 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.162629603 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.165236182 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.168074907 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.172837422 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.165539842 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.16186553 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.168841077 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.166023241 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.17151847 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.185155386 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.169897605 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.176850258 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.174727299 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.17991377 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.190092523 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.16822459 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.166195948 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.178773491 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.191799643 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.172700343 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.184018429 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.164609672 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.167250994 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.172751219 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.179638409 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.192113265 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.16860068 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.169532488 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.1676196 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.1675489 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.166701754 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.171466421 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.190052685 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.168644197 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.168410593 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.179367976 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.193599793 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.168557445 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.17049782 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.16891003 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.169832212 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.169937976 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.177835357 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.188966338 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.167564795 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.166340489 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.168314014 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.169060082 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.169171214 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.167567812 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.170282414 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.166713049 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.169880528 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.170829876 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.173987512 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.179287932 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.172028483 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.171925348 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.175178515 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.168250803 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.16948856 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.175867269 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.168252599 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.170976144 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.173154782 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.172891103 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.165282375 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.172447795 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.178949044 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.17228662 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.171853937 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.171452379 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.170980819 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.180928745 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.200030527 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.171376659 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.169375595 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.175199173 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.183566179 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.170259322 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.172576847 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.170220359 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.16859703 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.16671432 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.172374036 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.170993098 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.170305485 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.17260601 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.171616905 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.167170125 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.170565418 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.172894708 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.17495558 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.173283414 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.172543418 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.173750529 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.176429618 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.174866161 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.176028953 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.177687652 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.171556954 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.17304409 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.174293589 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.167927062 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.173213215 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.172732954 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.172848907 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.172347645 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.173493358 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.173043152 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.173920872 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.174308117 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.174415078 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.172932902 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.174203507 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.178421502 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.175848921 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.176854969 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.172451783 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.1703223 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.171602855 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.173864946 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.173107825 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.173870409 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.174575025 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.179979459 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.183342232 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.173743988 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.174986653 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.177619952 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.1751376 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.176656054 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.176646665 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.178308012 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.18340239 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.176679755 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.180475124 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.175820008 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.176259619 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.174829492 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.174182449 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.173448677 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.177444219 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.179480039 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.184370681 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.188320878 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.20057776 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.176282332 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.179443478 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.174405568 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.183389032 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.178448924 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.17681663 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.17588609 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.178173467 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.176287457 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.17739183 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.176833759 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.177670834 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.175540822 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.176121316 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.176378883 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.177497152 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.176655485 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.177071298 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.176712559 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.17445968 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.177423583 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.178737317 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.176168765 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.173492601 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.175870332 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.177236562 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.17734639 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.177048248 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.18272401 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.174631632 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.178693201 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.177514042 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.177659109 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.176809058 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.178392743 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.180823166 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.178004134 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.184985266 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.196654156 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.178698686 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.18405541 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.196697469 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.176458103 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.181314842 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.179054124 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.176292865 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.183279893 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.189078161 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.179081037 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.182227354 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.180924581 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.17871914 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.1794379 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.182540757 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.176014287 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.177975482 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.180050259 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.179710103 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.177525966 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.180111898 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.179098498 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.178874296 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.180308461 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.178801191 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.17768533 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.179745512 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.181866963 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.181013302 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.18185333 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.184471164 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.189444031 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.185067772 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.1792716 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.182461041 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.181639587 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.183350629 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.182380216 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.182182613 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.180892504 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.194277223 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.207514541 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.188060166 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.199561801 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.181942271 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.186018916 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.201761745 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.185156256 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.181222315 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.180951727 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.181353526 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.180938386 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.179475053 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.18244438 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.180703543 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.182155281 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.183670369 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.18637027 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.182046828 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.181360676 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.183984886 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.185526987 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.184300691 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.182114315 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.182458113 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.184072963 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.183791336 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.180470074 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.183004526 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.187910465 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.202084645 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.183173272 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.181624979 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.181134609 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.182229669 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.184278498 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.183333111 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.189238307 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.193375767 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.186157951 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.193128551 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.185343243 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.192706281 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.184555748 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.188046136 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.196719579 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.181890492 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.183676277 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.183702129 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.18598993 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.191126056 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.204767729 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.186290848 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.190716822 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.185742229 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.186614642 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.184622791 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.186461658 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.18430428 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.186565138 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.192179899 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.206523338 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.188565908 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.186549991 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.182885621 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.187761528 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.185008322 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.184433584 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.186941778 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.187691291 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.186630352 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.185889157 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.185256915 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.184961141 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.187284874 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.187330792 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.184252998 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.186625685 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.191908159 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.207930448 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.19249361 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.186987861 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.191436107 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.188131811 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.193569415 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.208271144 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.187283369 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.187229772 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.186589461 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.187660792 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.187254198 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.187463778 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.188362256 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.189564003 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.19122902 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.188735038 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.189585141 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.187912723 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.18865233 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.187729457 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.197100152 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.217703597 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.189177482 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.192541567 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.18523327 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.190601013 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.194571188 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.190158781 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.187636882 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.192192826 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.200068403 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.195737706 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.188302431 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.189870547 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.1898288 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.189728959 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.18741683 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.18731097 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.189140323 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.188678656 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.190113774 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.190515775 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.191760647 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.189556981 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.188118704 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.190784403 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.191650928 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.199713234 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.190162671 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.189996152 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.190698292 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.191218025 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.685657043 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.18860344 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.191521348 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.190399441 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.190467392 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.191854894 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.198540975 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.200428088 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.191706809 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.190921879 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.190781245 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.191599795 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.191744598 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.193129726 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.191661902 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.193884069 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.192704523 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.190906826 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.191846655 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.191661611 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.195448636 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.192508929 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.193497993 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.198233553 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.207006029 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.195079688 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.191389365 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.193444257 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.195157001 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.192909088 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.196350553 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.20309534 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.198524295 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.206135983 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.205258307 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.198308027 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.193059696 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.198200849 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.203817868 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.192109079 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.193389067 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.194004199 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.193749882 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.193785138 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.198503555 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.196099923 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.200219697 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.191366612 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.192719463 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.20206741 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.217607204 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.194600157 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.196602179 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.201305211 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.193914791 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.193494541 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.192582966 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.195218985 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.200888626 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.215214323 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.196383522 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.196673928 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.193296455 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.196820302 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.204125248 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.194437971 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.196723817 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.191232074 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.196136121 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.197280435 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.19707588 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.192107559 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.192377181 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.194456367 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.199727664 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.204957326 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.192315593 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.197088834 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.196959661 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.197545657 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.197146225 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.196101599 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.193619357 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.19372789 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.195309243 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.199531196 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.196416696 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.197021031 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.195861314 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.19702275 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.199156515 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.199820995 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.201136733 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.210409373 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.207361281 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.193020438 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.195488709 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.198030061 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.199503907 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.197770346 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.19719367 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.198293674 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.199941029 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.197433716 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.197653843 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.195598871 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.201410465 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.213454214 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.218149134 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.198191965 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.199249645 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.199665967 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.197969885 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.193908511 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.198315269 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.199016419 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.201150944 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.20985483 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.19998746 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.204593088 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.217586817 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.199355195 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.203493681 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.199584614 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.208262071 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.203250255 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.200306985 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.201084492 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.204029863 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.21865678 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.197561466 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.211310012 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.233279534 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.216714902 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.199485153 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.200504309 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.198808822 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.200414581 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.199293019 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.200400748 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.200803965 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.200496992 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.201208923 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.200579272 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.20511986 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.200504405 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.202070462 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.201447577 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.199856992 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.200771013 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.197164852 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.202815057 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.201724842 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.202137087 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.203415823 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.204006429 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.202640859 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.214740139 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.227136796 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.201376896 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.202790057 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.199145842 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.204058555 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.204677037 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.21327244 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.211233469 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.204032561 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.204263672 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.202456507 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.201354433 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.201416879 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.202534441 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.200891559 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.201899146 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.199186338 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.213188791 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.228402035 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.205544089 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.201444898 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.204369508 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.203711146 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.20294324 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.20563536 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.204301269 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.204401584 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.204513293 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.209086678 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.203691788 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.202029066 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.207682529 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.211152004 seconds)
  done (took 708.279626553 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.200783068 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.200728004 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.200582357 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.20053912 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.201152031 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.200613635 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.199615845 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.200776722 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.201593158 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.200721192 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.19994965 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.201856098 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.200194381 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.201798667 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.200960396 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.203227302 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.200765726 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.202275483 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.201194385 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.202658988 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.201414518 seconds)
  done (took 26.333880686 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.204959352 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.202579995 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.202134603 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.205239856 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.202798443 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.203706783 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.202308856 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203934767 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.205179575 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202310673 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.20640796 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206782448 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.204658546 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.202817455 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203202315 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.204894643 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.203488723 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.202226368 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.206533827 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.204056203 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.205826012 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.203703169 seconds)
  done (took 27.602956613 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.205849435 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.206652395 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.205876814 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.202250542 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.206469697 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.202565314 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.206683383 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.206073594 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.207600653 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.2066478 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.205473562 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.208661965 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.216001891 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.213436079 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.208348088 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.20605136 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.207409132 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.207796199 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.209112415 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.206476382 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.213425876 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.223466537 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.204452809 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.207970351 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.208758815 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.207760846 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.208376224 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.210285122 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.208813722 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.21421543 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.208684447 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.207567177 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.210688938 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.208199267 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.209363772 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.213727104 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.210123967 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.208906489 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.208284695 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.218592505 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.232758904 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.210964413 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.21322776 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.227540424 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.208632561 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.212405671 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.217843138 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.205493913 seconds)
  done (took 59.201490675 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.809892103 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.836215267 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.835864004 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.83752213 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.83704638 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.849383089 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.834972282 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.842587703 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.836083147 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.839762668 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.837209636 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.838520085 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.837152022 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.834288495 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.844028673 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.834738204 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.833933849 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.836552188 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.84720766 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.835513704 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.838077254 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.841535508 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.839864253 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.839271162 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.844665335 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.84143053 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.839589033 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.841539052 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.842717267 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.843942586 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.84835326 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.851791145 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.845622801 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.838761496 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.84498065 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.846965396 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.841457089 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.838990534 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.839407111 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.839765983 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.842493874 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.840120607 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.848233729 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.843246883 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.853381603 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.839115529 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.837134761 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.842608527 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.83907325 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.846515847 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.847511054 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.842371074 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.841010666 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.842963642 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.848542981 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.85228248 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.854051791 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.855068796 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.846171609 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.845233942 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.844730548 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.846254376 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.851195404 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.844750829 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.844725318 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.841717435 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.842826996 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.848885389 seconds)
  done (took 126.378330001 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.215488505 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.214691518 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215046184 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.215754289 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.215336659 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.214590424 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.214834874 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.216445737 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.215744442 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.217095324 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.217168467 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.214528952 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.215323908 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.215352222 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.215305805 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.2162028 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.216006483 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.216466505 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.214939362 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216524689 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.216518849 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.216301706 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.216478337 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.217694809 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.217428293 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.217939479 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.216806643 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.217621348 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.216593477 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.216116766 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.218712426 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.218105952 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.219367121 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.21918644 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.216769532 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.217050032 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.217293539 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.21771853 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.217138004 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.217399496 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.21770127 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.219380606 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.218126871 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.219917376 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.219022489 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.21808613 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.219076218 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.218349787 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.217885811 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.21847272 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.218022216 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.217384759 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.219090739 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.219104879 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.219856646 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.218693418 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220624996 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.219667147 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217511999 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.217808332 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.220022589 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.220402953 seconds)
  done (took 76.609380968 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217784783 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.21754702 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.216048092 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.215978796 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.217878115 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.214747541 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.217437863 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.217452295 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.218508505 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.219116385 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219610796 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216361129 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213826902 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219462801 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216778191 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217331935 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217896916 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.2169641 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217873249 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.215565182 seconds)
  done (took 25.470966466 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.218316901 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.219900207 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.215975949 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.216745923 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.218694309 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.217742932 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.217991473 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218934548 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21777631 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220877749 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.220974097 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.2175449 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218394935 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.219495111 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.219380018 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.21830596 seconds)
  done (took 20.626573267 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.219817782 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.220242914 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.220912277 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.220715343 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.217522322 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.218667748 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.220515011 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.218942188 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.219392434 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.221668178 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.2211324 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.22190108 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.221846781 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.222338083 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.220248838 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.220529724 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.2182465 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.218933531 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.22344332 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.222856495 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.220210696 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.22040915 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.221807075 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.220999514 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.220389443 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.222094437 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.219270565 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.219981432 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.219002169 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.223466016 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.222369602 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.222986753 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.221531478 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.221790433 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.223563311 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.219887763 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.222365156 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.22345577 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.224098502 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.226177478 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.22466039 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.220966765 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.222361529 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.223197845 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.22060676 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.225044448 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.220120464 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.220047911 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.222278428 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.222303632 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.221700977 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.22421993 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.222478341 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.221822922 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.223309577 seconds)
  done (took 68.309002875 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225182565 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.224351656 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.219582358 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.223715738 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.222905586 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.221009711 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.223678362 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.221863313 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221934563 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.22350675 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.221511774 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.226434333 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221813275 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.224120122 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.221951532 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224035014 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.222621515 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.221816337 seconds)
  done (took 23.141898786 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.223594299 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.223490739 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.224359652 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.222040782 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.223466288 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.226276061 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222071705 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.224868869 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225372185 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.223929996 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222509899 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.225659246 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224217445 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.224242633 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.223316545 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224456275 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.225797779 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227326701 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.223169021 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.222483493 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.225933214 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.226736665 seconds)
  done (took 28.065997275 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.224438656 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.226363736 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.224911288 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.243868657 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.247996628 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.225888794 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.226793787 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.225393988 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.251158063 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.291579578 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.285465605 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.251061736 seconds)
  done (took 16.058127556 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225105989 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227771898 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.223403603 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226412704 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231416036 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225527023 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225453158 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226250061 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226775026 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224463993 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225965225 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228967742 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22705902 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226254913 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228648473 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228113603 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226153946 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226818292 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22564709 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229950217 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226436499 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227262428 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223991215 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226599884 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228607233 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226036485 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228977659 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225563431 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226042049 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229270374 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229053634 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227855003 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228337605 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228752727 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229264737 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228557216 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227186566 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228789895 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229885311 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229248261 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.23007437 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228725185 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230723388 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22983171 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230837301 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227942625 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229033486 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227911118 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229243624 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232085716 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229442265 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228478172 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23264942 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230895875 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23419708 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231550877 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230258799 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231449371 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232565123 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232334869 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228809794 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235066539 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230709093 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231525831 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23297683 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229777036 seconds)
  done (took 82.226661752 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233606007 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.23225942 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232195011 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229775918 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228512087 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229853692 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23032706 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228451223 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232735226 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23243251 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23293843 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231215501 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231087197 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23290761 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230390172 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231147415 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232310812 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229972425 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232625836 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23598284 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230056168 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230043168 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232169533 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234180812 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231007115 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233058537 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231926842 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23399875 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233030076 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229897217 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231779958 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233336481 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235451984 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.235179694 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234501107 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233976743 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23461296 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238959561 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236945094 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235791652 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232645882 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235693794 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23109939 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233878159 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231376457 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23338175 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234876812 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232454168 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233510597 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232066797 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233305203 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232230544 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232323634 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236618575 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234700275 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235925117 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232795334 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234617984 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23282437 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238198534 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233886074 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232047486 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235545903 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2337913 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234020395 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23256845 seconds)
  done (took 82.519468237 seconds)
done (took 1702.022741219 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.407160924 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.356211492 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.234878088 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.250312344 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.234890501 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.229673205 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.248124116 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.235297032 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.235464634 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.23389416 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.234970254 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.423520022 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.232640538 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.235699922 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.234834485 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.335045463 seconds)
  done (took 25.508498568 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.26565538 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.242308123 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.359214704 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.261735525 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.268413471 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.43580777 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.300128629 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.249537892 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.422134561 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.262420776 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.242288363 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.268675579 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.250495793 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.242658542 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.263476923 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.43922855 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.49611391 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.238601729 seconds)
  done (took 27.651603384 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.714098426 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.242375747 seconds)
  done (took 5.103113823 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.266586279 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.249919182 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.246857995 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.246517156 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.238015214 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.239441606 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.244775607 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.248059095 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.245264555 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.372994646 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.245642742 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.255077313 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.269280803 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.250161263 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.244401108 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.28608229 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.402728999 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.2478049 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.242605865 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.252655717 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.24873993 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.355354968 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.289138036 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.244715382 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.379483429 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.24296583 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.251444721 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.255592132 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.386347162 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.249474634 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.244885251 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.246650723 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.249365575 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.147499747 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.718275464 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.258126533 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.272368664 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.254391583 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.245001403 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.399690206 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.251300146 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.253652403 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.239056931 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.706628006 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.386996812 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.374535952 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.270543155 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.25000277 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.247737769 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.313884628 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.248323676 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.247688953 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.287461349 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.097298911 seconds)
  done (took 80.576904564 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.281663779 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.241813721 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.424198803 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.266191816 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.238356343 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.242413469 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.244738647 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.549221319 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.248681416 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.240861123 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.542611498 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.837543914 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.267842382 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.289397971 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.084173459 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.298494825 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.242076171 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.258121218 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.245079949 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.245069373 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.800498408 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.241165304 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.261348877 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.315057776 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.281231688 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.788701218 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.243788416 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.246265206 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.261421023 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.240416921 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.787817664 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.27225585 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.296899364 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.242132863 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.53048364 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.659541571 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.619305891 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.245067666 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.283716237 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.241416658 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.267285847 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.776279533 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.637777954 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.245301625 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.244675037 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.77065673 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.241867551 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.244068847 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.246436245 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.493344651 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.245756549 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.242818685 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.260958666 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.247504351 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.24298503 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.350607239 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.31966898 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.773863065 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.245427093 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.247009676 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.280849805 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.245610266 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.245885454 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.242494794 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.24426487 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.621218457 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.446865173 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.251770561 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.618948815 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.772863268 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.25814204 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.85323932 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.266421975 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.263150617 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.429814318 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.246674766 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.246520486 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.782083144 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.250652883 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.24352016 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.598541674 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.246368654 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.552015148 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.268075987 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.24465069 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.819502772 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.256767634 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.252969814 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.245766454 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.244998966 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.263773761 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.261782831 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.538584606 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.27599356 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.245770472 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.246936159 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.270043172 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.2485041 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.24829622 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.252500469 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.84522618 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.266376834 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.247059783 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.249369923 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.256923763 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.250129974 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.246410557 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.246922493 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.515109597 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.264686236 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.252012168 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.247065576 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.243774236 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.252816684 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.31967884 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.247827293 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.569877221 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.245933311 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.247302839 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.273346629 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.247274741 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.27905151 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.24489488 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.25528076 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.148590185 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.514060512 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.272715964 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.262901403 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.25161276 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.260707429 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.24762283 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.271212524 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.27994827 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.253333068 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.026132347 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.266964502 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.255778716 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.247780366 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.256210968 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.250466797 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.281056743 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.248660188 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.546339899 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.54568562 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.458003953 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.249475964 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.249549581 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.034120298 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.290022845 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.431745217 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.273792208 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.250620499 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.501275346 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.45212909 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.250314506 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.248490529 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.249674835 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.510454406 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.252888654 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.560588541 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.814649888 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.271741844 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.255777101 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.037072485 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.991046745 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.253968639 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.251248819 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.552965893 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.270916791 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.251819498 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.249782452 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.252216092 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.25238774 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.258936496 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.256280139 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.25180869 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.25351801 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.572712356 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.44342714 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.267389773 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.249397641 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.774138178 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.263378174 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.251841485 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.277641299 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.253653499 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.249617019 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.31392106 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.25203656 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.271309459 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.254338947 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.252752088 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.797341919 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.251092013 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.258856588 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.44751342 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.958020778 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.267136457 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.254922903 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.272753344 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.154687227 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.80657686 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.273317835 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.580213576 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.260457377 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.294251452 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.253316296 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.276083235 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.801566113 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.255139766 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.271955999 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.937219855 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.271023795 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.670099365 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.252035077 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.256365371 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.885350729 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.272889924 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.259899357 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.252988035 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.276052826 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.54931999 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.256860906 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.267115169 seconds)
  done (took 480.129997508 seconds)
done (took 620.114177218 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.252195071 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.258326588 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.245013235 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.256769857 seconds)
  done (took 10.173649749 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.26365349 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.256997393 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.261412022 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.258147369 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.261043526 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.260179253 seconds)
  done (took 8.725946062 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.256031972 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.25373359 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.261568967 seconds)
  done (took 7.936591028 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.476677673 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.287685846 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.600196468 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.284216726 seconds)
  done (took 8.812212049 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.262753085 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.260764942 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.263210874 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.260793833 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.264115982 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.266051589 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.263081936 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.261794917 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.263953708 seconds)
  done (took 12.526369302 seconds)
done (took 49.341710363 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.327321451 seconds)
    (2/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.369477188 seconds)
    (3/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.386728123 seconds)
    (4/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.147118358 seconds)
    (5/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.29040989 seconds)
    (6/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.264394058 seconds)
    (7/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.366077217 seconds)
    (8/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.30261006 seconds)
    (9/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.440354179 seconds)
    (10/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.315398745 seconds)
    (11/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.365395775 seconds)
    (12/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.408820482 seconds)
    (13/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.279339456 seconds)
    (14/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.270282612 seconds)
    (15/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.387546833 seconds)
    (16/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.32236731 seconds)
    (17/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.268879496 seconds)
    (18/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.34037719 seconds)
    (19/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.274120977 seconds)
    (20/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.400370257 seconds)
    (21/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.392652747 seconds)
    (22/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.284189574 seconds)
    (23/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.355226757 seconds)
    (24/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.285334437 seconds)
    (25/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.913136891 seconds)
    (26/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.340347548 seconds)
    (27/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.449811949 seconds)
    (28/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.486868902 seconds)
    (29/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.471508501 seconds)
    (30/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.271279919 seconds)
    (31/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.333424432 seconds)
    (32/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.413241983 seconds)
    (33/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.358210218 seconds)
    (34/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.337513283 seconds)
    (35/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.964217614 seconds)
    (36/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.339428053 seconds)
    (37/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.245583275 seconds)
    (38/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.270370516 seconds)
    (39/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.275506175 seconds)
    (40/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.328058144 seconds)
    (41/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.259245232 seconds)
    (42/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.247342672 seconds)
    (43/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.388080372 seconds)
    (44/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.385119147 seconds)
    (45/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.299635675 seconds)
    (46/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.242751665 seconds)
    (47/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.290658306 seconds)
    (48/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.2694609 seconds)
    (49/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.963287441 seconds)
    (50/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.270632208 seconds)
    (51/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.256814567 seconds)
    (52/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.299054728 seconds)
    (53/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.397700597 seconds)
    (54/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.285243006 seconds)
    (55/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.343920918 seconds)
    (56/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.092672671 seconds)
    (57/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.637344765 seconds)
    (58/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.284460185 seconds)
    (59/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.260743649 seconds)
    (60/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.022018264 seconds)
    (61/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.364888016 seconds)
    (62/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.313222311 seconds)
    (63/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.389177458 seconds)
    (64/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.300154897 seconds)
    (65/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.30690786 seconds)
    (66/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.911105462 seconds)
    (67/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.458367848 seconds)
    (68/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.409561716 seconds)
    (69/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.290833844 seconds)
    (70/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.355345195 seconds)
    (71/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.382504752 seconds)
    (72/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.273878746 seconds)
    (73/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.606965575 seconds)
    (74/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.279136744 seconds)
    (75/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.282433883 seconds)
    (76/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.269893103 seconds)
    (77/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.343875822 seconds)
    (78/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.325939255 seconds)
    (79/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.356750236 seconds)
    (80/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.161126226 seconds)
    (81/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.628178068 seconds)
    (82/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.305217266 seconds)
    (83/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.266744051 seconds)
    (84/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.969905257 seconds)
    (85/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.444352133 seconds)
    (86/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.28748647 seconds)
    (87/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.439574963 seconds)
    (88/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.344918918 seconds)
    (89/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.246429401 seconds)
    (90/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.380328666 seconds)
    (91/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.308321919 seconds)
    (92/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.262076591 seconds)
    (93/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.052559867 seconds)
    (94/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.283752398 seconds)
    (95/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.421394273 seconds)
    (96/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.095382267 seconds)
    (97/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.911847294 seconds)
    (98/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.247727349 seconds)
    (99/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.252898236 seconds)
    (100/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.34266681 seconds)
    (101/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.290781989 seconds)
    (102/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.368424075 seconds)
    (103/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.273052693 seconds)
    (104/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.353349214 seconds)
    (105/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.297030941 seconds)
    (106/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.273694965 seconds)
    (107/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.429258767 seconds)
    (108/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.47595745 seconds)
    (109/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.926040875 seconds)
    (110/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.444339518 seconds)
    (111/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.539367792 seconds)
    (112/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.325405101 seconds)
    (113/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.361891975 seconds)
    (114/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.319301777 seconds)
    (115/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.315648387 seconds)
    (116/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.286860212 seconds)
    (117/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.333802602 seconds)
    (118/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.355316703 seconds)
    (119/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.275010459 seconds)
    (120/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.384032781 seconds)
    (121/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.429659192 seconds)
    (122/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.340541757 seconds)
    (123/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.262116784 seconds)
    (124/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.417509015 seconds)
    (125/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.580697438 seconds)
    (126/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.269588961 seconds)
    (127/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.311136522 seconds)
    (128/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.320561386 seconds)
    (129/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.908128823 seconds)
    (130/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.356634505 seconds)
    (131/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.392021374 seconds)
    (132/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.280349133 seconds)
    (133/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.305379348 seconds)
    (134/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.018976987 seconds)
    (135/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.497798075 seconds)
    (136/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.346609617 seconds)
    (137/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.353880405 seconds)
    (138/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.277869846 seconds)
    (139/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.421607218 seconds)
    (140/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.91986732 seconds)
    (141/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.314805624 seconds)
    (142/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.279103832 seconds)
    (143/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.26544745 seconds)
    (144/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.344423402 seconds)
    (145/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.248636887 seconds)
    (146/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.512307268 seconds)
    (147/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.279546237 seconds)
    (148/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.333030947 seconds)
    (149/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.413909633 seconds)
    (150/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.925341841 seconds)
    (151/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.369452986 seconds)
    (152/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.29050859 seconds)
    (153/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.378080761 seconds)
    (154/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.457397421 seconds)
    (155/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.284643003 seconds)
    (156/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.492054222 seconds)
    (157/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.415128528 seconds)
    (158/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.424205392 seconds)
    (159/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.347696877 seconds)
    (160/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.298488919 seconds)
    (161/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.343457346 seconds)
    (162/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.344858816 seconds)
    (163/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.476542991 seconds)
    (164/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.357760217 seconds)
    (165/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.286766172 seconds)
    (166/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.272332975 seconds)
    (167/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.978373686 seconds)
    (168/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.419987492 seconds)
    (169/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.298636 seconds)
    (170/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.266865305 seconds)
    (171/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.273490279 seconds)
    (172/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.27455022 seconds)
    (173/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.276453584 seconds)
    (174/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.278740107 seconds)
    (175/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.335730646 seconds)
    (176/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.27095752 seconds)
    (177/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.279426317 seconds)
    (178/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.265249029 seconds)
    (179/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.553764759 seconds)
    (180/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.395624035 seconds)
    (181/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.283600773 seconds)
    (182/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.27552417 seconds)
    (183/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.376056212 seconds)
    (184/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.455627737 seconds)
    (185/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.266986815 seconds)
    (186/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.320052453 seconds)
    (187/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.271900796 seconds)
    (188/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.351951264 seconds)
    (189/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.352385816 seconds)
    (190/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.032707692 seconds)
    (191/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.339831744 seconds)
    (192/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.436924736 seconds)
    (193/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.020409985 seconds)
    (194/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.302857077 seconds)
    (195/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.916702379 seconds)
    (196/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.418078335 seconds)
    (197/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.322624432 seconds)
    (198/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.029909868 seconds)
    (199/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.367333979 seconds)
    (200/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.024282638 seconds)
    (201/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.315126318 seconds)
    (202/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.31692823 seconds)
    (203/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.462237981 seconds)
    (204/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.021034478 seconds)
    (205/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.1490321 seconds)
    (206/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.394845885 seconds)
    (207/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.45576823 seconds)
    (208/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.253226612 seconds)
    (209/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.288977546 seconds)
    (210/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.156764641 seconds)
    (211/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.33112802 seconds)
    (212/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.371400225 seconds)
    (213/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.276619527 seconds)
    (214/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.326553295 seconds)
    (215/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.25316579 seconds)
    (216/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.372710449 seconds)
    (217/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.401233261 seconds)
    (218/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.30933443 seconds)
    (219/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.322801157 seconds)
    (220/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.269536783 seconds)
    (221/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.324041606 seconds)
    (222/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.452670917 seconds)
    (223/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.499192168 seconds)
    (224/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.285749617 seconds)
  done (took 353.538156715 seconds)
done (took 354.700738117 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.326719412 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.453062433 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.296928892 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.298734168 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.324554511 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.28676024 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.317759055 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.288138771 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.280307605 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.282081352 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.272214887 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.288976775 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.301815712 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.312094034 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.394700602 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.28711341 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.298250263 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.279699342 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.318510066 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.337814935 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.322812919 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.328450517 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.291414933 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.299255056 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.326769335 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.328915886 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.302850449 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.282288379 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.281426845 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.320375357 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.272376387 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.32043631 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.330362591 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.330575421 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.324380617 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.280595448 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.325086748 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.456570244 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.314846215 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.314743357 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.28415189 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.329350413 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.292702404 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.293630121 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.331135153 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.292184168 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.329758802 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.408029549 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.289553955 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.285660951 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.33566227 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.343296065 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.282725498 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.280294462 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.278255999 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.410108981 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.281878055 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.331049837 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.281624203 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.327704225 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.397436692 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.330839818 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.344028307 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.330280002 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.284456961 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.305475499 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.282291445 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.34022027 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.281121142 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.328547655 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.328181216 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.28800137 seconds)
done (took 103.909470689 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.407944774 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.27951886 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.441538119 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.28287358 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.448515053 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.432309368 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.278857591 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.279816726 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.279083089 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.111289092 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.278988918 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.279727415 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.281125169 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.279925949 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.413348132 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.28281589 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.279360204 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.997741833 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.285888257 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.427395016 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.273869923 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.280418285 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.283370444 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.10240596 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.281094336 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.277875653 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.426415966 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.283390274 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.994226387 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.278194604 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.281065436 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.993217308 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.430511602 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.301565845 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.293204632 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.290099615 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.450140404 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.301275286 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.41231251 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.41212965 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.443278654 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.323700652 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.278770964 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.282668792 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.285751908 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.285850836 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.281105427 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.309950748 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.282017094 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.281941051 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.002684763 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.294330372 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.290744948 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.283142787 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.282681889 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.304409637 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.285017526 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.287110073 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.432599193 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.286975223 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.412492494 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.10504876 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.113405116 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.285473907 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.28338535 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.283848999 seconds)
  done (took 105.165627032 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.354303107 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.360959875 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.40040612 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.303043035 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.335585167 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.4063224 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.303850367 seconds)
  done (took 10.649587142 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.291168549 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.2870408 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.33489216 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.336455867 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.287387481 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.496806331 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.287324672 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.297744945 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.284299451 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.362296491 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.287609477 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.288024755 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.293008041 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.284677121 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.335127145 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.297830685 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.402057587 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.288052208 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.288147805 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.442775748 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.285194368 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.2933898 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.359112298 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.298631422 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.28787848 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.293775343 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.240074084 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.288734714 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.286635156 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.28610954 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.284483485 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.395304438 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.289079647 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.285997987 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.28609917 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.448104878 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.289324532 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.286814254 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.288533621 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.281977654 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.289083547 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.287474943 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.287928125 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.286751837 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.289838422 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.312269069 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.289714803 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.290667888 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.289191309 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.289106595 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.361722145 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.289617931 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.286589021 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.285863055 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.365869806 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.296374229 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.2910963 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.286956664 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.289463391 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.286880038 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.444060531 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.338500196 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.290602009 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.338229309 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.290463467 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.291000871 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.289518501 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.288713332 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.382770497 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.290622458 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.338426933 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.289327212 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.514447379 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.314145583 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.292302952 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.293712167 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.294044217 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.293164661 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.288583869 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.298668501 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.290856459 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.292507755 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.298453576 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.290072467 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.2894127 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.4756696 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.448825674 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.2912791 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.306928618 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.298711165 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.290212726 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.364727106 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.293626318 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.290868985 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.344566687 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.408565289 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.370608019 seconds)
  done (took 133.776695148 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.307042108 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.307364438 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.29702427 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.322034945 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.294929224 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.293715035 seconds)
  done (took 9.014469118 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.29614897 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.294825627 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.294605853 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.292726129 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.293865913 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.295302968 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.296563334 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.295743688 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.299417354 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.293234708 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.295931571 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.298309532 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.29758364 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.296043145 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.295387215 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.295605055 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.296672436 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.29727085 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.294922881 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.295526646 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.294724722 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.29618491 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.29656656 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.2981112 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.298732604 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.29578959 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.3148564 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.294154508 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.294818655 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.300313418 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.317816435 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.296359999 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.296986507 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.303915163 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.301373168 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.299315593 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.300720332 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.297814522 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.293454895 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.296173069 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.297811932 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.298439621 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.29688181 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.296971245 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.298658094 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.303712396 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.301915318 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.317890957 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.29845212 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.298822213 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.299305004 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.299287236 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.297643502 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.299027172 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.300130306 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.31937264 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.301372807 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.298639141 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.297914253 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.298821603 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.299701466 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.297081934 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.300293954 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.302782116 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.294999437 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.298940507 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.301021809 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.304120702 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.298926554 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.297563965 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.29921193 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.296104291 seconds)
  done (took 95.709884053 seconds)
done (took 355.497086604 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.058836541 seconds)
  done (took 4.256259795 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.532582551 seconds)
  done (took 3.734273115 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.37850741 seconds)
  done (took 24.584157318 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.40479928 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.32258973 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.309388663 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.292680998 seconds)
  done (took 10.528990213 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.618180134 seconds)
  done (took 3.813576859 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.304636264 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.291817212 seconds)
  done (took 5.796055554 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.602468259 seconds)
  done (took 3.800115513 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.718322329 seconds)
  done (took 3.925123745 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.29391228 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.305084705 seconds)
  done (took 5.805751211 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.285318462 seconds)
  done (took 3.482723682 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.55841629 seconds)
  done (took 17.758297213 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.30181917 seconds)
  done (took 3.50737111 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.320361449 seconds)
  done (took 3.51763431 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.173363035 seconds)
  done (took 6.371177409 seconds)
done (took 102.077986244 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.290095378 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.29708557 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.298257884 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.297180635 seconds)
  done (took 10.380421425 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.352103194 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.351093632 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.352706418 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.351567387 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.350544895 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.351433999 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.325316905 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.325578481 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.351433714 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.352406231 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.355884825 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.351373635 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.352068512 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.32506397 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.35023102 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.355560936 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.353012069 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.353509384 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.325795197 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.352490736 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.301400484 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.351930076 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.351293941 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.302172172 seconds)
  done (took 33.44698692 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.797227393 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.375007057 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.455686695 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.35486413 seconds)
  done (took 7.181865699 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.378580847 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.379399718 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.392802924 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.430476395 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.443507381 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.393435738 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.327939687 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.323357961 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.309434032 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.378486251 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.430536403 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.371292203 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.457682847 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.303176852 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.508871653 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.302702405 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.301208317 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.379644488 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.431285763 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.44475844 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.303197075 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.380920211 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.381288428 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.371650138 seconds)
  done (took 34.325468324 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.308757552 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.316043963 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.30229694 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.316468126 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.301808337 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.302316414 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.30527405 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.307624363 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.300820796 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.301887775 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.302025197 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.31529554 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.306012896 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.301364735 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.310403799 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.303037554 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.30892827 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.306526306 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.303383654 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.309424464 seconds)
  done (took 27.33138285 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.296578032 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.295972769 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.649253735 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.554062051 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.296236195 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.301464192 seconds)
  done (took 13.596732083 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.381800293 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.542459404 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.306170045 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.700657594 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.793353418 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.310642215 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.305271324 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.566843248 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.910785853 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.900847774 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.371077777 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.380708069 seconds)
  done (took 19.672849023 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.317563443 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.306406991 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.318077439 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.323470752 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.366774921 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.327320634 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.313518101 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.299580482 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.369059041 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.388116221 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.326793324 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.367831731 seconds)
  done (took 21.230709623 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395763645 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.299817075 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314300216 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377871068 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306098205 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.149302911 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.350961764 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.090992698 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.333643489 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576945727 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316242441 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406071072 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.560102943 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303421425 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.310224537 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.288638602 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.539374697 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826100677 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306539117 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32048693 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343971383 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.318407805 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.323472092 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.544629817 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.310413521 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30467739 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.565940954 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.305190335 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617559181 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.321018703 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316674253 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.305149565 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580622224 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997342926 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430061008 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536143852 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313319258 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.308207147 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.302498367 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.324833832 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311301851 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.331252893 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317787727 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305161001 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.305810354 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315512014 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102423434 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.33828569 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.303498331 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.306826831 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.590160778 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405401746 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.311544518 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.306019453 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330021091 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310737387 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.309928982 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405460033 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894118598 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307627262 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321872046 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.311710042 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.307754836 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331225506 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980585313 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.312976567 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.31202822 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.311166419 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308584996 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.323372378 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.328600263 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307813784 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.33160414 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307247044 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08241491 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.323161308 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316322804 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890320277 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312367025 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.316027958 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.540060332 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307734377 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308289377 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.306678193 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.309893282 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088112655 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322038573 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.292943667 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.334730989 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.097918345 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.566750139 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338411805 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339738566 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.533649253 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.294989976 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310106358 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.312449221 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318005131 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330046145 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.092679773 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333505416 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.314552455 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571729641 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.523368332 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309819424 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.305381831 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846511206 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335643725 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.331580533 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.315927096 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.549220033 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.938882793 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.328110053 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309267727 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33139296 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.311546843 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133956574 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317341586 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.418044759 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.318092371 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603170707 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.190311309 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319173735 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379095942 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316710543 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.312727373 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31322345 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336905706 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.311557537 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.537419479 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342922998 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.327490033 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.313589838 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312382673 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.322694461 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32967519 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.319981193 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.539075695 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313705292 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593533021 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313159819 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313719394 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313436994 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.53829383 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.310871924 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.670453514 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.577378265 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315949714 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.320707607 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.329914758 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332512968 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417232192 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336015868 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.315465282 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.576431519 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.317173217 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.318843966 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313621605 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.319754093 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321452367 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.321481635 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320031078 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94457387 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288453004 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.322090421 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.210680078 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.329791903 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.382941399 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.321522825 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.551296166 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.318811415 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324351136 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.318685616 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.323931685 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.544308185 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.335061508 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.313940208 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393584713 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.841269924 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.978885343 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.333147259 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.314408525 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.313403053 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.31393526 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316035388 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316382295 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.317058264 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550982281 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.336110971 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.324510687 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.966943187 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324129492 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.317479754 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.328836239 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.330216437 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.322742602 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317850484 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.314091017 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334507272 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325227751 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.333220246 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462983738 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.334310059 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3174907 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.835772096 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.323107738 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.319087176 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.317740718 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351888243 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.318944245 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162050741 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583641199 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323947894 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601543138 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.319131601 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.336504248 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.316277058 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327252489 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324208471 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.36012144 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328563871 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.328715065 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.318519841 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325985433 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899661669 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114283561 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915357357 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340931723 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.324365703 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.324225271 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.113463569 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346441934 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319077009 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579504754 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.112850257 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344898628 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852431689 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.342549976 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.139895395 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612454154 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.557223883 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339098309 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.336627625 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625475744 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.53838103 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35473304 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.318706418 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326430213 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.304320943 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902895626 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352734049 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404548892 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116568143 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348267768 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.327617939 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.322307492 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.327523717 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766700554 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.346409664 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320146589 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.323024489 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.341591255 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168239597 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.328228534 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321816862 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978094892 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.325055919 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.877738635 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346136425 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.557804951 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.340547398 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.325251655 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.329556847 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.326655278 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.583922969 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612602146 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329157963 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.336892668 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906201872 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.194643537 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.329871953 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32167569 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148801419 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328897596 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.644262141 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.333333478 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.325847025 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326867496 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.325160882 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325156812 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.322364 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.328886704 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297879833 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851845357 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.339974467 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343000144 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329177127 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329593916 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.583343168 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.337948009 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.958023632 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.556438384 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325752271 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367484494 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.330432317 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34105147 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.318285754 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.324927954 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.324822771 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345469903 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.553866968 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.34704846 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.315459831 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.416382024 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.543058247 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326353516 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.341221234 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597294159 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.329657498 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.33782006 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122175693 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359842273 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.338499 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332716272 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.328542481 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346848629 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39787102 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562177102 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.34164818 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.336991723 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.769443905 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367343649 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333085028 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.340137825 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423031317 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331545952 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.335703281 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.100702609 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96363759 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119533748 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.965919435 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625437334 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.334722787 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337301508 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363793723 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492565856 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328486075 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601472378 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327838724 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.333086981 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368935577 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344064052 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338166626 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546307461 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6027339 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329857039 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329180839 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331863482 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.327788622 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.339309956 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.540277246 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857545559 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921021312 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332097801 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.33368275 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.13035612 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627974788 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32965866 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329115211 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32938139 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.343179653 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.336520877 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.341851509 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329281023 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47944944 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619601061 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045484447 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.365280963 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.35651439 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.845420198 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328532396 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.59220955 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327884253 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.570306639 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971583148 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.087062172 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.599505968 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400892897 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.569127451 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.335538785 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493447209 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.329384926 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.332156288 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33075445 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330711897 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.328087684 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.341316956 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974605292 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.600822508 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.336313541 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.330516587 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36276329 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.342129282 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.553930735 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130596076 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.562833467 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.342013463 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.336317883 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.331504051 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.974758766 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629366589 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339458215 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.338253658 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594024897 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.337734239 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.355973541 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.850568848 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.331008597 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920622601 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.310778324 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356872815 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334033332 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.122030993 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979204167 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.340396577 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863905339 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335704306 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333603422 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613244755 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.340552231 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.33365015 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614723167 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.339353423 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.334703526 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.578516469 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.988322372 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170268473 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.353325656 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339522252 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.342856024 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33658167 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36452049 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342966104 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337965329 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.795771505 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.362265494 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337838362 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.348123753 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.340500695 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337771905 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.338882069 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339215647 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.34509589 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.350164479 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.344945791 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34520798 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43955188 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932798719 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358490797 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.010839731 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.665602069 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.594917944 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341823917 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.326207018 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.342790485 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338589997 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337960468 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338170447 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340327826 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958353901 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.340967312 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.352523429 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.343244441 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.339532349 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551506924 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.339195558 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606401522 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343529503 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359788732 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.323035909 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340961248 seconds)
  done (took 955.153809255 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.386681327 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.39268298 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.393734512 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.363264159 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.397017315 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.44650846 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.424500659 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.356010893 seconds)
  done (took 20.401181439 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.340334682 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.354389621 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.348877463 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.35387146 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.351111565 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.867997076 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.369666502 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.357118497 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.357639275 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.35553531 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.358312802 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.32854556 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.356797973 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.342214847 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.336309809 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.359064645 seconds)
  done (took 32.390770202 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.516398666 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.548987481 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.695931898 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.371392907 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.379001662 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.363216239 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.659051135 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.367284848 seconds)
  done (took 27.149522957 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.357848299 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.35732172 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.356583834 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.358538043 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.353667007 seconds)
  done (took 8.028706642 seconds)
done (took 1211.49105287 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.347764098 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.350095792 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.350118958 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.350288652 seconds)
  done (took 6.646251161 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.329903481 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.328267204 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.331623639 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.349179435 seconds)
  done (took 9.583597749 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.136443552 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.047502269 seconds)
  done (took 5.437053545 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.870070886 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.868906646 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.877039266 seconds)
  done (took 6.874060681 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.670513018 seconds)
  done (took 2.92663425 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.282117829 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.352959247 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.05843705 seconds)
  done (took 7.950746324 seconds)
done (took 40.666372619 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.351609012 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.594150661 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.511329383 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.351100399 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.50832403 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.514439903 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.088193708 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.361378661 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.360008083 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.355701083 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.351628777 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.509572324 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.07320643 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.600627249 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.071999445 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.603544857 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.515078907 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.370380851 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.354544714 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.354800988 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.083758424 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.3689693 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.354782054 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.365167619 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.534110194 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.515043036 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.353755617 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.596425946 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.352297851 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.373669422 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.526468671 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.353327663 seconds)
  done (took 81.83655497 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.360476735 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.3522832 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.353418558 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.375028415 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.359445317 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.354847832 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.37374822 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.355956918 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.354116141 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.354282228 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.350549989 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.350650174 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.372610219 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.353301361 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.35288954 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.353994874 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.350902279 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.360306328 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.354864339 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.351340875 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.372559827 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.371440752 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.363645892 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.356075857 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.357023856 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.358874917 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.372412664 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.363196612 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.355548169 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.356834879 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.359086974 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.378220833 seconds)
  done (took 76.764194832 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.355196762 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.35753798 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.371206202 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.370753249 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.364154782 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.371448567 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.358076045 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.35587434 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.361829709 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.371216573 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.371320629 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.368405684 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.35907966 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.358703683 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.36124044 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.357632099 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.35860123 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.35781683 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.356415312 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.362159144 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.358407792 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.368352384 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.357867916 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.362603178 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.358184768 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.366079472 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.358243171 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.364918258 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.362507412 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.37607631 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.363428068 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.358520699 seconds)
  done (took 76.862483344 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.640650005 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.365946778 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.365109415 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.357359353 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.367071658 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.366109363 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.358744003 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.639772491 seconds)
  done (took 14.723297444 seconds)
done (took 251.44363899 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.35707685 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.918358615 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.407632667 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.360881803 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.388632698 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.386361462 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.602621656 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.406308554 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.606101146 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.376448592 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.389318575 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.356643969 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.251223355 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.518493815 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.26102382 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.355861154 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.358950584 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.36191714 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.99722385 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.658132605 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.385868763 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.361685659 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.26991681 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.372065499 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.34802938 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.453016636 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.476205899 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.596413266 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.535746684 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.45714709 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.948889005 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.363268633 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.356952788 seconds)
  done (took 64.507101268 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.367725165 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.48792216 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.369446756 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.370104622 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.492418579 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.369866754 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.367319738 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.367050831 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.368940084 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.369079137 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.369475457 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.370316495 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.370876363 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.412446041 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.495608496 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.385806071 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.367840284 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.486095574 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.369194835 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.362135522 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.412810914 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.370063757 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.371305261 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.416403992 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.369569118 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.371012637 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.484622862 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.37174622 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.363927844 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.489705179 seconds)
  done (took 43.201768669 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.369792002 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.013103246 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.170383493 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.379601072 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.37148791 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.376202527 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.697182693 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.373213146 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.375988539 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.374700873 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.90772845 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.374027071 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.410122076 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.202862862 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.37537435 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.372376176 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.371666821 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.37348628 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.022439495 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.383809878 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.722792224 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.373083849 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.700673585 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.381577737 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.398355836 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.373626868 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.377920447 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.27805148 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.375923351 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.907766575 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.23650977 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.692707331 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.20971468 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.184871271 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.237354039 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.376310966 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.377091827 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.914408761 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.378323292 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.374581116 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.699712275 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.376484581 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.18693591 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.097715578 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.396972518 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.375909614 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.281842412 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.909375821 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.649547387 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.383970499 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.211940074 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.378557389 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.375364882 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.376828114 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.650254902 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.378010557 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.375199912 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.358684936 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.380604732 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.702794857 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.378022887 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.376113329 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.022862867 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.37535488 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.018303635 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.378809195 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.383693016 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.398760232 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.189745886 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.38121239 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.115173791 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.398130976 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.376047737 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.914528906 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.017993273 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.356115408 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.378620232 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.027149431 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.247275656 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.700426996 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.381456582 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.259053583 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.7093723 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.381131483 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.37997818 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.37957731 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.377833728 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.453570239 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.700301348 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.047470035 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.114351345 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.386496141 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.707699599 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.385820321 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.379623117 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.363575955 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.378104399 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.378160108 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.185886296 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.114661807 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.401355404 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.385976666 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.130035599 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.403915241 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.706703776 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.384557706 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.197928896 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.379264176 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.456232353 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.3802075 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.386102874 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.40662816 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.707921549 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.384454203 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.3801356 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.108084228 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.948564212 seconds)
  done (took 196.030453948 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.374234158 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.391767145 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.384432931 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.368743207 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.375134168 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.382324137 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.372705626 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.372606649 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.377039653 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.372279466 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.376504724 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.382347081 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.378953071 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.373464418 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.376193365 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.391670482 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.375197086 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.396382747 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.391599729 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.375165617 seconds)
  done (took 44.863008516 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.382949998 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.028658838 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.981941329 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.381577786 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.380702663 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.384096188 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.44744069 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.385661244 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.379501721 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.732201862 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.576029102 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.403455144 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.37862677 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.38053291 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.986615111 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.371706304 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.731033908 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.032596438 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.386391272 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.027747358 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.37527292 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.384711902 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.380366628 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.03291318 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.732011985 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.707570443 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.450805783 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.02954996 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.379674639 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.382697284 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.031109703 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.382781363 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.386154411 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.023190101 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.402372844 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.40009613 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.380423046 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.449009936 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.449896717 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.730532801 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.093932615 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.710418411 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.394989535 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.568582143 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.383880649 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.374804992 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.032837223 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.404700205 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.374977544 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.38732192 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.391718745 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.988292774 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.406227635 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.991074951 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.403811795 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.389607616 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.039285872 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.989831546 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.009252114 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.577413866 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.407195089 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.711205364 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.38436527 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.036507748 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.406824995 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.384964571 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.388865622 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.578939701 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.056175092 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.711025042 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.735181791 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.734499616 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.389010926 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.450768268 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.403838522 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.789132634 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.450697921 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.833663955 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.73518216 seconds)
  done (took 128.03058716 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.680214634 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.508389838 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.84374876 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.055944943 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.382794739 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.514987143 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.506413491 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.663970912 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.386182687 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.474561337 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.126198008 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.489428102 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.200990703 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.463155814 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.483791345 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.54362111 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.825462041 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.380691967 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.06679542 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.101877703 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.38015843 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.497721579 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.972826411 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.606448076 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.382822433 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.972541871 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.404022266 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.118898774 seconds)
  done (took 54.316477379 seconds)
done (took 532.211486254 seconds)
SAVING RESULT...
DONE!
